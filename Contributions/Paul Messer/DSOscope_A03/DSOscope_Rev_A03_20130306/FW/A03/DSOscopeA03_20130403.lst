MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;       20120927.1 - by PM
                      00071 ;               Begin adding sampling/sending methodology for a Strip Chart mode.
                      00072 ;       20120929.1 -
                      00073 ;               Incorporated Jonathan Weaver's changes and coding improvements from
                      00074 ;               the DSOscope_A03_20120928b.zip file.
                      00075 ;       20130113.1 - by PM
                      00076 ;               Changes made for Rev A03 hardware to support selection reporting bits
                      00077 ;               for the Trigger Channel switch and the Channel 1 and 2 Attenuator switches.
                      00078 ;               Also added timing byte for future slower interrupt driven acquisition
                      00079 ;               support and an added byte for longer trigger delays... Changes will
                      00080 ;               require updates to the PC App code.
                      00081 ;       20130201.1 -
                      00082 ;               Incorporated Jonathan Weaver's changes and code fixes from his
                      00083 ;               DSOscope_A03_20130201_For_Paul.zip file.
                      00084 ;       20130208.1 -
                      00085 ;               Incorporated Jonathan Weaver's code fixes from email on 20130208.
                      00086 ;       20130209.1 - by PM
                      00087 ;               Bit setting changes made to the "Initial" routine to turn on PORTB weak
                      00088 ;               pull-ups for CH1ATTN and CH2ATTN input signals.  This will keep the
                      00089 ;               code compatible with the older Rev A02 hardware that does not have
                      00090 ;               CH1ATTN and CH2ATTN signals.  The on screen GAIN reporting will not
                      00091 ;               reflect the attenuator switch positions on the Rev A02 hardware, but
                      00092 ;               it will keep the bit values constant/consistent and the user can
                      00093 ;               mindfully make the appropriate gain conversions in their head.
                      00094 ;       20130211.1 / 20130302.1 - by PM
                      00095 ;               Started making changes to support a pre-trigger acquisition capability
                      00096 ;               using the interrupt driven sampling technique.
                      00097 ;               The maximum amount of pre-trigger capture is the (sweep-speed/div * 10 div).
                      00098 ;               Use a negatively entered trigger delay value to create a count of
                      00099 ;               samples to take after a trigger event.  This, or something like it,
                      00100 ;               will be left as an exercise to the reader HA HA... eventually some
                      00101 ;               method will need to be decided upon.  For now, we will fake it out.
                      00102 ;               A value of 0xffffffff will indicate that the trigger event is placed at
                      00103 ;               the far right side of the screen. A value of 0xffffffbf will be 25% from
                      00104 ;               the right side of the screen. A value of 0xffffff7f will be the middle of
                      00105 ;               the screen, and likewise up to a value of 0xffffff00 which will be the
                      00106 ;               left side of the screen.
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ;               The interrupt driven sampling mode will free run to continuously
                      00108 ;               acquire samples by just rolling around and around through the PIC's
                      00109 ;               sampling memory buffer.  The negative trigger delay is used to create
                      00110 ;               a "count of samples to acquire after a trigger event happens."  That
                      00111 ;               range being from 0x00 to the maximum memory buffer size.
                      00112 ;               While sampling, and when the trigger event occurs, capture the current
                      00113 ;               store into address & bank and continue to acquire the remaining "count
                      00114 ;               of samples to acquire after a trigger happens."
                      00115 ;               Now, use that saved "trigger event stored into address & bank" value
                      00116 ;               and the desired position for the trigger event to appear on the
                      00117 ;               screen to calculate a value to rotate the PIC memory buffer contents by.
                      00118 ;               The PIC memory buffer contents is then rotated.
                      00119 ;               For this pre-trigger acquistion mode, data will not be sent back to the
                      00120 ;               PC app until the acquistion is totally complete (similar to the current
                      00121 ;               "high speed sampling" methods).  Because the PIC memory buffer contents
                      00122 ;               have been rotated before the data is sent to the PC app, the data
                      00123 ;               will be perfectly aligned and presented from the Pre-Trigger Mode; So,
                      00124 ;               the current display methodolgy in the PC app will just work! We hope!
                      00125 ;       20130401.1 - by PM
                      00126 ;               Pre-trigger acquisition capability is working.  However, there is some
                      00127 ;               annoying jitter on the signal when running in continous sweep mode.
                      00128 ;
                      00129 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00130 ;
                      00131 ;
                      00132 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00133 ;
                      00134 ;This program is free software; you can redistribute it and/or modify it under
                      00135 ;the terms of the GNU General Public License as published by the Free Software
                      00136 ;Foundation; either version 2 of the License, or (at your option) any later
                      00137 ;version.
                      00138 ;
                      00139 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00140 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00141 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00142 ;details.
                      00143 ;
                      00144 ;You should have received a copy of the GNU General Public License along with
                      00145 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00146 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00147 ;
                      00148 ;==============================================================================
                      00149 
                      00150 ;=============================================================================
                      00151 ; C O N F I G U R A T I O N
                      00152 ;=============================================================================
                      00153 
                      00154         LIST P=16F887
                      00155 
                      00156         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00157 
                      00158 
                      00159 ;*****************************************************
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160 ;       === Configuration Word Definitions ===
                      00161 ;*****************************************************
                      00162 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00163 
                      00164 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00165 ; The labels following the directive are located in the respective .inc file.
                      00166 ; See respective data sheet for additional information on configuration word.
                      00167 
2007   20F2           00168         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00169         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00170 
                      00171 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00172 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00173 
2000   0001 0002 0003 00174         __idlocs        0x1234
       0004 
                      00175 
  00000020            00176         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00177 
                      00178 ;=============================================================================
                      00179 ; C O N S T A N T S
                      00180 ;=============================================================================
                      00181 
  00000000            00182 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00183 BANK1                   equ     0x0080
  00000100            00184 BANK2                   equ     0x0100
  00000180            00185 BANK3                   equ     0x0180
                      00186 
  00000020            00187 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00188 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00189                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00190                                                         ;the data points alternate between channel 1 and
                      00191                                                         ;channel 2
  0000005F            00192 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00193 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00194 
                      00195 ;I/O Pin maps
                      00196 ;-----------------------------------------------------------------------------
  00000007            00197         SERIALPORT      set     PORTC
  00000007            00198                 RX              equ     0x07
  00000006            00199                 TX              equ     0x06
                      00200 
  00000009            00201         ADC_CONTROLPORT set     PORTE
  00000000            00202                 RDD             equ     0x00
  00000001            00203                 ADDR0   equ     0x01
                      00204 
  00000006            00205         TRIGGERPORT     set     PORTB
  00000000            00206                 TRIGGER equ     0x00
                      00207 
  00000006            00208         ADC_PORT        set     PORTB
  00000003            00209                 ADDR2   equ     0x03
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            00210                 ADDR1   equ     0x02
  00000001            00211                 CS              equ     0x01
                      00212 
  00000008            00213         ADC_DATAPORT    set     PORTD
                      00214 
  00000007            00215         ANALOG_SEL      set     PORTC
  00000001            00216                 CH1SEL  equ     0x01
  00000002            00217                 CH2SEL  equ     0x02
                      00218 
  00000005            00219         ANALOG_GAIN     set     PORTA
  00000000            00220                 GAIN1   equ     0x00
  00000001            00221                 GAIN5   equ     0x01
  00000004            00222                 CH1SELG equ     0x04
  00000005            00223                 CH2SELG equ     0x05
                      00224 
  00000007            00225         ANALOG_ACDC     set     PORTC
  00000000            00226                 ACDCMODE        equ     0x00
                      00227 
  00000006            00228         ATTNPORT        set     PORTB
  00000006            00229                 CH1ATTN equ     0x06
  00000007            00230                 CH2ATTN equ     0x07
                      00231 
  00000005            00232         TRGSRCPORT      set     PORTA
  00000003            00233                 TRGCH   equ     0x03
                      00234 
                      00235 ;Configuration memory map
                      00236 ;-----------------------------------------------------------------------------
                      00237 ;Bit map for gbl_configLoc1
  00000007            00238         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00239         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00240         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00241         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00242         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00243         FREQMODEBIT2            equ     0x02
  00000001            00244         FREQMODEBIT1            equ     0x01
  00000000            00245         FREQMODEBIT0            equ     0x00
                      00246 
                      00247 ;Bit map for gbl_ptStatus
  00000007            00248         RUNNINGBIT                      equ     0x07    ;1 is pre-triggered acquisition is running
  00000006            00249         TRIGGEREDBIT            equ     0x06    ;1 is pre-triggered acquisition is triggered
  00000005            00250         DATAREADYBIT            equ     0x05    ;1 is pre-triggered acquisition data is ready to send
  00000004            00251         PTMEMNEW                        equ     0x04    ;1 is pre-triggered acquisition memory pre-the-t
                            rigger now has new data
                      00252 
                      00253 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00254         SAMPLEBANK3                     equ     0x02
  00000003            00255         SAMPLEBANK2                     equ     0x03
  00000001            00256         SAMPLEBANK1                     equ     0x01
  00000000            00257         SAMPLEBANK0                     equ     0x00
                      00258 
                      00259 ;Table of frequency modes, 0 to 15
  00000000            00260         FREQSAMPLE1M            equ     D'0'
  00000001            00261         FREQSAMPLE833K          equ     D'1'
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            00262         FREQSAMPLE625K          equ     D'2'
  00000003            00263         FREQSAMPLE417K          equ     D'3'
  00000004            00264         FREQSAMPLE250K          equ     D'4'
  00000005            00265         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00266         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00267         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00268         FREQSAMPLEXY417K        equ     D'8'
  00000009            00269         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00270         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00271         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00272         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
  0000000D            00273         FREQSAMPLESTRIPCHART equ D'13'  ;Interrupt Driven Strip Chart Mode
                      00274 
                      00275 
                      00276 ;=============================================================================
                      00277 ; V A R I A B L E S
                      00278 ;=============================================================================
                      00279 
                      00280         ;Global General Purpose Registers, accessible anywhere
                      00281 CBLOCK  0x70
  00000070            00282         gbl_configLoc1                  ;Configuration mode
  00000071            00283         gbl_sampleRate0                 ;sample rate delay extender byte for interrupt driven sampling
  00000072            00284         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000073            00285         gbl_sampleRate2
  00000074            00286         gbl_cntra                               ;general use counter
  00000075            00287         gbl_cntrb                               ;second counter
  00000076            00288         gbl_cntrc                               ;third counter
  00000077            00289         gbl_cntrd                               ;fourth counter
  00000078            00290         gbl_modetemp                    ;temporary mode variable
  00000079            00291         gbl_modetempb                   ;temporary mode for repetitive sampling
  0000007A            00292         gbl_spdata                              ;data to/from serial port
  0000007B            00293         gbl_dataConfig                  ;the data configuration
  0000007C            00294         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007D            00295         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007E            00296         gbl_sampleCntr                  ;temporary variable for counting interrupts for extended "slow m
                            ode" interrupt sampling
  0000007F            00297         gbl_ptStatus                    ;pre-trigger acquistion status
                      00298 ENDC
                      00299 
                      00300         ;Bank0 General Purpose Registers
                      00301 CBLOCK  0x60
  00000060            00302         b0_triggerDelay0                ;trigger delay (4 bytes)
  00000061            00303         b0_triggerDelay1                
  00000062            00304         b0_triggerDelay2
  00000063            00305         b0_triggerDelay3
  00000064            00306         b0_triggerChannel               ;the trigger channel
  00000065            00307         b0_triggerLevel                 ;the trigger level
  00000066            00308         b0_sampleAddr                   ;address to store ADC sampled value
  00000067            00309         b0_sampleBank                   ;bank to store ADC sampled value
  00000068            00310         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000069            00311         b0_ptPtSampleCntr               ;pre-trigger acquisition's post trigger sample counter
  0000006A            00312         b0_ptTriggerAddr                ;sample's storage address when pre-trigger's trigger happens
  0000006B            00313         b0_ptTriggerBank                ;sample's storage bank when pre-trigger's trigger happens
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000006C            00314         b0_ptPlaceTriggerHere   ;place trigger (0xfe = right side, 0x00 = left side, in 0x02 increments)
  0000006D            00315         b0_ptRotationCntr               ;sample memory rotation counter
  0000006E            00316         b0_ptFsrTemp                    ;2nd level of fsr temp storage for pre-trigger
  0000006F            00317         b0_ptTemp0                              ;temporary storage
                      00318 ENDC
                      00319 
                      00320         ;Bank1 General Purpose Registers
                      00321 CBLOCK  0xE0
  000000E0            00322         b1_ptFlushCntr                  ;pre-trigger flush memory counter
  000000E1            00323         b1_unusedE
  000000E2            00324         b1_unusedD
  000000E3            00325         b1_unusedC
  000000E4            00326         b1_unusedB
  000000E5            00327         b1_unusedA
  000000E6            00328         b1_unused9
  000000E7            00329         b1_unused8
  000000E8            00330         b1_unused7
  000000E9            00331         b1_unused6
  000000EA            00332         b1_unused5
  000000EB            00333         b1_unused4
  000000EC            00334         b1_unused3
  000000ED            00335         b1_unused2
  000000EE            00336         b1_unused1
  000000EF            00337         b1_unused0
                      00338 ENDC
                      00339 
                      00340         ;Bank2 General Purpose Registers
                      00341 CBLOCK  0x110
  00000110            00342         b2_unused1F
  00000111            00343         b2_unused1E
  00000112            00344         b2_unused1D
  00000113            00345         b2_unused1C
  00000114            00346         b2_unused1B
  00000115            00347         b2_unused1A
  00000116            00348         b2_unused19
  00000117            00349         b2_unused18
  00000118            00350         b2_unused17
  00000119            00351         b2_unused16
  0000011A            00352         b2_unused15
  0000011B            00353         b2_unused14
  0000011C            00354         b2_unused13
  0000011D            00355         b2_unused12
  0000011E            00356         b2_unused11
  0000011F            00357         b2_unused10
                      00358 ENDC
                      00359 CBLOCK  0x160
  00000160            00360         b2_unusedF
  00000161            00361         b2_unusedE
  00000162            00362         b2_unusedD
  00000163            00363         b2_unusedC
  00000164            00364         b2_unusedB
  00000165            00365         b2_unusedA
  00000166            00366         b2_unused9
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000167            00367         b2_unused8
  00000168            00368         b2_unused7
  00000169            00369         b2_unused6
  0000016A            00370         b2_unused5
  0000016B            00371         b2_unused4
  0000016C            00372         b2_unused3
  0000016D            00373         b2_unused2
  0000016E            00374         b2_unused1
  0000016F            00375         b2_unused0
                      00376 ENDC
                      00377 
                      00378         ;Bank3 General Purpose Registers
                      00379 CBLOCK  0x190
  00000190            00380         b3_unused1F
  00000191            00381         b3_unused1E
  00000192            00382         b3_unused1D
  00000193            00383         b3_unused1C
  00000194            00384         b3_unused1B
  00000195            00385         b3_unused1A
  00000196            00386         b3_unused19
  00000197            00387         b3_unused18
  00000198            00388         b3_unused17
  00000199            00389         b3_unused16
  0000019A            00390         b3_unused15
  0000019B            00391         b3_unused14
  0000019C            00392         b3_unused13
  0000019D            00393         b3_unused12
  0000019E            00394         b3_unused11
  0000019F            00395         b3_unused10
                      00396 ENDC
                      00397 CBLOCK  0x1E0
  000001E0            00398         b3_unusedF
  000001E1            00399         b3_unusedE
  000001E2            00400         b3_unusedD
  000001E3            00401         b3_unusedC
  000001E4            00402         b3_unusedB
  000001E5            00403         b3_unusedA
  000001E6            00404         b3_unused9
  000001E7            00405         b3_unused8
  000001E8            00406         b3_unused7
  000001E9            00407         b3_unused6
  000001EA            00408         b3_unused5
  000001EB            00409         b3_unused4
  000001EC            00410         b3_unused3
  000001ED            00411         b3_unused2
  000001EE            00412         b3_unused1
  000001EF            00413         b3_unused0
                      00414 ENDC
                      00415 
                      00416 ;=============================================================================
                      00417 ; I N C L U D E S
                      00418 ;=============================================================================
                      00419         include "p16F887.inc"
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F887 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00809         LIST
                      00420         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00421         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00422 
                      00423 
                      00424 ;=============================================================================
                      00425 ; M A C R O S
                      00426 ;=============================================================================
                      00427 
                      00428 MGOTO macro address
                      00429         if (address & (0x1000))
                      00430                 bsf PCLATH, 4
                      00431         else
                      00432                 bcf PCLATH, 4
                      00433         endif
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00434         if (address & (0x800))
                      00435                 bsf PCLATH, 3
                      00436         else
                      00437                 bcf PCLATH, 3
                      00438         endif
                      00439         goto address
                      00440         endm
                      00441 
                      00442 
                      00443 
                      00444 
                      00445 ;=============================================================================
                      00446 ; I N T E R R U P T S
                      00447 ;=============================================================================
                      00448 
0000                  00449 org 0x0000      ;Reset Vector
                      00450 ;First three lines of initialization included here to save on memory.
                      00451         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00452         clrf ADC_DATAPORT
0003   285D           00453         goto Initial
                      00454 
0004                  00455 org 0x0004      ;Interrupt Vector
0004                  00456 IntHandler
                      00457         ;Save the current state
0004   00FC           00458     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00459         swapf   STATUS,W                                        ;Move status register into W register
0006   00FD           00460         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00461 
                      00462         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00463         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00464         ; the interrupt is truly enabled before acting on the flag state.
0007   1E0B           00465         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   284F           00466                 goto ih_2
0009   1C8B           00467         btfss   INTCON, INTF                            ;Check for a trigger interrupt
000A   284F           00468                 goto ih_2
000B   120B           00469         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00470                                                                                 ; for the duration of th
                            e acquisition (or the rest of the
                      00471                                                                                 ; acquisition in the cas
                            e of Pre_Trigger acquisition)
                      00472 
000C   1BFF           00473         btfsc   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are doing Pre-Trigger Sampling
000D   2848           00474                 goto ih_pt                                              ;Jump if we are doing Pre-Trigge
                            r Sampling
                      00475 
000E                  00476 ih_1
000E   0BF4           00477         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0x0101010
                            1 implies minimum delay
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F   280E           00478                 goto ih_1
0010   0BF5           00479         decfsz gbl_cntrb, f
0011   280E           00480                 goto ih_1
0012   0BF6           00481         decfsz gbl_cntrc, f
0013   280E           00482                 goto ih_1
0014   0BF7           00483         decfsz gbl_cntrd, f
0015   280E           00484                 goto ih_1
0016   0878           00485         movf gbl_modetemp, w
                      00486 
0017                  00487 MainSelect
0017   0782           00488         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00489         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2D99               M         goto Sample1M
                      00490         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
001B   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
001D   28A0               M         goto Sample833k
                      00491         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2C60               M         goto Sample625k
                      00492         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2CA3               M         goto Sample417k250k
                      00493         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0024   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
0026   2CA3               M         goto Sample417k250k
                      00494         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0027   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0028   118A               M                 bcf PCLATH, 3
                          M         endif
0029   2B52               M         goto SampleDelayed
                      00495         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
002A   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002B   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002C   2EA3               M         goto SampleRep5M
                      00496         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
002D   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
002E   158A               M                 bsf PCLATH, 3
                          M         else
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002F   2AD6               M         goto SampleRep2M
                      00497         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
0031   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0032   2A9D               M         goto SampleXY417k
                      00498         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2D06               M         goto SampleXY250k192k
                      00499         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   2D06               M         goto SampleXY250k192k
                      00500         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   2BBD               M         goto SampleXYDelayed
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00501         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   29C7               M         goto SampleIntDrvn
                      00502         MGOTO Main                                                      ;Invalid FreqMode = 13, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2889               M         goto Main
                      00503         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0042   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0043   118A               M                 bcf PCLATH, 3
                          M         endif
0044   2889               M         goto Main
                      00504         MGOTO Main                                                      ;Invalid FreqMode = 15, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0045   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0046   118A               M                 bcf PCLATH, 3
                          M         endif
0047   2889               M         goto Main
                      00505 
0048                  00506 ih_pt                                                                   ;This is for a "pre-trigger samp
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ling" trigger interrupt
0048   1283 1303      00507         banksel BANK0
004A   0867           00508         movf    b0_sampleBank, W                        ;Capture the current location that the interrupt
                             driven
004B   00EB           00509         movwf   b0_ptTriggerBank                        ; pre-trigger sample is being stored into
004C   0866           00510         movf    b0_sampleAddr, W
004D   00EA           00511         movwf   b0_ptTriggerAddr
004E   177F           00512         bsf             gbl_ptStatus, TRIGGEREDBIT      ;Flag that we have been triggered
                      00513         ;fall through to also check for a timer1 interrupt. May as well try to get two birds with one st
                            one!
                      00514 
004F                  00515 ih_2
004F   1283 1303      00516         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0051   1C0C           00517         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0052   2858           00518                 goto ih_3                                               ;It wasn't, so restore registers
                             and then return from interrupt
0053   1683 1303      00519         banksel BANK1
0055   1C0C           00520         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0056   2858           00521                 goto ih_3
0057   213F           00522         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00523 
0058                  00524 ih_3
                      00525         ;restore previous state 
0058   0E7D           00526     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
0059   0083           00527     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
005A   0EFC           00528     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
005B   0E7C           00529     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
005C   0009           00530     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00531 
                      00532 
                      00533 ;=============================================================================
                      00534 ; M A I N
                      00535 ;=============================================================================
                      00536 ;Initalize for the program
                      00537 ;-----------------------------------------------------------------------------
005D                  00538 Initial
005D   0185           00539         clrf    PORTA
005E   1683 1303      00540         banksel TRISA
                      00541         MOVLF B'11000000', WPUB                         ;Turn on weak pull-ups for CH1ATTN and CH2ATTN i
                            nput signals
0060   30C0               M     movlw B'11000000'
0061   0095               M     movwf WPUB
                      00542         MOVLF B'00011111', TRISA                        ;Configure PORTA
0062   301F               M     movlw B'00011111'
0063   0085               M     movwf TRISA
                      00543         MOVLF B'01000000', OPTION_REG           ;Interrupt on rising edge of RB0 plus enable PORTB's wea
                            k pull-ups
0064   3040               M     movlw B'01000000'
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065   0081               M     movwf OPTION_REG
                      00544         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0066   3010               M     movlw B'00010000'
0067   008B               M     movwf INTCON
                      00545         MOVLF B'11110001', TRISB
0068   30F1               M     movlw B'11110001'
0069   0086               M     movwf TRISB
                      00546         MOVLF B'11111111', TRISD
006A   30FF               M     movlw B'11111111'
006B   0088               M     movwf TRISD
                      00547         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
006C   3004               M     movlw B'00000100'
006D   0089               M     movwf TRISE
                      00548         MOVLF B'10111001', TRISC                        ;Configure PORTC
006E   30B9               M     movlw B'10111001'
006F   0087               M     movwf TRISC
                      00549 
0070   1683 1703      00550         banksel ANSEL                   ;Access bank 3
0072   0188           00551         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0073   0189           00552         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00553 
                      00554         ;Initialize Serial Port
                      00555 
0074   3008           00556         movlw   0x08                    ;Set the Serial Port baud rate generators
0075   0087           00557         movwf   BAUDCTL
0076   1683 1303      00558         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0078   3056           00559         movlw   0x56                    ; for 57.6K baud
0079   0099           00560         movwf   SPBRG
007A   3000           00561         movlw   0x00
007B   009A           00562         movwf   SPBRGH
007C   3024           00563         movlw   0x24                    ;Set the Serial Port Transmitter configuration
007D   0098           00564         movwf   TXSTA
007E   1283 1303      00565         banksel RCSTA                   ;Access bank 0
0080   3090           00566         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0081   0098           00567         movwf   RCSTA
                      00568 
0082   1383           00569         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
                      00570                                                         ; WaitComm_Data takes care of clearing FSR7 bit
0083   019F           00571         clrf    ADCON0                  ;Make sure PIC's ADC is off
0084   3001           00572         movlw   0x01                    ;Initialize the "trigger delay counter" to minimium delay
0085   00F4           00573         movwf   gbl_cntra               ; for the initial case of "RUN" button pushed with the "TRIGGER 
                            OFF"
0086   00F5           00574         movwf   gbl_cntrb               ; selection having been set
0087   00F6           00575         movwf   gbl_cntrc
0088   00F7           00576         movwf   gbl_cntrd
                      00577 
0089                  00578 Main
0089   01FF           00579         clrf    gbl_ptStatus                            ;Clear the pre-trigger status register
008A   01F9           00580         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00581 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008B   20C6           00582         call    WaitComm                                        ;Call WaitComm and stay there until we h
                            ave
                      00583                                                                                 ; received a "ConfReceiv
                            e" Configuration Information Field
                      00584         
008C                  00585 MainB
008C   1089           00586         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
008D   1A70           00587         btfsc   gbl_configLoc1, CHANNELBIT
008E   1489           00588                 bsf             ADC_CONTROLPORT, ADDR0
                      00589 
                      00590         if (high MainSelect)
                      00591                 movlw   high MainSelect                 ;Prepare for jump
                      00592                 movwf   PCLATH
                      00593         else
008F   018A           00594                 clrf PCLATH
                      00595         endif
                      00596 
0090   0870           00597         movf    gbl_configLoc1, w                       ;Put configuration in WREG
0091   390F           00598         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
0092   00F8           00599         movwf   gbl_modetemp                            ;Multiply by 3
0093   1003           00600         bcf             STATUS, C
0094   0DF8           00601         rlf             gbl_modetemp, f
0095   0778           00602         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0096   1086           00603         bcf             ADC_PORT, CS                            ;Select MAX118
0097   1F70           00604         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
0098   2817           00605                 goto MainSelect
0099                  00606 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0099   00F8           00607         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
009A   0A63           00608         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
009B   00F4           00609         movwf   gbl_cntra
009C   0A62           00610         incf    b0_triggerDelay2, w     
009D   00F5           00611         movwf   gbl_cntrb
009E   0A61           00612         incf    b0_triggerDelay1, w
009F   00F6           00613         movwf   gbl_cntrc
00A0   0A60           00614         incf    b0_triggerDelay0, w
00A1   00F7           00615         movwf   gbl_cntrd
                      00616 
00A2   1683 1303      00617         banksel OPTION_REG                                      ;Access bank 1
00A4   1301           00618         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
00A5   1BF0           00619         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
00A6   1701           00620                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
00A7   1283 1303      00621         banksel BANK0                                           ;Access bank 0
                      00622 
                      00623                                                                                 ;Check for a negative va
                            lue of the trigger delay
00A9   1FE0           00624         btfss   b0_triggerDelay0, 0x07          ; to determine if we should be doing a pre-trigger acqui
                            sition          ... comment out when testing
00AA   28B8           00625                 goto    MainWTrigB                              ; if it is positive, go wait for the reg
                            ular trigger                            ... comment out when testing
00AB   0863           00626         movf    b0_triggerDelay3, W                     ;Assume that the PC app sends a pre-scaled value
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             of 0xff for right      ... comment out when testing
                      00627                                                                                 ; side, to 0x00 for left
                             side, screen placement of trigger event
                      00628 ;       movlw   0xbf                                            ;Load a fake value of a "negative trigge
                            r delay" (25% from right)       ... uncomment when testing
00AC   39FE           00629         andlw   0xfe                                            ;Make sure it is an even number
00AD   00EC           00630         movwf   b0_ptPlaceTriggerHere           ;Put it into the "place trigger position here" variable
00AE   1683 1303      00631         banksel BANK1
00B0   00E0           00632         movwf   b1_ptFlushCntr                          ;Also put it into the count of samples to take b
                            efore
                      00633                                                                                 ; allowing the trigger t
                            o be enabled. This essentially
                      00634                                                                                 ; flushes the memory of 
                            stale data.
00B1   1283 1303      00635         banksel BANK0
00B3   3AFE           00636         xorlw   0xfe                                            ;Then, invert that, but keep it even, to
                             arrive at a count of
                      00637                                                                                 ; samples to take after 
                            the trigger
00B4   00E9           00638         movwf   b0_ptPtSampleCntr
00B5   17FF           00639         bsf             gbl_ptStatus, RUNNINGBIT        ;Set the pre-trigger acquisition state to runnin
                            g
00B6   0878           00640         movf    gbl_modetemp, W                         ;Restore the freqmode for Mainselect's computed 
                            jump
00B7   2817           00641         goto    MainSelect                                      ; and, start the pre-trigger sampling
                      00642         
                      00643 
00B8                  00644 MainWTrigB
00B8   108B           00645         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
00B9   160B           00646         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
00BA   178B           00647         bsf             INTCON, GIE                                     ;Enable interrupts
00BB                  00648 MainWTrigB_1
00BB   2119           00649         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00650         skipEqLF B'11110011', gbl_spdata        ;message is received
00BC   087A               M         movf gbl_spdata, w
00BD   3AF3               M         xorlw B'11110011'
00BE   1D03               M         btfss STATUS, Z
00BF   28BB           00651                 goto    MainWTrigB_1
00C0   120B           00652         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
00C1   138B           00653         bcf             INTCON, GIE                                     ;Disable interrupts
                      00654         MOVLF B'11011100', gbl_spdata           ;Respond
00C2   30DC               M     movlw B'11011100'
00C3   00FA               M     movwf gbl_spdata
00C4   212A           00655         call    PutByte
00C5   2889           00656         goto    Main                                            ;Abort
                      00657 
                      00658                                                                                 ;Note that the jitter on
                             the interrupt is
                      00659                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00660                                                                                 ;on the PIC running at 2
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            0 MHz
                      00661 
                      00662 ;=============================================================================
                      00663 ; S U B R O U T I N E S
                      00664 ;=============================================================================
                      00665 
                      00666 ;Wait for command from computer and respond accordingly
                      00667 
                      00668         ; Received Commands are:
                      00669         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00670         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00671         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00672         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00673 
                      00674 ;-----------------------------------------------------------------------------
00C6                  00675 WaitComm
00C6   2119           00676         call GetByte                                            ;Wait for receive
                      00677 
00C7                  00678 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00679         skipEqLF B'11111000', gbl_spdata
00C7   087A               M         movf gbl_spdata, w
00C8   3AF8               M         xorlw B'11111000'
00C9   1D03               M         btfss STATUS, Z
00CA   28FA           00680                 goto WaitComm_Conf
                      00681         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00CB   30DC               M     movlw B'11011100'
00CC   00FA               M     movwf gbl_spdata
00CD   212A           00682         call PutByte
                      00683         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue, also clears 
                            FSR7
00CE   3020               M     movlw BUFFERMIN
00CF   0084               M     movwf FSR
                      00684         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00D0   3040               M     movlw BUFFERSIZE
00D1   00F5               M     movwf gbl_cntrb
00D2   1383           00685         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
00D3                  00686 WaitComm_SendDataA
                      00687         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00D3   0800               M     movf INDF, w
00D4   00FA               M     movwf gbl_spdata
00D5   0A84           00688         incf FSR, F                                                     ;Increment pointer
00D6   212A           00689         call PutByte                                            ;Send data
00D7   0BF5           00690         decfsz gbl_cntrb, f
00D8   28D3           00691                 goto WaitComm_SendDataA
                      00692         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00D9   3040               M     movlw BUFFERSIZE
00DA   00F5               M     movwf gbl_cntrb
00DB   1784           00693         bsf FSR, 7                                                      ;Bank 1
00DC   0384           00694         decf FSR, f
00DD                  00695 WaitComm_SendDataB
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00696         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00DD   0800               M     movf INDF, w
00DE   00FA               M     movwf gbl_spdata
00DF   0384           00697         decf FSR, F                                                     ;Increment pointer
00E0   212A           00698         call PutByte                                            ;Send data
00E1   0BF5           00699         decfsz gbl_cntrb, f
00E2   28DD           00700                 goto WaitComm_SendDataB
                      00701         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00E3   3040               M     movlw BUFFERSIZE
00E4   00F5               M     movwf gbl_cntrb
00E5   1783           00702         bsf STATUS, IRP                                         ;Bank 3
00E6   0A84           00703         incf FSR, f
00E7                  00704 WaitComm_SendDataC
                      00705         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00E7   0800               M     movf INDF, w
00E8   00FA               M     movwf gbl_spdata
00E9   0A84           00706         incf FSR, F                                                     ;Increment pointer
00EA   212A           00707         call PutByte                                            ;Send data
00EB   0BF5           00708         decfsz gbl_cntrb, f
00EC   28E7           00709                 goto WaitComm_SendDataC
                      00710         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00ED   3040               M     movlw BUFFERSIZE
00EE   00F5               M     movwf gbl_cntrb
00EF   1384           00711         bcf FSR, 7                                                      ;Bank 2
00F0   0384           00712         decf FSR, f
00F1                  00713 WaitComm_SendDataD
                      00714         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00F1   0800               M     movf INDF, w
00F2   00FA               M     movwf gbl_spdata
00F3   0384           00715         decf FSR, F                                                     ;Increment pointer
00F4   212A           00716         call PutByte                                            ;Send data
00F5   0BF5           00717         decfsz gbl_cntrb, f
00F6   28F1           00718                 goto WaitComm_SendDataD
00F7                  00719 WaitComm_SendDataExit
00F7   1383           00720         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
00F8   22FF           00721         call    ChannelConfSend
00F9   28C6           00722         goto    WaitComm
                      00723 
00FA                  00724 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00725         skipEqLF B'11111001', gbl_spdata
00FA   087A               M         movf gbl_spdata, w
00FB   3AF9               M         xorlw B'11111001'
00FC   1D03               M         btfss STATUS, Z
00FD   2903           00726                 goto WaitComm_Rec
                      00727         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00FE   30DD               M     movlw B'11011101'
00FF   00FA               M     movwf gbl_spdata
0100   212A           00728         call    PutByte
0101   22DE           00729         call    ConfSend
0102   28C6           00730         goto    WaitComm
                      00731 
0103                  00732 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            A" (250) *****
                      00733         skipEqLF B'11111010', gbl_spdata
0103   087A               M         movf gbl_spdata, w
0104   3AFA               M         xorlw B'11111010'
0105   1D03               M         btfss STATUS, Z
0106   2911           00734                 goto WaitComm_Break
                      00735         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
0107   30DE               M     movlw B'11011110'
0108   00FA               M     movwf gbl_spdata
0109   212A           00736         call    PutByte
010A   22B2           00737         call    ConfReceive
010B   3001           00738         movlw   0x01                                            ;Set counters to 0x01010101 for the case
                             of
010C   00F4           00739         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
010D   00F5           00740         movwf   gbl_cntrb
010E   00F6           00741         movwf   gbl_cntrc
010F   00F7           00742         movwf   gbl_cntrd
0110   0008           00743         return
                      00744 
0111                  00745 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00746         skipEqLF B'11110011', gbl_spdata
0111   087A               M         movf gbl_spdata, w
0112   3AF3               M         xorlw B'11110011'
0113   1D03               M         btfss STATUS, Z
0114   28C6           00747                 goto WaitComm                                   ;No valid message sent
                      00748         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
0115   30DC               M     movlw B'11011100'
0116   00FA               M     movwf gbl_spdata
0117   212A           00749         call    PutByte
0118   28C6           00750         goto    WaitComm
                      00751 
                      00752 
                      00753 
                      00754 ;GetByte is used to receive a byte on the serial port
                      00755 ;------------------------------------------------------------------------------
0119                  00756 GetByte
0119   1E8C           00757         btfss PIR1, RCIF                        
011A   2919           00758                 goto GetByte
011B                  00759 GetByteB
011B   1D18           00760         btfss RCSTA, FERR                                       ;Handle the frame error
011C   291F           00761                 goto GetByteC
011D   081A           00762         movf RCREG, w                                           ;Throw away data with errors
011E   2919           00763         goto GetByte
011F                  00764 GetByteC
011F   1C98           00765         btfss RCSTA, OERR                                       ;Handle the over run error
0120   2927           00766                 goto GetByteE
0121   1218           00767         bcf RCSTA, CREN                                         ;Reset the receive logic
0122   1618           00768         bsf RCSTA, CREN
0123                  00769 GetByteD
0123   081A           00770         movf RCREG, w                                           ;Throw away data with errors
0124   1A8C           00771         btfsc PIR1, RCIF
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0125   2923           00772                 goto GetByteD
0126   2919           00773         goto GetByte
0127                  00774 GetByteE                                                                ;No errors if we got here       
                      00775         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0127   081A               M     movf RCREG, w
0128   00FA               M     movwf gbl_spdata
0129   3400           00776         retlw 0
                      00777         
                      00778 ;PutByte is used to put a byte on the serial port
                      00779 ;------------------------------------------------------------------------------
012A                  00780 PutByte
012A                  00781 PutByteSerial
012A   1E0C           00782         btfss PIR1, TXIF
012B   292A           00783                 goto PutByteSerial
                      00784         MOVFF gbl_spdata, TXREG
012C   087A               M     movf gbl_spdata, w
012D   0099               M     movwf TXREG
012E   3400           00785         retlw 0
                      00786 
                      00787 ;Delay used to adjust sample rate
                      00788 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00789 ;statement)
                      00790 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00791 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00792 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00793 ;-----------------------------------------------------------------------------
012F                  00794 Delay
012F   3001           00795         movlw 0x01
0130                  00796 DelayLoop
0130   02F4           00797         subwf gbl_cntra, F
0131   1C03           00798         btfss STATUS, C
0132   02F5           00799                 subwf gbl_cntrb, F
0133   08F4           00800         movf gbl_cntra, F
                      00801         skipZero
0134   1D03               M         btfss STATUS, Z
0135   2930           00802                 goto DelayLoop
0136   08F5           00803         movf gbl_cntrb, F
                      00804         skipZero
0137   1D03               M         btfss STATUS, Z
0138   2930           00805                 goto DelayLoop
0139   0008           00806         return
                      00807 
                      00808 ;ADCShutdown, shutsdown the MAX118
                      00809 ;-----------------------------------------------------------------------------
013A                  00810 ADCShutdown
013A   0080           00811         movwf   INDF                                            ;Save to QUEUE
013B   1486           00812         bsf             ADC_PORT, CS                            ;Unselect MAX118
013C   1383           00813         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
013D   230E           00814         call    ChannelConfStore
013E   2889           00815         goto Main
                      00816 
                      00817 ;=============================================================================
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00818 ;*****************************************************************************
                      00819 ;=============================================================================
                      00820 
                      00821 ;Interrupt Driven Sampling with Command Responder
                      00822 ;This code section consists of three routines:
                      00823 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00824 ; (2) A looping routine that responds to PC commands while we are waiting for
                      00825 ;               sampling interrupts
                      00826 ; (3) A routine to rotate the acquired sample memory to align it for proper
                      00827 ;               pre-trigger display
                      00828 
                      00829 ;Jonathan Weaver: Measurements from simulation (9/27/2012 and 9/28/2012)
                      00830 ;Interrupt to the first sample = 103 cycles using minimum delay
                      00831 ;Sampling rate = 5000000/(8*SAMPLERATE1:SAMPLERATE2+35) with 20 MHz clock
                      00832 ;Minimum value for SAMPLERATE1:SAMPLERATE2 ~= 20 
                      00833 ;(around 140 cycles to execute the timer1 interrupt.  Added some time for
                      00834 ;processing the serial port.)
                      00835 ;Maximum sample rate (at SAMPLERATE1:SAMPLERATE2 = 20) is 25,641 Hz.
                      00836 ;Waveform completion at that sample rate is 100 times per second
                      00837 ;Maximum communication rate is 5,670 bytes per second or 22 waveforms per second
                      00838 ;using the serial interface.
                      00839 
                      00840 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00841 ; when it rolls over to 0x0000, the interrupt is generated.
                      00842 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00843 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00844 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00845 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00846 ;-----------------------------------------------------------------------------
                      00847 
013F                  00848 IrqServiceTimer1
                      00849         ;reload timer for next interrupt and clear the interrupt flag
                      00850         ;sample ADC and store into appropriate location
                      00851         ;increment location and maybe the bank to store into for next time around
                      00852         ;turn off interrupt if done acquiring
                      00853         ;return from call
013F   1283 1303      00854         banksel BANK0
0141   1010           00855         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0142   0972           00856         comf    gbl_sampleRate1, W
0143   008F           00857         movwf   TMR1H
0144   0973           00858         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
0145   008E           00859         movwf   TMR1L
0146   100C           00860         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0147   1410           00861         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
                      00862 
0148   0BFE           00863         decfsz gbl_sampleCntr, f                        ;Implement the longer sample delay, only sample 
                            when sampleCntr is zero
0149   0008           00864                 return
014A   0A71           00865         incf    gbl_sampleRate0, w                      ;Restore sampleCntr using sampleRate0 (MSB)
014B   00FE           00866         movwf   gbl_sampleCntr
                      00867 
014C   0000           00868         nop
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014D   0804           00869         movf    FSR, W                                          ;Save the current FSR
014E   00E8           00870         movwf   b0_fsr_temp
                      00871                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
014F   0866           00872         movf b0_sampleAddr, W
0150   0084           00873         movwf FSR
                      00874         ;Assume indirect bank0
0151   1383           00875         bcf STATUS, IRP
0152   1384           00876         bcf FSR, 7
                      00877         ;Set indirect bank1 if needed
0153   18E7           00878         btfsc b0_sampleBank, SAMPLEBANK1
0154   1784           00879         bsf FSR, 7
                      00880         ;Set indirect bank2 if needed
0155   19E7           00881     btfsc b0_sampleBank, SAMPLEBANK2
0156   1783           00882         bsf STATUS, IRP
                      00883     ;Set indirect bank3 if needed
0157   1967           00884     btfsc b0_sampleBank, SAMPLEBANK3
0158   1784           00885         bsf FSR, 7
0159   1967           00886     btfsc b0_sampleBank, SAMPLEBANK3
015A   1783           00887         bsf STATUS, IRP
                      00888 
015B   1089           00889         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
015C   1009           00890         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
015D   295E           00891         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
015E   295F           00892         goto    $+1
015F   0000           00893         nop
0160   0808           00894         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0161   1409           00895         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0162   1489           00896         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
0163   1009           00897         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
0164   0080           00898         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
0165   1867           00899     btfsc b0_sampleBank, SAMPLEBANK0    ;Increment acquistion memory pointer if Bank0
0166   0A84           00900         incf    FSR, F                                          
0167   18E7           00901     btfsc b0_sampleBank, SAMPLEBANK1    ;Decrement memory pointer if Bank1
0168   0384           00902         decf FSR, F
0169   0808           00903         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
016A   1409           00904         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
016B   19E7           00905     btfsc b0_sampleBank, SAMPLEBANK2    ;Decrement memory pointer if Bank2
016C   0384           00906         decf FSR, F
016D   1967           00907         btfsc b0_sampleBank, SAMPLEBANK3    ;Increment memory pointer if Bank3
016E   0A84           00908                 incf FSR, F
016F   0080           00909         movwf   INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00910 
0170   3002           00911         movlw 0x02                                                      ;Prepare to increment sampleAddr
                             by 2
0171   18E7           00912         btfsc b0_sampleBank, SAMPLEBANK1        ;If BANK1, prepare to decrement sampleAddr by 2
0172   30FE           00913                 movlw (0x00 - 0x02)
0173   19E7           00914         btfsc b0_sampleBank, SAMPLEBANK2        ;If BANK2, prepare to decrement sampleAddr by 2
0174   30FE           00915                 movlw (0x00 - 0x02)
0175   07E6           00916         addwf b0_sampleAddr, F
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0176   301F           00917         movlw BUFFERMIN-1                                       ;Check for filling last aquisition memor
                            y location in bank
0177   0666           00918         xorwf b0_sampleAddr, W
0178   1903           00919         btfsc STATUS, Z
0179   2981           00920                 goto irqst1_1                                   ;Jump, filled last aquisition memory loc
                            ation in bank
                      00921 
017A   3060           00922         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
017B   0666           00923         xorwf   b0_sampleAddr, W
017C   1D03           00924         btfss   STATUS, Z
017D   298B           00925                 goto irqst1_3                                   ;Jump, we are not done filling the curre
                            nt bank
017E   305F           00926         movlw   BUFFERMAX                                       ;Reset the acquisition memory pointer to
                             its END
017F   00E6           00927         movwf   b0_sampleAddr
0180   2983           00928         goto    irqst1_2
                      00929 
0181                  00930 irqst1_1
                      00931     MOVLF BUFFERMIN, b0_sampleAddr              ;Reset the acquisition memory pointer to its BEGINNING
0181   3020               M     movlw BUFFERMIN
0182   00E6               M     movwf b0_sampleAddr
                      00932 
0183                  00933 irqst1_2
0183   1003           00934         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0184   0DE7           00935         rlf     b0_sampleBank, F
0185   1E67           00936         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
0186   298B           00937                 goto irqst1_3                                   ;Not done, so keep going...
0187   1FFF           00938         btfss   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are doing a pre-trigger sampling
0188   29BC           00939                 goto irqst1_4                                   ;Done with a regular trigger's sampling
0189   01E7           00940         clrf    b0_sampleBank                           ;Pre-trigger sampling, so just set the bank back
                             to zero
018A   1467           00941         bsf             b0_sampleBank, SAMPLEBANK0
                      00942 
                      00943 
018B                  00944 irqst1_3
                      00945                 ;If we are doing pre-trigger sampling
                      00946                 ; check to see if the pre-trigger memory's pre-the-trigger area has been flushed (loaded
                            )
                      00947                 ; with the latest data for this sample run.
                      00948                 ; If it has been, then turn on the trigger interrupt.
018B   1FFF           00949         btfss   gbl_ptStatus, RUNNINGBIT
018C   29C2           00950                 goto irqst1_5
018D   1A7F           00951         btfsc   gbl_ptStatus, PTMEMNEW
018E   299D           00952                 goto irqst1_3_a
018F   1683 1303      00953         banksel BANK1
0191   08E0           00954         movf    b1_ptFlushCntr, F
0192   1903           00955         btfsc   STATUS, Z
0193   167F           00956                 bsf     gbl_ptStatus, PTMEMNEW
0194   03E0           00957         decf    b1_ptFlushCntr, F
0195   03E0           00958         decf    b1_ptFlushCntr, F
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0196   1283 1303      00959         banksel BANK0
0198   1E7F           00960         btfss   gbl_ptStatus, PTMEMNEW
0199   299D           00961                 goto irqst1_3_a
019A   108B           00962         bcf             INTCON, INTF
019B   160B           00963         bsf             INTCON, INTE
019C   29C2           00964         goto    irqst1_5
                      00965 
019D                  00966 irqst1_3_a
                      00967                 ;If we are doing pre-trigger sampling AND if we have already seen a trigger, then
                      00968                 ; check to see if the required number of samples after a trigger event has been complete
                            d
                      00969                 ; If it has, then stop the acquisition so we don't overwrite the pre-trigger samples
                      00970 ;       btfss   gbl_ptStatus, RUNNINGBIT
                      00971 ;               goto irqst1_5
019D   1F7F           00972         btfss   gbl_ptStatus, TRIGGEREDBIT
019E   29C2           00973                 goto irqst1_5
019F   03E9           00974         decf    b0_ptPtSampleCntr, F
01A0   0BE9           00975         decfsz  b0_ptPtSampleCntr, F
01A1   29C2           00976                 goto irqst1_5
                      00977 
                      00978                 ;Now calculate an amount to rotate the sample memory to align the trigger with
                      00979                 ; its requested position on the screen
                      00980                 ;Convert the captured address/bank of where the trigger event was stored
                      00981                 ; into a meaningful linear address value... Wow is this confusing!  Lets hope we
                      00982                 ; get it right!
                      00983                 ;First account for whether the address was in an incrementing or a decrementing bank
01A2   3020           00984         movlw   BUFFERMIN
01A3   026A           00985         subwf   b0_ptTriggerAddr, W
01A4   18EB           00986         btfsc   b0_ptTriggerBank, SAMPLEBANK1
01A5   3A3F           00987                 xorlw 0x3f
01A6   19EB           00988         btfsc   b0_ptTriggerBank, SAMPLEBANK2
01A7   3A3F           00989                 xorlw 0x3f
                      00990                 ;Now account for the variouos banks
01A8   18EB           00991         btfsc   b0_ptTriggerBank, SAMPLEBANK1
01A9   3E40           00992                 addlw (BUFFERSIZE * 1)
01AA   19EB           00993         btfsc   b0_ptTriggerBank, SAMPLEBANK2
01AB   3EC0           00994                 addlw (BUFFERSIZE * 3)
01AC   196B           00995         btfsc   b0_ptTriggerBank, SAMPLEBANK3
01AD   3E80           00996                 addlw (BUFFERSIZE * 2)
01AE   3EFE           00997         addlw   0xfe                                            ;Subtract 2 from the value to account fo
                            r the post increment
                      00998                 ;Then calculate out how much rotation is needed to align the trigger event with
                      00999                 ; the requested screen position
01AF   026C           01000         subwf   b0_ptPlaceTriggerHere, W
01B0   39FE           01001         andlw   0xfe                                            ;Make sure it is an even number
01B1   00ED           01002         movwf   b0_ptRotationCntr
                      01003                 ;Now decide whether rotating right or rotating left gets us aligned the quickest
01B2   1FED           01004         btfss   b0_ptRotationCntr, 7
01B3   29BA           01005                 goto irqst1_3_1                                 ;Fastest is to rotate right
01B4   30FE           01006         movlw   0xfe                                            ;Fastest is to rotate left, make some co
                            unter adjustments
01B5   06ED           01007         xorwf   b0_ptRotationCntr, F
01B6   0AED           01008         incf    b0_ptRotationCntr, F
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B7   0AED           01009         incf    b0_ptRotationCntr, F
01B8   2250           01010         call    RotateSampleMemLeft
01B9   29BB           01011         goto    irqst1_3_2
01BA                  01012 irqst1_3_1
01BA   2275           01013         call    RotateSampleMemRight
01BB                  01014 irqst1_3_2
01BB   16FF           01015         bsf             gbl_ptStatus, DATAREADYBIT      ;Set the pre-trigger acquisition's data is now r
                            eady flag
                      01016 
01BC                  01017 irqst1_4
01BC   1010           01018         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
01BD   100C           01019         bcf             PIR1, TMR1IF                            ;Clear the interrupt flag, too
01BE   1683 1303      01020         banksel BANK1
01C0   100C           01021         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
01C1   130B           01022         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
                      01023 
01C2                  01024 irqst1_5
01C2   1283 1303      01025         banksel BANK0
01C4   0868           01026         movf    b0_fsr_temp, W                          ;Restore FSR register
01C5   0084           01027         movwf   FSR
01C6   0008           01028         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      01029                                                                                 ; state and does the ret
                            fie
                      01030 
                      01031 
                      01032 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
01C7                  01033 SampleIntDrvn
                      01034         ;Setup the sample write location and sample bank variables
                      01035         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      01036         ;Turn on Timer 1
                      01037         ;Enable the Timer 1 interrupt
01C7   1283 1303      01038         banksel BANK0
01C9   3020           01039         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
01CA   00E6           01040         movwf   b0_sampleAddr
01CB   01E7           01041         clrf    b0_sampleBank                           ;Initialize sample bank pointer
01CC   1467           01042         bsf             b0_sampleBank, SAMPLEBANK0
01CD   1010           01043         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
01CE   1690           01044         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
01CF   1610           01045         bsf             T1CON, T1CKPS0
                      01046 
01D0   3001           01047         movlw   0x01
01D1   00FE           01048         movwf   gbl_sampleCntr                          ;Set the sampleCntr to 1 so it will sample on th
                            e first interrupt
                      01049         
01D2   30FF           01050         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
01D3   008F           01051         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
01D4   008E           01052         movwf   TMR1L                                           ; interval gets loaded in the IrqService
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            Timer1 routine.
01D5   100C           01053         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
01D6   1683 1303      01054         banksel BANK1
01D8   140C           01055         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
01D9   1283 1303      01056         banksel BANK0
01DB   170B           01057         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
                      01058 ;       bcf             INTCON, INTF                            ;Last chance clear of the trigger interr
                            upt flag,
                      01059 ;                                                                               ; used for pre-trigger a
                            cquisitions to maximize samples
01DC   1410           01060         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
01DD   178B           01061         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
                      01062 
                      01063 
                      01064         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      01065         ; Received Commands are:
                      01066         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      01067         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      01068         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      01069         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      01070         ;
                      01071         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      01072         ; routine after the sample memory buffer has been fully filled), leave this
                      01073         ; routine and go back to Main
                      01074 
01DE                  01075 sid_GetByte
01DE   1683 1303      01076         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
01E0   1C0C           01077         btfss   PIE1, TMR1IE
01E1   2A45           01078                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
01E2   1283 1303      01079         banksel BANK0
01E4   1E8C           01080         btfss   PIR1, RCIF                      
01E5   29DE           01081                 goto sid_GetByte
01E6                  01082 sid_GetByteB
01E6   1D18           01083         btfss   RCSTA, FERR                                     ;Handle the frame error
01E7   29EA           01084                 goto sid_GetByteC
01E8   081A           01085         movf    RCREG, w                                        ;Throw away data with errors
01E9   29DE           01086         goto    sid_GetByte
01EA                  01087 sid_GetByteC
01EA   1C98           01088         btfss   RCSTA, OERR                                     ;Handle the over run error
01EB   29F2           01089                 goto sid_GetByteE
01EC   1218           01090         bcf             RCSTA, CREN                                     ;Reset the receive logic
01ED   1618           01091         bsf             RCSTA, CREN
01EE                  01092 sid_GetByteD
01EE   081A           01093         movf    RCREG, w                                        ;Throw away data with errors
01EF   1A8C           01094         btfsc   PIR1, RCIF
01F0   29EE           01095                 goto sid_GetByteD
01F1   29DE           01096         goto    sid_GetByte
01F2                  01097 sid_GetByteE                                                    ;No errors if we got here       
                      01098         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F2   081A               M     movf RCREG, w
01F3   00FA               M     movwf gbl_spdata
                      01099 
01F4   1FFF           01100         btfss   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are/were running a pre-trigger acqui
                            sition
01F5   29F8           01101                 goto sid_WaitComm_Data
01F6   1EFF           01102         btfss   gbl_ptStatus, DATAREADYBIT      ;Check to see if pre-trigger acquisition data is ready
01F7   29DE           01103                 goto sid_GetByte                                ; if not, ignore commands at this time!
                      01104 
01F8                  01105 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      01106         skipEqLF B'11111000', gbl_spdata
01F8   087A               M         movf gbl_spdata, w
01F9   3AF8               M         xorlw B'11111000'
01FA   1D03               M         btfss STATUS, Z
01FB   2A2B           01107                 goto sid_WaitComm_Conf
                      01108         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
01FC   30DC               M     movlw B'11011100'
01FD   00FA               M     movwf gbl_spdata
01FE   212A           01109         call    PutByte
                      01110         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
01FF   3020               M     movlw BUFFERMIN
0200   0084               M     movwf FSR
                      01111         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
0201   3040               M     movlw BUFFERSIZE
0202   00F5               M     movwf gbl_cntrb
0203   1383           01112         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
0204                  01113 sid_WaitComm_SendDataA                                  ;In Bank 0
                      01114         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0204   0800               M     movf INDF, w
0205   00FA               M     movwf gbl_spdata
0206   0A84           01115         incf    FSR, F                                          ;Increment pointer
0207   212A           01116         call    PutByte                                         ;Send data
0208   0BF5           01117         decfsz  gbl_cntrb, f
0209   2A04           01118                 goto sid_WaitComm_SendDataA
                      01119         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
020A   3040               M     movlw BUFFERSIZE
020B   00F5               M     movwf gbl_cntrb
020C   0384           01120         decf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 1 
020D   1784           01121         bsf             FSR, 7                                          ;Set Bank 1
020E                  01122 sid_WaitComm_SendDataB
                      01123         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
020E   0800               M     movf INDF, w
020F   00FA               M     movwf gbl_spdata
0210   0384           01124         decf    FSR, F                                          ;Increment pointer
0211   212A           01125         call    PutByte                                         ;Send data
0212   0BF5           01126         decfsz  gbl_cntrb, f
0213   2A0E           01127                 goto sid_WaitComm_SendDataB
                      01128         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
0214   3040               M     movlw BUFFERSIZE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0215   00F5               M     movwf gbl_cntrb
0216   0A84           01129         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
0217   1783           01130         bsf             STATUS, IRP                                     ;Set Bank 3
0218                  01131 sid_WaitComm_SendDataC
                      01132         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0218   0800               M     movf INDF, w
0219   00FA               M     movwf gbl_spdata
021A   0A84           01133         incf    FSR, F                                          ;Increment pointer
021B   212A           01134         call    PutByte                                         ;Send data
021C   0BF5           01135         decfsz  gbl_cntrb, f
021D   2A18           01136                 goto sid_WaitComm_SendDataC
                      01137         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
021E   3040               M     movlw BUFFERSIZE
021F   00F5               M     movwf gbl_cntrb
0220   0384           01138         decf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 2
0221   1384           01139         bcf             FSR, 7                                          ;Set Bank 2
0222                  01140 sid_WaitComm_SendDataD
                      01141         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0222   0800               M     movf INDF, w
0223   00FA               M     movwf gbl_spdata
0224   0384           01142         decf    FSR, F                                          ;Increment pointer
0225   212A           01143         call    PutByte                                         ;Send data
0226   0BF5           01144         decfsz  gbl_cntrb, f
0227   2A22           01145                 goto sid_WaitComm_SendDataD
0228                  01146 sid_WaitComm_SendDataExit
0228   1383           01147         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
0229   22FF           01148         call    ChannelConfSend
022A   29DE           01149         goto    sid_GetByte
                      01150 
022B                  01151 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      01152         skipEqLF B'11111001', gbl_spdata
022B   087A               M         movf gbl_spdata, w
022C   3AF9               M         xorlw B'11111001'
022D   1D03               M         btfss STATUS, Z
022E   2A34           01153                 goto sid_WaitComm_Rec
                      01154         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
022F   30DD               M     movlw B'11011101'
0230   00FA               M     movwf gbl_spdata
0231   212A           01155         call    PutByte
0232   22DE           01156         call    ConfSend
0233   29DE           01157         goto    sid_GetByte
                      01158 
0234                  01159 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      01160         skipEqLF B'11111010', gbl_spdata
0234   087A               M         movf gbl_spdata, w
0235   3AFA               M         xorlw B'11111010'
0236   1D03               M         btfss STATUS, Z
0237   2A3D           01161                 goto sid_WaitComm_Break
                      01162         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0238   30DE               M     movlw B'11011110'
0239   00FA               M     movwf gbl_spdata
023A   212A           01163         call    PutByte
023B   22CF           01164         call    ConfReceiveRateOnly
023C   29DE           01165         goto    sid_GetByte
                      01166 
023D                  01167 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      01168         skipEqLF B'11110011', gbl_spdata
023D   087A               M         movf gbl_spdata, w
023E   3AF3               M         xorlw B'11110011'
023F   1D03               M         btfss STATUS, Z
0240   29DE           01169                 goto sid_GetByte                                ;No valid message sent
                      01170         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
0241   30DC               M     movlw B'11011100'
0242   00FA               M     movwf gbl_spdata
0243   212A           01171         call    PutByte
0244   29DE           01172         goto    sid_GetByte
                      01173 
                      01174 
0245                  01175 sid_Exit
0245   138B           01176         bcf             INTCON, GIE                                     ;Disable interrupts
0246   1283 1303      01177         banksel BANK0
0248   1486           01178         bsf             ADC_PORT, CS                            ;Unselect MAX118
                      01179 ;       bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
0249   230E           01180         call    ChannelConfStore                        ;Update state of front panel switches/knobs
024A   3001           01181         movlw   0x01                                            ;Set counters to 0x01010101 for the case
                             of
024B   00F4           01182         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
024C   00F5           01183         movwf   gbl_cntrb
024D   00F6           01184         movwf   gbl_cntrc
024E   00F7           01185         movwf   gbl_cntrd
024F   2889           01186         goto    Main
                      01187 
                      01188 
                      01189 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
0250                  01190 RotateSampleMemLeft
                      01191         ;Rotate the data stored in the sample buffer memory by 0xNN positions to the left
                      01192         ;Used after a pre-trigger sampling to align the data in the buffer memory
0250   1283 1303      01193         banksel BANK0
0252   0804           01194         movf    FSR, W                                          ;Save the current FSR
0253   00EE           01195         movwf   b0_ptFsrTemp
                      01196 
0254                  01197 rsmL_1
0254   08ED           01198         movf    b0_ptRotationCntr, F            ;Check to see if no memory rotation is needed
0255   1903           01199         btfsc   STATUS, Z
0256   2A99           01200                 goto rsm_exit
0257   3020           01201         movlw   BUFFERMIN                                       ;Not done, so setup the indirection regi
                            ster
0258   0084           01202         movwf   FSR
                      01203 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01204         ;Start the rotation with BANK0
0259   1383           01205         bcf             STATUS, IRP
025A   1384           01206         bcf             FSR, 7
025B   0800           01207         movf    INDF, W
025C   00EF           01208         movwf   b0_ptTemp0                                      ;Save very first location, to later be p
                            ut into very last location
025D   229C           01209         call    rsm_slide_lower
                      01210 
                      01211         ;Set BANK1
025E   1784           01212         bsf             FSR, 7
025F   0800           01213         movf    INDF, W                                         ;Get the first location in bank 1 (is th
                            e top address of bank)
0260   1384           01214         bcf             FSR, 7                                          ;Set indirection back to bank 0
0261   0080           01215         movwf   INDF                                            ;Deposit bank 1's first location into ba
                            nk 0's last location
0262   1784           01216         bsf             FSR, 7                                          ;Now go back to bank 1
0263   22A7           01217         call    rsm_slide_higher
                      01218 
                      01219         ;Set BANK3
0264   1783           01220         bsf             STATUS, IRP
0265   0800           01221         movf    INDF, W                                         ;Get the first location in bank 3 (is th
                            e bottom address bank)
0266   1383           01222         bcf             STATUS, IRP                                     ;Set indirection back to bank 1
0267   0080           01223         movwf   INDF                                            ;Deposit bank 3's first location into ba
                            nk 1's last location
0268   1783           01224         bsf             STATUS, IRP                                     ;Now go back to bank 3
0269   229C           01225         call    rsm_slide_lower
                      01226 
                      01227     ;Set BANK2
026A   1384           01228         bcf             FSR, 7
026B   0800           01229         movf    INDF, W                                         ;Get the first location in bank 2 (is th
                            e top address of bank)
026C   1784           01230         bsf             FSR, 7                                          ;Set indirection back to bank 3
026D   0080           01231         movwf   INDF                                            ;Deposit bank 2's first location into ba
                            nk 3's last location
026E   1384           01232         bcf             FSR, 7                                          ;Now go back to bank 2
026F   22A7           01233         call    rsm_slide_higher
                      01234 
0270   086F           01235         movf    b0_ptTemp0, W                           ;Now put the very first location into the very l
                            ast location
0271   0080           01236         movwf   INDF
0272   0BED           01237         decfsz  b0_ptRotationCntr, F            ;Check to see if memory has been rotated enough
0273   2A54           01238                 goto rsmL_1
0274   2A99           01239         goto    rsm_exit
                      01240 
                      01241 
0275                  01242 RotateSampleMemRight
                      01243         ;Rotate the data stored in the sample buffer memory by 0xNN positions to the right
                      01244         ;Used after a pre-trigger sampling to align the data in the buffer memory
0275   1283 1303      01245         banksel BANK0
0277   0804           01246         movf    FSR, W                                          ;Save the current FSR
0278   00EE           01247         movwf   b0_ptFsrTemp
                      01248 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0279                  01249 rsmR_1
0279   08ED           01250         movf    b0_ptRotationCntr, F            ;Check to see if no memory rotation is needed
027A   1903           01251         btfsc   STATUS, Z
027B   2A99           01252                 goto rsm_exit
027C   3020           01253         movlw   BUFFERMIN                                       ;Not done, so setup the indirection regi
                            ster
027D   0084           01254         movwf   FSR
                      01255 
                      01256         ;Start the rotation with BANK2
027E   1783           01257         bsf             STATUS, IRP
027F   1384           01258         bcf             FSR, 7
0280   0800           01259         movf    INDF, W
0281   00EF           01260         movwf   b0_ptTemp0                                      ;Save very first location, to later be p
                            ut into very last location
0282   229C           01261         call    rsm_slide_lower
                      01262 
                      01263         ;Set BANK3
0283   1784           01264         bsf             FSR, 7
0284   0800           01265         movf    INDF, W                                         ;Get the last location in bank 3 (is the
                             top address of bank)
0285   1384           01266         bcf             FSR, 7                                          ;Set indirection back to bank 2
0286   0080           01267         movwf   INDF                                            ;Deposit bank 3's last location into ban
                            k 2's first location
0287   1784           01268         bsf             FSR, 7                                          ;Now go back to bank 3
0288   22A7           01269         call    rsm_slide_higher
                      01270 
                      01271         ;Set BANK1
0289   1383           01272         bcf             STATUS, IRP
028A   0800           01273         movf    INDF, W                                         ;Get the last location in bank 1 (is the
                             bottom address of bank)
028B   1783           01274         bsf             STATUS, IRP                                     ;Set indirection back to bank 3
028C   0080           01275         movwf   INDF                                            ;Deposit bank 1's last location into ban
                            k 3's first location
028D   1383           01276         bcf             STATUS, IRP                                     ;Now go back to bank 1
028E   229C           01277         call    rsm_slide_lower
                      01278 
                      01279     ;Set BANK0
028F   1384           01280         bcf             FSR, 7
0290   0800           01281         movf    INDF, W                                         ;Get the last location in bank 0 (is the
                             top address of bank)
0291   1784           01282         bsf             FSR, 7                                          ;Set indirection back to bank 1
0292   0080           01283         movwf   INDF                                            ;Deposit bank 0's last location into ban
                            k 1's first location
0293   1384           01284         bcf             FSR, 7                                          ;Now go back to bank 0
0294   22A7           01285         call    rsm_slide_higher
                      01286 
0295   086F           01287         movf    b0_ptTemp0, W                           ;Now put the very first location into the very l
                            ast location
0296   0080           01288         movwf   INDF
0297   0BED           01289         decfsz  b0_ptRotationCntr, F            ;Check to see if memory has been rotated enough
0298   2A79           01290                 goto rsmR_1
                      01291 
0299                  01292 rsm_exit
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0299   086E           01293         movf    b0_ptFsrTemp, W                         ;Restore the previous FSR
029A   0084           01294         movwf   FSR
029B   0008           01295         return
                      01296 
029C                  01297 rsm_slide_lower
029C   0A84           01298         incf    FSR, F
029D   0800           01299         movf    INDF, W
029E   0384           01300         decf    FSR, F
029F   0080           01301         movwf   INDF
02A0   0A84           01302         incf    FSR, F
02A1   305F           01303         movlw   BUFFERMAX
02A2   0604           01304         xorwf   FSR, W
02A3   397F           01305         andlw   0x7f                                            ;Mask out the FSR7 bit from the comparis
                            on
02A4   1D03           01306         btfss   STATUS, Z
02A5   2A9C           01307                 goto rsm_slide_lower
02A6   0008           01308         return
                      01309 
02A7                  01310 rsm_slide_higher
02A7   0384           01311         decf    FSR, F
02A8   0800           01312         movf    INDF, W
02A9   0A84           01313         incf    FSR, F
02AA   0080           01314         movwf   INDF
02AB   0384           01315         decf    FSR, F
02AC   3020           01316         movlw   BUFFERMIN
02AD   0604           01317         xorwf   FSR, W
02AE   397F           01318         andlw   0x7f                                            ;Mask out the FSR7 bit from the comparis
                            on
02AF   1D03           01319         btfss   STATUS, Z
02B0   2AA7           01320                 goto rsm_slide_higher
02B1   0008           01321         return
                      01322 
                      01323 ;=============================================================================
                      01324 ;*****************************************************************************
                      01325 ;=============================================================================
                      01326 
                      01327 
                      01328 ;Receive and store the user settings from the PC application
                      01329 ;-----------------------------------------------------------------------------
02B2                  01330 ConfReceive
02B2   2119           01331         call GetByte                                            ;Receive ConfigLoc1
02B3   087A           01332         movf gbl_spdata, w
02B4   39DF           01333         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      01334         if clockFreq == 20                                      ;if necessary
02B5   3820           01335                 iorlw 1 << CLOCKFREQBIT
                      01336         endif
02B6   00F0           01337         movwf gbl_configLoc1
02B7   1283 1303      01338         banksel BANK0
02B9   2119           01339         call GetByte                                            ;Receive trigger delay
                      01340         MOVFF gbl_spdata, b0_triggerDelay0
02BA   087A               M     movf gbl_spdata, w
02BB   00E0               M     movwf b0_triggerDelay0
02BC   2119           01341         call GetByte
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01342         MOVFF gbl_spdata, b0_triggerDelay1
02BD   087A               M     movf gbl_spdata, w
02BE   00E1               M     movwf b0_triggerDelay1
02BF   2119           01343         call GetByte
                      01344         MOVFF gbl_spdata, b0_triggerDelay2
02C0   087A               M     movf gbl_spdata, w
02C1   00E2               M     movwf b0_triggerDelay2
02C2   2119           01345         call GetByte
                      01346         MOVFF gbl_spdata, b0_triggerDelay3
02C3   087A               M     movf gbl_spdata, w
02C4   00E3               M     movwf b0_triggerDelay3
02C5   2119           01347         call GetByte                                            ;Receive sample rate
                      01348         MOVFF gbl_spdata, gbl_sampleRate0
02C6   087A               M     movf gbl_spdata, w
02C7   00F1               M     movwf gbl_sampleRate0
02C8   2119           01349         call GetByte
                      01350         MOVFF gbl_spdata, gbl_sampleRate1
02C9   087A               M     movf gbl_spdata, w
02CA   00F2               M     movwf gbl_sampleRate1
02CB   2119           01351         call GetByte
                      01352         MOVFF gbl_spdata, gbl_sampleRate2
02CC   087A               M     movf gbl_spdata, w
02CD   00F3               M     movwf gbl_sampleRate2
02CE   0008           01353         return
                      01354 
                      01355 ;Receive user settings from the PC application. BUT, throw most of them away!
                      01356 ;This is used during the SampleIntDrvn routine to prevent changing
                      01357 ;of state during an interrupt driven acquisition that is in progress.
                      01358 ;However, allow the sampleRate0,1,2 variable to be changed.  This allows
                      01359 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      01360 ;the user might have to wait a long time before the sampling completed and
                      01361 ;the user would again get control.
                      01362 ;-----------------------------------------------------------------------------
02CF                  01363 ConfReceiveRateOnly
02CF   2119           01364         call GetByte                                            ;Receive ConfigLoc1
02D0   2119           01365         call GetByte                                            ;Receive trigger delay
02D1   2119           01366         call GetByte
02D2   2119           01367         call GetByte
02D3   2119           01368         call GetByte
02D4   2119           01369         call GetByte                                            ;Receive sample rate
                      01370         MOVFF gbl_spdata, gbl_sampleRate0
02D5   087A               M     movf gbl_spdata, w
02D6   00F1               M     movwf gbl_sampleRate0
02D7   2119           01371         call GetByte
                      01372         MOVFF gbl_spdata, gbl_sampleRate1
02D8   087A               M     movf gbl_spdata, w
02D9   00F2               M     movwf gbl_sampleRate1
02DA   2119           01373         call GetByte
                      01374         MOVFF gbl_spdata, gbl_sampleRate2
02DB   087A               M     movf gbl_spdata, w
02DC   00F3               M     movwf gbl_sampleRate2
02DD   0008           01375         return
                      01376 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01377 ;Send the current DSOscope configuration to the PC application
                      01378 ;-----------------------------------------------------------------------------
02DE                  01379 ConfSend
                      01380         ;Send number of datapoints (2 bytes)
                      01381         MOVLF high TOTALBUFFERSIZE, gbl_spdata
02DE   3001               M     movlw high TOTALBUFFERSIZE
02DF   00FA               M     movwf gbl_spdata
02E0   212A           01382         call PutByte
                      01383         MOVLF low TOTALBUFFERSIZE, gbl_spdata
02E1   3000               M     movlw low TOTALBUFFERSIZE
02E2   00FA               M     movwf gbl_spdata
02E3   212A           01384         call PutByte
                      01385         ;Send clock frequency configuration
                      01386         MOVFF gbl_configLoc1, gbl_spdata
02E4   0870               M     movf gbl_configLoc1, w
02E5   00FA               M     movwf gbl_spdata
02E6   212A           01387         call PutByte
02E7   1283 1303      01388         banksel BANK0
                      01389         MOVFF b0_triggerDelay0, gbl_spdata
02E9   0860               M     movf b0_triggerDelay0, w
02EA   00FA               M     movwf gbl_spdata
02EB   212A           01390         call PutByte
                      01391         MOVFF b0_triggerDelay1, gbl_spdata
02EC   0861               M     movf b0_triggerDelay1, w
02ED   00FA               M     movwf gbl_spdata
02EE   212A           01392         call PutByte
                      01393         MOVFF b0_triggerDelay2, gbl_spdata
02EF   0862               M     movf b0_triggerDelay2, w
02F0   00FA               M     movwf gbl_spdata
02F1   212A           01394         call PutByte
                      01395         MOVFF b0_triggerDelay3, gbl_spdata
02F2   0863               M     movf b0_triggerDelay3, w
02F3   00FA               M     movwf gbl_spdata
02F4   212A           01396         call PutByte
                      01397         MOVFF gbl_sampleRate0, gbl_spdata
02F5   0871               M     movf gbl_sampleRate0, w
02F6   00FA               M     movwf gbl_spdata
02F7   212A           01398         call PutByte
                      01399         MOVFF gbl_sampleRate1, gbl_spdata
02F8   0872               M     movf gbl_sampleRate1, w
02F9   00FA               M     movwf gbl_spdata
02FA   212A           01400         call PutByte
                      01401         MOVFF gbl_sampleRate2, gbl_spdata
02FB   0873               M     movf gbl_sampleRate2, w
02FC   00FA               M     movwf gbl_spdata
02FD   212A           01402         call PutByte
02FE   0008           01403         return
                      01404 
                      01405 ;Send the current DSOscope channel settings to the PC application
                      01406 ;-----------------------------------------------------------------------------
02FF                  01407 ChannelConfSend
                      01408         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
02FF   087B               M     movf gbl_dataConfig, w
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0300   00FA               M     movwf gbl_spdata
0301   212A           01409         call PutByte
0302   01FA           01410         clrf gbl_spdata
0303   212A           01411         call PutByte                                            ;Channel 1 offset
0304   212A           01412         call PutByte                                            ;Channel 2 offset
0305   1283 1303      01413         banksel BANK0
                      01414         MOVFF b0_triggerLevel, gbl_spdata
0307   0865               M     movf b0_triggerLevel, w
0308   00FA               M     movwf gbl_spdata
0309   212A           01415         call PutByte                                            ;Triggerlevel
                      01416         MOVFF b0_triggerChannel, gbl_spdata
030A   0864               M     movf b0_triggerChannel, w
030B   00FA               M     movwf gbl_spdata
030C   212A           01417         call PutByte                                            ;Trigger Channel
030D   0008           01418         return
                      01419 
                      01420 
                      01421 ;Read and store the current front panel settings of the DSOscope
                      01422 ;-----------------------------------------------------------------------------
030E                  01423 ChannelConfStore
                      01424         ;Format of channel data configuration byte is:  Channel 1 Gain Scale (2) bits
                      01425         ;                                                                                               
                                    For gain scale, 00 = 1, 01 = 2, 10 = 5
                      01426         ;                                                                                               
                            Channel 2 Gain Scale (2) bits
                      01427         ;                                                                                               
                            Channel 1 AC = 1 / DC = 0 (1) bit
                      01428         ;                                                                                               
                            Channel 2 AC = 1 / DC = 0 (1) bit
                      01429         ;                                                                                               
                            Channel 1 Attenuated by 10 = 1 / by 1 = 0
                      01430         ;                                                                                               
                            Channel 2 Attenuated by 10 = 1 / by 1 = 0
030E   01FB           01431         clrf gbl_dataConfig
030F   1683 1303      01432         banksel TRISC                                   ;Access Bank1
0311   1507           01433         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0312   1087           01434         bcf TRISC, CH1SEL                                       ;Ch1Sel output
0313   1685           01435         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
0314   1205           01436         bcf TRISA, CH1SELG                                      ;Ch1Sel output
0315   1283 1303      01437         banksel ANALOG_SEL                              ;Access Bank0
0317   1087           01438         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
0318   1205           01439         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
0319   177B           01440         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
031A   1C05           01441         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
031B   137B           01442                 bcf gbl_dataConfig, 6
031C   1C85           01443         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
031D   137B           01444                 bcf gbl_dataConfig, 6
031E   1C85           01445         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
031F   17FB           01446                 bsf gbl_dataConfig, 7
0320   1807           01447         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0321   15FB           01448                 bsf gbl_dataConfig, 3
0322   1487           01449         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            low by above checks
0323   1605           01450         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01451 
0324   1683 1303      01452         banksel TRISC                                   ;Access Bank1
0326   1487           01453         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
0327   1107           01454         bcf TRISC, CH2SEL                                       ;Ch2Sel output
0328   1605           01455         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
0329   1285           01456         bcf TRISA, CH2SELG                                      ;Ch2Sel output
032A   1283 1303      01457         banksel ANALOG_SEL                              ;Access Bank0
032C   1107           01458         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
032D   1285           01459         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
032E   167B           01460         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
032F   1C05           01461         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0330   127B           01462                 bcf gbl_dataConfig, 4
0331   1C85           01463         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0332   127B           01464                 bcf gbl_dataConfig, 4
0333   1C85           01465         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0334   16FB           01466                 bsf gbl_dataConfig, 5
0335   1807           01467         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0336   157B           01468                 bsf gbl_dataConfig, 2
0337   1507           01469         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0338   1685           01470         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01471 
0339   1F06           01472         btfss ATTNPORT, CH1ATTN                         ;If Channel 1 is Attenuated by 10 then mark
033A   14FB           01473                 bsf gbl_dataConfig, 1
033B   1F86           01474         btfss ATTNPORT, CH2ATTN                         ;If Channel 2 is Attenuated by 10 then mark
033C   147B           01475                 bsf gbl_dataConfig, 0
                      01476 
                      01477         ;Next byte/bit is Trigger Source Channel
033D   01E4           01478         clrf b0_triggerChannel
033E   1D85           01479         btfss TRGSRCPORT, TRGCH                         ;If Trigger Source is Channel 2 then mark
033F   1464           01480                 bsf     b0_triggerChannel, 0
                      01481 
                      01482         ;Next byte is Trigger Level
0340   1089           01483         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0341   1506           01484         bsf ADC_PORT, ADDR1
0342   1186           01485         bcf ADC_PORT, ADDR2
0343   1086           01486         bcf ADC_PORT, CS                                        ;Select maxim ADC
0344   1009           01487         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
0345   0000           01488         nop                                                                     ;Wait 5
0346   0000           01489         nop
0347   0000           01490         nop
0348   0000           01491         nop
0349   0000           01492         nop
034A   0808           01493         movf ADC_DATAPORT, W                            ;Save trigger level
034B   1409           01494         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
034C   1486           01495         bsf ADC_PORT, CS                                        ;unselect maxim ADC
034D   1089           01496         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
034E   1106           01497         bcf ADC_PORT, ADDR1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034F   1186           01498         bcf ADC_PORT, ADDR2
0350   00E5           01499         movwf b0_triggerLevel
0351   0008           01500         return
                      01501 
                      01502 
                      01503 ;=============================================================================
                      01504 ;*****************************************************************************
                      01505 ;=============================================================================
                      01506 
                      01507 
                      01508 ;Sample Delayed
                      01509 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01510 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01511 ;-----------------------------------------------------------------------------
0352                  01512 SampleDelayed
0352   1009           01513         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01514         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
0353   303F               M     movlw BUFFERSIZE-1
0354   00F6               M     movwf gbl_cntrc
                      01515         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0355   3020               M     movlw BUFFERMIN
0356   0084               M     movwf FSR
                      01516         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0357   0873               M     movf gbl_sampleRate2, w
0358   00F4               M     movwf gbl_cntra
                      01517         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0359   0872               M     movf gbl_sampleRate1, w
035A   00F5               M     movwf gbl_cntrb
035B   0000           01518         nop
035C   212F           01519         call Delay
035D                  01520 SampleDelayedLoopA
035D   0808           01521         movf ADC_DATAPORT, W                            ;Sample
035E   1409           01522         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
035F   1009           01523         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0360   0080           01524         movwf INDF                                                      ;Save to QUEUE
0361   0A84           01525         incf FSR, F                                                     ;Increment QUEUE pointer
0362                  01526 StSampleDelayedLoopA
                      01527         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0362   0873               M     movf gbl_sampleRate2, w
0363   00F4               M     movwf gbl_cntra
                      01528         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0364   0872               M     movf gbl_sampleRate1, w
0365   00F5               M     movwf gbl_cntrb
0366   212F           01529         call Delay
0367   0BF6           01530         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0368   2B5D           01531                 goto SampleDelayedLoopA
0369   0000           01532         nop
036A   0808           01533         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
036B   1409           01534         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
036C   1009           01535         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
036D   0080           01536         movwf INDF                                                      ;Save to QUEUE
036E   1784           01537         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01538         MOVLF BUFFERSIZE-1, gbl_cntrc
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036F   303F               M     movlw BUFFERSIZE-1
0370   00F6               M     movwf gbl_cntrc
                      01539         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0371   0873               M     movf gbl_sampleRate2, w
0372   00F4               M     movwf gbl_cntra
                      01540         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0373   0872               M     movf gbl_sampleRate1, w
0374   00F5               M     movwf gbl_cntrb
0375   212F           01541         call Delay
0376   0000           01542         nop
0377                  01543 SampleDelayedLoopB
0377   0808           01544         movf ADC_DATAPORT, W                            ;Sample
0378   1409           01545         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0379   1009           01546         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
037A   0080           01547         movwf INDF                                                      ;Save to QUEUE
037B   0384           01548         decf FSR, F                                                     ;Increment QUEUE pointer
                      01549         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
037C   0873               M     movf gbl_sampleRate2, w
037D   00F4               M     movwf gbl_cntra
                      01550         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
037E   0872               M     movf gbl_sampleRate1, w
037F   00F5               M     movwf gbl_cntrb
0380   212F           01551         call Delay
0381   0BF6           01552         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0382   2B77           01553                 goto SampleDelayedLoopB
0383   0000           01554         nop
0384   0808           01555         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
0385   1409           01556         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0386   1009           01557         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0387   0080           01558         movwf INDF                                                      ;Save to QUEUE
0388   1783           01559         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01560         MOVLF BUFFERSIZE-1, gbl_cntrc
0389   303F               M     movlw BUFFERSIZE-1
038A   00F6               M     movwf gbl_cntrc
                      01561         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
038B   0873               M     movf gbl_sampleRate2, w
038C   00F4               M     movwf gbl_cntra
                      01562         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
038D   0872               M     movf gbl_sampleRate1, w
038E   00F5               M     movwf gbl_cntrb
038F   212F           01563         call Delay
0390   0000           01564         nop
0391                  01565 SampleDelayedLoopC
0391   0808           01566         movf ADC_DATAPORT, W                            ;Sample
0392   1409           01567         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0393   1009           01568         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0394   0080           01569         movwf INDF                                                      ;Save to QUEUE
0395   0A84           01570         incf FSR, F                                                     ;Increment QUEUE pointer
                      01571         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0396   0873               M     movf gbl_sampleRate2, w
0397   00F4               M     movwf gbl_cntra
                      01572         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0398   0872               M     movf gbl_sampleRate1, w
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0399   00F5               M     movwf gbl_cntrb
039A   212F           01573         call Delay
039B   0BF6           01574         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
039C   2B91           01575                 goto SampleDelayedLoopC
039D   0000           01576         nop
039E   0808           01577         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
039F   1409           01578         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A0   1009           01579         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03A1   0080           01580         movwf INDF                                                      ;Save to QUEUE
03A2   1384           01581         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01582         MOVLF BUFFERSIZE-1, gbl_cntrc
03A3   303F               M     movlw BUFFERSIZE-1
03A4   00F6               M     movwf gbl_cntrc
                      01583         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03A5   0873               M     movf gbl_sampleRate2, w
03A6   00F4               M     movwf gbl_cntra
                      01584         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03A7   0872               M     movf gbl_sampleRate1, w
03A8   00F5               M     movwf gbl_cntrb
03A9   212F           01585         call Delay
03AA   0000           01586         nop
03AB                  01587 SampleDelayedLoopD
03AB   0808           01588         movf ADC_DATAPORT, W                            ;Sample
03AC   1409           01589         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03AD   1009           01590         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03AE   0080           01591         movwf INDF                                                      ;Save to QUEUE
03AF   0384           01592         decf FSR, F                                                     ;Increment QUEUE pointer
                      01593         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03B0   0873               M     movf gbl_sampleRate2, w
03B1   00F4               M     movwf gbl_cntra
                      01594         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03B2   0872               M     movf gbl_sampleRate1, w
03B3   00F5               M     movwf gbl_cntrb
03B4   212F           01595         call Delay
03B5   0BF6           01596         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03B6   2BAB           01597                 goto SampleDelayedLoopD
03B7   0000           01598         nop
03B8   0808           01599         movf ADC_DATAPORT, W                            ;Last sample
03B9   1409           01600         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03BA   118A           01601         bcf PCLATH, 3                                           ;insure correct program memory page
03BB   120A           01602         bcf PCLATH, 4
03BC   293A           01603         goto ADCShutdown
                      01604 
                      01605 ;SampleXYDelayed
                      01606 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01607 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01608 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01609 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01610 ;-----------------------------------------------------------------------------
03BD                  01611 SampleXYDelayed
03BD   1009           01612         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
03BE   1489           01613         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01614         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BF   3020               M     movlw BUFFERMIN
03C0   0084               M     movwf FSR
03C1   0808           01615         movf ADC_DATAPORT, W                            ;Sample X
03C2   1409           01616         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03C3   1009           01617         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03C4   1089           01618         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03C5   0080           01619         movwf INDF                                                      ;Save to QUEUE
03C6   0A84           01620         incf FSR, F                                                     ;Increment QUEUE pointer
                      01621         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
03C7   301F               M     movlw BUFFERSIZE/2-1
03C8   00F6               M     movwf gbl_cntrc
                      01622         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03C9   0873               M     movf gbl_sampleRate2, w
03CA   00F4               M     movwf gbl_cntra
                      01623         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03CB   0872               M     movf gbl_sampleRate1, w
03CC   00F5               M     movwf gbl_cntrb
03CD   212F           01624         call Delay
03CE   0000           01625         nop
03CF                  01626 SampleXYDelayedLA
03CF   0808           01627         movf ADC_DATAPORT, W                            ;Sample Y
03D0   1409           01628         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03D1   1009           01629         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D2   1489           01630         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03D3   0080           01631         movwf INDF                                                      ;Save to QUEUE
03D4   0A84           01632         incf FSR, F                                                     ;Increment QUEUE pointer
03D5   0808           01633         movf ADC_DATAPORT, W                            ;Sample X
03D6   1409           01634         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03D7   1009           01635         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D8   1089           01636         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03D9   0080           01637         movwf INDF                                                      ;Save to QUEUE
03DA   0A84           01638         incf FSR, F                                                     ;Increment QUEUE pointer
                      01639         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03DB   0873               M     movf gbl_sampleRate2, w
03DC   00F4               M     movwf gbl_cntra
                      01640         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03DD   0872               M     movf gbl_sampleRate1, w
03DE   00F5               M     movwf gbl_cntrb
03DF   212F           01641         call Delay
03E0   0BF6           01642         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03E1   2BCF           01643                 goto SampleXYDelayedLA
03E2   0000           01644         nop
03E3   0808           01645         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
03E4   1409           01646         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E5   1009           01647         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03E6   1489           01648         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03E7   0080           01649         movwf INDF                                                      ;Save to QUEUE
03E8   1784           01650         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
03E9   0808           01651         movf ADC_DATAPORT, W                            ;Sample X
03EA   1409           01652         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03EB   1009           01653         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03EC   1089           01654         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03ED   0080           01655         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03EE   0384           01656         decf FSR, f                                                     ;Increment QUEUE pointer
                      01657         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
03EF   301F               M     movlw BUFFERSIZE/2-1
03F0   00F6               M     movwf gbl_cntrc
                      01658         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03F1   0873               M     movf gbl_sampleRate2, w
03F2   00F4               M     movwf gbl_cntra
                      01659         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03F3   0872               M     movf gbl_sampleRate1, w
03F4   00F5               M     movwf gbl_cntrb
03F5   212F           01660         call Delay
03F6   0000           01661         nop
03F7                  01662 SampleXYDelayedLB
03F7   0808           01663         movf ADC_DATAPORT, W                            ;Sample Y
03F8   1409           01664         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F9   1009           01665         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03FA   1489           01666         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03FB   0080           01667         movwf INDF                                                      ;Save to QUEUE
03FC   0384           01668         decf FSR, F                                                     ;Increment QUEUE pointer
03FD   0808           01669         movf ADC_DATAPORT, W                            ;Sample X
03FE   1409           01670         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FF   1009           01671         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0400   1089           01672         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0401   0080           01673         movwf INDF                                                      ;Save to QUEUE
0402   0384           01674         decf FSR, F                                                     ;Increment QUEUE pointer
                      01675         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0403   0873               M     movf gbl_sampleRate2, w
0404   00F4               M     movwf gbl_cntra
                      01676         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0405   0872               M     movf gbl_sampleRate1, w
0406   00F5               M     movwf gbl_cntrb
0407   212F           01677         call Delay
0408   0BF6           01678         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0409   2BF7           01679                 goto SampleXYDelayedLB
040A   0000           01680         nop
040B   0808           01681         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
040C   1409           01682         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
040D   1009           01683         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
040E   1489           01684         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
040F   0080           01685         movwf INDF                                                      ;Save to QUEUE
0410   1783           01686         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0411   0808           01687         movf ADC_DATAPORT, W                            ;Sample X
0412   1409           01688         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0413   1009           01689         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0414   1089           01690         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0415   0080           01691         movwf INDF                                                      ;Save to QUEUE
0416   0A84           01692         incf FSR, f                                                     ;Increment QUEUE pointer
                      01693         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0417   301F               M     movlw BUFFERSIZE/2-1
0418   00F6               M     movwf gbl_cntrc
                      01694         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0419   0873               M     movf gbl_sampleRate2, w
041A   00F4               M     movwf gbl_cntra
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01695         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
041B   0872               M     movf gbl_sampleRate1, w
041C   00F5               M     movwf gbl_cntrb
041D   212F           01696         call Delay
041E   0000           01697         nop
041F                  01698 SampleXYDelayedLC
041F   0808           01699         movf ADC_DATAPORT, W                            ;Sample Y
0420   1409           01700         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0421   1009           01701         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0422   1489           01702         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0423   0080           01703         movwf INDF                                                      ;Save to QUEUE
0424   0A84           01704         incf FSR, F                                                     ;Increment QUEUE pointer
0425   0808           01705         movf ADC_DATAPORT, W                            ;Sample X
0426   1409           01706         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0427   1009           01707         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0428   1089           01708         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0429   0080           01709         movwf INDF                                                      ;Save to QUEUE
042A   0A84           01710         incf FSR, F                                                     ;Increment QUEUE pointer
                      01711         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
042B   0873               M     movf gbl_sampleRate2, w
042C   00F4               M     movwf gbl_cntra
                      01712         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
042D   0872               M     movf gbl_sampleRate1, w
042E   00F5               M     movwf gbl_cntrb
042F   212F           01713         call Delay
0430   0BF6           01714         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0431   2C1F           01715                 goto SampleXYDelayedLC
0432   0000           01716         nop
0433   0808           01717         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0434   1409           01718         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0435   1009           01719         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0436   1489           01720         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0437   0080           01721         movwf INDF                                                      ;Save to QUEUE
0438   1384           01722         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0439   0808           01723         movf ADC_DATAPORT, W                            ;Sample X
043A   1409           01724         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043B   1009           01725         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043C   1089           01726         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
043D   0080           01727         movwf INDF                                                      ;Save to QUEUE
043E   0384           01728         decf FSR, f                                                     ;Increment QUEUE pointer
                      01729         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
043F   301F               M     movlw BUFFERSIZE/2-1
0440   00F6               M     movwf gbl_cntrc
                      01730         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0441   0873               M     movf gbl_sampleRate2, w
0442   00F4               M     movwf gbl_cntra
                      01731         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0443   0872               M     movf gbl_sampleRate1, w
0444   00F5               M     movwf gbl_cntrb
0445   212F           01732         call Delay
0446   0000           01733         nop
0447                  01734 SampleXYDelayedLD
0447   0808           01735         movf ADC_DATAPORT, W                            ;Sample Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0448   1409           01736         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0449   1009           01737         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
044A   1489           01738         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
044B   0080           01739         movwf INDF                                                      ;Save to QUEUE
044C   0384           01740         decf FSR, F                                                     ;Increment QUEUE pointer
044D   0808           01741         movf ADC_DATAPORT, W                            ;Sample X
044E   1409           01742         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
044F   1009           01743         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0450   1089           01744         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0451   0080           01745         movwf INDF                                                      ;Save to QUEUE
0452   0384           01746         decf FSR, F                                                     ;Increment QUEUE pointer
                      01747         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0453   0873               M     movf gbl_sampleRate2, w
0454   00F4               M     movwf gbl_cntra
                      01748         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0455   0872               M     movf gbl_sampleRate1, w
0456   00F5               M     movwf gbl_cntrb
0457   212F           01749         call Delay
0458   0BF6           01750         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0459   2C47           01751                 goto SampleXYDelayedLD
045A   0000           01752         nop
045B   0808           01753         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
045C   1409           01754         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
045D   118A           01755         bcf PCLATH, 3                                           ;insure correct program memory page
045E   120A           01756         bcf PCLATH, 4
045F   293A           01757         goto ADCShutdown
                      01758 
                      01759 ;Fast sample
                      01760 ;Sampling rate = 625 kHz with 20 MHz clock
                      01761 ;Sampling rate = 125 kHz with 4 MHz clock
                      01762 ;-----------------------------------------------------------------------------
0460                  01763 Sample625k
0460   1009           01764         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01765         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
0461   303F               M     movlw BUFFERSIZE-1
0462   00F4               M     movwf gbl_cntra
                      01766         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0463   3020               M     movlw BUFFERMIN
0464   0084               M     movwf FSR
0465   0000           01767         nop
0466                  01768 Sample625kLoopA
0466   0808           01769         movf ADC_DATAPORT, W                            ;Sample
0467   1409           01770         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0468   1009           01771         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0469   0080           01772         movwf INDF                                                      ;Save to QUEUE
046A   0A84           01773         incf FSR, F                                                     ;Increment QUEUE pointer
046B   0BF4           01774         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
046C   2C66           01775                 goto Sample625kLoopA
046D   0000           01776         nop
046E   0808           01777         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
046F   1409           01778         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0470   1009           01779         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0471   0080           01780         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0472   1784           01781         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01782         MOVLF BUFFERSIZE-1, gbl_cntra
0473   303F               M     movlw BUFFERSIZE-1
0474   00F4               M     movwf gbl_cntra
0475   0000           01783         nop
0476                  01784 Sample625kLoopB
0476   0808           01785         movf ADC_DATAPORT, W                            ;Sample
0477   1409           01786         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0478   1009           01787         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0479   0080           01788         movwf INDF                                                      ;Save to QUEUE
047A   0384           01789         decf FSR, F                                                     ;Increment QUEUE pointer
047B   0BF4           01790         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
047C   2C76           01791                 goto Sample625kLoopB
047D   0000           01792         nop
047E   0808           01793         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
047F   1409           01794         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0480   1009           01795         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0481   0080           01796         movwf INDF                                                      ;Save to QUEUE
0482   1783           01797         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01798         MOVLF BUFFERSIZE-1, gbl_cntra
0483   303F               M     movlw BUFFERSIZE-1
0484   00F4               M     movwf gbl_cntra
0485   0000           01799         nop
0486                  01800 Sample625kLoopC
0486   0808           01801         movf ADC_DATAPORT, W                            ;Sample
0487   1409           01802         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0488   1009           01803         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0489   0080           01804         movwf INDF                                                      ;Save to QUEUE
048A   0A84           01805         incf FSR, F                                                     ;Increment QUEUE pointer
048B   0BF4           01806         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
048C   2C86           01807                 goto Sample625kLoopC
048D   0000           01808         nop
048E   0808           01809         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
048F   1409           01810         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0490   1009           01811         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0491   0080           01812         movwf INDF                                                      ;Save to QUEUE
0492   1384           01813         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01814         MOVLF BUFFERSIZE-1, gbl_cntra
0493   303F               M     movlw BUFFERSIZE-1
0494   00F4               M     movwf gbl_cntra
0495   0000           01815         nop
0496                  01816 Sample625kLoopD
0496   0808           01817         movf ADC_DATAPORT, W                            ;Sample
0497   1409           01818         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0498   1009           01819         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0499   0080           01820         movwf INDF                                                      ;Save to QUEUE
049A   0384           01821         decf FSR, F                                                     ;Increment QUEUE pointer
049B   0BF4           01822         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
049C   2C96           01823                 goto Sample625kLoopD
049D   0000           01824         nop
049E   0808           01825         movf ADC_DATAPORT, W                            ;Last sample
049F   1409           01826         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A0   118A           01827         bcf PCLATH, 3                                           ;insure correct program memory page
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A1   120A           01828         bcf PCLATH, 4
04A2   293A           01829         goto ADCShutdown
                      01830 
                      01831 ;Fast sample
                      01832 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01833 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01834 ;or
                      01835 ;Sampling rate = 250 kHz with 20 MHz clock
                      01836 ;Sampling rate =  50 kHz with 4 MHz clock
                      01837 ;-----------------------------------------------------------------------------
04A3                  01838 Sample417k250k
04A3   1009           01839         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01840         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
04A4   303F               M     movlw BUFFERSIZE - 1
04A5   00F4               M     movwf gbl_cntra
                      01841         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04A6   3020               M     movlw BUFFERMIN
04A7   0084               M     movwf FSR
04A8   2CA9           01842         goto $ + 1                                                      ;Delay 3
04A9   1D70           01843         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
04AA   2CAC           01844                 goto Sample417kLoopA
04AB   2502           01845         call DelaySeven                                         ;Delay 9 cycles
04AC                  01846 Sample417kLoopA
04AC   0808           01847         movf ADC_DATAPORT, W                            ;Sample
04AD   1409           01848         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04AE   1009           01849         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04AF   0080           01850         movwf INDF                                                      ;Save to QUEUE
04B0   0A84           01851         incf FSR, F                                                     ;Increment QUEUE pointer
04B1   1D70           01852         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04B2   2CB4           01853                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
04B3                  01854 Sample250kA
04B3   2502           01855         call DelaySeven                                         ;Delay 9 cycles
04B4                  01856 Sample417kA
04B4   0000           01857         nop
04B5   0BF4           01858         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04B6   2CAC           01859                 goto Sample417kLoopA
04B7   0000           01860         nop
04B8   0808           01861         movf ADC_DATAPORT, W                            ;Last sample bank 1
04B9   1409           01862         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04BA   1009           01863         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04BB   0080           01864         movwf INDF                                                      ;Save to QUEUE
04BC   1784           01865         bsf FSR, 7                                                      ;Goto bank 2
                      01866         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04BD   303F               M     movlw BUFFERSIZE - 1
04BE   00F4               M     movwf gbl_cntra
04BF   2CC0           01867         goto $ + 1
04C0   1D70           01868         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
04C1   2CC3           01869                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
04C2   2502           01870         call DelaySeven                                         ;Delay 9 cycles
04C3                  01871 Sample417kLoopB
04C3   0808           01872         movf ADC_DATAPORT, W                            ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C4   1409           01873         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04C5   1009           01874         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04C6   0080           01875         movwf INDF                                                      ;Save to QUEUE
04C7   0384           01876         decf FSR, F                                                     ;Increment QUEUE pointer
04C8                  01877 StSample417kLoopB
04C8   1D70           01878         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04C9   2CCB           01879                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
04CA                  01880 Sample250kB
04CA   2502           01881         call DelaySeven                                         ;Delay 9 cycles
04CB                  01882 Sample417kB
04CB   0000           01883         nop
04CC   0BF4           01884         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04CD   2CC3           01885                 goto Sample417kLoopB
04CE   0000           01886         nop
04CF   0808           01887         movf ADC_DATAPORT, W                            ;Last sample bank 2
04D0   1409           01888         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04D1   1009           01889         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04D2   0080           01890         movwf INDF                                                      ;Save to QUEUE
04D3   1783           01891         bsf STATUS, IRP                                         ;Goto bank 4
                      01892         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04D4   303F               M     movlw BUFFERSIZE - 1
04D5   00F4               M     movwf gbl_cntra
04D6   2CD7           01893         goto $ + 1
04D7   1D70           01894         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
04D8   2CDA           01895                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
04D9   2502           01896         call DelaySeven                                         ;Delay 9 cycles
04DA                  01897 Sample417kLoopC
04DA   0808           01898         movf ADC_DATAPORT, W                            ;Sample
04DB   1409           01899         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04DC   1009           01900         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04DD   0080           01901         movwf INDF                                                      ;Save to QUEUE
04DE   0A84           01902         incf FSR, F                                                     ;Increment QUEUE pointer
04DF                  01903 StSample417kLoopC
04DF   1D70           01904         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04E0   2CE2           01905                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
04E1                  01906 Sample250kC
04E1   2502           01907         call DelaySeven                                         ;Delay 9 cycles
04E2                  01908 Sample417kC
04E2   0000           01909         nop
04E3   0BF4           01910         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04E4   2CDA           01911                 goto Sample417kLoopC
04E5   0000           01912         nop
04E6   0808           01913         movf ADC_DATAPORT, W                            ;Last sample bank 4
04E7   1409           01914         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04E8   1009           01915         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04E9   0080           01916         movwf INDF                                                      ;Save to QUEUE
04EA   1384           01917         bcf FSR, 7                                                      ;Goto bank 3
                      01918         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04EB   303F               M     movlw BUFFERSIZE - 1
04EC   00F4               M     movwf gbl_cntra
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04ED   2CEE           01919         goto $ + 1
04EE   1D70           01920         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
04EF   2CF1           01921                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
04F0   2502           01922         call DelaySeven                                         ;Delay 9 cycles
04F1                  01923 Sample417kLoopD
04F1   0808           01924         movf ADC_DATAPORT, W                            ;Sample
04F2   1409           01925         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04F3   1009           01926         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04F4   0080           01927         movwf INDF                                                      ;Save to QUEUE
04F5   0384           01928         decf FSR, F                                                     ;Increment QUEUE pointer
04F6                  01929 StSample417kLoopD
04F6   1D70           01930         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04F7   2CF9           01931                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
04F8                  01932 Sample250kD
04F8   2502           01933         call DelaySeven                                         ;Delay 9 cycles
04F9                  01934 Sample417kD
04F9   0000           01935         nop
04FA   0BF4           01936         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04FB   2CF1           01937                 goto Sample417kLoopD
04FC   0000           01938         nop
04FD   0808           01939         movf ADC_DATAPORT, W                            ;Last sample
04FE   1409           01940         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04FF   118A           01941         bcf PCLATH, 3                                           ;insure correct program memory page
0500   120A           01942         bcf PCLATH, 4
0501   293A           01943         goto ADCShutdown
                      01944 
                      01945 ;Delay Seven Cycles, helper to Sample417k250k
0502                  01946 DelaySeven
0502   2D03           01947         goto $ + 1                                                      ;7
                      01948 ;Delay Five Cycles, helper to SampleXY250k192k
0503                  01949 DelayFive
0503   0000           01950         nop                                                                     ;5
0504   2D05           01951         goto $ + 1                                              
                      01952 ;Delay Two Cycles, helper to SampleXY250k192k
0505                  01953 DelayTwo
0505   0008           01954         return                                                          ;2
                      01955 
                      01956 
                      01957 ;Fast sample XY
                      01958 ;Sampling rate = 250 kHz with 20 MHz clock
0506                  01959 SampleXY250k192k
0506   1009           01960         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0507   1489           01961         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01962         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0508   3020               M     movlw BUFFERMIN
0509   0084               M     movwf FSR
050A   0808           01963         movf ADC_DATAPORT, W                            ;Sample X
050B   1409           01964         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
050C   1009           01965         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
050D   1089           01966         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
050E   0080           01967         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

050F   0A84           01968         incf FSR, F                                                     ;Increment QUEUE pointer
                      01969         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0510   301F               M     movlw BUFFERSIZE/2-1
0511   00F6               M     movwf gbl_cntrc
0512   1C70           01970         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0513   2503           01971                 call DelayFive                                  ;192k
0514   2505           01972         call DelayTwo
0515                  01973 SampleXY250kLA
0515   0808           01974         movf ADC_DATAPORT, W                            ;Sample Y
0516   1409           01975         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0517   1009           01976         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0518   1489           01977         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0519   0080           01978         movwf INDF                                                      ;Save to QUEUE
051A   0A84           01979         incf FSR, F                                                     ;Increment QUEUE pointer
051B   0808           01980         movf ADC_DATAPORT, W                            ;Sample X
051C   1409           01981         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
051D   1009           01982         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
051E   1089           01983         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
051F   0080           01984         movwf INDF                                                      ;Save to QUEUE
0520   0A84           01985         incf FSR, F                                                     ;Increment QUEUE pointer
0521   1C70           01986         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0522   2503           01987                 call DelayFive                                  ;192k
0523   2D24           01988         goto $ + 1
0524   0000           01989         nop
0525   0BF6           01990         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0526   2D15           01991                 goto SampleXY250kLA
0527   0000           01992         nop
0528   0808           01993         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0529   1409           01994         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
052A   1009           01995         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
052B   1489           01996         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
052C   0080           01997         movwf INDF                                                      ;Save to QUEUE
052D   1784           01998         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
052E   0808           01999         movf ADC_DATAPORT, W                            ;Sample X
052F   1409           02000         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0530   1009           02001         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0531   1089           02002         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0532   0080           02003         movwf INDF                                                      ;Save to QUEUE
0533   0384           02004         decf FSR, f                                                     ;Increment QUEUE pointer
                      02005         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0534   301F               M     movlw BUFFERSIZE/2-1
0535   00F6               M     movwf gbl_cntrc
0536   1C70           02006         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0537   2503           02007                 call DelayFive                                  ;192k
0538   2505           02008         call DelayTwo
0539                  02009 SampleXY250kLB
0539   0808           02010         movf ADC_DATAPORT, W                            ;Sample Y
053A   1409           02011         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
053B   1009           02012         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
053C   1489           02013         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
053D   0080           02014         movwf INDF                                                      ;Save to QUEUE
053E   0384           02015         decf FSR, F                                                     ;Increment QUEUE pointer
053F   0808           02016         movf ADC_DATAPORT, W                            ;Sample X
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0540   1409           02017         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0541   1009           02018         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0542   1089           02019         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0543   0080           02020         movwf INDF                                                      ;Save to QUEUE
0544   0384           02021         decf FSR, F                                                     ;Increment QUEUE pointer
0545   1C70           02022         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0546   2503           02023                 call DelayFive                                  ;192k
0547   2D48           02024         goto $ + 1
0548   0000           02025         nop
0549   0BF6           02026         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
054A   2D39           02027                 goto SampleXY250kLB
054B   0000           02028         nop
054C   0808           02029         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
054D   1409           02030         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
054E   1009           02031         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
054F   1489           02032         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0550   0080           02033         movwf INDF                                                      ;Save to QUEUE
0551   1783           02034         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0552   0808           02035         movf ADC_DATAPORT, W                            ;Sample X
0553   1409           02036         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0554   1009           02037         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0555   1089           02038         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0556   0080           02039         movwf INDF                                                      ;Save to QUEUE
0557   0A84           02040         incf FSR, f                                                     ;Increment QUEUE pointer
                      02041         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0558   301F               M     movlw BUFFERSIZE/2-1
0559   00F6               M     movwf gbl_cntrc
055A   1C70           02042         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
055B   2503           02043                 call DelayFive                                  ;192k
055C   2505           02044         call DelayTwo
055D                  02045 SampleXY250kLC
055D   0808           02046         movf ADC_DATAPORT, W                            ;Sample Y
055E   1409           02047         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
055F   1009           02048         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0560   1489           02049         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0561   0080           02050         movwf INDF                                                      ;Save to QUEUE
0562   0A84           02051         incf FSR, F                                                     ;Increment QUEUE pointer
0563   0808           02052         movf ADC_DATAPORT, W                            ;Sample X
0564   1409           02053         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0565   1009           02054         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0566   1089           02055         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0567   0080           02056         movwf INDF                                                      ;Save to QUEUE
0568   0A84           02057         incf FSR, F                                                     ;Increment QUEUE pointer
0569   1C70           02058         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
056A   2503           02059                 call DelayFive                                  ;192k
056B   2D6C           02060         goto $ + 1
056C   0000           02061         nop
056D   0BF6           02062         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
056E   2D5D           02063                 goto SampleXY250kLC
056F   0000           02064         nop
0570   0808           02065         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0571   1409           02066         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0572   1009           02067         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0573   1489           02068         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0574   0080           02069         movwf INDF                                                      ;Save to QUEUE
0575   1384           02070         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0576   0808           02071         movf ADC_DATAPORT, W                            ;Sample X
0577   1409           02072         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0578   1009           02073         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0579   1089           02074         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
057A   0080           02075         movwf INDF                                                      ;Save to QUEUE
057B   0384           02076         decf FSR, f                                                     ;Increment QUEUE pointer
                      02077         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
057C   301F               M     movlw BUFFERSIZE/2-1
057D   00F6               M     movwf gbl_cntrc
057E   1C70           02078         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
057F   2503           02079                 call DelayFive                                  ;192k
0580   2505           02080         call DelayTwo
0581                  02081 SampleXY250kLD
0581   0808           02082         movf ADC_DATAPORT, W                            ;Sample Y
0582   1409           02083         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0583   1009           02084         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0584   1489           02085         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0585   0080           02086         movwf INDF                                                      ;Save to QUEUE
0586   0384           02087         decf FSR, F                                                     ;Increment QUEUE pointer
0587   0808           02088         movf ADC_DATAPORT, W                            ;Sample X
0588   1409           02089         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0589   1009           02090         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
058A   1089           02091         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
058B   0080           02092         movwf INDF                                                      ;Save to QUEUE
058C   0384           02093         decf FSR, F                                                     ;Increment QUEUE pointer
058D   1C70           02094         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
058E   2503           02095                 call DelayFive                                  ;192k
058F   2D90           02096         goto $ + 1
0590   0000           02097         nop
0591   0BF6           02098         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0592   2D81           02099                 goto SampleXY250kLD
0593   0000           02100         nop
0594   0808           02101         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0595   1409           02102         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0596   118A           02103         bcf PCLATH, 3                                           ;insure correct program memory page
0597   120A           02104         bcf PCLATH, 4
0598   293A           02105         goto ADCShutdown
                      02106 
                      02107 ;Fastest sample
                      02108 ;Sampling rate = 1 MHz with 20 MHz clock
                      02109 ;Sampling rate = 200 kHz with 4 MHz clock
                      02110 ;-----------------------------------------------------------------------------
0599                  02111 Sample1M
0599   1009           02112         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02113         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
059A   3020               M     movlw BUFFERMIN
059B   0084               M     movwf FSR
059C   0000           02114         nop
  0000                02115         local count
  00000001            02116         count = 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02117         while count < BUFFERSIZE
059D   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
059E   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059F   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05A0   0080           02121                 movwf INDF                                              ;Save to QUEUE
05A1   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02123                 count = count + 1
05A2   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A3   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A4   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05A5   0080           02121                 movwf INDF                                              ;Save to QUEUE
05A6   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02123                 count = count + 1
05A7   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A8   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A9   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05AA   0080           02121                 movwf INDF                                              ;Save to QUEUE
05AB   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02123                 count = count + 1
05AC   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AD   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AE   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05AF   0080           02121                 movwf INDF                                              ;Save to QUEUE
05B0   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02123                 count = count + 1
05B1   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B2   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B3   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05B4   0080           02121                 movwf INDF                                              ;Save to QUEUE
05B5   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02123                 count = count + 1
05B6   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B7   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B8   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05B9   0080           02121                 movwf INDF                                              ;Save to QUEUE
05BA   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02123                 count = count + 1
05BB   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BC   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BD   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05BE   0080           02121                 movwf INDF                                              ;Save to QUEUE
05BF   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02123                 count = count + 1
05C0   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C1   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C2   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05C3   0080           02121                 movwf INDF                                              ;Save to QUEUE
05C4   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02123                 count = count + 1
05C5   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C6   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C7   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05C8   0080           02121                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C9   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02123                 count = count + 1
05CA   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CB   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CC   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05CD   0080           02121                 movwf INDF                                              ;Save to QUEUE
05CE   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02123                 count = count + 1
05CF   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D0   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D1   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05D2   0080           02121                 movwf INDF                                              ;Save to QUEUE
05D3   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02123                 count = count + 1
05D4   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D5   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D6   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05D7   0080           02121                 movwf INDF                                              ;Save to QUEUE
05D8   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02123                 count = count + 1
05D9   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DA   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DB   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05DC   0080           02121                 movwf INDF                                              ;Save to QUEUE
05DD   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02123                 count = count + 1
05DE   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DF   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E0   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05E1   0080           02121                 movwf INDF                                              ;Save to QUEUE
05E2   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02123                 count = count + 1
05E3   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E4   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E5   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05E6   0080           02121                 movwf INDF                                              ;Save to QUEUE
05E7   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02123                 count = count + 1
05E8   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E9   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EA   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05EB   0080           02121                 movwf INDF                                              ;Save to QUEUE
05EC   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02123                 count = count + 1
05ED   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EE   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EF   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05F0   0080           02121                 movwf INDF                                              ;Save to QUEUE
05F1   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02123                 count = count + 1
05F2   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F3   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F4   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05F5   0080           02121                 movwf INDF                                              ;Save to QUEUE
05F6   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02123                 count = count + 1
05F7   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F8   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F9   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05FA   0080           02121                 movwf INDF                                              ;Save to QUEUE
05FB   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02123                 count = count + 1
05FC   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05FD   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05FE   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
05FF   0080           02121                 movwf INDF                                              ;Save to QUEUE
0600   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02123                 count = count + 1
0601   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0602   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0603   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0604   0080           02121                 movwf INDF                                              ;Save to QUEUE
0605   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02123                 count = count + 1
0606   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0607   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0608   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0609   0080           02121                 movwf INDF                                              ;Save to QUEUE
060A   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02123                 count = count + 1
060B   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
060C   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
060D   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
060E   0080           02121                 movwf INDF                                              ;Save to QUEUE
060F   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02123                 count = count + 1
0610   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0611   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0612   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0613   0080           02121                 movwf INDF                                              ;Save to QUEUE
0614   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02123                 count = count + 1
0615   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0616   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0617   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0618   0080           02121                 movwf INDF                                              ;Save to QUEUE
0619   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02123                 count = count + 1
061A   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
061B   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
061C   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
061D   0080           02121                 movwf INDF                                              ;Save to QUEUE
061E   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02123                 count = count + 1
061F   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0620   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0621   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0622   0080           02121                 movwf INDF                                              ;Save to QUEUE
0623   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02123                 count = count + 1
0624   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0625   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0626   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0627   0080           02121                 movwf INDF                                              ;Save to QUEUE
0628   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02123                 count = count + 1
0629   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
062A   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
062B   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
062C   0080           02121                 movwf INDF                                              ;Save to QUEUE
062D   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02123                 count = count + 1
062E   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
062F   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0630   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0631   0080           02121                 movwf INDF                                              ;Save to QUEUE
0632   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02123                 count = count + 1
0633   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0634   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0635   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0636   0080           02121                 movwf INDF                                              ;Save to QUEUE
0637   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02123                 count = count + 1
0638   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0639   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
063A   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
063B   0080           02121                 movwf INDF                                              ;Save to QUEUE
063C   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02123                 count = count + 1
063D   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
063E   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
063F   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0640   0080           02121                 movwf INDF                                              ;Save to QUEUE
0641   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02123                 count = count + 1
0642   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0643   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0644   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0645   0080           02121                 movwf INDF                                              ;Save to QUEUE
0646   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02123                 count = count + 1
0647   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0648   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0649   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
064A   0080           02121                 movwf INDF                                              ;Save to QUEUE
064B   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02123                 count = count + 1
064C   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064D   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
064E   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
064F   0080           02121                 movwf INDF                                              ;Save to QUEUE
0650   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02123                 count = count + 1
0651   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0652   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0653   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0654   0080           02121                 movwf INDF                                              ;Save to QUEUE
0655   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02123                 count = count + 1
0656   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0657   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0658   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0659   0080           02121                 movwf INDF                                              ;Save to QUEUE
065A   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02123                 count = count + 1
065B   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
065C   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
065D   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
065E   0080           02121                 movwf INDF                                              ;Save to QUEUE
065F   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02123                 count = count + 1
0660   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0661   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0662   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0663   0080           02121                 movwf INDF                                              ;Save to QUEUE
0664   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02123                 count = count + 1
0665   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0666   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0667   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0668   0080           02121                 movwf INDF                                              ;Save to QUEUE
0669   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02123                 count = count + 1
066A   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
066B   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
066C   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
066D   0080           02121                 movwf INDF                                              ;Save to QUEUE
066E   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02123                 count = count + 1
066F   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0670   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0671   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0672   0080           02121                 movwf INDF                                              ;Save to QUEUE
0673   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02123                 count = count + 1
0674   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0675   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0676   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0677   0080           02121                 movwf INDF                                              ;Save to QUEUE
0678   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02123                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0679   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
067A   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
067B   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
067C   0080           02121                 movwf INDF                                              ;Save to QUEUE
067D   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02123                 count = count + 1
067E   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
067F   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0680   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0681   0080           02121                 movwf INDF                                              ;Save to QUEUE
0682   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02123                 count = count + 1
0683   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0684   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0685   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0686   0080           02121                 movwf INDF                                              ;Save to QUEUE
0687   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02123                 count = count + 1
0688   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0689   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
068A   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
068B   0080           02121                 movwf INDF                                              ;Save to QUEUE
068C   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02123                 count = count + 1
068D   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
068E   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
068F   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0690   0080           02121                 movwf INDF                                              ;Save to QUEUE
0691   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02123                 count = count + 1
0692   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0693   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0694   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
0695   0080           02121                 movwf INDF                                              ;Save to QUEUE
0696   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02123                 count = count + 1
0697   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0698   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0699   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
069A   0080           02121                 movwf INDF                                              ;Save to QUEUE
069B   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02123                 count = count + 1
069C   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
069D   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
069E   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
069F   0080           02121                 movwf INDF                                              ;Save to QUEUE
06A0   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            02123                 count = count + 1
06A1   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06A2   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06A3   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06A4   0080           02121                 movwf INDF                                              ;Save to QUEUE
06A5   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000036            02123                 count = count + 1
06A6   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06A7   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06A8   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06A9   0080           02121                 movwf INDF                                              ;Save to QUEUE
06AA   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            02123                 count = count + 1
06AB   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06AC   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06AD   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06AE   0080           02121                 movwf INDF                                              ;Save to QUEUE
06AF   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            02123                 count = count + 1
06B0   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06B1   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06B2   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06B3   0080           02121                 movwf INDF                                              ;Save to QUEUE
06B4   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            02123                 count = count + 1
06B5   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06B6   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06B7   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06B8   0080           02121                 movwf INDF                                              ;Save to QUEUE
06B9   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02123                 count = count + 1
06BA   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06BB   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06BC   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06BD   0080           02121                 movwf INDF                                              ;Save to QUEUE
06BE   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02123                 count = count + 1
06BF   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06C0   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06C1   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06C2   0080           02121                 movwf INDF                                              ;Save to QUEUE
06C3   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02123                 count = count + 1
06C4   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06C5   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06C6   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06C7   0080           02121                 movwf INDF                                              ;Save to QUEUE
06C8   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02123                 count = count + 1
06C9   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06CA   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06CB   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06CC   0080           02121                 movwf INDF                                              ;Save to QUEUE
06CD   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02123                 count = count + 1
06CE   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06CF   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06D0   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06D1   0080           02121                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06D2   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02123                 count = count + 1
06D3   1409           02118                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06D4   1009           02119                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06D5   0808           02120                 movf ADC_DATAPORT, W                    ;Save Sample
06D6   0080           02121                 movwf INDF                                              ;Save to QUEUE
06D7   0A84           02122                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            02123                 count = count + 1
                      02124         endw
06D8   1409           02125         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
06D9   1009           02126         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
06DA   0808           02127         movf ADC_DATAPORT, W
06DB   0080           02128         movwf INDF
06DC   1784           02129         bsf FSR, 7                                                      ;goto bank 2
  00000001            02130         count = 1
                      02131         while count < BUFFERSIZE
06DD   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DE   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DF   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06E0   0080           02135                 movwf INDF                                              ;Save to QUEUE
06E1   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02137                 count = count + 1
06E2   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E3   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E4   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06E5   0080           02135                 movwf INDF                                              ;Save to QUEUE
06E6   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02137                 count = count + 1
06E7   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E8   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E9   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06EA   0080           02135                 movwf INDF                                              ;Save to QUEUE
06EB   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02137                 count = count + 1
06EC   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06ED   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EE   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06EF   0080           02135                 movwf INDF                                              ;Save to QUEUE
06F0   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02137                 count = count + 1
06F1   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F2   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F3   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06F4   0080           02135                 movwf INDF                                              ;Save to QUEUE
06F5   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02137                 count = count + 1
06F6   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F7   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F8   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06F9   0080           02135                 movwf INDF                                              ;Save to QUEUE
06FA   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02137                 count = count + 1
06FB   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06FC   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FD   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
06FE   0080           02135                 movwf INDF                                              ;Save to QUEUE
06FF   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02137                 count = count + 1
0700   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0701   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0702   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0703   0080           02135                 movwf INDF                                              ;Save to QUEUE
0704   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02137                 count = count + 1
0705   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0706   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0707   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0708   0080           02135                 movwf INDF                                              ;Save to QUEUE
0709   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02137                 count = count + 1
070A   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070B   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070C   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
070D   0080           02135                 movwf INDF                                              ;Save to QUEUE
070E   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02137                 count = count + 1
070F   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0710   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0711   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0712   0080           02135                 movwf INDF                                              ;Save to QUEUE
0713   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02137                 count = count + 1
0714   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0715   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0716   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0717   0080           02135                 movwf INDF                                              ;Save to QUEUE
0718   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02137                 count = count + 1
0719   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071A   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071B   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
071C   0080           02135                 movwf INDF                                              ;Save to QUEUE
071D   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02137                 count = count + 1
071E   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071F   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0720   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0721   0080           02135                 movwf INDF                                              ;Save to QUEUE
0722   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02137                 count = count + 1
0723   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0724   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0725   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0726   0080           02135                 movwf INDF                                              ;Save to QUEUE
0727   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02137                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0728   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0729   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072A   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
072B   0080           02135                 movwf INDF                                              ;Save to QUEUE
072C   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02137                 count = count + 1
072D   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072E   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072F   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0730   0080           02135                 movwf INDF                                              ;Save to QUEUE
0731   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02137                 count = count + 1
0732   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0733   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0734   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0735   0080           02135                 movwf INDF                                              ;Save to QUEUE
0736   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02137                 count = count + 1
0737   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0738   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0739   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
073A   0080           02135                 movwf INDF                                              ;Save to QUEUE
073B   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02137                 count = count + 1
073C   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073D   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073E   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
073F   0080           02135                 movwf INDF                                              ;Save to QUEUE
0740   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02137                 count = count + 1
0741   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0742   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0743   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0744   0080           02135                 movwf INDF                                              ;Save to QUEUE
0745   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02137                 count = count + 1
0746   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0747   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0748   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0749   0080           02135                 movwf INDF                                              ;Save to QUEUE
074A   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02137                 count = count + 1
074B   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074C   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074D   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
074E   0080           02135                 movwf INDF                                              ;Save to QUEUE
074F   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02137                 count = count + 1
0750   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0751   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0752   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0753   0080           02135                 movwf INDF                                              ;Save to QUEUE
0754   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            02137                 count = count + 1
0755   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0756   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0757   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0758   0080           02135                 movwf INDF                                              ;Save to QUEUE
0759   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02137                 count = count + 1
075A   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075B   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075C   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
075D   0080           02135                 movwf INDF                                              ;Save to QUEUE
075E   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02137                 count = count + 1
075F   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0760   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0761   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0762   0080           02135                 movwf INDF                                              ;Save to QUEUE
0763   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02137                 count = count + 1
0764   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0765   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0766   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0767   0080           02135                 movwf INDF                                              ;Save to QUEUE
0768   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02137                 count = count + 1
0769   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076A   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076B   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
076C   0080           02135                 movwf INDF                                              ;Save to QUEUE
076D   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02137                 count = count + 1
076E   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076F   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0770   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0771   0080           02135                 movwf INDF                                              ;Save to QUEUE
0772   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02137                 count = count + 1
0773   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0774   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0775   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0776   0080           02135                 movwf INDF                                              ;Save to QUEUE
0777   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02137                 count = count + 1
0778   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0779   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077A   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
077B   0080           02135                 movwf INDF                                              ;Save to QUEUE
077C   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02137                 count = count + 1
077D   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077E   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077F   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0780   0080           02135                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0781   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02137                 count = count + 1
0782   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0783   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0784   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0785   0080           02135                 movwf INDF                                              ;Save to QUEUE
0786   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02137                 count = count + 1
0787   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0788   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0789   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
078A   0080           02135                 movwf INDF                                              ;Save to QUEUE
078B   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02137                 count = count + 1
078C   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078D   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078E   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
078F   0080           02135                 movwf INDF                                              ;Save to QUEUE
0790   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02137                 count = count + 1
0791   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0792   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0793   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0794   0080           02135                 movwf INDF                                              ;Save to QUEUE
0795   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02137                 count = count + 1
0796   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0797   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0798   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0799   0080           02135                 movwf INDF                                              ;Save to QUEUE
079A   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02137                 count = count + 1
079B   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079C   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079D   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
079E   0080           02135                 movwf INDF                                              ;Save to QUEUE
079F   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            02137                 count = count + 1
07A0   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A1   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A2   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07A3   0080           02135                 movwf INDF                                              ;Save to QUEUE
07A4   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            02137                 count = count + 1
07A5   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A6   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A7   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07A8   0080           02135                 movwf INDF                                              ;Save to QUEUE
07A9   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02137                 count = count + 1
07AA   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AB   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AC   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07AD   0080           02135                 movwf INDF                                              ;Save to QUEUE
07AE   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02137                 count = count + 1
07AF   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B0   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B1   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07B2   0080           02135                 movwf INDF                                              ;Save to QUEUE
07B3   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02137                 count = count + 1
07B4   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B5   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B6   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07B7   0080           02135                 movwf INDF                                              ;Save to QUEUE
07B8   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02137                 count = count + 1
07B9   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BA   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BB   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07BC   0080           02135                 movwf INDF                                              ;Save to QUEUE
07BD   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02137                 count = count + 1
07BE   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BF   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C0   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07C1   0080           02135                 movwf INDF                                              ;Save to QUEUE
07C2   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02137                 count = count + 1
07C3   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C4   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C5   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07C6   0080           02135                 movwf INDF                                              ;Save to QUEUE
07C7   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            02137                 count = count + 1
07C8   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C9   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CA   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07CB   0080           02135                 movwf INDF                                              ;Save to QUEUE
07CC   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            02137                 count = count + 1
07CD   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CE   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CF   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07D0   0080           02135                 movwf INDF                                              ;Save to QUEUE
07D1   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            02137                 count = count + 1
07D2   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D3   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D4   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07D5   0080           02135                 movwf INDF                                              ;Save to QUEUE
07D6   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            02137                 count = count + 1
07D7   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D8   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07D9   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07DA   0080           02135                 movwf INDF                                              ;Save to QUEUE
07DB   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            02137                 count = count + 1
07DC   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DD   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DE   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07DF   0080           02135                 movwf INDF                                              ;Save to QUEUE
07E0   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            02137                 count = count + 1
07E1   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E2   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E3   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07E4   0080           02135                 movwf INDF                                              ;Save to QUEUE
07E5   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            02137                 count = count + 1
07E6   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E7   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E8   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07E9   0080           02135                 movwf INDF                                              ;Save to QUEUE
07EA   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            02137                 count = count + 1
07EB   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EC   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07ED   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07EE   0080           02135                 movwf INDF                                              ;Save to QUEUE
07EF   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            02137                 count = count + 1
07F0   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F1   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F2   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07F3   0080           02135                 movwf INDF                                              ;Save to QUEUE
07F4   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            02137                 count = count + 1
07F5   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F6   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F7   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07F8   0080           02135                 movwf INDF                                              ;Save to QUEUE
07F9   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02137                 count = count + 1
07FA   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FB   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FC   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
07FD   0080           02135                 movwf INDF                                              ;Save to QUEUE
07FE   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02137                 count = count + 1
07FF   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0800   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0801   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0802   0080           02135                 movwf INDF                                              ;Save to QUEUE
0803   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02137                 count = count + 1
0804   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0805   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0806   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0807   0080           02135                 movwf INDF                                              ;Save to QUEUE
0808   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02137                 count = count + 1
0809   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080A   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080B   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
080C   0080           02135                 movwf INDF                                              ;Save to QUEUE
080D   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02137                 count = count + 1
080E   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080F   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0810   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0811   0080           02135                 movwf INDF                                              ;Save to QUEUE
0812   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02137                 count = count + 1
0813   1409           02132                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0814   1009           02133                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0815   0808           02134                 movf ADC_DATAPORT, W                    ;Sample
0816   0080           02135                 movwf INDF                                              ;Save to QUEUE
0817   0384           02136                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            02137                 count = count + 1
                      02138         endw
0818   1409           02139         bsf ADC_CONTROLPORT, RDD
0819   1009           02140         bcf ADC_CONTROLPORT, RDD
081A   0808           02141         movf ADC_DATAPORT, W
081B   0080           02142         movwf INDF
081C   1783           02143         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02144         count = 1
                      02145         while count < BUFFERSIZE
081D   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081E   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081F   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0820   0080           02149                 movwf INDF                                              ;Save to QUEUE
0821   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02151                 count = count + 1
0822   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0823   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0824   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0825   0080           02149                 movwf INDF                                              ;Save to QUEUE
0826   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02151                 count = count + 1
0827   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0828   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0829   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
082A   0080           02149                 movwf INDF                                              ;Save to QUEUE
082B   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02151                 count = count + 1
082C   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082D   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082E   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
082F   0080           02149                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0830   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02151                 count = count + 1
0831   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0832   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0833   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0834   0080           02149                 movwf INDF                                              ;Save to QUEUE
0835   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02151                 count = count + 1
0836   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0837   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0838   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0839   0080           02149                 movwf INDF                                              ;Save to QUEUE
083A   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02151                 count = count + 1
083B   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083C   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083D   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
083E   0080           02149                 movwf INDF                                              ;Save to QUEUE
083F   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02151                 count = count + 1
0840   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0841   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0842   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0843   0080           02149                 movwf INDF                                              ;Save to QUEUE
0844   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02151                 count = count + 1
0845   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0846   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0847   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0848   0080           02149                 movwf INDF                                              ;Save to QUEUE
0849   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02151                 count = count + 1
084A   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084B   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084C   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
084D   0080           02149                 movwf INDF                                              ;Save to QUEUE
084E   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02151                 count = count + 1
084F   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0850   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0851   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0852   0080           02149                 movwf INDF                                              ;Save to QUEUE
0853   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02151                 count = count + 1
0854   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0855   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0856   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0857   0080           02149                 movwf INDF                                              ;Save to QUEUE
0858   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02151                 count = count + 1
0859   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085A   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085B   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

085C   0080           02149                 movwf INDF                                              ;Save to QUEUE
085D   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02151                 count = count + 1
085E   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085F   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0860   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0861   0080           02149                 movwf INDF                                              ;Save to QUEUE
0862   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02151                 count = count + 1
0863   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0864   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0865   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0866   0080           02149                 movwf INDF                                              ;Save to QUEUE
0867   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02151                 count = count + 1
0868   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0869   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086A   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
086B   0080           02149                 movwf INDF                                              ;Save to QUEUE
086C   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02151                 count = count + 1
086D   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086E   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086F   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0870   0080           02149                 movwf INDF                                              ;Save to QUEUE
0871   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02151                 count = count + 1
0872   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0873   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0874   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0875   0080           02149                 movwf INDF                                              ;Save to QUEUE
0876   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02151                 count = count + 1
0877   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0878   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0879   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
087A   0080           02149                 movwf INDF                                              ;Save to QUEUE
087B   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02151                 count = count + 1
087C   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087D   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087E   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
087F   0080           02149                 movwf INDF                                              ;Save to QUEUE
0880   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02151                 count = count + 1
0881   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0882   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0883   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0884   0080           02149                 movwf INDF                                              ;Save to QUEUE
0885   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02151                 count = count + 1
0886   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0887   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0888   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0889   0080           02149                 movwf INDF                                              ;Save to QUEUE
088A   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02151                 count = count + 1
088B   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088C   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088D   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
088E   0080           02149                 movwf INDF                                              ;Save to QUEUE
088F   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02151                 count = count + 1
0890   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0891   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0892   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0893   0080           02149                 movwf INDF                                              ;Save to QUEUE
0894   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02151                 count = count + 1
0895   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0896   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0897   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0898   0080           02149                 movwf INDF                                              ;Save to QUEUE
0899   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02151                 count = count + 1
089A   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089B   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089C   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
089D   0080           02149                 movwf INDF                                              ;Save to QUEUE
089E   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02151                 count = count + 1
089F   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A0   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A1   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08A2   0080           02149                 movwf INDF                                              ;Save to QUEUE
08A3   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02151                 count = count + 1
08A4   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A5   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A6   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08A7   0080           02149                 movwf INDF                                              ;Save to QUEUE
08A8   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02151                 count = count + 1
08A9   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AA   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AB   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08AC   0080           02149                 movwf INDF                                              ;Save to QUEUE
08AD   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02151                 count = count + 1
08AE   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AF   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B0   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08B1   0080           02149                 movwf INDF                                              ;Save to QUEUE
08B2   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02151                 count = count + 1
08B3   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08B4   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B5   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08B6   0080           02149                 movwf INDF                                              ;Save to QUEUE
08B7   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02151                 count = count + 1
08B8   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B9   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BA   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08BB   0080           02149                 movwf INDF                                              ;Save to QUEUE
08BC   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02151                 count = count + 1
08BD   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BE   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BF   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08C0   0080           02149                 movwf INDF                                              ;Save to QUEUE
08C1   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02151                 count = count + 1
08C2   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C3   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C4   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08C5   0080           02149                 movwf INDF                                              ;Save to QUEUE
08C6   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02151                 count = count + 1
08C7   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C8   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C9   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08CA   0080           02149                 movwf INDF                                              ;Save to QUEUE
08CB   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02151                 count = count + 1
08CC   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CD   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CE   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08CF   0080           02149                 movwf INDF                                              ;Save to QUEUE
08D0   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02151                 count = count + 1
08D1   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D2   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D3   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08D4   0080           02149                 movwf INDF                                              ;Save to QUEUE
08D5   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02151                 count = count + 1
08D6   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D7   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D8   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08D9   0080           02149                 movwf INDF                                              ;Save to QUEUE
08DA   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02151                 count = count + 1
08DB   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DC   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DD   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08DE   0080           02149                 movwf INDF                                              ;Save to QUEUE
08DF   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02151                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08E0   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E1   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E2   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08E3   0080           02149                 movwf INDF                                              ;Save to QUEUE
08E4   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02151                 count = count + 1
08E5   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E6   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E7   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08E8   0080           02149                 movwf INDF                                              ;Save to QUEUE
08E9   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02151                 count = count + 1
08EA   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EB   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EC   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08ED   0080           02149                 movwf INDF                                              ;Save to QUEUE
08EE   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02151                 count = count + 1
08EF   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F0   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F1   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08F2   0080           02149                 movwf INDF                                              ;Save to QUEUE
08F3   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02151                 count = count + 1
08F4   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F5   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F6   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08F7   0080           02149                 movwf INDF                                              ;Save to QUEUE
08F8   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02151                 count = count + 1
08F9   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FA   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FB   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
08FC   0080           02149                 movwf INDF                                              ;Save to QUEUE
08FD   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02151                 count = count + 1
08FE   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FF   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0900   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0901   0080           02149                 movwf INDF                                              ;Save to QUEUE
0902   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02151                 count = count + 1
0903   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0904   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0905   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0906   0080           02149                 movwf INDF                                              ;Save to QUEUE
0907   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02151                 count = count + 1
0908   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0909   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090A   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
090B   0080           02149                 movwf INDF                                              ;Save to QUEUE
090C   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000031            02151                 count = count + 1
090D   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090E   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090F   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0910   0080           02149                 movwf INDF                                              ;Save to QUEUE
0911   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02151                 count = count + 1
0912   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0913   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0914   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0915   0080           02149                 movwf INDF                                              ;Save to QUEUE
0916   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02151                 count = count + 1
0917   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0918   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0919   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
091A   0080           02149                 movwf INDF                                              ;Save to QUEUE
091B   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02151                 count = count + 1
091C   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091D   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091E   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
091F   0080           02149                 movwf INDF                                              ;Save to QUEUE
0920   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            02151                 count = count + 1
0921   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0922   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0923   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0924   0080           02149                 movwf INDF                                              ;Save to QUEUE
0925   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            02151                 count = count + 1
0926   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0927   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0928   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0929   0080           02149                 movwf INDF                                              ;Save to QUEUE
092A   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            02151                 count = count + 1
092B   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092C   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092D   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
092E   0080           02149                 movwf INDF                                              ;Save to QUEUE
092F   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            02151                 count = count + 1
0930   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0931   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0932   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0933   0080           02149                 movwf INDF                                              ;Save to QUEUE
0934   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            02151                 count = count + 1
0935   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0936   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0937   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0938   0080           02149                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0939   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02151                 count = count + 1
093A   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093B   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093C   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
093D   0080           02149                 movwf INDF                                              ;Save to QUEUE
093E   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02151                 count = count + 1
093F   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0940   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0941   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0942   0080           02149                 movwf INDF                                              ;Save to QUEUE
0943   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02151                 count = count + 1
0944   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0945   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0946   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0947   0080           02149                 movwf INDF                                              ;Save to QUEUE
0948   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02151                 count = count + 1
0949   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094A   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094B   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
094C   0080           02149                 movwf INDF                                              ;Save to QUEUE
094D   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02151                 count = count + 1
094E   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094F   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0950   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0951   0080           02149                 movwf INDF                                              ;Save to QUEUE
0952   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02151                 count = count + 1
0953   1409           02146                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0954   1009           02147                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0955   0808           02148                 movf ADC_DATAPORT, W                    ;Sample
0956   0080           02149                 movwf INDF                                              ;Save to QUEUE
0957   0A84           02150                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            02151                 count = count + 1
                      02152         endw
0958   1409           02153         bsf ADC_CONTROLPORT, RDD
0959   1009           02154         bcf ADC_CONTROLPORT, RDD
095A   0808           02155         movf ADC_DATAPORT, W                            ;Sample
095B   0080           02156         movwf INDF
095C   1384           02157         bcf FSR, 7                                                      ;goto bank 3
  00000001            02158         count = 1
                      02159         while count < D'14'
095D   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095E   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095F   0808           02162                 movf ADC_DATAPORT, W
0960   0080           02163                 movwf INDF                                              ;Save to QUEUE
0961   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02165                 count = count + 1
0962   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0963   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0964   0808           02162                 movf ADC_DATAPORT, W
0965   0080           02163                 movwf INDF                                              ;Save to QUEUE
0966   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02165                 count = count + 1
0967   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0968   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0969   0808           02162                 movf ADC_DATAPORT, W
096A   0080           02163                 movwf INDF                                              ;Save to QUEUE
096B   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02165                 count = count + 1
096C   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096D   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096E   0808           02162                 movf ADC_DATAPORT, W
096F   0080           02163                 movwf INDF                                              ;Save to QUEUE
0970   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02165                 count = count + 1
0971   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0972   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0973   0808           02162                 movf ADC_DATAPORT, W
0974   0080           02163                 movwf INDF                                              ;Save to QUEUE
0975   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02165                 count = count + 1
0976   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0977   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0978   0808           02162                 movf ADC_DATAPORT, W
0979   0080           02163                 movwf INDF                                              ;Save to QUEUE
097A   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02165                 count = count + 1
097B   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097C   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097D   0808           02162                 movf ADC_DATAPORT, W
097E   0080           02163                 movwf INDF                                              ;Save to QUEUE
097F   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02165                 count = count + 1
0980   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0981   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0982   0808           02162                 movf ADC_DATAPORT, W
0983   0080           02163                 movwf INDF                                              ;Save to QUEUE
0984   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02165                 count = count + 1
0985   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0986   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0987   0808           02162                 movf ADC_DATAPORT, W
0988   0080           02163                 movwf INDF                                              ;Save to QUEUE
0989   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02165                 count = count + 1
098A   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098B   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098C   0808           02162                 movf ADC_DATAPORT, W
098D   0080           02163                 movwf INDF                                              ;Save to QUEUE
098E   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02165                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

098F   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0990   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0991   0808           02162                 movf ADC_DATAPORT, W
0992   0080           02163                 movwf INDF                                              ;Save to QUEUE
0993   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02165                 count = count + 1
0994   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0995   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0996   0808           02162                 movf ADC_DATAPORT, W
0997   0080           02163                 movwf INDF                                              ;Save to QUEUE
0998   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02165                 count = count + 1
0999   1409           02160                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099A   1009           02161                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099B   0808           02162                 movf ADC_DATAPORT, W
099C   0080           02163                 movwf INDF                                              ;Save to QUEUE
099D   0384           02164                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02165                 count = count + 1
                      02166         endw
099E                  02167 Sample1MhzEnd
                      02168         while count < BUFFERSIZE
099E   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099F   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A0   0808           02171                 movf ADC_DATAPORT, W
09A1   0080           02172                 movwf INDF                                              ;Save to QUEUE
09A2   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02174                 count = count + 1
09A3   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A4   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A5   0808           02171                 movf ADC_DATAPORT, W
09A6   0080           02172                 movwf INDF                                              ;Save to QUEUE
09A7   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02174                 count = count + 1
09A8   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A9   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AA   0808           02171                 movf ADC_DATAPORT, W
09AB   0080           02172                 movwf INDF                                              ;Save to QUEUE
09AC   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02174                 count = count + 1
09AD   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AE   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AF   0808           02171                 movf ADC_DATAPORT, W
09B0   0080           02172                 movwf INDF                                              ;Save to QUEUE
09B1   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02174                 count = count + 1
09B2   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B3   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B4   0808           02171                 movf ADC_DATAPORT, W
09B5   0080           02172                 movwf INDF                                              ;Save to QUEUE
09B6   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02174                 count = count + 1
09B7   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B8   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09B9   0808           02171                 movf ADC_DATAPORT, W
09BA   0080           02172                 movwf INDF                                              ;Save to QUEUE
09BB   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02174                 count = count + 1
09BC   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09BD   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09BE   0808           02171                 movf ADC_DATAPORT, W
09BF   0080           02172                 movwf INDF                                              ;Save to QUEUE
09C0   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02174                 count = count + 1
09C1   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C2   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C3   0808           02171                 movf ADC_DATAPORT, W
09C4   0080           02172                 movwf INDF                                              ;Save to QUEUE
09C5   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02174                 count = count + 1
09C6   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C7   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C8   0808           02171                 movf ADC_DATAPORT, W
09C9   0080           02172                 movwf INDF                                              ;Save to QUEUE
09CA   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02174                 count = count + 1
09CB   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CC   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CD   0808           02171                 movf ADC_DATAPORT, W
09CE   0080           02172                 movwf INDF                                              ;Save to QUEUE
09CF   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02174                 count = count + 1
09D0   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D1   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D2   0808           02171                 movf ADC_DATAPORT, W
09D3   0080           02172                 movwf INDF                                              ;Save to QUEUE
09D4   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02174                 count = count + 1
09D5   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D6   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D7   0808           02171                 movf ADC_DATAPORT, W
09D8   0080           02172                 movwf INDF                                              ;Save to QUEUE
09D9   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02174                 count = count + 1
09DA   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DB   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DC   0808           02171                 movf ADC_DATAPORT, W
09DD   0080           02172                 movwf INDF                                              ;Save to QUEUE
09DE   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02174                 count = count + 1
09DF   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E0   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E1   0808           02171                 movf ADC_DATAPORT, W
09E2   0080           02172                 movwf INDF                                              ;Save to QUEUE
09E3   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02174                 count = count + 1
09E4   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09E5   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E6   0808           02171                 movf ADC_DATAPORT, W
09E7   0080           02172                 movwf INDF                                              ;Save to QUEUE
09E8   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02174                 count = count + 1
09E9   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EA   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EB   0808           02171                 movf ADC_DATAPORT, W
09EC   0080           02172                 movwf INDF                                              ;Save to QUEUE
09ED   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02174                 count = count + 1
09EE   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EF   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F0   0808           02171                 movf ADC_DATAPORT, W
09F1   0080           02172                 movwf INDF                                              ;Save to QUEUE
09F2   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02174                 count = count + 1
09F3   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F4   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F5   0808           02171                 movf ADC_DATAPORT, W
09F6   0080           02172                 movwf INDF                                              ;Save to QUEUE
09F7   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02174                 count = count + 1
09F8   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F9   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FA   0808           02171                 movf ADC_DATAPORT, W
09FB   0080           02172                 movwf INDF                                              ;Save to QUEUE
09FC   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02174                 count = count + 1
09FD   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FE   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FF   0808           02171                 movf ADC_DATAPORT, W
0A00   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A01   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02174                 count = count + 1
0A02   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A03   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A04   0808           02171                 movf ADC_DATAPORT, W
0A05   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A06   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02174                 count = count + 1
0A07   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A08   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A09   0808           02171                 movf ADC_DATAPORT, W
0A0A   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A0B   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02174                 count = count + 1
0A0C   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0D   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0E   0808           02171                 movf ADC_DATAPORT, W
0A0F   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A10   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02174                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A11   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A12   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A13   0808           02171                 movf ADC_DATAPORT, W
0A14   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A15   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02174                 count = count + 1
0A16   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A17   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A18   0808           02171                 movf ADC_DATAPORT, W
0A19   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A1A   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02174                 count = count + 1
0A1B   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1C   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1D   0808           02171                 movf ADC_DATAPORT, W
0A1E   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A1F   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            02174                 count = count + 1
0A20   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A21   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A22   0808           02171                 movf ADC_DATAPORT, W
0A23   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A24   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            02174                 count = count + 1
0A25   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A26   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A27   0808           02171                 movf ADC_DATAPORT, W
0A28   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A29   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02174                 count = count + 1
0A2A   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2B   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2C   0808           02171                 movf ADC_DATAPORT, W
0A2D   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A2E   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02174                 count = count + 1
0A2F   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A30   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A31   0808           02171                 movf ADC_DATAPORT, W
0A32   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A33   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02174                 count = count + 1
0A34   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A35   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A36   0808           02171                 movf ADC_DATAPORT, W
0A37   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A38   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02174                 count = count + 1
0A39   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3A   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3B   0808           02171                 movf ADC_DATAPORT, W
0A3C   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A3D   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002E            02174                 count = count + 1
0A3E   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3F   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A40   0808           02171                 movf ADC_DATAPORT, W
0A41   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A42   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02174                 count = count + 1
0A43   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A44   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A45   0808           02171                 movf ADC_DATAPORT, W
0A46   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A47   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            02174                 count = count + 1
0A48   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A49   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4A   0808           02171                 movf ADC_DATAPORT, W
0A4B   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A4C   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            02174                 count = count + 1
0A4D   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4E   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4F   0808           02171                 movf ADC_DATAPORT, W
0A50   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A51   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            02174                 count = count + 1
0A52   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A53   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A54   0808           02171                 movf ADC_DATAPORT, W
0A55   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A56   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            02174                 count = count + 1
0A57   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A58   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A59   0808           02171                 movf ADC_DATAPORT, W
0A5A   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A5B   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            02174                 count = count + 1
0A5C   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5D   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5E   0808           02171                 movf ADC_DATAPORT, W
0A5F   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A60   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            02174                 count = count + 1
0A61   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A62   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A63   0808           02171                 movf ADC_DATAPORT, W
0A64   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A65   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            02174                 count = count + 1
0A66   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A67   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A68   0808           02171                 movf ADC_DATAPORT, W
0A69   0080           02172                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A6A   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            02174                 count = count + 1
0A6B   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6C   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6D   0808           02171                 movf ADC_DATAPORT, W
0A6E   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A6F   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            02174                 count = count + 1
0A70   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A71   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A72   0808           02171                 movf ADC_DATAPORT, W
0A73   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A74   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            02174                 count = count + 1
0A75   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A76   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A77   0808           02171                 movf ADC_DATAPORT, W
0A78   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A79   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02174                 count = count + 1
0A7A   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7B   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7C   0808           02171                 movf ADC_DATAPORT, W
0A7D   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A7E   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02174                 count = count + 1
0A7F   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A80   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A81   0808           02171                 movf ADC_DATAPORT, W
0A82   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A83   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02174                 count = count + 1
0A84   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A85   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A86   0808           02171                 movf ADC_DATAPORT, W
0A87   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A88   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02174                 count = count + 1
0A89   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8A   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8B   0808           02171                 movf ADC_DATAPORT, W
0A8C   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A8D   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02174                 count = count + 1
0A8E   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8F   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A90   0808           02171                 movf ADC_DATAPORT, W
0A91   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A92   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02174                 count = count + 1
0A93   1409           02169                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A94   1009           02170                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A95   0808           02171                 movf ADC_DATAPORT, W
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A96   0080           02172                 movwf INDF                                              ;Save to QUEUE
0A97   0384           02173                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            02174                 count = count + 1
                      02175         endw
0A98   1409           02176         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0A99   0808           02177         movf ADC_DATAPORT, W                            ;Sample
0A9A   118A           02178         bcf PCLATH, 3                                           ;insure correct program memory page
0A9B   120A           02179         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0A9C   293A           02180         goto ADCShutdown
                      02181 
                      02182 ;Fastest XY sample
                      02183 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      02184 ;Sampling rate =  83.333 kHz with 4 MHz clock
0A9D                  02185 SampleXY417k
0A9D   1009           02186         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0A9E   1489           02187         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      02188         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0A9F   3020               M     movlw BUFFERMIN
0AA0   0084               M     movwf FSR
0AA1   0808           02189         movf ADC_DATAPORT, W                            ;Sample X
0AA2   1409           02190         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0AA3   1009           02191         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0AA4   1089           02192         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0AA5   0080           02193         movwf INDF                                                      ;Save to QUEUE
0AA6   0A84           02194         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            02195         count = 1
                      02196         while count < BUFFERSIZE / 2
0AA7   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AA8   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA9   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAA   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AAB   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AAC   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AAD   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0AAE   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAF   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB0   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB1   0080           02207                 movwf INDF                                              ;Save to QUEUE
0AB2   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02209                 count = count + 1
0AB3   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AB4   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB5   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB6   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB7   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AB8   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AB9   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0ABA   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABB   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABC   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ABD   0080           02207                 movwf INDF                                              ;Save to QUEUE
0ABE   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            02209                 count = count + 1
0ABF   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AC0   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC1   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC2   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC3   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AC4   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AC5   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0AC6   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC7   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC8   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC9   0080           02207                 movwf INDF                                              ;Save to QUEUE
0ACA   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02209                 count = count + 1
0ACB   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0ACC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACE   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ACF   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AD0   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AD1   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0AD2   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD3   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD4   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD5   0080           02207                 movwf INDF                                              ;Save to QUEUE
0AD6   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02209                 count = count + 1
0AD7   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AD8   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD9   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADA   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ADB   0080           02201                 movwf INDF                                              ;Save to QUEUE
0ADC   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0ADD   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0ADE   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADF   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE0   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE1   0080           02207                 movwf INDF                                              ;Save to QUEUE
0AE2   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02209                 count = count + 1
0AE3   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AE4   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE5   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE6   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE7   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AE8   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AE9   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0AEA   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEB   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AEC   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AED   0080           02207                 movwf INDF                                              ;Save to QUEUE
0AEE   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02209                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AEF   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AF0   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF1   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF2   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF3   0080           02201                 movwf INDF                                              ;Save to QUEUE
0AF4   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0AF5   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0AF6   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF7   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF8   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF9   0080           02207                 movwf INDF                                              ;Save to QUEUE
0AFA   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02209                 count = count + 1
0AFB   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0AFC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFE   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AFF   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B00   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B01   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B02   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B03   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B04   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B05   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B06   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02209                 count = count + 1
0B07   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B08   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B09   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0A   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B0B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B0C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B0D   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B0E   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0F   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B10   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B11   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B12   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02209                 count = count + 1
0B13   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B14   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B15   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B16   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B17   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B18   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B19   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B1A   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1B   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1C   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B1D   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B1E   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02209                 count = count + 1
0B1F   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B20   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B21   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B22   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B23   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B24   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B25   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B26   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B27   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B28   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B29   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B2A   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02209                 count = count + 1
0B2B   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B2C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2E   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B2F   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B30   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B31   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B32   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B33   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B34   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B35   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B36   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02209                 count = count + 1
0B37   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B38   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B39   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B3A   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B3B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B3C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B3D   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B3E   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B3F   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B40   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B41   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B42   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02209                 count = count + 1
0B43   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B44   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B45   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B46   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B47   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B48   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B49   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B4A   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4B   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4C   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B4D   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B4E   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02209                 count = count + 1
0B4F   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B50   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B51   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B52   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B53   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B54   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B55   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B56   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B57   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B58   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B59   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B5A   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02209                 count = count + 1
0B5B   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B5C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5E   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B5F   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B60   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B61   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B62   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B63   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B64   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B65   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B66   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02209                 count = count + 1
0B67   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B68   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B69   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6A   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B6B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B6C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B6D   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B6E   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6F   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B70   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B71   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B72   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02209                 count = count + 1
0B73   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B74   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B75   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B76   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B77   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B78   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B79   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B7A   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7B   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7C   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B7D   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B7E   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02209                 count = count + 1
0B7F   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B80   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B81   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B82   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B83   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B84   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B85   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B86   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B87   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B88   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B89   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B8A   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02209                 count = count + 1
0B8B   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B8C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8E   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B8F   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B90   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B91   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B92   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B93   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B94   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B95   0080           02207                 movwf INDF                                              ;Save to QUEUE
0B96   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02209                 count = count + 1
0B97   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0B98   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B99   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9A   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B9B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0B9C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0B9D   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0B9E   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9F   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA0   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA1   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BA2   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02209                 count = count + 1
0BA3   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BA4   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA5   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA6   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA7   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BA8   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BA9   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BAA   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAB   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAC   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BAD   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BAE   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02209                 count = count + 1
0BAF   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BB0   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB1   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB2   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BB3   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BB4   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BB5   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BB6   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB7   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB8   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB9   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BBA   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02209                 count = count + 1
0BBB   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BBC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBE   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BBF   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BC0   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BC1   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BC2   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC3   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC4   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BC5   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BC6   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02209                 count = count + 1
0BC7   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BC8   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC9   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCA   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BCB   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BCC   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BCD   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BCE   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCF   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD0   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD1   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BD2   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02209                 count = count + 1
0BD3   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BD4   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD5   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD6   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD7   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BD8   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BD9   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BDA   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDB   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDC   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BDD   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BDE   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02209                 count = count + 1
0BDF   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BE0   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE1   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE2   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE3   0080           02201                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BE4   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BE5   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BE6   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE7   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE8   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE9   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BEA   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02209                 count = count + 1
0BEB   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BEC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BED   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEE   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BEF   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BF0   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BF1   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BF2   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF3   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF4   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BF5   0080           02207                 movwf INDF                                              ;Save to QUEUE
0BF6   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02209                 count = count + 1
0BF7   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0BF8   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF9   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFA   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BFB   0080           02201                 movwf INDF                                              ;Save to QUEUE
0BFC   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0BFD   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0BFE   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFF   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C00   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C01   0080           02207                 movwf INDF                                              ;Save to QUEUE
0C02   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02209                 count = count + 1
0C03   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0C04   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C05   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C06   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C07   0080           02201                 movwf INDF                                              ;Save to QUEUE
0C08   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
0C09   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0C0A   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0B   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0C   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C0D   0080           02207                 movwf INDF                                              ;Save to QUEUE
0C0E   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02209                 count = count + 1
0C0F   0808           02197                 movf ADC_DATAPORT, W                    ;Sample Y
0C10   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C11   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C12   1489           02200                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C13   0080           02201                 movwf INDF                                              ;Save to QUEUE
0C14   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C15   0808           02203                 movf ADC_DATAPORT, W                    ;Sample X
0C16   1409           02204                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C17   1009           02205                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C18   1089           02206                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C19   0080           02207                 movwf INDF                                              ;Save to QUEUE
0C1A   0A84           02208                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02209                 count = count + 1
                      02210         endw
0C1B   0808           02211         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0C1C   1409           02212         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0C1D   1009           02213         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0C1E   1489           02214         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0C1F   0080           02215         movwf INDF                                                      ;Save to QUEUE
0C20   1784           02216         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0C21   0808           02217         movf ADC_DATAPORT, W                            ;Sample X
0C22   1409           02218         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0C23   1009           02219         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0C24   1089           02220         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0C25   0080           02221         movwf INDF                                                      ;Save to QUEUE
0C26   0384           02222         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02223         count = 1
                      02224         while count < BUFFERSIZE / 2
0C27   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C28   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C29   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C2B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C2C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C2D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C2E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C30   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C31   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C32   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02237                 count = count + 1
0C33   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C34   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C35   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C36   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C37   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C38   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C39   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C3A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C3D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C3E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02237                 count = count + 1
0C3F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C40   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C41   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C42   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C43   0080           02229                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C44   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C45   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C46   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C47   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C48   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C49   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C4A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02237                 count = count + 1
0C4B   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C4C   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4D   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4E   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C4F   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C50   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C51   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C52   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C53   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C54   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C55   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C56   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02237                 count = count + 1
0C57   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C58   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C59   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C5B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C5C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C5D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C5E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C60   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C61   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C62   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02237                 count = count + 1
0C63   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C64   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C65   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C66   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C67   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C68   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C69   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C6A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C6D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C6E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02237                 count = count + 1
0C6F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C70   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C71   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C72   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C73   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C74   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C75   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C76   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C77   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C78   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C79   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C7A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02237                 count = count + 1
0C7B   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C7C   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7D   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7E   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C7F   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C80   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C81   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C82   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C83   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C84   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C85   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C86   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02237                 count = count + 1
0C87   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C88   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C89   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C8B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C8C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C8D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C8E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C90   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C91   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C92   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02237                 count = count + 1
0C93   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0C94   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C95   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C96   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C97   0080           02229                 movwf INDF                                              ;Save to QUEUE
0C98   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0C99   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0C9A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C9D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0C9E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02237                 count = count + 1
0C9F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CA0   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA1   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA2   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA3   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CA4   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CA5   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CA6   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA7   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA8   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA9   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CAA   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02237                 count = count + 1
0CAB   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CAC   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAD   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAE   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CAF   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CB0   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CB1   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CB2   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB3   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB4   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB5   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CB6   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02237                 count = count + 1
0CB7   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CB8   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB9   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CBA   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CBB   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CBC   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CBD   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CBE   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CBF   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC0   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC1   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CC2   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02237                 count = count + 1
0CC3   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CC4   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC5   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC6   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CC7   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CC8   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CC9   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CCA   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCB   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCC   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CCD   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CCE   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02237                 count = count + 1
0CCF   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CD0   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD1   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD2   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD3   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CD4   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CD5   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CD6   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CD7   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD8   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD9   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CDA   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02237                 count = count + 1
0CDB   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CDC   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDD   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDE   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CDF   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CE0   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CE1   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CE2   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE3   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE4   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE5   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CE6   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02237                 count = count + 1
0CE7   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CE8   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE9   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CEA   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CEB   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CEC   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CED   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CEE   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEF   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF0   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF1   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CF2   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02237                 count = count + 1
0CF3   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0CF4   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF5   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF6   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF7   0080           02229                 movwf INDF                                              ;Save to QUEUE
0CF8   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0CF9   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0CFA   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFB   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFC   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CFD   0080           02235                 movwf INDF                                              ;Save to QUEUE
0CFE   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02237                 count = count + 1
0CFF   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D00   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D01   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D02   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D03   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D04   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D05   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D06   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D07   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D08   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D09   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D0A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02237                 count = count + 1
0D0B   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D0C   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0D   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0E   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D0F   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D10   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D11   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D12   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D13   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D14   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D15   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D16   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02237                 count = count + 1
0D17   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D18   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D19   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D1B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D1C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D1D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D1E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D20   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D21   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D22   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02237                 count = count + 1
0D23   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D24   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D25   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D26   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D27   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D28   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D29   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D2A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D2D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D2E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02237                 count = count + 1
0D2F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D30   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D31   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D32   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D33   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D34   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D35   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D36   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D37   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D38   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D39   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D3A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02237                 count = count + 1
0D3B   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D3C   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3D   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3E   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D3F   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D40   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D41   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D42   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D43   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D44   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D45   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D46   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02237                 count = count + 1
0D47   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D48   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D49   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D4B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D4C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D4D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D4E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D50   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D51   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D52   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02237                 count = count + 1
0D53   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D54   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D55   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D56   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D57   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D58   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D59   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D5A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D5D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D5E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02237                 count = count + 1
0D5F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D60   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D61   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D62   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D63   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D64   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D65   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D66   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D67   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D68   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D69   0080           02235                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D6A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02237                 count = count + 1
0D6B   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D6C   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6D   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6E   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D6F   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D70   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D71   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D72   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D73   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D74   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D75   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D76   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02237                 count = count + 1
0D77   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D78   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D79   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7A   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D7B   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D7C   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D7D   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D7E   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7F   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D80   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D81   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D82   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02237                 count = count + 1
0D83   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D84   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D85   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D86   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D87   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D88   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D89   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D8A   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8B   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8C   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D8D   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D8E   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02237                 count = count + 1
0D8F   0808           02225                 movf ADC_DATAPORT, W                    ;Sample Y
0D90   1409           02226                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D91   1009           02227                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D92   1489           02228                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D93   0080           02229                 movwf INDF                                              ;Save to QUEUE
0D94   0384           02230                 decf FSR, F                                             ;Increment QUEUE pointer
0D95   0808           02231                 movf ADC_DATAPORT, W                    ;Sample X
0D96   1409           02232                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D97   1009           02233                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D98   1089           02234                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D99   0080           02235                 movwf INDF                                              ;Save to QUEUE
0D9A   0384           02236                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000020            02237                 count = count + 1
                      02238         endw
0D9B   0808           02239         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0D9C   1409           02240         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0D9D   1009           02241         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0D9E   1489           02242         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0D9F   0080           02243         movwf INDF                                                      ;Save to QUEUE
0DA0   1783           02244         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0DA1   0808           02245         movf ADC_DATAPORT, W                            ;Sample X
0DA2   1409           02246         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0DA3   1009           02247         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0DA4   1089           02248         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0DA5   0080           02249         movwf INDF                                                      ;Save to QUEUE
0DA6   0A84           02250         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02251         count = 1
                      02252         while count < BUFFERSIZE / 2
0DA7   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DA8   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA9   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAA   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DAB   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DAC   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DAD   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DAE   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAF   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB0   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB1   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DB2   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02265                 count = count + 1
0DB3   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DB4   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB5   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB6   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DB7   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DB8   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DB9   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DBA   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBB   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBC   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DBD   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DBE   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02265                 count = count + 1
0DBF   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DC0   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC1   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC2   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC3   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DC4   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DC5   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DC6   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC7   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC8   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC9   0080           02263                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DCA   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02265                 count = count + 1
0DCB   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DCC   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCD   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCE   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DCF   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DD0   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DD1   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DD2   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD3   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD4   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD5   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DD6   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02265                 count = count + 1
0DD7   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DD8   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD9   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDA   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DDB   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DDC   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DDD   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DDE   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDF   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE0   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE1   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DE2   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02265                 count = count + 1
0DE3   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DE4   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE5   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE6   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DE7   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DE8   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DE9   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DEA   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEB   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DEC   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DED   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DEE   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02265                 count = count + 1
0DEF   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DF0   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF1   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF2   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF3   0080           02257                 movwf INDF                                              ;Save to QUEUE
0DF4   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0DF5   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0DF6   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF7   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF8   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF9   0080           02263                 movwf INDF                                              ;Save to QUEUE
0DFA   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            02265                 count = count + 1
0DFB   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0DFC   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFD   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFE   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DFF   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E00   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E01   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E02   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E03   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E04   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E05   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E06   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02265                 count = count + 1
0E07   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E08   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E09   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0A   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E0B   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E0C   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E0D   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E0E   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0F   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E10   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E11   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E12   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02265                 count = count + 1
0E13   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E14   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E15   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E16   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E17   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E18   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E19   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E1A   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1B   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1C   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E1D   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E1E   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02265                 count = count + 1
0E1F   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E20   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E21   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E22   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E23   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E24   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E25   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E26   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E27   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E28   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E29   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E2A   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02265                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E2B   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E2C   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2D   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2E   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E2F   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E30   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E31   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E32   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E33   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E34   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E35   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E36   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02265                 count = count + 1
0E37   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E38   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E39   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E3A   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E3B   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E3C   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E3D   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E3E   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E3F   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E40   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E41   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E42   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02265                 count = count + 1
0E43   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E44   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E45   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E46   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E47   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E48   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E49   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E4A   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4B   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4C   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E4D   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E4E   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02265                 count = count + 1
0E4F   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E50   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E51   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E52   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E53   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E54   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E55   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E56   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E57   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E58   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E59   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E5A   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02265                 count = count + 1
0E5B   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E5C   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5D   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5E   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E5F   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E60   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E61   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E62   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E63   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E64   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E65   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E66   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02265                 count = count + 1
0E67   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E68   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E69   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6A   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E6B   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E6C   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E6D   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E6E   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6F   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E70   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E71   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E72   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02265                 count = count + 1
0E73   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E74   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E75   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E76   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E77   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E78   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E79   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E7A   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7B   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7C   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E7D   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E7E   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02265                 count = count + 1
0E7F   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E80   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E81   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E82   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E83   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E84   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E85   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E86   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E87   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E88   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E89   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E8A   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02265                 count = count + 1
0E8B   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E8C   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E8D   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8E   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E8F   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E90   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E91   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E92   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E93   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E94   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E95   0080           02263                 movwf INDF                                              ;Save to QUEUE
0E96   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02265                 count = count + 1
0E97   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0E98   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E99   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9A   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E9B   0080           02257                 movwf INDF                                              ;Save to QUEUE
0E9C   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0E9D   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0E9E   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9F   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA0   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA1   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EA2   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02265                 count = count + 1
0EA3   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EA4   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA5   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA6   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EA7   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EA8   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EA9   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EAA   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAB   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAC   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EAD   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EAE   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02265                 count = count + 1
0EAF   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EB0   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB1   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB2   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EB3   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EB4   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EB5   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EB6   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB7   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB8   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB9   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EBA   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02265                 count = count + 1
0EBB   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EBC   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBD   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EBE   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EBF   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EC0   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EC1   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EC2   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC3   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC4   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EC5   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EC6   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02265                 count = count + 1
0EC7   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EC8   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC9   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECA   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ECB   0080           02257                 movwf INDF                                              ;Save to QUEUE
0ECC   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0ECD   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0ECE   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECF   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED0   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED1   0080           02263                 movwf INDF                                              ;Save to QUEUE
0ED2   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02265                 count = count + 1
0ED3   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0ED4   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED5   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED6   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ED7   0080           02257                 movwf INDF                                              ;Save to QUEUE
0ED8   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0ED9   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EDA   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDB   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDC   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EDD   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EDE   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02265                 count = count + 1
0EDF   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EE0   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE1   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE2   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EE3   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EE4   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EE5   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EE6   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE7   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE8   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE9   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EEA   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02265                 count = count + 1
0EEB   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EEC   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EED   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEE   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EEF   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EF0   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EF1   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EF2   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF3   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF4   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EF5   0080           02263                 movwf INDF                                              ;Save to QUEUE
0EF6   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02265                 count = count + 1
0EF7   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0EF8   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF9   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFA   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EFB   0080           02257                 movwf INDF                                              ;Save to QUEUE
0EFC   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0EFD   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0EFE   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFF   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F00   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F01   0080           02263                 movwf INDF                                              ;Save to QUEUE
0F02   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02265                 count = count + 1
0F03   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0F04   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F05   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F06   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F07   0080           02257                 movwf INDF                                              ;Save to QUEUE
0F08   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0F09   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0F0A   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0B   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0C   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F0D   0080           02263                 movwf INDF                                              ;Save to QUEUE
0F0E   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02265                 count = count + 1
0F0F   0808           02253                 movf ADC_DATAPORT, W                    ;Sample Y
0F10   1409           02254                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F11   1009           02255                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F12   1489           02256                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F13   0080           02257                 movwf INDF                                              ;Save to QUEUE
0F14   0A84           02258                 incf FSR, F                                             ;Increment QUEUE pointer
0F15   0808           02259                 movf ADC_DATAPORT, W                    ;Sample X
0F16   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F17   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F18   1089           02262                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F19   0080           02263                 movwf INDF                                              ;Save to QUEUE
0F1A   0A84           02264                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02265                 count = count + 1
                      02266         endw
0F1B   0808           02267         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0F1C   1409           02268         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0F1D   1009           02269         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0F1E   1489           02270         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F1F   0080           02271         movwf INDF                                                      ;Save to QUEUE
0F20   1384           02272         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0F21   0808           02273         movf ADC_DATAPORT, W                            ;Sample X
0F22   1409           02274         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0F23   1009           02275         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0F24   1089           02276         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0F25   0080           02277         movwf INDF                                                      ;Save to QUEUE
0F26   0384           02278         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02279         count = 1
                      02280         while count < BUFFERSIZE / 2
0F27   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F28   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F29   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F2B   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F2C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F2D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F2E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F30   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F31   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F32   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02293                 count = count + 1
0F33   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F34   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F35   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F36   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F37   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F38   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F39   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F3A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F3D   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F3E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02293                 count = count + 1
0F3F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F40   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F41   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F42   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F43   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F44   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F45   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F46   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F47   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F48   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F49   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F4A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02293                 count = count + 1
0F4B   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F4C   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4D   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4E   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F4F   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F50   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F51   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F52   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F53   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F54   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F55   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F56   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02293                 count = count + 1
0F57   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F58   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F59   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F5B   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F5C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F5D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F5E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F60   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F61   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F62   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02293                 count = count + 1
0F63   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F64   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F65   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F66   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F67   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F68   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F69   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F6A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F6D   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F6E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02293                 count = count + 1
0F6F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F70   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F71   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F72   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F73   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F74   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F75   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F76   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F77   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F78   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F79   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F7A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02293                 count = count + 1
0F7B   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F7C   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7D   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7E   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F7F   0080           02285                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F80   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F81   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F82   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F83   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F84   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F85   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F86   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02293                 count = count + 1
0F87   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F88   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F89   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F8B   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F8C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F8D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F8E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F90   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F91   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F92   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02293                 count = count + 1
0F93   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0F94   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F95   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F96   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F97   0080           02285                 movwf INDF                                              ;Save to QUEUE
0F98   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0F99   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0F9A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F9D   0080           02291                 movwf INDF                                              ;Save to QUEUE
0F9E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02293                 count = count + 1
0F9F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FA0   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA1   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA2   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FA3   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FA4   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FA5   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FA6   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA7   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA8   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA9   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FAA   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02293                 count = count + 1
0FAB   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FAC   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAD   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAE   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FAF   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FB0   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FB1   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FB2   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB3   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB4   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FB5   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FB6   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02293                 count = count + 1
0FB7   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FB8   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB9   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FBA   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FBB   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FBC   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FBD   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FBE   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBF   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC0   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FC1   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FC2   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02293                 count = count + 1
0FC3   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FC4   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC5   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC6   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FC7   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FC8   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FC9   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FCA   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCB   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCC   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FCD   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FCE   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02293                 count = count + 1
0FCF   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FD0   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD1   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD2   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FD3   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FD4   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FD5   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FD6   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD7   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD8   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FD9   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FDA   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02293                 count = count + 1
0FDB   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FDC   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDD   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDE   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FDF   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FE0   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FE1   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FE2   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE3   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE4   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FE5   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FE6   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02293                 count = count + 1
0FE7   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FE8   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE9   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEA   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FEB   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FEC   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FED   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FEE   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FEF   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF0   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FF1   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FF2   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02293                 count = count + 1
0FF3   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
0FF4   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF5   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF6   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FF7   0080           02285                 movwf INDF                                              ;Save to QUEUE
0FF8   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
0FF9   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
0FFA   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFB   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFC   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FFD   0080           02291                 movwf INDF                                              ;Save to QUEUE
0FFE   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02293                 count = count + 1
0FFF   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1000   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1001   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1002   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1003   0080           02285                 movwf INDF                                              ;Save to QUEUE
1004   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1005   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1006   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1007   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1008   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1009   0080           02291                 movwf INDF                                              ;Save to QUEUE
100A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02293                 count = count + 1
100B   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
100C   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100D   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100E   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
100F   0080           02285                 movwf INDF                                              ;Save to QUEUE
1010   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1011   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1012   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1013   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1014   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1015   0080           02291                 movwf INDF                                              ;Save to QUEUE
1016   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02293                 count = count + 1
1017   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1018   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1019   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
101B   0080           02285                 movwf INDF                                              ;Save to QUEUE
101C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
101D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
101E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1020   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1021   0080           02291                 movwf INDF                                              ;Save to QUEUE
1022   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02293                 count = count + 1
1023   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1024   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1025   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1026   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1027   0080           02285                 movwf INDF                                              ;Save to QUEUE
1028   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1029   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
102A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
102D   0080           02291                 movwf INDF                                              ;Save to QUEUE
102E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02293                 count = count + 1
102F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1030   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1031   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1032   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1033   0080           02285                 movwf INDF                                              ;Save to QUEUE
1034   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1035   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1036   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1037   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1038   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1039   0080           02291                 movwf INDF                                              ;Save to QUEUE
103A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02293                 count = count + 1
103B   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
103C   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103D   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103E   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
103F   0080           02285                 movwf INDF                                              ;Save to QUEUE
1040   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1041   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1042   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1043   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1044   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1045   0080           02291                 movwf INDF                                              ;Save to QUEUE
1046   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02293                 count = count + 1
1047   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1048   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1049   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
104B   0080           02285                 movwf INDF                                              ;Save to QUEUE
104C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
104D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
104E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1050   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1051   0080           02291                 movwf INDF                                              ;Save to QUEUE
1052   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02293                 count = count + 1
1053   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1054   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1055   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1056   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1057   0080           02285                 movwf INDF                                              ;Save to QUEUE
1058   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1059   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
105A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
105D   0080           02291                 movwf INDF                                              ;Save to QUEUE
105E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02293                 count = count + 1
105F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1060   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1061   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1062   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1063   0080           02285                 movwf INDF                                              ;Save to QUEUE
1064   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1065   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1066   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1067   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1068   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1069   0080           02291                 movwf INDF                                              ;Save to QUEUE
106A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02293                 count = count + 1
106B   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
106C   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106D   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106E   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
106F   0080           02285                 movwf INDF                                              ;Save to QUEUE
1070   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1071   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1072   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1073   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1074   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1075   0080           02291                 movwf INDF                                              ;Save to QUEUE
1076   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02293                 count = count + 1
1077   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1078   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1079   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107A   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
107B   0080           02285                 movwf INDF                                              ;Save to QUEUE
107C   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
107D   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
107E   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107F   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1080   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1081   0080           02291                 movwf INDF                                              ;Save to QUEUE
1082   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02293                 count = count + 1
1083   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1084   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1085   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1086   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1087   0080           02285                 movwf INDF                                              ;Save to QUEUE
1088   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1089   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
108A   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108B   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108C   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
108D   0080           02291                 movwf INDF                                              ;Save to QUEUE
108E   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02293                 count = count + 1
108F   0808           02281                 movf ADC_DATAPORT, W                    ;Sample Y
1090   1409           02282                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1091   1009           02283                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1092   1489           02284                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1093   0080           02285                 movwf INDF                                              ;Save to QUEUE
1094   0384           02286                 decf FSR, F                                             ;Increment QUEUE pointer
1095   0808           02287                 movf ADC_DATAPORT, W                    ;Sample X
1096   1409           02288                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1097   1009           02289                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1098   1089           02290                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1099   0080           02291                 movwf INDF                                              ;Save to QUEUE
109A   0384           02292                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02293                 count = count + 1
                      02294         endw
109B   0808           02295         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
109C   1409           02296         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
109D   118A           02297         bcf PCLATH, 3                                           ;insure correct program memory page
109E   120A           02298         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
109F   293A           02299         goto ADCShutdown
                      02300         
                      02301 ;Fast sample
                      02302 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      02303 ;Sampling rate = 166.667 kHz with 4 MHz clock
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02304 ;-----------------------------------------------------------------------------
10A0                  02305 Sample833k
10A0   1009           02306         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02307         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
10A1   3020               M     movlw BUFFERMIN
10A2   0084               M     movwf FSR
10A3   0000           02308         nop
  0000                02309         local count
  00000001            02310         count = 1
                      02311         while count < BUFFERSIZE
10A4   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10A5   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A6   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A7   0080           02315                 movwf INDF                                              ;Save to QUEUE
10A8   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10A9   0000           02317                 nop                                                             ;Wait a cycle
  00000002            02318                 count = count + 1
10AA   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10AB   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AC   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AD   0080           02315                 movwf INDF                                              ;Save to QUEUE
10AE   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10AF   0000           02317                 nop                                                             ;Wait a cycle
  00000003            02318                 count = count + 1
10B0   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10B1   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B2   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B3   0080           02315                 movwf INDF                                              ;Save to QUEUE
10B4   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10B5   0000           02317                 nop                                                             ;Wait a cycle
  00000004            02318                 count = count + 1
10B6   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10B7   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B8   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B9   0080           02315                 movwf INDF                                              ;Save to QUEUE
10BA   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10BB   0000           02317                 nop                                                             ;Wait a cycle
  00000005            02318                 count = count + 1
10BC   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10BD   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BE   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BF   0080           02315                 movwf INDF                                              ;Save to QUEUE
10C0   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10C1   0000           02317                 nop                                                             ;Wait a cycle
  00000006            02318                 count = count + 1
10C2   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10C3   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C4   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C5   0080           02315                 movwf INDF                                              ;Save to QUEUE
10C6   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10C7   0000           02317                 nop                                                             ;Wait a cycle
  00000007            02318                 count = count + 1
10C8   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10C9   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CA   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CB   0080           02315                 movwf INDF                                              ;Save to QUEUE
10CC   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10CD   0000           02317                 nop                                                             ;Wait a cycle
  00000008            02318                 count = count + 1
10CE   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10CF   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D0   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D1   0080           02315                 movwf INDF                                              ;Save to QUEUE
10D2   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10D3   0000           02317                 nop                                                             ;Wait a cycle
  00000009            02318                 count = count + 1
10D4   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10D5   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D6   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D7   0080           02315                 movwf INDF                                              ;Save to QUEUE
10D8   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10D9   0000           02317                 nop                                                             ;Wait a cycle
  0000000A            02318                 count = count + 1
10DA   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10DB   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DC   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DD   0080           02315                 movwf INDF                                              ;Save to QUEUE
10DE   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10DF   0000           02317                 nop                                                             ;Wait a cycle
  0000000B            02318                 count = count + 1
10E0   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10E1   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E2   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E3   0080           02315                 movwf INDF                                              ;Save to QUEUE
10E4   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10E5   0000           02317                 nop                                                             ;Wait a cycle
  0000000C            02318                 count = count + 1
10E6   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10E7   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E8   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E9   0080           02315                 movwf INDF                                              ;Save to QUEUE
10EA   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10EB   0000           02317                 nop                                                             ;Wait a cycle
  0000000D            02318                 count = count + 1
10EC   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10ED   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EE   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EF   0080           02315                 movwf INDF                                              ;Save to QUEUE
10F0   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10F1   0000           02317                 nop                                                             ;Wait a cycle
  0000000E            02318                 count = count + 1
10F2   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10F3   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F4   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F5   0080           02315                 movwf INDF                                              ;Save to QUEUE
10F6   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10F7   0000           02317                 nop                                                             ;Wait a cycle
  0000000F            02318                 count = count + 1
10F8   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10F9   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FA   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FB   0080           02315                 movwf INDF                                              ;Save to QUEUE
10FC   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
10FD   0000           02317                 nop                                                             ;Wait a cycle
  00000010            02318                 count = count + 1
10FE   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
10FF   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1100   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1101   0080           02315                 movwf INDF                                              ;Save to QUEUE
1102   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1103   0000           02317                 nop                                                             ;Wait a cycle
  00000011            02318                 count = count + 1
1104   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1105   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1106   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1107   0080           02315                 movwf INDF                                              ;Save to QUEUE
1108   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1109   0000           02317                 nop                                                             ;Wait a cycle
  00000012            02318                 count = count + 1
110A   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
110B   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110C   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110D   0080           02315                 movwf INDF                                              ;Save to QUEUE
110E   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
110F   0000           02317                 nop                                                             ;Wait a cycle
  00000013            02318                 count = count + 1
1110   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1111   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1112   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1113   0080           02315                 movwf INDF                                              ;Save to QUEUE
1114   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1115   0000           02317                 nop                                                             ;Wait a cycle
  00000014            02318                 count = count + 1
1116   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1117   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1118   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1119   0080           02315                 movwf INDF                                              ;Save to QUEUE
111A   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
111B   0000           02317                 nop                                                             ;Wait a cycle
  00000015            02318                 count = count + 1
111C   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
111D   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111E   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111F   0080           02315                 movwf INDF                                              ;Save to QUEUE
1120   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1121   0000           02317                 nop                                                             ;Wait a cycle
  00000016            02318                 count = count + 1
1122   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1123   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1124   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1125   0080           02315                 movwf INDF                                              ;Save to QUEUE
1126   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1127   0000           02317                 nop                                                             ;Wait a cycle
  00000017            02318                 count = count + 1
1128   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1129   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112A   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112B   0080           02315                 movwf INDF                                              ;Save to QUEUE
112C   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
112D   0000           02317                 nop                                                             ;Wait a cycle
  00000018            02318                 count = count + 1
112E   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
112F   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1130   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1131   0080           02315                 movwf INDF                                              ;Save to QUEUE
1132   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1133   0000           02317                 nop                                                             ;Wait a cycle
  00000019            02318                 count = count + 1
1134   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1135   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1136   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1137   0080           02315                 movwf INDF                                              ;Save to QUEUE
1138   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1139   0000           02317                 nop                                                             ;Wait a cycle
  0000001A            02318                 count = count + 1
113A   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
113B   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113C   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113D   0080           02315                 movwf INDF                                              ;Save to QUEUE
113E   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
113F   0000           02317                 nop                                                             ;Wait a cycle
  0000001B            02318                 count = count + 1
1140   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1141   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1142   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1143   0080           02315                 movwf INDF                                              ;Save to QUEUE
1144   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1145   0000           02317                 nop                                                             ;Wait a cycle
  0000001C            02318                 count = count + 1
1146   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1147   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1148   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1149   0080           02315                 movwf INDF                                              ;Save to QUEUE
114A   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
114B   0000           02317                 nop                                                             ;Wait a cycle
  0000001D            02318                 count = count + 1
114C   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
114D   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114E   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114F   0080           02315                 movwf INDF                                              ;Save to QUEUE
1150   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1151   0000           02317                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            02318                 count = count + 1
1152   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1153   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1154   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1155   0080           02315                 movwf INDF                                              ;Save to QUEUE
1156   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1157   0000           02317                 nop                                                             ;Wait a cycle
  0000001F            02318                 count = count + 1
1158   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1159   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115A   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115B   0080           02315                 movwf INDF                                              ;Save to QUEUE
115C   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
115D   0000           02317                 nop                                                             ;Wait a cycle
  00000020            02318                 count = count + 1
115E   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
115F   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1160   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1161   0080           02315                 movwf INDF                                              ;Save to QUEUE
1162   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1163   0000           02317                 nop                                                             ;Wait a cycle
  00000021            02318                 count = count + 1
1164   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1165   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1166   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1167   0080           02315                 movwf INDF                                              ;Save to QUEUE
1168   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1169   0000           02317                 nop                                                             ;Wait a cycle
  00000022            02318                 count = count + 1
116A   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
116B   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116C   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116D   0080           02315                 movwf INDF                                              ;Save to QUEUE
116E   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
116F   0000           02317                 nop                                                             ;Wait a cycle
  00000023            02318                 count = count + 1
1170   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1171   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1172   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1173   0080           02315                 movwf INDF                                              ;Save to QUEUE
1174   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1175   0000           02317                 nop                                                             ;Wait a cycle
  00000024            02318                 count = count + 1
1176   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1177   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1178   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1179   0080           02315                 movwf INDF                                              ;Save to QUEUE
117A   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
117B   0000           02317                 nop                                                             ;Wait a cycle
  00000025            02318                 count = count + 1
117C   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
117D   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117E   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

117F   0080           02315                 movwf INDF                                              ;Save to QUEUE
1180   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1181   0000           02317                 nop                                                             ;Wait a cycle
  00000026            02318                 count = count + 1
1182   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1183   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1184   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1185   0080           02315                 movwf INDF                                              ;Save to QUEUE
1186   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1187   0000           02317                 nop                                                             ;Wait a cycle
  00000027            02318                 count = count + 1
1188   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1189   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118A   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118B   0080           02315                 movwf INDF                                              ;Save to QUEUE
118C   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
118D   0000           02317                 nop                                                             ;Wait a cycle
  00000028            02318                 count = count + 1
118E   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
118F   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1190   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1191   0080           02315                 movwf INDF                                              ;Save to QUEUE
1192   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1193   0000           02317                 nop                                                             ;Wait a cycle
  00000029            02318                 count = count + 1
1194   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1195   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1196   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1197   0080           02315                 movwf INDF                                              ;Save to QUEUE
1198   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1199   0000           02317                 nop                                                             ;Wait a cycle
  0000002A            02318                 count = count + 1
119A   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
119B   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119C   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119D   0080           02315                 movwf INDF                                              ;Save to QUEUE
119E   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
119F   0000           02317                 nop                                                             ;Wait a cycle
  0000002B            02318                 count = count + 1
11A0   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11A1   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A2   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A3   0080           02315                 movwf INDF                                              ;Save to QUEUE
11A4   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11A5   0000           02317                 nop                                                             ;Wait a cycle
  0000002C            02318                 count = count + 1
11A6   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11A7   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A8   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A9   0080           02315                 movwf INDF                                              ;Save to QUEUE
11AA   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11AB   0000           02317                 nop                                                             ;Wait a cycle
  0000002D            02318                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11AC   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11AD   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AE   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AF   0080           02315                 movwf INDF                                              ;Save to QUEUE
11B0   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11B1   0000           02317                 nop                                                             ;Wait a cycle
  0000002E            02318                 count = count + 1
11B2   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11B3   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B4   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B5   0080           02315                 movwf INDF                                              ;Save to QUEUE
11B6   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11B7   0000           02317                 nop                                                             ;Wait a cycle
  0000002F            02318                 count = count + 1
11B8   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11B9   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BA   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BB   0080           02315                 movwf INDF                                              ;Save to QUEUE
11BC   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11BD   0000           02317                 nop                                                             ;Wait a cycle
  00000030            02318                 count = count + 1
11BE   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11BF   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C0   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C1   0080           02315                 movwf INDF                                              ;Save to QUEUE
11C2   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11C3   0000           02317                 nop                                                             ;Wait a cycle
  00000031            02318                 count = count + 1
11C4   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11C5   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C6   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C7   0080           02315                 movwf INDF                                              ;Save to QUEUE
11C8   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11C9   0000           02317                 nop                                                             ;Wait a cycle
  00000032            02318                 count = count + 1
11CA   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11CB   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CC   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CD   0080           02315                 movwf INDF                                              ;Save to QUEUE
11CE   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11CF   0000           02317                 nop                                                             ;Wait a cycle
  00000033            02318                 count = count + 1
11D0   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11D1   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D2   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D3   0080           02315                 movwf INDF                                              ;Save to QUEUE
11D4   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11D5   0000           02317                 nop                                                             ;Wait a cycle
  00000034            02318                 count = count + 1
11D6   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11D7   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D8   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D9   0080           02315                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11DA   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11DB   0000           02317                 nop                                                             ;Wait a cycle
  00000035            02318                 count = count + 1
11DC   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11DD   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DE   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DF   0080           02315                 movwf INDF                                              ;Save to QUEUE
11E0   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11E1   0000           02317                 nop                                                             ;Wait a cycle
  00000036            02318                 count = count + 1
11E2   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11E3   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E4   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E5   0080           02315                 movwf INDF                                              ;Save to QUEUE
11E6   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11E7   0000           02317                 nop                                                             ;Wait a cycle
  00000037            02318                 count = count + 1
11E8   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11E9   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EA   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EB   0080           02315                 movwf INDF                                              ;Save to QUEUE
11EC   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11ED   0000           02317                 nop                                                             ;Wait a cycle
  00000038            02318                 count = count + 1
11EE   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11EF   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F0   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F1   0080           02315                 movwf INDF                                              ;Save to QUEUE
11F2   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11F3   0000           02317                 nop                                                             ;Wait a cycle
  00000039            02318                 count = count + 1
11F4   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11F5   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F6   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F7   0080           02315                 movwf INDF                                              ;Save to QUEUE
11F8   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11F9   0000           02317                 nop                                                             ;Wait a cycle
  0000003A            02318                 count = count + 1
11FA   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
11FB   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FC   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FD   0080           02315                 movwf INDF                                              ;Save to QUEUE
11FE   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
11FF   0000           02317                 nop                                                             ;Wait a cycle
  0000003B            02318                 count = count + 1
1200   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1201   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1202   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1203   0080           02315                 movwf INDF                                              ;Save to QUEUE
1204   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1205   0000           02317                 nop                                                             ;Wait a cycle
  0000003C            02318                 count = count + 1
1206   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1207   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1208   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1209   0080           02315                 movwf INDF                                              ;Save to QUEUE
120A   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
120B   0000           02317                 nop                                                             ;Wait a cycle
  0000003D            02318                 count = count + 1
120C   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
120D   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120E   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120F   0080           02315                 movwf INDF                                              ;Save to QUEUE
1210   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1211   0000           02317                 nop                                                             ;Wait a cycle
  0000003E            02318                 count = count + 1
1212   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1213   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1214   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1215   0080           02315                 movwf INDF                                              ;Save to QUEUE
1216   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
1217   0000           02317                 nop                                                             ;Wait a cycle
  0000003F            02318                 count = count + 1
1218   0808           02312                 movf ADC_DATAPORT, W                    ;Sample
1219   1409           02313                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121A   1009           02314                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121B   0080           02315                 movwf INDF                                              ;Save to QUEUE
121C   0A84           02316                 incf FSR, F                                             ;Increment QUEUE pointer
121D   0000           02317                 nop                                                             ;Wait a cycle
  00000040            02318                 count = count + 1
                      02319         endw
121E   0808           02320         movf ADC_DATAPORT, W
121F   1409           02321         bsf ADC_CONTROLPORT, RDD
1220   1009           02322         bcf ADC_CONTROLPORT, RDD
1221   0080           02323         movwf INDF
1222   1784           02324         bsf FSR, 7                                                      ;goto bank 2
1223   0000           02325         nop                                                                     ;Wait a cycle
  00000001            02326         count = 1
                      02327         while count < BUFFERSIZE
1224   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1225   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1226   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1227   0080           02331                 movwf INDF                                              ;Save to QUEUE
1228   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1229   0000           02333                 nop                                                             ;Wait a cycle
  00000002            02334                 count = count + 1
122A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
122B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122D   0080           02331                 movwf INDF                                              ;Save to QUEUE
122E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
122F   0000           02333                 nop                                                             ;Wait a cycle
  00000003            02334                 count = count + 1
1230   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1231   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1232   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1233   0080           02331                 movwf INDF                                              ;Save to QUEUE
1234   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1235   0000           02333                 nop                                                             ;Wait a cycle
  00000004            02334                 count = count + 1
1236   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1237   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1238   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1239   0080           02331                 movwf INDF                                              ;Save to QUEUE
123A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
123B   0000           02333                 nop                                                             ;Wait a cycle
  00000005            02334                 count = count + 1
123C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
123D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123F   0080           02331                 movwf INDF                                              ;Save to QUEUE
1240   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1241   0000           02333                 nop                                                             ;Wait a cycle
  00000006            02334                 count = count + 1
1242   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1243   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1244   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1245   0080           02331                 movwf INDF                                              ;Save to QUEUE
1246   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1247   0000           02333                 nop                                                             ;Wait a cycle
  00000007            02334                 count = count + 1
1248   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1249   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124B   0080           02331                 movwf INDF                                              ;Save to QUEUE
124C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
124D   0000           02333                 nop                                                             ;Wait a cycle
  00000008            02334                 count = count + 1
124E   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
124F   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1250   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1251   0080           02331                 movwf INDF                                              ;Save to QUEUE
1252   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1253   0000           02333                 nop                                                             ;Wait a cycle
  00000009            02334                 count = count + 1
1254   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1255   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1256   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1257   0080           02331                 movwf INDF                                              ;Save to QUEUE
1258   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1259   0000           02333                 nop                                                             ;Wait a cycle
  0000000A            02334                 count = count + 1
125A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
125B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125D   0080           02331                 movwf INDF                                              ;Save to QUEUE
125E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
125F   0000           02333                 nop                                                             ;Wait a cycle
  0000000B            02334                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1260   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1261   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1262   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1263   0080           02331                 movwf INDF                                              ;Save to QUEUE
1264   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1265   0000           02333                 nop                                                             ;Wait a cycle
  0000000C            02334                 count = count + 1
1266   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1267   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1268   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1269   0080           02331                 movwf INDF                                              ;Save to QUEUE
126A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
126B   0000           02333                 nop                                                             ;Wait a cycle
  0000000D            02334                 count = count + 1
126C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
126D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126F   0080           02331                 movwf INDF                                              ;Save to QUEUE
1270   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1271   0000           02333                 nop                                                             ;Wait a cycle
  0000000E            02334                 count = count + 1
1272   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1273   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1274   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1275   0080           02331                 movwf INDF                                              ;Save to QUEUE
1276   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1277   0000           02333                 nop                                                             ;Wait a cycle
  0000000F            02334                 count = count + 1
1278   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1279   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127B   0080           02331                 movwf INDF                                              ;Save to QUEUE
127C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
127D   0000           02333                 nop                                                             ;Wait a cycle
  00000010            02334                 count = count + 1
127E   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
127F   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1280   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1281   0080           02331                 movwf INDF                                              ;Save to QUEUE
1282   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1283   0000           02333                 nop                                                             ;Wait a cycle
  00000011            02334                 count = count + 1
1284   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1285   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1286   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1287   0080           02331                 movwf INDF                                              ;Save to QUEUE
1288   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1289   0000           02333                 nop                                                             ;Wait a cycle
  00000012            02334                 count = count + 1
128A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
128B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128D   0080           02331                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

128E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
128F   0000           02333                 nop                                                             ;Wait a cycle
  00000013            02334                 count = count + 1
1290   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1291   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1292   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1293   0080           02331                 movwf INDF                                              ;Save to QUEUE
1294   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1295   0000           02333                 nop                                                             ;Wait a cycle
  00000014            02334                 count = count + 1
1296   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1297   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1298   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1299   0080           02331                 movwf INDF                                              ;Save to QUEUE
129A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
129B   0000           02333                 nop                                                             ;Wait a cycle
  00000015            02334                 count = count + 1
129C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
129D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129F   0080           02331                 movwf INDF                                              ;Save to QUEUE
12A0   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12A1   0000           02333                 nop                                                             ;Wait a cycle
  00000016            02334                 count = count + 1
12A2   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12A3   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A4   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A5   0080           02331                 movwf INDF                                              ;Save to QUEUE
12A6   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12A7   0000           02333                 nop                                                             ;Wait a cycle
  00000017            02334                 count = count + 1
12A8   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12A9   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AA   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AB   0080           02331                 movwf INDF                                              ;Save to QUEUE
12AC   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12AD   0000           02333                 nop                                                             ;Wait a cycle
  00000018            02334                 count = count + 1
12AE   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12AF   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B0   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B1   0080           02331                 movwf INDF                                              ;Save to QUEUE
12B2   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12B3   0000           02333                 nop                                                             ;Wait a cycle
  00000019            02334                 count = count + 1
12B4   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12B5   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B6   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B7   0080           02331                 movwf INDF                                              ;Save to QUEUE
12B8   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12B9   0000           02333                 nop                                                             ;Wait a cycle
  0000001A            02334                 count = count + 1
12BA   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12BB   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BC   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BD   0080           02331                 movwf INDF                                              ;Save to QUEUE
12BE   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12BF   0000           02333                 nop                                                             ;Wait a cycle
  0000001B            02334                 count = count + 1
12C0   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12C1   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C2   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C3   0080           02331                 movwf INDF                                              ;Save to QUEUE
12C4   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12C5   0000           02333                 nop                                                             ;Wait a cycle
  0000001C            02334                 count = count + 1
12C6   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12C7   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C8   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C9   0080           02331                 movwf INDF                                              ;Save to QUEUE
12CA   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12CB   0000           02333                 nop                                                             ;Wait a cycle
  0000001D            02334                 count = count + 1
12CC   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12CD   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CE   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CF   0080           02331                 movwf INDF                                              ;Save to QUEUE
12D0   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12D1   0000           02333                 nop                                                             ;Wait a cycle
  0000001E            02334                 count = count + 1
12D2   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12D3   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D4   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D5   0080           02331                 movwf INDF                                              ;Save to QUEUE
12D6   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12D7   0000           02333                 nop                                                             ;Wait a cycle
  0000001F            02334                 count = count + 1
12D8   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12D9   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DA   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DB   0080           02331                 movwf INDF                                              ;Save to QUEUE
12DC   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12DD   0000           02333                 nop                                                             ;Wait a cycle
  00000020            02334                 count = count + 1
12DE   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12DF   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E0   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E1   0080           02331                 movwf INDF                                              ;Save to QUEUE
12E2   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12E3   0000           02333                 nop                                                             ;Wait a cycle
  00000021            02334                 count = count + 1
12E4   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12E5   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E6   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E7   0080           02331                 movwf INDF                                              ;Save to QUEUE
12E8   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12E9   0000           02333                 nop                                                             ;Wait a cycle
  00000022            02334                 count = count + 1
12EA   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12EB   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12EC   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12ED   0080           02331                 movwf INDF                                              ;Save to QUEUE
12EE   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12EF   0000           02333                 nop                                                             ;Wait a cycle
  00000023            02334                 count = count + 1
12F0   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12F1   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F2   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F3   0080           02331                 movwf INDF                                              ;Save to QUEUE
12F4   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12F5   0000           02333                 nop                                                             ;Wait a cycle
  00000024            02334                 count = count + 1
12F6   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12F7   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F8   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F9   0080           02331                 movwf INDF                                              ;Save to QUEUE
12FA   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
12FB   0000           02333                 nop                                                             ;Wait a cycle
  00000025            02334                 count = count + 1
12FC   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
12FD   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FE   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FF   0080           02331                 movwf INDF                                              ;Save to QUEUE
1300   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1301   0000           02333                 nop                                                             ;Wait a cycle
  00000026            02334                 count = count + 1
1302   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1303   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1304   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1305   0080           02331                 movwf INDF                                              ;Save to QUEUE
1306   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1307   0000           02333                 nop                                                             ;Wait a cycle
  00000027            02334                 count = count + 1
1308   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1309   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130B   0080           02331                 movwf INDF                                              ;Save to QUEUE
130C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
130D   0000           02333                 nop                                                             ;Wait a cycle
  00000028            02334                 count = count + 1
130E   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
130F   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1310   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1311   0080           02331                 movwf INDF                                              ;Save to QUEUE
1312   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1313   0000           02333                 nop                                                             ;Wait a cycle
  00000029            02334                 count = count + 1
1314   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1315   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1316   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1317   0080           02331                 movwf INDF                                              ;Save to QUEUE
1318   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1319   0000           02333                 nop                                                             ;Wait a cycle
  0000002A            02334                 count = count + 1
131A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
131B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131D   0080           02331                 movwf INDF                                              ;Save to QUEUE
131E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
131F   0000           02333                 nop                                                             ;Wait a cycle
  0000002B            02334                 count = count + 1
1320   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1321   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1322   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1323   0080           02331                 movwf INDF                                              ;Save to QUEUE
1324   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1325   0000           02333                 nop                                                             ;Wait a cycle
  0000002C            02334                 count = count + 1
1326   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1327   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1328   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1329   0080           02331                 movwf INDF                                              ;Save to QUEUE
132A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
132B   0000           02333                 nop                                                             ;Wait a cycle
  0000002D            02334                 count = count + 1
132C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
132D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132F   0080           02331                 movwf INDF                                              ;Save to QUEUE
1330   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1331   0000           02333                 nop                                                             ;Wait a cycle
  0000002E            02334                 count = count + 1
1332   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1333   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1334   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1335   0080           02331                 movwf INDF                                              ;Save to QUEUE
1336   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1337   0000           02333                 nop                                                             ;Wait a cycle
  0000002F            02334                 count = count + 1
1338   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1339   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133B   0080           02331                 movwf INDF                                              ;Save to QUEUE
133C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
133D   0000           02333                 nop                                                             ;Wait a cycle
  00000030            02334                 count = count + 1
133E   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
133F   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1340   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1341   0080           02331                 movwf INDF                                              ;Save to QUEUE
1342   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1343   0000           02333                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000031            02334                 count = count + 1
1344   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1345   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1346   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1347   0080           02331                 movwf INDF                                              ;Save to QUEUE
1348   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1349   0000           02333                 nop                                                             ;Wait a cycle
  00000032            02334                 count = count + 1
134A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
134B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134D   0080           02331                 movwf INDF                                              ;Save to QUEUE
134E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
134F   0000           02333                 nop                                                             ;Wait a cycle
  00000033            02334                 count = count + 1
1350   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1351   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1352   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1353   0080           02331                 movwf INDF                                              ;Save to QUEUE
1354   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1355   0000           02333                 nop                                                             ;Wait a cycle
  00000034            02334                 count = count + 1
1356   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1357   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1358   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1359   0080           02331                 movwf INDF                                              ;Save to QUEUE
135A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
135B   0000           02333                 nop                                                             ;Wait a cycle
  00000035            02334                 count = count + 1
135C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
135D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135F   0080           02331                 movwf INDF                                              ;Save to QUEUE
1360   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1361   0000           02333                 nop                                                             ;Wait a cycle
  00000036            02334                 count = count + 1
1362   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1363   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1364   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1365   0080           02331                 movwf INDF                                              ;Save to QUEUE
1366   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1367   0000           02333                 nop                                                             ;Wait a cycle
  00000037            02334                 count = count + 1
1368   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1369   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136B   0080           02331                 movwf INDF                                              ;Save to QUEUE
136C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
136D   0000           02333                 nop                                                             ;Wait a cycle
  00000038            02334                 count = count + 1
136E   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
136F   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1370   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1371   0080           02331                 movwf INDF                                              ;Save to QUEUE
1372   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1373   0000           02333                 nop                                                             ;Wait a cycle
  00000039            02334                 count = count + 1
1374   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1375   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1376   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1377   0080           02331                 movwf INDF                                              ;Save to QUEUE
1378   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1379   0000           02333                 nop                                                             ;Wait a cycle
  0000003A            02334                 count = count + 1
137A   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
137B   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137C   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137D   0080           02331                 movwf INDF                                              ;Save to QUEUE
137E   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
137F   0000           02333                 nop                                                             ;Wait a cycle
  0000003B            02334                 count = count + 1
1380   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1381   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1382   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1383   0080           02331                 movwf INDF                                              ;Save to QUEUE
1384   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1385   0000           02333                 nop                                                             ;Wait a cycle
  0000003C            02334                 count = count + 1
1386   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1387   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1388   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1389   0080           02331                 movwf INDF                                              ;Save to QUEUE
138A   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
138B   0000           02333                 nop                                                             ;Wait a cycle
  0000003D            02334                 count = count + 1
138C   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
138D   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138E   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138F   0080           02331                 movwf INDF                                              ;Save to QUEUE
1390   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1391   0000           02333                 nop                                                             ;Wait a cycle
  0000003E            02334                 count = count + 1
1392   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1393   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1394   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1395   0080           02331                 movwf INDF                                              ;Save to QUEUE
1396   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
1397   0000           02333                 nop                                                             ;Wait a cycle
  0000003F            02334                 count = count + 1
1398   0808           02328                 movf ADC_DATAPORT, W                    ;Sample
1399   1409           02329                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139A   1009           02330                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139B   0080           02331                 movwf INDF                                              ;Save to QUEUE
139C   0384           02332                 decf FSR, F                                             ;Increment QUEUE pointer
139D   0000           02333                 nop                                                             ;Wait a cycle
  00000040            02334                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02335         endw
139E   0808           02336         movf ADC_DATAPORT, W
139F   1409           02337         bsf ADC_CONTROLPORT, RDD
13A0   1009           02338         bcf ADC_CONTROLPORT, RDD
13A1   0080           02339         movwf INDF
13A2   1783           02340         bsf STATUS, IRP                                         ;goto bank 4
13A3   0000           02341         nop                                                                     ;Wait a cycle
  00000001            02342         count = 1
                      02343         while count < D'44'
13A4   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13A5   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A6   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A7   0080           02347                 movwf INDF                                              ;Save to QUEUE
13A8   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13A9   0000           02349                 nop                                                             ;Wait a cycle
  00000002            02350                 count = count + 1
13AA   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13AB   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AC   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AD   0080           02347                 movwf INDF                                              ;Save to QUEUE
13AE   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13AF   0000           02349                 nop                                                             ;Wait a cycle
  00000003            02350                 count = count + 1
13B0   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13B1   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B2   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B3   0080           02347                 movwf INDF                                              ;Save to QUEUE
13B4   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13B5   0000           02349                 nop                                                             ;Wait a cycle
  00000004            02350                 count = count + 1
13B6   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13B7   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B8   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B9   0080           02347                 movwf INDF                                              ;Save to QUEUE
13BA   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13BB   0000           02349                 nop                                                             ;Wait a cycle
  00000005            02350                 count = count + 1
13BC   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13BD   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BE   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BF   0080           02347                 movwf INDF                                              ;Save to QUEUE
13C0   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13C1   0000           02349                 nop                                                             ;Wait a cycle
  00000006            02350                 count = count + 1
13C2   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13C3   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C4   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C5   0080           02347                 movwf INDF                                              ;Save to QUEUE
13C6   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13C7   0000           02349                 nop                                                             ;Wait a cycle
  00000007            02350                 count = count + 1
13C8   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13C9   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13CA   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CB   0080           02347                 movwf INDF                                              ;Save to QUEUE
13CC   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13CD   0000           02349                 nop                                                             ;Wait a cycle
  00000008            02350                 count = count + 1
13CE   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13CF   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D0   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D1   0080           02347                 movwf INDF                                              ;Save to QUEUE
13D2   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13D3   0000           02349                 nop                                                             ;Wait a cycle
  00000009            02350                 count = count + 1
13D4   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13D5   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D6   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D7   0080           02347                 movwf INDF                                              ;Save to QUEUE
13D8   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13D9   0000           02349                 nop                                                             ;Wait a cycle
  0000000A            02350                 count = count + 1
13DA   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13DB   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DC   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DD   0080           02347                 movwf INDF                                              ;Save to QUEUE
13DE   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13DF   0000           02349                 nop                                                             ;Wait a cycle
  0000000B            02350                 count = count + 1
13E0   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13E1   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E2   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E3   0080           02347                 movwf INDF                                              ;Save to QUEUE
13E4   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13E5   0000           02349                 nop                                                             ;Wait a cycle
  0000000C            02350                 count = count + 1
13E6   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13E7   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E8   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E9   0080           02347                 movwf INDF                                              ;Save to QUEUE
13EA   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13EB   0000           02349                 nop                                                             ;Wait a cycle
  0000000D            02350                 count = count + 1
13EC   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13ED   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EE   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EF   0080           02347                 movwf INDF                                              ;Save to QUEUE
13F0   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13F1   0000           02349                 nop                                                             ;Wait a cycle
  0000000E            02350                 count = count + 1
13F2   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13F3   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F4   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F5   0080           02347                 movwf INDF                                              ;Save to QUEUE
13F6   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13F7   0000           02349                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F            02350                 count = count + 1
13F8   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13F9   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FA   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FB   0080           02347                 movwf INDF                                              ;Save to QUEUE
13FC   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
13FD   0000           02349                 nop                                                             ;Wait a cycle
  00000010            02350                 count = count + 1
13FE   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
13FF   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1400   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1401   0080           02347                 movwf INDF                                              ;Save to QUEUE
1402   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1403   0000           02349                 nop                                                             ;Wait a cycle
  00000011            02350                 count = count + 1
1404   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1405   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1406   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1407   0080           02347                 movwf INDF                                              ;Save to QUEUE
1408   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1409   0000           02349                 nop                                                             ;Wait a cycle
  00000012            02350                 count = count + 1
140A   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
140B   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140C   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140D   0080           02347                 movwf INDF                                              ;Save to QUEUE
140E   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
140F   0000           02349                 nop                                                             ;Wait a cycle
  00000013            02350                 count = count + 1
1410   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1411   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1412   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1413   0080           02347                 movwf INDF                                              ;Save to QUEUE
1414   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1415   0000           02349                 nop                                                             ;Wait a cycle
  00000014            02350                 count = count + 1
1416   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1417   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1418   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1419   0080           02347                 movwf INDF                                              ;Save to QUEUE
141A   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
141B   0000           02349                 nop                                                             ;Wait a cycle
  00000015            02350                 count = count + 1
141C   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
141D   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141E   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141F   0080           02347                 movwf INDF                                              ;Save to QUEUE
1420   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1421   0000           02349                 nop                                                             ;Wait a cycle
  00000016            02350                 count = count + 1
1422   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1423   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1424   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1425   0080           02347                 movwf INDF                                              ;Save to QUEUE
1426   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1427   0000           02349                 nop                                                             ;Wait a cycle
  00000017            02350                 count = count + 1
1428   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1429   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142A   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142B   0080           02347                 movwf INDF                                              ;Save to QUEUE
142C   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
142D   0000           02349                 nop                                                             ;Wait a cycle
  00000018            02350                 count = count + 1
142E   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
142F   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1430   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1431   0080           02347                 movwf INDF                                              ;Save to QUEUE
1432   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1433   0000           02349                 nop                                                             ;Wait a cycle
  00000019            02350                 count = count + 1
1434   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1435   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1436   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1437   0080           02347                 movwf INDF                                              ;Save to QUEUE
1438   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1439   0000           02349                 nop                                                             ;Wait a cycle
  0000001A            02350                 count = count + 1
143A   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
143B   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143C   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143D   0080           02347                 movwf INDF                                              ;Save to QUEUE
143E   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
143F   0000           02349                 nop                                                             ;Wait a cycle
  0000001B            02350                 count = count + 1
1440   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1441   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1442   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1443   0080           02347                 movwf INDF                                              ;Save to QUEUE
1444   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1445   0000           02349                 nop                                                             ;Wait a cycle
  0000001C            02350                 count = count + 1
1446   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1447   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1448   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1449   0080           02347                 movwf INDF                                              ;Save to QUEUE
144A   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
144B   0000           02349                 nop                                                             ;Wait a cycle
  0000001D            02350                 count = count + 1
144C   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
144D   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144E   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144F   0080           02347                 movwf INDF                                              ;Save to QUEUE
1450   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1451   0000           02349                 nop                                                             ;Wait a cycle
  0000001E            02350                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1452   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1453   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1454   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1455   0080           02347                 movwf INDF                                              ;Save to QUEUE
1456   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1457   0000           02349                 nop                                                             ;Wait a cycle
  0000001F            02350                 count = count + 1
1458   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1459   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145A   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145B   0080           02347                 movwf INDF                                              ;Save to QUEUE
145C   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
145D   0000           02349                 nop                                                             ;Wait a cycle
  00000020            02350                 count = count + 1
145E   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
145F   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1460   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1461   0080           02347                 movwf INDF                                              ;Save to QUEUE
1462   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1463   0000           02349                 nop                                                             ;Wait a cycle
  00000021            02350                 count = count + 1
1464   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1465   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1466   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1467   0080           02347                 movwf INDF                                              ;Save to QUEUE
1468   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1469   0000           02349                 nop                                                             ;Wait a cycle
  00000022            02350                 count = count + 1
146A   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
146B   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146C   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146D   0080           02347                 movwf INDF                                              ;Save to QUEUE
146E   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
146F   0000           02349                 nop                                                             ;Wait a cycle
  00000023            02350                 count = count + 1
1470   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1471   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1472   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1473   0080           02347                 movwf INDF                                              ;Save to QUEUE
1474   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1475   0000           02349                 nop                                                             ;Wait a cycle
  00000024            02350                 count = count + 1
1476   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1477   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1478   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1479   0080           02347                 movwf INDF                                              ;Save to QUEUE
147A   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
147B   0000           02349                 nop                                                             ;Wait a cycle
  00000025            02350                 count = count + 1
147C   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
147D   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147E   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147F   0080           02347                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1480   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1481   0000           02349                 nop                                                             ;Wait a cycle
  00000026            02350                 count = count + 1
1482   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1483   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1484   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1485   0080           02347                 movwf INDF                                              ;Save to QUEUE
1486   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1487   0000           02349                 nop                                                             ;Wait a cycle
  00000027            02350                 count = count + 1
1488   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1489   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148A   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148B   0080           02347                 movwf INDF                                              ;Save to QUEUE
148C   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
148D   0000           02349                 nop                                                             ;Wait a cycle
  00000028            02350                 count = count + 1
148E   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
148F   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1490   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1491   0080           02347                 movwf INDF                                              ;Save to QUEUE
1492   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1493   0000           02349                 nop                                                             ;Wait a cycle
  00000029            02350                 count = count + 1
1494   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
1495   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1496   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1497   0080           02347                 movwf INDF                                              ;Save to QUEUE
1498   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
1499   0000           02349                 nop                                                             ;Wait a cycle
  0000002A            02350                 count = count + 1
149A   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
149B   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149C   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149D   0080           02347                 movwf INDF                                              ;Save to QUEUE
149E   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
149F   0000           02349                 nop                                                             ;Wait a cycle
  0000002B            02350                 count = count + 1
14A0   0808           02344                 movf ADC_DATAPORT, W                    ;Sample
14A1   1409           02345                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A2   1009           02346                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A3   0080           02347                 movwf INDF                                              ;Save to QUEUE
14A4   0A84           02348                 incf FSR, F                                             ;Increment QUEUE pointer
14A5   0000           02349                 nop                                                             ;Wait a cycle
  0000002C            02350                 count = count + 1
                      02351         endw
14A6                  02352 Sample833kEnd
                      02353         while count < BUFFERSIZE
14A6   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14A7   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A8   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A9   0080           02357                 movwf INDF                                              ;Save to QUEUE
14AA   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14AB   0000           02359                 nop                                                             ;Wait a cycle
  0000002D            02360                 count = count + 1
14AC   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14AD   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AE   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AF   0080           02357                 movwf INDF                                              ;Save to QUEUE
14B0   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14B1   0000           02359                 nop                                                             ;Wait a cycle
  0000002E            02360                 count = count + 1
14B2   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14B3   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B4   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B5   0080           02357                 movwf INDF                                              ;Save to QUEUE
14B6   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14B7   0000           02359                 nop                                                             ;Wait a cycle
  0000002F            02360                 count = count + 1
14B8   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14B9   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BA   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BB   0080           02357                 movwf INDF                                              ;Save to QUEUE
14BC   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14BD   0000           02359                 nop                                                             ;Wait a cycle
  00000030            02360                 count = count + 1
14BE   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14BF   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C0   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C1   0080           02357                 movwf INDF                                              ;Save to QUEUE
14C2   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14C3   0000           02359                 nop                                                             ;Wait a cycle
  00000031            02360                 count = count + 1
14C4   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14C5   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C6   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C7   0080           02357                 movwf INDF                                              ;Save to QUEUE
14C8   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14C9   0000           02359                 nop                                                             ;Wait a cycle
  00000032            02360                 count = count + 1
14CA   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14CB   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CC   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CD   0080           02357                 movwf INDF                                              ;Save to QUEUE
14CE   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14CF   0000           02359                 nop                                                             ;Wait a cycle
  00000033            02360                 count = count + 1
14D0   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14D1   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D2   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D3   0080           02357                 movwf INDF                                              ;Save to QUEUE
14D4   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14D5   0000           02359                 nop                                                             ;Wait a cycle
  00000034            02360                 count = count + 1
14D6   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14D7   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14D8   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D9   0080           02357                 movwf INDF                                              ;Save to QUEUE
14DA   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14DB   0000           02359                 nop                                                             ;Wait a cycle
  00000035            02360                 count = count + 1
14DC   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14DD   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DE   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DF   0080           02357                 movwf INDF                                              ;Save to QUEUE
14E0   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14E1   0000           02359                 nop                                                             ;Wait a cycle
  00000036            02360                 count = count + 1
14E2   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14E3   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E4   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E5   0080           02357                 movwf INDF                                              ;Save to QUEUE
14E6   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14E7   0000           02359                 nop                                                             ;Wait a cycle
  00000037            02360                 count = count + 1
14E8   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14E9   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EA   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EB   0080           02357                 movwf INDF                                              ;Save to QUEUE
14EC   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14ED   0000           02359                 nop                                                             ;Wait a cycle
  00000038            02360                 count = count + 1
14EE   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14EF   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F0   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F1   0080           02357                 movwf INDF                                              ;Save to QUEUE
14F2   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14F3   0000           02359                 nop                                                             ;Wait a cycle
  00000039            02360                 count = count + 1
14F4   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14F5   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F6   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F7   0080           02357                 movwf INDF                                              ;Save to QUEUE
14F8   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14F9   0000           02359                 nop                                                             ;Wait a cycle
  0000003A            02360                 count = count + 1
14FA   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
14FB   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FC   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FD   0080           02357                 movwf INDF                                              ;Save to QUEUE
14FE   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
14FF   0000           02359                 nop                                                             ;Wait a cycle
  0000003B            02360                 count = count + 1
1500   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
1501   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1502   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1503   0080           02357                 movwf INDF                                              ;Save to QUEUE
1504   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
1505   0000           02359                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003C            02360                 count = count + 1
1506   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
1507   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1508   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1509   0080           02357                 movwf INDF                                              ;Save to QUEUE
150A   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
150B   0000           02359                 nop                                                             ;Wait a cycle
  0000003D            02360                 count = count + 1
150C   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
150D   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150E   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150F   0080           02357                 movwf INDF                                              ;Save to QUEUE
1510   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
1511   0000           02359                 nop                                                             ;Wait a cycle
  0000003E            02360                 count = count + 1
1512   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
1513   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1514   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1515   0080           02357                 movwf INDF                                              ;Save to QUEUE
1516   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
1517   0000           02359                 nop                                                             ;Wait a cycle
  0000003F            02360                 count = count + 1
1518   0808           02354                 movf ADC_DATAPORT, W                    ;Sample
1519   1409           02355                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151A   1009           02356                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151B   0080           02357                 movwf INDF                                              ;Save to QUEUE
151C   0A84           02358                 incf FSR, F                                             ;Increment QUEUE pointer
151D   0000           02359                 nop                                                             ;Wait a cycle
  00000040            02360                 count = count + 1
                      02361         endw
151E   0808           02362         movf ADC_DATAPORT, W
151F   1409           02363         bsf ADC_CONTROLPORT, RDD
1520   1009           02364         bcf ADC_CONTROLPORT, RDD
1521   0080           02365         movwf INDF
1522   1384           02366         bcf FSR, 7                                                      ;goto bank 3
1523   0000           02367         nop                                                                     ;Wait a cycle
  00000001            02368         count = 1
                      02369         while count < BUFFERSIZE
1524   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1525   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1526   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1527   0080           02373                 movwf INDF                                              ;Save to QUEUE
1528   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1529   0000           02375                 nop                                                             ;Wait a cycle
  00000002            02376                 count = count + 1
152A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
152B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152D   0080           02373                 movwf INDF                                              ;Save to QUEUE
152E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
152F   0000           02375                 nop                                                             ;Wait a cycle
  00000003            02376                 count = count + 1
1530   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1531   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1532   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1533   0080           02373                 movwf INDF                                              ;Save to QUEUE
1534   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1535   0000           02375                 nop                                                             ;Wait a cycle
  00000004            02376                 count = count + 1
1536   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1537   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1538   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1539   0080           02373                 movwf INDF                                              ;Save to QUEUE
153A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
153B   0000           02375                 nop                                                             ;Wait a cycle
  00000005            02376                 count = count + 1
153C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
153D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153F   0080           02373                 movwf INDF                                              ;Save to QUEUE
1540   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1541   0000           02375                 nop                                                             ;Wait a cycle
  00000006            02376                 count = count + 1
1542   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1543   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1544   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1545   0080           02373                 movwf INDF                                              ;Save to QUEUE
1546   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1547   0000           02375                 nop                                                             ;Wait a cycle
  00000007            02376                 count = count + 1
1548   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1549   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154B   0080           02373                 movwf INDF                                              ;Save to QUEUE
154C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
154D   0000           02375                 nop                                                             ;Wait a cycle
  00000008            02376                 count = count + 1
154E   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
154F   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1550   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1551   0080           02373                 movwf INDF                                              ;Save to QUEUE
1552   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1553   0000           02375                 nop                                                             ;Wait a cycle
  00000009            02376                 count = count + 1
1554   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1555   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1556   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1557   0080           02373                 movwf INDF                                              ;Save to QUEUE
1558   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1559   0000           02375                 nop                                                             ;Wait a cycle
  0000000A            02376                 count = count + 1
155A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
155B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155D   0080           02373                 movwf INDF                                              ;Save to QUEUE
155E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

155F   0000           02375                 nop                                                             ;Wait a cycle
  0000000B            02376                 count = count + 1
1560   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1561   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1562   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1563   0080           02373                 movwf INDF                                              ;Save to QUEUE
1564   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1565   0000           02375                 nop                                                             ;Wait a cycle
  0000000C            02376                 count = count + 1
1566   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1567   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1568   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1569   0080           02373                 movwf INDF                                              ;Save to QUEUE
156A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
156B   0000           02375                 nop                                                             ;Wait a cycle
  0000000D            02376                 count = count + 1
156C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
156D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156F   0080           02373                 movwf INDF                                              ;Save to QUEUE
1570   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1571   0000           02375                 nop                                                             ;Wait a cycle
  0000000E            02376                 count = count + 1
1572   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1573   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1574   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1575   0080           02373                 movwf INDF                                              ;Save to QUEUE
1576   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1577   0000           02375                 nop                                                             ;Wait a cycle
  0000000F            02376                 count = count + 1
1578   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1579   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157B   0080           02373                 movwf INDF                                              ;Save to QUEUE
157C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
157D   0000           02375                 nop                                                             ;Wait a cycle
  00000010            02376                 count = count + 1
157E   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
157F   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1580   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1581   0080           02373                 movwf INDF                                              ;Save to QUEUE
1582   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1583   0000           02375                 nop                                                             ;Wait a cycle
  00000011            02376                 count = count + 1
1584   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1585   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1586   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1587   0080           02373                 movwf INDF                                              ;Save to QUEUE
1588   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1589   0000           02375                 nop                                                             ;Wait a cycle
  00000012            02376                 count = count + 1
158A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
158B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

158C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158D   0080           02373                 movwf INDF                                              ;Save to QUEUE
158E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
158F   0000           02375                 nop                                                             ;Wait a cycle
  00000013            02376                 count = count + 1
1590   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1591   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1592   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1593   0080           02373                 movwf INDF                                              ;Save to QUEUE
1594   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1595   0000           02375                 nop                                                             ;Wait a cycle
  00000014            02376                 count = count + 1
1596   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1597   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1598   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1599   0080           02373                 movwf INDF                                              ;Save to QUEUE
159A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
159B   0000           02375                 nop                                                             ;Wait a cycle
  00000015            02376                 count = count + 1
159C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
159D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159F   0080           02373                 movwf INDF                                              ;Save to QUEUE
15A0   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15A1   0000           02375                 nop                                                             ;Wait a cycle
  00000016            02376                 count = count + 1
15A2   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15A3   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A4   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A5   0080           02373                 movwf INDF                                              ;Save to QUEUE
15A6   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15A7   0000           02375                 nop                                                             ;Wait a cycle
  00000017            02376                 count = count + 1
15A8   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15A9   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AA   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AB   0080           02373                 movwf INDF                                              ;Save to QUEUE
15AC   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15AD   0000           02375                 nop                                                             ;Wait a cycle
  00000018            02376                 count = count + 1
15AE   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15AF   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B0   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B1   0080           02373                 movwf INDF                                              ;Save to QUEUE
15B2   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15B3   0000           02375                 nop                                                             ;Wait a cycle
  00000019            02376                 count = count + 1
15B4   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15B5   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B6   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B7   0080           02373                 movwf INDF                                              ;Save to QUEUE
15B8   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15B9   0000           02375                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001A            02376                 count = count + 1
15BA   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15BB   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15BC   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BD   0080           02373                 movwf INDF                                              ;Save to QUEUE
15BE   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15BF   0000           02375                 nop                                                             ;Wait a cycle
  0000001B            02376                 count = count + 1
15C0   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15C1   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C2   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C3   0080           02373                 movwf INDF                                              ;Save to QUEUE
15C4   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15C5   0000           02375                 nop                                                             ;Wait a cycle
  0000001C            02376                 count = count + 1
15C6   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15C7   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C8   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C9   0080           02373                 movwf INDF                                              ;Save to QUEUE
15CA   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15CB   0000           02375                 nop                                                             ;Wait a cycle
  0000001D            02376                 count = count + 1
15CC   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15CD   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15CE   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15CF   0080           02373                 movwf INDF                                              ;Save to QUEUE
15D0   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15D1   0000           02375                 nop                                                             ;Wait a cycle
  0000001E            02376                 count = count + 1
15D2   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15D3   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15D4   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15D5   0080           02373                 movwf INDF                                              ;Save to QUEUE
15D6   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15D7   0000           02375                 nop                                                             ;Wait a cycle
  0000001F            02376                 count = count + 1
15D8   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15D9   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15DA   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15DB   0080           02373                 movwf INDF                                              ;Save to QUEUE
15DC   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15DD   0000           02375                 nop                                                             ;Wait a cycle
  00000020            02376                 count = count + 1
15DE   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15DF   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15E0   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15E1   0080           02373                 movwf INDF                                              ;Save to QUEUE
15E2   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15E3   0000           02375                 nop                                                             ;Wait a cycle
  00000021            02376                 count = count + 1
15E4   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15E5   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15E6   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15E7   0080           02373                 movwf INDF                                              ;Save to QUEUE
15E8   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15E9   0000           02375                 nop                                                             ;Wait a cycle
  00000022            02376                 count = count + 1
15EA   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15EB   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15EC   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15ED   0080           02373                 movwf INDF                                              ;Save to QUEUE
15EE   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15EF   0000           02375                 nop                                                             ;Wait a cycle
  00000023            02376                 count = count + 1
15F0   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15F1   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15F2   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15F3   0080           02373                 movwf INDF                                              ;Save to QUEUE
15F4   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15F5   0000           02375                 nop                                                             ;Wait a cycle
  00000024            02376                 count = count + 1
15F6   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15F7   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15F8   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15F9   0080           02373                 movwf INDF                                              ;Save to QUEUE
15FA   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
15FB   0000           02375                 nop                                                             ;Wait a cycle
  00000025            02376                 count = count + 1
15FC   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
15FD   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15FE   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15FF   0080           02373                 movwf INDF                                              ;Save to QUEUE
1600   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1601   0000           02375                 nop                                                             ;Wait a cycle
  00000026            02376                 count = count + 1
1602   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1603   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1604   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1605   0080           02373                 movwf INDF                                              ;Save to QUEUE
1606   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1607   0000           02375                 nop                                                             ;Wait a cycle
  00000027            02376                 count = count + 1
1608   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1609   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
160A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
160B   0080           02373                 movwf INDF                                              ;Save to QUEUE
160C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
160D   0000           02375                 nop                                                             ;Wait a cycle
  00000028            02376                 count = count + 1
160E   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
160F   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1610   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1611   0080           02373                 movwf INDF                                              ;Save to QUEUE
1612   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1613   0000           02375                 nop                                                             ;Wait a cycle
  00000029            02376                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1614   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1615   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1616   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1617   0080           02373                 movwf INDF                                              ;Save to QUEUE
1618   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1619   0000           02375                 nop                                                             ;Wait a cycle
  0000002A            02376                 count = count + 1
161A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
161B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
161C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
161D   0080           02373                 movwf INDF                                              ;Save to QUEUE
161E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
161F   0000           02375                 nop                                                             ;Wait a cycle
  0000002B            02376                 count = count + 1
1620   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1621   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1622   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1623   0080           02373                 movwf INDF                                              ;Save to QUEUE
1624   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1625   0000           02375                 nop                                                             ;Wait a cycle
  0000002C            02376                 count = count + 1
1626   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1627   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1628   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1629   0080           02373                 movwf INDF                                              ;Save to QUEUE
162A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
162B   0000           02375                 nop                                                             ;Wait a cycle
  0000002D            02376                 count = count + 1
162C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
162D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
162E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
162F   0080           02373                 movwf INDF                                              ;Save to QUEUE
1630   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1631   0000           02375                 nop                                                             ;Wait a cycle
  0000002E            02376                 count = count + 1
1632   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1633   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1634   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1635   0080           02373                 movwf INDF                                              ;Save to QUEUE
1636   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1637   0000           02375                 nop                                                             ;Wait a cycle
  0000002F            02376                 count = count + 1
1638   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1639   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
163A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
163B   0080           02373                 movwf INDF                                              ;Save to QUEUE
163C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
163D   0000           02375                 nop                                                             ;Wait a cycle
  00000030            02376                 count = count + 1
163E   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
163F   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1640   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1641   0080           02373                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1642   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1643   0000           02375                 nop                                                             ;Wait a cycle
  00000031            02376                 count = count + 1
1644   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1645   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1646   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1647   0080           02373                 movwf INDF                                              ;Save to QUEUE
1648   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1649   0000           02375                 nop                                                             ;Wait a cycle
  00000032            02376                 count = count + 1
164A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
164B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
164C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
164D   0080           02373                 movwf INDF                                              ;Save to QUEUE
164E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
164F   0000           02375                 nop                                                             ;Wait a cycle
  00000033            02376                 count = count + 1
1650   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1651   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1652   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1653   0080           02373                 movwf INDF                                              ;Save to QUEUE
1654   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1655   0000           02375                 nop                                                             ;Wait a cycle
  00000034            02376                 count = count + 1
1656   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1657   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1658   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1659   0080           02373                 movwf INDF                                              ;Save to QUEUE
165A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
165B   0000           02375                 nop                                                             ;Wait a cycle
  00000035            02376                 count = count + 1
165C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
165D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
165E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
165F   0080           02373                 movwf INDF                                              ;Save to QUEUE
1660   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1661   0000           02375                 nop                                                             ;Wait a cycle
  00000036            02376                 count = count + 1
1662   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1663   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1664   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1665   0080           02373                 movwf INDF                                              ;Save to QUEUE
1666   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1667   0000           02375                 nop                                                             ;Wait a cycle
  00000037            02376                 count = count + 1
1668   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1669   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
166A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
166B   0080           02373                 movwf INDF                                              ;Save to QUEUE
166C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
166D   0000           02375                 nop                                                             ;Wait a cycle
  00000038            02376                 count = count + 1
166E   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

166F   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1670   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1671   0080           02373                 movwf INDF                                              ;Save to QUEUE
1672   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1673   0000           02375                 nop                                                             ;Wait a cycle
  00000039            02376                 count = count + 1
1674   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1675   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1676   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1677   0080           02373                 movwf INDF                                              ;Save to QUEUE
1678   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1679   0000           02375                 nop                                                             ;Wait a cycle
  0000003A            02376                 count = count + 1
167A   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
167B   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
167C   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
167D   0080           02373                 movwf INDF                                              ;Save to QUEUE
167E   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
167F   0000           02375                 nop                                                             ;Wait a cycle
  0000003B            02376                 count = count + 1
1680   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1681   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1682   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1683   0080           02373                 movwf INDF                                              ;Save to QUEUE
1684   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1685   0000           02375                 nop                                                             ;Wait a cycle
  0000003C            02376                 count = count + 1
1686   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1687   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1688   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1689   0080           02373                 movwf INDF                                              ;Save to QUEUE
168A   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
168B   0000           02375                 nop                                                             ;Wait a cycle
  0000003D            02376                 count = count + 1
168C   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
168D   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
168E   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
168F   0080           02373                 movwf INDF                                              ;Save to QUEUE
1690   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1691   0000           02375                 nop                                                             ;Wait a cycle
  0000003E            02376                 count = count + 1
1692   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1693   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1694   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1695   0080           02373                 movwf INDF                                              ;Save to QUEUE
1696   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
1697   0000           02375                 nop                                                             ;Wait a cycle
  0000003F            02376                 count = count + 1
1698   0808           02370                 movf ADC_DATAPORT, W                    ;Sample
1699   1409           02371                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
169A   1009           02372                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
169B   0080           02373                 movwf INDF                                              ;Save to QUEUE
169C   0384           02374                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

169D   0000           02375                 nop                                                             ;Wait a cycle
  00000040            02376                 count = count + 1
                      02377         endw
169E   0808           02378         movf ADC_DATAPORT, W                            ;Last sample
169F   1409           02379         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16A0   118A           02380         bcf PCLATH, 3                                           ;insure correct program memory page
16A1   120A           02381         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
16A2   293A           02382         goto ADCShutdown
                      02383 
                      02384 ;Repetitive sample
                      02385 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      02386 ;-----------------------------------------------------------------------------
16A3                  02387 SampleRep5M
16A3   3016           02388         movlw high SampleRep5MPickSt
16A4   008A           02389         movwf PCLATH
16A5   0879           02390         movf gbl_modetempb, w
16A6   0782           02391         addwf PCL, f
16A7                  02392 SampleRep5MPickSt
                      02393         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
16A7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16A8   118A               M                 bcf PCLATH, 3
                          M         endif
16A9   2EB6               M         goto SampleRep5MStep1
                      02394         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
16AA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16AB   118A               M                 bcf PCLATH, 3
                          M         endif
16AC   2FC6               M         goto SampleRep5MStep2
                      02395         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
16AD   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
16AE   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16AF   28C9               M         goto SampleRep5MStep3
                      02396         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
16B0   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
16B1   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16B2   29CC               M         goto SampleRep5MStep4
                      02397         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
16B3   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
16B4   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16B5   2AD0               M         goto SampleRep5MStep5
16B6                  02398 SampleRep5MPickEn
16B6                  02399 SampleRep5MStep1
16B6   1009           02400         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02401         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
16B7   3020               M     movlw BUFFERMIN
16B8   0084               M     movwf FSR
16B9   0000           02402         nop
  0000                02403         local count
  00000001            02404         count = 1
                      02405         while count < D'52'
16BA   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BB   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BC   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16BD   0080           02409                 movwf INDF                                              ;Save to QUEUE
16BE   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02411                 count = count + 1
16BF   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C0   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C1   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16C2   0080           02409                 movwf INDF                                              ;Save to QUEUE
16C3   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02411                 count = count + 1
16C4   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C5   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16C6   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16C7   0080           02409                 movwf INDF                                              ;Save to QUEUE
16C8   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02411                 count = count + 1
16C9   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CA   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CB   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16CC   0080           02409                 movwf INDF                                              ;Save to QUEUE
16CD   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02411                 count = count + 1
16CE   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CF   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D0   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16D1   0080           02409                 movwf INDF                                              ;Save to QUEUE
16D2   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02411                 count = count + 1
16D3   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D4   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D5   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16D6   0080           02409                 movwf INDF                                              ;Save to QUEUE
16D7   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02411                 count = count + 1
16D8   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D9   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DA   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16DB   0080           02409                 movwf INDF                                              ;Save to QUEUE
16DC   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02411                 count = count + 1
16DD   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16DE   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DF   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16E0   0080           02409                 movwf INDF                                              ;Save to QUEUE
16E1   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02411                 count = count + 1
16E2   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E3   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E4   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16E5   0080           02409                 movwf INDF                                              ;Save to QUEUE
16E6   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02411                 count = count + 1
16E7   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E8   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E9   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16EA   0080           02409                 movwf INDF                                              ;Save to QUEUE
16EB   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02411                 count = count + 1
16EC   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16ED   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16EE   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16EF   0080           02409                 movwf INDF                                              ;Save to QUEUE
16F0   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02411                 count = count + 1
16F1   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16F2   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F3   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16F4   0080           02409                 movwf INDF                                              ;Save to QUEUE
16F5   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02411                 count = count + 1
16F6   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F7   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F8   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16F9   0080           02409                 movwf INDF                                              ;Save to QUEUE
16FA   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02411                 count = count + 1
16FB   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FC   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FD   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
16FE   0080           02409                 movwf INDF                                              ;Save to QUEUE
16FF   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02411                 count = count + 1
1700   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1701   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1702   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1703   0080           02409                 movwf INDF                                              ;Save to QUEUE
1704   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02411                 count = count + 1
1705   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1706   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1707   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1708   0080           02409                 movwf INDF                                              ;Save to QUEUE
1709   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02411                 count = count + 1
170A   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170B   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
170C   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
170D   0080           02409                 movwf INDF                                              ;Save to QUEUE
170E   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02411                 count = count + 1
170F   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1710   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1711   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1712   0080           02409                 movwf INDF                                              ;Save to QUEUE
1713   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02411                 count = count + 1
1714   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1715   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1716   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1717   0080           02409                 movwf INDF                                              ;Save to QUEUE
1718   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02411                 count = count + 1
1719   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171A   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171B   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
171C   0080           02409                 movwf INDF                                              ;Save to QUEUE
171D   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02411                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

171E   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171F   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1720   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1721   0080           02409                 movwf INDF                                              ;Save to QUEUE
1722   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02411                 count = count + 1
1723   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1724   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1725   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1726   0080           02409                 movwf INDF                                              ;Save to QUEUE
1727   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02411                 count = count + 1
1728   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1729   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
172A   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
172B   0080           02409                 movwf INDF                                              ;Save to QUEUE
172C   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02411                 count = count + 1
172D   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
172E   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
172F   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1730   0080           02409                 movwf INDF                                              ;Save to QUEUE
1731   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02411                 count = count + 1
1732   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1733   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1734   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1735   0080           02409                 movwf INDF                                              ;Save to QUEUE
1736   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02411                 count = count + 1
1737   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1738   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1739   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
173A   0080           02409                 movwf INDF                                              ;Save to QUEUE
173B   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02411                 count = count + 1
173C   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
173D   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
173E   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
173F   0080           02409                 movwf INDF                                              ;Save to QUEUE
1740   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02411                 count = count + 1
1741   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1742   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1743   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1744   0080           02409                 movwf INDF                                              ;Save to QUEUE
1745   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02411                 count = count + 1
1746   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1747   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1748   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1749   0080           02409                 movwf INDF                                              ;Save to QUEUE
174A   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            02411                 count = count + 1
174B   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
174C   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
174D   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
174E   0080           02409                 movwf INDF                                              ;Save to QUEUE
174F   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02411                 count = count + 1
1750   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1751   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1752   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1753   0080           02409                 movwf INDF                                              ;Save to QUEUE
1754   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02411                 count = count + 1
1755   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1756   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1757   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1758   0080           02409                 movwf INDF                                              ;Save to QUEUE
1759   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02411                 count = count + 1
175A   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
175B   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
175C   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
175D   0080           02409                 movwf INDF                                              ;Save to QUEUE
175E   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02411                 count = count + 1
175F   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1760   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1761   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1762   0080           02409                 movwf INDF                                              ;Save to QUEUE
1763   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02411                 count = count + 1
1764   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1765   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1766   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1767   0080           02409                 movwf INDF                                              ;Save to QUEUE
1768   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02411                 count = count + 1
1769   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
176A   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
176B   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
176C   0080           02409                 movwf INDF                                              ;Save to QUEUE
176D   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02411                 count = count + 1
176E   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
176F   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1770   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1771   0080           02409                 movwf INDF                                              ;Save to QUEUE
1772   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02411                 count = count + 1
1773   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1774   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1775   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1776   0080           02409                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1777   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02411                 count = count + 1
1778   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1779   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
177A   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
177B   0080           02409                 movwf INDF                                              ;Save to QUEUE
177C   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02411                 count = count + 1
177D   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
177E   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
177F   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1780   0080           02409                 movwf INDF                                              ;Save to QUEUE
1781   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02411                 count = count + 1
1782   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1783   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1784   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1785   0080           02409                 movwf INDF                                              ;Save to QUEUE
1786   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02411                 count = count + 1
1787   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1788   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1789   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
178A   0080           02409                 movwf INDF                                              ;Save to QUEUE
178B   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02411                 count = count + 1
178C   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
178D   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
178E   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
178F   0080           02409                 movwf INDF                                              ;Save to QUEUE
1790   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02411                 count = count + 1
1791   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1792   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1793   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1794   0080           02409                 movwf INDF                                              ;Save to QUEUE
1795   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02411                 count = count + 1
1796   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1797   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1798   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
1799   0080           02409                 movwf INDF                                              ;Save to QUEUE
179A   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02411                 count = count + 1
179B   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
179C   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
179D   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
179E   0080           02409                 movwf INDF                                              ;Save to QUEUE
179F   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02411                 count = count + 1
17A0   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17A1   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17A2   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17A3   0080           02409                 movwf INDF                                              ;Save to QUEUE
17A4   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02411                 count = count + 1
17A5   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17A6   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17A7   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
17A8   0080           02409                 movwf INDF                                              ;Save to QUEUE
17A9   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02411                 count = count + 1
17AA   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17AB   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17AC   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
17AD   0080           02409                 movwf INDF                                              ;Save to QUEUE
17AE   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02411                 count = count + 1
17AF   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17B0   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17B1   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
17B2   0080           02409                 movwf INDF                                              ;Save to QUEUE
17B3   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02411                 count = count + 1
17B4   1409           02406                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17B5   1009           02407                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17B6   0808           02408                 movf ADC_DATAPORT, W                    ;Save Sample
17B7   0080           02409                 movwf INDF                                              ;Save to QUEUE
17B8   0A84           02410                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02411                 count = count + 1
                      02412         endw
17B9   1409           02413         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17BA   0808           02414         movf ADC_DATAPORT, W                            ;Sample
17BB                  02415 SampleRep5MEndA
17BB   0080           02416         movwf INDF
17BC   0A84           02417         incf FSR, F
17BD   2FC0           02418         goto SampleRep5MEndB
17BE                  02419 SampleRep5MEndC
17BE   0080           02420         movwf INDF
17BF   0384           02421         decf FSR, F
17C0                  02422 SampleRep5MEndB
                      02423         ADDLF D'3', gbl_modetempb, f
17C0   3003               M     movlw D'3'
17C1   07F9               M     addwf gbl_modetempb, f
17C2   1486           02424         bsf ADC_PORT, CS
                      02425         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
17C3   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17C4   118A               M                 bcf PCLATH, 3
                          M         endif
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
17C5   288C               M         goto MainB
                      02426         
17C6                  02427 SampleRep5MStep2
17C6   0000           02428         nop
17C7   1009           02429         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17C8   2FC9           02430         goto $ + 1
17C9   0000           02431         nop
  0000                02432         local count
  00000001            02433         count = 1
                      02434         while count < D'12'
17CA   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17CB   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17CC   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17CD   0080           02438                 movwf INDF                                              ;Save to QUEUE
17CE   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02440                 count = count + 1
17CF   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17D0   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17D1   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17D2   0080           02438                 movwf INDF                                              ;Save to QUEUE
17D3   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02440                 count = count + 1
17D4   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17D5   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17D6   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17D7   0080           02438                 movwf INDF                                              ;Save to QUEUE
17D8   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02440                 count = count + 1
17D9   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17DA   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17DB   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17DC   0080           02438                 movwf INDF                                              ;Save to QUEUE
17DD   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02440                 count = count + 1
17DE   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17DF   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17E0   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17E1   0080           02438                 movwf INDF                                              ;Save to QUEUE
17E2   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02440                 count = count + 1
17E3   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17E4   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17E5   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17E6   0080           02438                 movwf INDF                                              ;Save to QUEUE
17E7   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02440                 count = count + 1
17E8   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17E9   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17EA   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17EB   0080           02438                 movwf INDF                                              ;Save to QUEUE
17EC   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02440                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17ED   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17EE   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17EF   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17F0   0080           02438                 movwf INDF                                              ;Save to QUEUE
17F1   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02440                 count = count + 1
17F2   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17F3   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17F4   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17F5   0080           02438                 movwf INDF                                              ;Save to QUEUE
17F6   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02440                 count = count + 1
17F7   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17F8   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17F9   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17FA   0080           02438                 movwf INDF                                              ;Save to QUEUE
17FB   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02440                 count = count + 1
17FC   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17FD   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17FE   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17FF   0080           02438                 movwf INDF                                              ;Save to QUEUE
1800   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02440                 count = count + 1
                      02441         endw
1801   1409           02442         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1802   1009           02443         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1803   0808           02444         movf ADC_DATAPORT, W                            ;Sample
1804   0080           02445         movwf INDF
1805   1784           02446         bsf FSR, 7                                                      ;goto bank 2
  00000001            02447         count = 1
                      02448         while count < D'39'
1806   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1807   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1808   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1809   0080           02452                 movwf INDF                                              ;Save to QUEUE
180A   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02454                 count = count + 1
180B   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180C   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180D   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
180E   0080           02452                 movwf INDF                                              ;Save to QUEUE
180F   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02454                 count = count + 1
1810   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1811   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1812   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1813   0080           02452                 movwf INDF                                              ;Save to QUEUE
1814   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02454                 count = count + 1
1815   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1816   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1817   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1818   0080           02452                 movwf INDF                                              ;Save to QUEUE
1819   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02454                 count = count + 1
181A   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181B   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181C   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
181D   0080           02452                 movwf INDF                                              ;Save to QUEUE
181E   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02454                 count = count + 1
181F   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1820   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1821   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1822   0080           02452                 movwf INDF                                              ;Save to QUEUE
1823   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02454                 count = count + 1
1824   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1825   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1826   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1827   0080           02452                 movwf INDF                                              ;Save to QUEUE
1828   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02454                 count = count + 1
1829   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182A   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182B   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
182C   0080           02452                 movwf INDF                                              ;Save to QUEUE
182D   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02454                 count = count + 1
182E   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182F   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1830   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1831   0080           02452                 movwf INDF                                              ;Save to QUEUE
1832   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02454                 count = count + 1
1833   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1834   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1835   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1836   0080           02452                 movwf INDF                                              ;Save to QUEUE
1837   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02454                 count = count + 1
1838   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1839   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183A   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
183B   0080           02452                 movwf INDF                                              ;Save to QUEUE
183C   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02454                 count = count + 1
183D   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183E   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183F   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1840   0080           02452                 movwf INDF                                              ;Save to QUEUE
1841   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02454                 count = count + 1
1842   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1843   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1844   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1845   0080           02452                 movwf INDF                                              ;Save to QUEUE
1846   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02454                 count = count + 1
1847   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1848   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1849   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
184A   0080           02452                 movwf INDF                                              ;Save to QUEUE
184B   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02454                 count = count + 1
184C   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184D   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184E   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
184F   0080           02452                 movwf INDF                                              ;Save to QUEUE
1850   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02454                 count = count + 1
1851   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1852   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1853   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1854   0080           02452                 movwf INDF                                              ;Save to QUEUE
1855   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02454                 count = count + 1
1856   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1857   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1858   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1859   0080           02452                 movwf INDF                                              ;Save to QUEUE
185A   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02454                 count = count + 1
185B   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185C   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185D   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
185E   0080           02452                 movwf INDF                                              ;Save to QUEUE
185F   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02454                 count = count + 1
1860   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1861   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1862   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1863   0080           02452                 movwf INDF                                              ;Save to QUEUE
1864   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02454                 count = count + 1
1865   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1866   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1867   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1868   0080           02452                 movwf INDF                                              ;Save to QUEUE
1869   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02454                 count = count + 1
186A   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186B   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186C   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
186D   0080           02452                 movwf INDF                                              ;Save to QUEUE
186E   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02454                 count = count + 1
186F   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1870   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1871   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1872   0080           02452                 movwf INDF                                              ;Save to QUEUE
1873   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02454                 count = count + 1
1874   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1875   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1876   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1877   0080           02452                 movwf INDF                                              ;Save to QUEUE
1878   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02454                 count = count + 1
1879   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187A   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187B   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
187C   0080           02452                 movwf INDF                                              ;Save to QUEUE
187D   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02454                 count = count + 1
187E   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187F   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1880   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1881   0080           02452                 movwf INDF                                              ;Save to QUEUE
1882   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02454                 count = count + 1
1883   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1884   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1885   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1886   0080           02452                 movwf INDF                                              ;Save to QUEUE
1887   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02454                 count = count + 1
1888   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1889   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188A   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
188B   0080           02452                 movwf INDF                                              ;Save to QUEUE
188C   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02454                 count = count + 1
188D   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188E   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188F   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1890   0080           02452                 movwf INDF                                              ;Save to QUEUE
1891   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02454                 count = count + 1
1892   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1893   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1894   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
1895   0080           02452                 movwf INDF                                              ;Save to QUEUE
1896   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02454                 count = count + 1
1897   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1898   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1899   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
189A   0080           02452                 movwf INDF                                              ;Save to QUEUE
189B   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02454                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

189C   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189D   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189E   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
189F   0080           02452                 movwf INDF                                              ;Save to QUEUE
18A0   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02454                 count = count + 1
18A1   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A2   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A3   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18A4   0080           02452                 movwf INDF                                              ;Save to QUEUE
18A5   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02454                 count = count + 1
18A6   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A7   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A8   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18A9   0080           02452                 movwf INDF                                              ;Save to QUEUE
18AA   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02454                 count = count + 1
18AB   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AC   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AD   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18AE   0080           02452                 movwf INDF                                              ;Save to QUEUE
18AF   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02454                 count = count + 1
18B0   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B1   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B2   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18B3   0080           02452                 movwf INDF                                              ;Save to QUEUE
18B4   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02454                 count = count + 1
18B5   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B6   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B7   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18B8   0080           02452                 movwf INDF                                              ;Save to QUEUE
18B9   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02454                 count = count + 1
18BA   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BB   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BC   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18BD   0080           02452                 movwf INDF                                              ;Save to QUEUE
18BE   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02454                 count = count + 1
18BF   1409           02449                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C0   1009           02450                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C1   0808           02451                 movf ADC_DATAPORT, W                    ;Sample
18C2   0080           02452                 movwf INDF                                              ;Save to QUEUE
18C3   0384           02453                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02454                 count = count + 1
                      02455         endw
18C4   1409           02456         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
18C5   0808           02457         movf ADC_DATAPORT, W                            ;Sample
                      02458         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18C6   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18C7   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18C8   2FBE               M         goto SampleRep5MEndC
                      02459         
18C9                  02460 SampleRep5MStep3
18C9   28CA           02461         goto $ + 1
18CA   1009           02462         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18CB   28CC           02463         goto $ + 1
18CC   0000           02464         nop
  0000                02465         local count
  00000001            02466         count = 1
                      02467         while count < D'25'
18CD   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CE   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CF   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18D0   0080           02471                 movwf INDF                                              ;Save to QUEUE
18D1   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02473                 count = count + 1
18D2   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D3   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D4   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18D5   0080           02471                 movwf INDF                                              ;Save to QUEUE
18D6   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02473                 count = count + 1
18D7   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D8   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D9   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18DA   0080           02471                 movwf INDF                                              ;Save to QUEUE
18DB   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02473                 count = count + 1
18DC   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DD   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DE   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18DF   0080           02471                 movwf INDF                                              ;Save to QUEUE
18E0   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02473                 count = count + 1
18E1   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E2   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E3   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18E4   0080           02471                 movwf INDF                                              ;Save to QUEUE
18E5   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02473                 count = count + 1
18E6   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E7   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E8   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18E9   0080           02471                 movwf INDF                                              ;Save to QUEUE
18EA   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02473                 count = count + 1
18EB   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18EC   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18ED   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18EE   0080           02471                 movwf INDF                                              ;Save to QUEUE
18EF   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02473                 count = count + 1
18F0   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F1   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F2   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18F3   0080           02471                 movwf INDF                                              ;Save to QUEUE
18F4   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02473                 count = count + 1
18F5   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F6   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F7   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18F8   0080           02471                 movwf INDF                                              ;Save to QUEUE
18F9   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02473                 count = count + 1
18FA   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FB   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FC   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
18FD   0080           02471                 movwf INDF                                              ;Save to QUEUE
18FE   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02473                 count = count + 1
18FF   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1900   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1901   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1902   0080           02471                 movwf INDF                                              ;Save to QUEUE
1903   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02473                 count = count + 1
1904   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1905   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1906   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1907   0080           02471                 movwf INDF                                              ;Save to QUEUE
1908   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02473                 count = count + 1
1909   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190A   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190B   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
190C   0080           02471                 movwf INDF                                              ;Save to QUEUE
190D   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02473                 count = count + 1
190E   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190F   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1910   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1911   0080           02471                 movwf INDF                                              ;Save to QUEUE
1912   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02473                 count = count + 1
1913   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1914   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1915   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1916   0080           02471                 movwf INDF                                              ;Save to QUEUE
1917   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02473                 count = count + 1
1918   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1919   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191A   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
191B   0080           02471                 movwf INDF                                              ;Save to QUEUE
191C   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02473                 count = count + 1
191D   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191E   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191F   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1920   0080           02471                 movwf INDF                                              ;Save to QUEUE
1921   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02473                 count = count + 1
1922   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1923   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1924   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1925   0080           02471                 movwf INDF                                              ;Save to QUEUE
1926   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02473                 count = count + 1
1927   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1928   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1929   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
192A   0080           02471                 movwf INDF                                              ;Save to QUEUE
192B   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02473                 count = count + 1
192C   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192D   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192E   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
192F   0080           02471                 movwf INDF                                              ;Save to QUEUE
1930   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02473                 count = count + 1
1931   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1932   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1933   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1934   0080           02471                 movwf INDF                                              ;Save to QUEUE
1935   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02473                 count = count + 1
1936   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1937   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1938   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1939   0080           02471                 movwf INDF                                              ;Save to QUEUE
193A   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02473                 count = count + 1
193B   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193C   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193D   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
193E   0080           02471                 movwf INDF                                              ;Save to QUEUE
193F   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02473                 count = count + 1
1940   1409           02468                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1941   1009           02469                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1942   0808           02470                 movf ADC_DATAPORT, W                    ;Sample
1943   0080           02471                 movwf INDF                                              ;Save to QUEUE
1944   0384           02472                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02473                 count = count + 1
                      02474         endw
1945   1409           02475         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1946   1009           02476         bcf ADC_CONTROLPORT, RDD
1947   0808           02477         movf ADC_DATAPORT, W                            ;Sample
1948   0080           02478         movwf INDF
1949   1783           02479         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02480         count = 1
                      02481         while count < D'26'
194A   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194B   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194C   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
194D   0080           02485                 movwf INDF                                              ;Save to QUEUE
194E   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02487                 count = count + 1
194F   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1950   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1951   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1952   0080           02485                 movwf INDF                                              ;Save to QUEUE
1953   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02487                 count = count + 1
1954   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1955   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1956   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1957   0080           02485                 movwf INDF                                              ;Save to QUEUE
1958   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02487                 count = count + 1
1959   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195A   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195B   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
195C   0080           02485                 movwf INDF                                              ;Save to QUEUE
195D   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02487                 count = count + 1
195E   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195F   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1960   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1961   0080           02485                 movwf INDF                                              ;Save to QUEUE
1962   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02487                 count = count + 1
1963   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1964   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1965   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1966   0080           02485                 movwf INDF                                              ;Save to QUEUE
1967   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02487                 count = count + 1
1968   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1969   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196A   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
196B   0080           02485                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

196C   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02487                 count = count + 1
196D   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196E   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196F   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1970   0080           02485                 movwf INDF                                              ;Save to QUEUE
1971   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02487                 count = count + 1
1972   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1973   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1974   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1975   0080           02485                 movwf INDF                                              ;Save to QUEUE
1976   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02487                 count = count + 1
1977   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1978   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1979   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
197A   0080           02485                 movwf INDF                                              ;Save to QUEUE
197B   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02487                 count = count + 1
197C   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197D   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197E   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
197F   0080           02485                 movwf INDF                                              ;Save to QUEUE
1980   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02487                 count = count + 1
1981   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1982   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1983   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1984   0080           02485                 movwf INDF                                              ;Save to QUEUE
1985   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02487                 count = count + 1
1986   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1987   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1988   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1989   0080           02485                 movwf INDF                                              ;Save to QUEUE
198A   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02487                 count = count + 1
198B   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198C   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198D   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
198E   0080           02485                 movwf INDF                                              ;Save to QUEUE
198F   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02487                 count = count + 1
1990   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1991   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1992   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
1993   0080           02485                 movwf INDF                                              ;Save to QUEUE
1994   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02487                 count = count + 1
1995   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1996   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1997   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1998   0080           02485                 movwf INDF                                              ;Save to QUEUE
1999   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02487                 count = count + 1
199A   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199B   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199C   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
199D   0080           02485                 movwf INDF                                              ;Save to QUEUE
199E   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02487                 count = count + 1
199F   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A0   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A1   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19A2   0080           02485                 movwf INDF                                              ;Save to QUEUE
19A3   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02487                 count = count + 1
19A4   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A5   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A6   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19A7   0080           02485                 movwf INDF                                              ;Save to QUEUE
19A8   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02487                 count = count + 1
19A9   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AA   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19AB   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19AC   0080           02485                 movwf INDF                                              ;Save to QUEUE
19AD   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02487                 count = count + 1
19AE   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AF   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B0   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19B1   0080           02485                 movwf INDF                                              ;Save to QUEUE
19B2   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02487                 count = count + 1
19B3   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B4   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B5   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19B6   0080           02485                 movwf INDF                                              ;Save to QUEUE
19B7   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02487                 count = count + 1
19B8   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B9   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BA   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19BB   0080           02485                 movwf INDF                                              ;Save to QUEUE
19BC   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02487                 count = count + 1
19BD   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BE   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BF   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19C0   0080           02485                 movwf INDF                                              ;Save to QUEUE
19C1   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02487                 count = count + 1
19C2   1409           02482                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C3   1009           02483                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19C4   0808           02484                 movf ADC_DATAPORT, W                    ;Sample
19C5   0080           02485                 movwf INDF                                              ;Save to QUEUE
19C6   0A84           02486                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02487                 count = count + 1
                      02488         endw
19C7   1409           02489         bsf ADC_CONTROLPORT, RDD
19C8   0808           02490         movf ADC_DATAPORT, W                            ;Sample
                      02491         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
19C9   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19CA   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19CB   2FBB               M         goto SampleRep5MEndA
                      02492         
19CC                  02493 SampleRep5MStep4
19CC   29CD           02494         goto $ + 1
19CD   0000           02495         nop
19CE   1009           02496         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
19CF   29D0           02497         goto $ + 1
19D0   0000           02498         nop
  0000                02499         local count
  00000001            02500         count = 1
                      02501         while count < D'38'
19D1   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D2   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D3   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19D4   0080           02505                 movwf INDF                                              ;Save to QUEUE
19D5   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02507                 count = count + 1
19D6   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D7   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D8   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19D9   0080           02505                 movwf INDF                                              ;Save to QUEUE
19DA   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02507                 count = count + 1
19DB   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DC   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DD   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19DE   0080           02505                 movwf INDF                                              ;Save to QUEUE
19DF   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02507                 count = count + 1
19E0   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E1   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E2   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19E3   0080           02505                 movwf INDF                                              ;Save to QUEUE
19E4   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000005            02507                 count = count + 1
19E5   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E6   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E7   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19E8   0080           02505                 movwf INDF                                              ;Save to QUEUE
19E9   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02507                 count = count + 1
19EA   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19EB   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19EC   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19ED   0080           02505                 movwf INDF                                              ;Save to QUEUE
19EE   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02507                 count = count + 1
19EF   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F0   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F1   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19F2   0080           02505                 movwf INDF                                              ;Save to QUEUE
19F3   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02507                 count = count + 1
19F4   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F5   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F6   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19F7   0080           02505                 movwf INDF                                              ;Save to QUEUE
19F8   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02507                 count = count + 1
19F9   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19FA   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19FB   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
19FC   0080           02505                 movwf INDF                                              ;Save to QUEUE
19FD   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02507                 count = count + 1
19FE   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19FF   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A00   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A01   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A02   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02507                 count = count + 1
1A03   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A04   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A05   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A06   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A07   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02507                 count = count + 1
1A08   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A09   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A0A   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A0B   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A0C   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02507                 count = count + 1
1A0D   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A0E   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A0F   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A10   0080           02505                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A11   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02507                 count = count + 1
1A12   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A13   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A14   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A15   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A16   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02507                 count = count + 1
1A17   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A18   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A19   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A1A   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A1B   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02507                 count = count + 1
1A1C   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A1D   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A1E   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A1F   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A20   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02507                 count = count + 1
1A21   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A22   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A23   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A24   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A25   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02507                 count = count + 1
1A26   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A27   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A28   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A29   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A2A   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02507                 count = count + 1
1A2B   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A2C   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A2D   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A2E   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A2F   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02507                 count = count + 1
1A30   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A31   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A32   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A33   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A34   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02507                 count = count + 1
1A35   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A36   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A37   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A38   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A39   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02507                 count = count + 1
1A3A   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A3B   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A3C   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A3D   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A3E   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02507                 count = count + 1
1A3F   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A40   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A41   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A42   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A43   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02507                 count = count + 1
1A44   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A45   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A46   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A47   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A48   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02507                 count = count + 1
1A49   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A4A   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A4B   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A4C   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A4D   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02507                 count = count + 1
1A4E   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A4F   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A50   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A51   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A52   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02507                 count = count + 1
1A53   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A54   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A55   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A56   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A57   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02507                 count = count + 1
1A58   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A59   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A5A   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A5B   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A5C   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02507                 count = count + 1
1A5D   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A5E   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A5F   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A60   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A61   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02507                 count = count + 1
1A62   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A63   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A64   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A65   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A66   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02507                 count = count + 1
1A67   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A68   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A69   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A6A   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A6B   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02507                 count = count + 1
1A6C   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A6D   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A6E   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A6F   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A70   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02507                 count = count + 1
1A71   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A72   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A73   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A74   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A75   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02507                 count = count + 1
1A76   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A77   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A78   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A79   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A7A   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02507                 count = count + 1
1A7B   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A7C   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A7D   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A7E   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A7F   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02507                 count = count + 1
1A80   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A81   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A82   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A83   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A84   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02507                 count = count + 1
1A85   1409           02502                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A86   1009           02503                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A87   0808           02504                 movf ADC_DATAPORT, W                    ;Sample
1A88   0080           02505                 movwf INDF                                              ;Save to QUEUE
1A89   0A84           02506                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02507                 count = count + 1
                      02508         endw
1A8A   1409           02509         bsf ADC_CONTROLPORT, RDD
1A8B   1009           02510         bcf ADC_CONTROLPORT, RDD
1A8C   0808           02511         movf ADC_DATAPORT, W                            ;Sample
1A8D   0080           02512         movwf INDF
1A8E   1384           02513         bcf FSR, 7                                                      ;goto bank 3
  00000001            02514         count = 1
                      02515         while count < D'13'
1A8F   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A90   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A91   0808           02518                 movf ADC_DATAPORT, W
1A92   0080           02519                 movwf INDF                                              ;Save to QUEUE
1A93   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            02521                 count = count + 1
1A94   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A95   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A96   0808           02518                 movf ADC_DATAPORT, W
1A97   0080           02519                 movwf INDF                                              ;Save to QUEUE
1A98   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02521                 count = count + 1
1A99   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A9A   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A9B   0808           02518                 movf ADC_DATAPORT, W
1A9C   0080           02519                 movwf INDF                                              ;Save to QUEUE
1A9D   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02521                 count = count + 1
1A9E   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A9F   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA0   0808           02518                 movf ADC_DATAPORT, W
1AA1   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AA2   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02521                 count = count + 1
1AA3   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA4   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA5   0808           02518                 movf ADC_DATAPORT, W
1AA6   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AA7   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02521                 count = count + 1
1AA8   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA9   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AAA   0808           02518                 movf ADC_DATAPORT, W
1AAB   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AAC   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02521                 count = count + 1
1AAD   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AAE   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AAF   0808           02518                 movf ADC_DATAPORT, W
1AB0   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AB1   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02521                 count = count + 1
1AB2   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AB3   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AB4   0808           02518                 movf ADC_DATAPORT, W
1AB5   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AB6   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02521                 count = count + 1
1AB7   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AB8   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AB9   0808           02518                 movf ADC_DATAPORT, W
1ABA   0080           02519                 movwf INDF                                              ;Save to QUEUE
1ABB   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02521                 count = count + 1
1ABC   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ABD   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ABE   0808           02518                 movf ADC_DATAPORT, W
1ABF   0080           02519                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AC0   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02521                 count = count + 1
1AC1   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC2   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC3   0808           02518                 movf ADC_DATAPORT, W
1AC4   0080           02519                 movwf INDF                                              ;Save to QUEUE
1AC5   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02521                 count = count + 1
1AC6   1409           02516                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC7   1009           02517                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC8   0808           02518                 movf ADC_DATAPORT, W
1AC9   0080           02519                 movwf INDF                                              ;Save to QUEUE
1ACA   0384           02520                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02521                 count = count + 1
                      02522         endw
1ACB   1409           02523         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1ACC   0808           02524         movf ADC_DATAPORT, W                            ;Sample
                      02525         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1ACD   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1ACE   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1ACF   2FBE               M         goto SampleRep5MEndC
                      02526 
1AD0                  02527 SampleRep5MStep5
1AD0   2AD1           02528         goto $ + 1
                      02529         if (Sample1MhzEnd & (0x1000))
                      02530                 bsf PCLATH, 4
                      02531         else
1AD1   120A           02532                 bcf PCLATH, 4
                      02533         endif
                      02534         if (Sample1MhzEnd & (0x800))
1AD2   158A           02535                 bsf PCLATH, 3
                      02536         else
                      02537                 bcf PCLATH, 3
                      02538         endif
1AD3   1009           02539         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1AD4   0000           02540         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1AD5   299E           02541         goto Sample1MhzEnd
                      02542         
                      02543 ;Repetitive sample
                      02544 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02545 ;-----------------------------------------------------------------------------
1AD6                  02546 SampleRep2M
1AD6   301A           02547         movlw high SampleRep2MPickSt
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AD7   008A           02548         movwf PCLATH
1AD8   0879           02549         movf gbl_modetempb, w
1AD9   0782           02550         addwf PCL, f
1ADA                  02551 SampleRep2MPickSt
                      02552         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
1ADA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
1ADB   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1ADC   2AE3               M         goto SampleRep2MStep1
                      02553         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
1ADD   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
1ADE   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1ADF   2CEA               M         goto SampleRep2MStep2
                      02554         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
1AE0   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1AE1   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1AE2   2EEB               M         goto SampleRep2MStep3
1AE3                  02555 SampleRep2MPickEn
1AE3                  02556 SampleRep2MStep1
1AE3   1009           02557         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02558         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1AE4   3020               M     movlw BUFFERMIN
1AE5   0084               M     movwf FSR
1AE6   0000           02559         nop
  0000                02560         local count
  00000001            02561         count = 1
                      02562         while count < BUFFERSIZE
1AE7   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1AE8   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE9   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AEA   0080           02566                 movwf INDF                                              ;Save to QUEUE
1AEB   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1AEC   0000           02568                 nop
  00000002            02569                 count = count + 1
1AED   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1AEE   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEF   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF0   0080           02566                 movwf INDF                                              ;Save to QUEUE
1AF1   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1AF2   0000           02568                 nop
  00000003            02569                 count = count + 1
1AF3   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1AF4   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF5   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF6   0080           02566                 movwf INDF                                              ;Save to QUEUE
1AF7   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1AF8   0000           02568                 nop
  00000004            02569                 count = count + 1
1AF9   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1AFA   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFB   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFC   0080           02566                 movwf INDF                                              ;Save to QUEUE
1AFD   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1AFE   0000           02568                 nop
  00000005            02569                 count = count + 1
1AFF   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B00   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B01   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B02   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B03   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B04   0000           02568                 nop
  00000006            02569                 count = count + 1
1B05   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B06   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B07   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B08   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B09   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B0A   0000           02568                 nop
  00000007            02569                 count = count + 1
1B0B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B0C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B0F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B10   0000           02568                 nop
  00000008            02569                 count = count + 1
1B11   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B12   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B13   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B14   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B15   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B16   0000           02568                 nop
  00000009            02569                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B17   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B18   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B19   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1A   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B1B   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B1C   0000           02568                 nop
  0000000A            02569                 count = count + 1
1B1D   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B1E   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1F   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B20   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B21   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B22   0000           02568                 nop
  0000000B            02569                 count = count + 1
1B23   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B24   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B25   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B26   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B27   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B28   0000           02568                 nop
  0000000C            02569                 count = count + 1
1B29   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B2A   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2B   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2C   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B2D   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B2E   0000           02568                 nop
  0000000D            02569                 count = count + 1
1B2F   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B30   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B31   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B32   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B33   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B34   0000           02568                 nop
  0000000E            02569                 count = count + 1
1B35   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B36   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B37   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B38   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B39   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B3A   0000           02568                 nop
  0000000F            02569                 count = count + 1
1B3B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B3C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B3F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B40   0000           02568                 nop
  00000010            02569                 count = count + 1
1B41   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B42   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B43   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B44   0080           02566                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B45   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B46   0000           02568                 nop
  00000011            02569                 count = count + 1
1B47   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B48   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B49   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4A   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B4B   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B4C   0000           02568                 nop
  00000012            02569                 count = count + 1
1B4D   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B4E   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4F   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B50   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B51   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B52   0000           02568                 nop
  00000013            02569                 count = count + 1
1B53   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B54   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B55   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B56   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B57   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B58   0000           02568                 nop
  00000014            02569                 count = count + 1
1B59   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B5A   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5B   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5C   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B5D   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B5E   0000           02568                 nop
  00000015            02569                 count = count + 1
1B5F   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B60   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B61   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B62   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B63   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B64   0000           02568                 nop
  00000016            02569                 count = count + 1
1B65   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B66   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B67   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B68   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B69   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B6A   0000           02568                 nop
  00000017            02569                 count = count + 1
1B6B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B6C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B6F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B70   0000           02568                 nop
  00000018            02569                 count = count + 1
1B71   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B72   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B73   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B74   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B75   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B76   0000           02568                 nop
  00000019            02569                 count = count + 1
1B77   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B78   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B79   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7A   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B7B   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B7C   0000           02568                 nop
  0000001A            02569                 count = count + 1
1B7D   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B7E   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7F   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B80   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B81   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B82   0000           02568                 nop
  0000001B            02569                 count = count + 1
1B83   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B84   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B85   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B86   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B87   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B88   0000           02568                 nop
  0000001C            02569                 count = count + 1
1B89   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B8A   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B8B   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B8C   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B8D   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B8E   0000           02568                 nop
  0000001D            02569                 count = count + 1
1B8F   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B90   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B91   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B92   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B93   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B94   0000           02568                 nop
  0000001E            02569                 count = count + 1
1B95   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B96   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B97   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B98   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B99   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1B9A   0000           02568                 nop
  0000001F            02569                 count = count + 1
1B9B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1B9C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B9D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B9E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1B9F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BA0   0000           02568                 nop
  00000020            02569                 count = count + 1
1BA1   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BA2   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BA3   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BA4   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BA5   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BA6   0000           02568                 nop
  00000021            02569                 count = count + 1
1BA7   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BA8   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BA9   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BAA   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BAB   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BAC   0000           02568                 nop
  00000022            02569                 count = count + 1
1BAD   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BAE   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BAF   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BB0   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BB1   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BB2   0000           02568                 nop
  00000023            02569                 count = count + 1
1BB3   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BB4   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BB5   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BB6   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BB7   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BB8   0000           02568                 nop
  00000024            02569                 count = count + 1
1BB9   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BBA   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BBB   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BBC   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BBD   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BBE   0000           02568                 nop
  00000025            02569                 count = count + 1
1BBF   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BC0   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BC1   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BC2   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BC3   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BC4   0000           02568                 nop
  00000026            02569                 count = count + 1
1BC5   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BC6   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BC7   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BC8   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BC9   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BCA   0000           02568                 nop
  00000027            02569                 count = count + 1
1BCB   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BCC   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BCD   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BCE   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BCF   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BD0   0000           02568                 nop
  00000028            02569                 count = count + 1
1BD1   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BD2   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BD3   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BD4   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BD5   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BD6   0000           02568                 nop
  00000029            02569                 count = count + 1
1BD7   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BD8   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BD9   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BDA   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BDB   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BDC   0000           02568                 nop
  0000002A            02569                 count = count + 1
1BDD   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BDE   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BDF   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BE0   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BE1   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BE2   0000           02568                 nop
  0000002B            02569                 count = count + 1
1BE3   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BE4   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BE5   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BE6   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BE7   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BE8   0000           02568                 nop
  0000002C            02569                 count = count + 1
1BE9   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BEA   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BEB   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BEC   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BED   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BEE   0000           02568                 nop
  0000002D            02569                 count = count + 1
1BEF   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BF0   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BF1   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BF2   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BF3   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BF4   0000           02568                 nop
  0000002E            02569                 count = count + 1
1BF5   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BF6   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BF7   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BF8   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BF9   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1BFA   0000           02568                 nop
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002F            02569                 count = count + 1
1BFB   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1BFC   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BFD   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BFE   0080           02566                 movwf INDF                                              ;Save to QUEUE
1BFF   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C00   0000           02568                 nop
  00000030            02569                 count = count + 1
1C01   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C02   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C03   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C04   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C05   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C06   0000           02568                 nop
  00000031            02569                 count = count + 1
1C07   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C08   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C09   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C0A   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C0B   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C0C   0000           02568                 nop
  00000032            02569                 count = count + 1
1C0D   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C0E   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C0F   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C10   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C11   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C12   0000           02568                 nop
  00000033            02569                 count = count + 1
1C13   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C14   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C15   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C16   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C17   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C18   0000           02568                 nop
  00000034            02569                 count = count + 1
1C19   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C1A   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C1B   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C1C   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C1D   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C1E   0000           02568                 nop
  00000035            02569                 count = count + 1
1C1F   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C20   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C21   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C22   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C23   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C24   0000           02568                 nop
  00000036            02569                 count = count + 1
1C25   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C26   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C27   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C28   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C29   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C2A   0000           02568                 nop
  00000037            02569                 count = count + 1
1C2B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C2C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C2D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C2E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C2F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C30   0000           02568                 nop
  00000038            02569                 count = count + 1
1C31   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C32   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C33   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C34   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C35   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C36   0000           02568                 nop
  00000039            02569                 count = count + 1
1C37   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C38   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C39   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C3A   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C3B   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C3C   0000           02568                 nop
  0000003A            02569                 count = count + 1
1C3D   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C3E   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C3F   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C40   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C41   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C42   0000           02568                 nop
  0000003B            02569                 count = count + 1
1C43   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C44   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C45   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C46   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C47   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C48   0000           02568                 nop
  0000003C            02569                 count = count + 1
1C49   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C4A   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C4B   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C4C   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C4D   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C4E   0000           02568                 nop
  0000003D            02569                 count = count + 1
1C4F   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C50   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C51   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C52   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C53   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C54   0000           02568                 nop
  0000003E            02569                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C55   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C56   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C57   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C58   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C59   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C5A   0000           02568                 nop
  0000003F            02569                 count = count + 1
1C5B   0808           02563                 movf ADC_DATAPORT, W                    ;Save Sample
1C5C   1409           02564                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C5D   1009           02565                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C5E   0080           02566                 movwf INDF                                              ;Save to QUEUE
1C5F   0A84           02567                 incf FSR, F                                             ;Increment QUEUE pointer
1C60   0000           02568                 nop
  00000040            02569                 count = count + 1
                      02570         endw
1C61   0808           02571         movf ADC_DATAPORT, W
1C62   1409           02572         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1C63   1009           02573         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1C64   0080           02574         movwf INDF
1C65   1784           02575         bsf FSR, 7                                                      ;goto bank 2
1C66   0000           02576         nop
  00000001            02577         count = 1
                      02578         while count < D'22'
1C67   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C68   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C69   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6A   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C6B   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C6C   0000           02584                 nop
  00000002            02585                 count = count + 1
1C6D   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C6E   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6F   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C70   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C71   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C72   0000           02584                 nop
  00000003            02585                 count = count + 1
1C73   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C74   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C75   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C76   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C77   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C78   0000           02584                 nop
  00000004            02585                 count = count + 1
1C79   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C7A   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7B   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7C   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C7D   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C7E   0000           02584                 nop
  00000005            02585                 count = count + 1
1C7F   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C80   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C81   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C82   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C83   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C84   0000           02584                 nop
  00000006            02585                 count = count + 1
1C85   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C86   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C87   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C88   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C89   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C8A   0000           02584                 nop
  00000007            02585                 count = count + 1
1C8B   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C8C   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8D   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8E   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C8F   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C90   0000           02584                 nop
  00000008            02585                 count = count + 1
1C91   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C92   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C93   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C94   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C95   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C96   0000           02584                 nop
  00000009            02585                 count = count + 1
1C97   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C98   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C99   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9A   0080           02582                 movwf INDF                                              ;Save to QUEUE
1C9B   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1C9C   0000           02584                 nop
  0000000A            02585                 count = count + 1
1C9D   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1C9E   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9F   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA0   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CA1   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CA2   0000           02584                 nop
  0000000B            02585                 count = count + 1
1CA3   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CA4   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA5   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA6   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CA7   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CA8   0000           02584                 nop
  0000000C            02585                 count = count + 1
1CA9   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CAA   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAB   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAC   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CAD   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CAE   0000           02584                 nop
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000D            02585                 count = count + 1
1CAF   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CB0   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB1   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB2   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CB3   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CB4   0000           02584                 nop
  0000000E            02585                 count = count + 1
1CB5   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CB6   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB7   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB8   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CB9   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CBA   0000           02584                 nop
  0000000F            02585                 count = count + 1
1CBB   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CBC   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBD   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBE   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CBF   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CC0   0000           02584                 nop
  00000010            02585                 count = count + 1
1CC1   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CC2   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC3   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC4   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CC5   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CC6   0000           02584                 nop
  00000011            02585                 count = count + 1
1CC7   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CC8   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC9   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCA   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CCB   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CCC   0000           02584                 nop
  00000012            02585                 count = count + 1
1CCD   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CCE   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCF   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD0   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CD1   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CD2   0000           02584                 nop
  00000013            02585                 count = count + 1
1CD3   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CD4   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD5   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD6   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CD7   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CD8   0000           02584                 nop
  00000014            02585                 count = count + 1
1CD9   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CDA   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDB   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CDC   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CDD   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CDE   0000           02584                 nop
  00000015            02585                 count = count + 1
1CDF   0808           02579                 movf ADC_DATAPORT, W                    ;Sample
1CE0   1409           02580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE1   1009           02581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE2   0080           02582                 movwf INDF                                              ;Save to QUEUE
1CE3   0384           02583                 decf FSR, F                                             ;Increment QUEUE pointer
1CE4   0000           02584                 nop
  00000016            02585                 count = count + 1
                      02586         endw
1CE5   0808           02587         movf ADC_DATAPORT, W                            ;Sample
1CE6   1409           02588         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02589         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1CE7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1CE8   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1CE9   2FBE               M         goto SampleRep5MEndC
                      02590 
1CEA                  02591 SampleRep2MStep2
1CEA   2CEB           02592         goto $ + 1                                                      ;Delay 2
1CEB   1009           02593         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1CEC   2CED           02594         goto $ + 1                                                      ;Wait three cycles
1CED   0000           02595         nop
  0000                02596         local count
  00000001            02597         count = 1
                      02598         while count < D'42'
1CEE   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1CEF   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF0   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF1   0080           02602                 movwf INDF                                              ;Save to QUEUE
1CF2   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1CF3   0000           02604                 nop
  00000002            02605                 count = count + 1
1CF4   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1CF5   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF6   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF7   0080           02602                 movwf INDF                                              ;Save to QUEUE
1CF8   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1CF9   0000           02604                 nop
  00000003            02605                 count = count + 1
1CFA   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1CFB   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFC   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CFD   0080           02602                 movwf INDF                                              ;Save to QUEUE
1CFE   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1CFF   0000           02604                 nop
  00000004            02605                 count = count + 1
1D00   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D01   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D02   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D03   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D04   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D05   0000           02604                 nop
  00000005            02605                 count = count + 1
1D06   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D07   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D08   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D09   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D0A   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D0B   0000           02604                 nop
  00000006            02605                 count = count + 1
1D0C   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D0D   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0E   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0F   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D10   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D11   0000           02604                 nop
  00000007            02605                 count = count + 1
1D12   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D13   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D14   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D15   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D16   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D17   0000           02604                 nop
  00000008            02605                 count = count + 1
1D18   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D19   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1A   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1B   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D1C   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D1D   0000           02604                 nop
  00000009            02605                 count = count + 1
1D1E   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D1F   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D20   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D21   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D22   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D23   0000           02604                 nop
  0000000A            02605                 count = count + 1
1D24   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D25   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D26   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D27   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D28   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D29   0000           02604                 nop
  0000000B            02605                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D2A   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D2B   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2C   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2D   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D2E   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D2F   0000           02604                 nop
  0000000C            02605                 count = count + 1
1D30   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D31   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D32   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D33   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D34   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D35   0000           02604                 nop
  0000000D            02605                 count = count + 1
1D36   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D37   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D38   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D39   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D3A   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D3B   0000           02604                 nop
  0000000E            02605                 count = count + 1
1D3C   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D3D   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3E   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3F   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D40   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D41   0000           02604                 nop
  0000000F            02605                 count = count + 1
1D42   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D43   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D44   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D45   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D46   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D47   0000           02604                 nop
  00000010            02605                 count = count + 1
1D48   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D49   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4A   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4B   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D4C   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D4D   0000           02604                 nop
  00000011            02605                 count = count + 1
1D4E   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D4F   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D50   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D51   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D52   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D53   0000           02604                 nop
  00000012            02605                 count = count + 1
1D54   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D55   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D56   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D57   0080           02602                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D58   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D59   0000           02604                 nop
  00000013            02605                 count = count + 1
1D5A   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D5B   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5C   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5D   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D5E   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D5F   0000           02604                 nop
  00000014            02605                 count = count + 1
1D60   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D61   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D62   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D63   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D64   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D65   0000           02604                 nop
  00000015            02605                 count = count + 1
1D66   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D67   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D68   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D69   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D6A   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D6B   0000           02604                 nop
  00000016            02605                 count = count + 1
1D6C   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D6D   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6E   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6F   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D70   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D71   0000           02604                 nop
  00000017            02605                 count = count + 1
1D72   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D73   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D74   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D75   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D76   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D77   0000           02604                 nop
  00000018            02605                 count = count + 1
1D78   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D79   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7A   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7B   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D7C   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D7D   0000           02604                 nop
  00000019            02605                 count = count + 1
1D7E   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D7F   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D80   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D81   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D82   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D83   0000           02604                 nop
  0000001A            02605                 count = count + 1
1D84   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D85   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D86   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D87   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D88   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D89   0000           02604                 nop
  0000001B            02605                 count = count + 1
1D8A   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D8B   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8C   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8D   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D8E   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D8F   0000           02604                 nop
  0000001C            02605                 count = count + 1
1D90   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D91   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D92   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D93   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D94   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D95   0000           02604                 nop
  0000001D            02605                 count = count + 1
1D96   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D97   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D98   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D99   0080           02602                 movwf INDF                                              ;Save to QUEUE
1D9A   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1D9B   0000           02604                 nop
  0000001E            02605                 count = count + 1
1D9C   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1D9D   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9E   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9F   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DA0   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DA1   0000           02604                 nop
  0000001F            02605                 count = count + 1
1DA2   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DA3   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA4   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA5   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DA6   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DA7   0000           02604                 nop
  00000020            02605                 count = count + 1
1DA8   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DA9   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAA   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAB   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DAC   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DAD   0000           02604                 nop
  00000021            02605                 count = count + 1
1DAE   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DAF   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB0   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB1   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DB2   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DB3   0000           02604                 nop
  00000022            02605                 count = count + 1
1DB4   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DB5   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB6   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB7   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DB8   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DB9   0000           02604                 nop
  00000023            02605                 count = count + 1
1DBA   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DBB   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBC   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBD   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DBE   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DBF   0000           02604                 nop
  00000024            02605                 count = count + 1
1DC0   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DC1   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC2   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC3   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DC4   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DC5   0000           02604                 nop
  00000025            02605                 count = count + 1
1DC6   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DC7   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC8   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC9   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DCA   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DCB   0000           02604                 nop
  00000026            02605                 count = count + 1
1DCC   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DCD   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCE   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCF   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DD0   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DD1   0000           02604                 nop
  00000027            02605                 count = count + 1
1DD2   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DD3   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD4   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD5   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DD6   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DD7   0000           02604                 nop
  00000028            02605                 count = count + 1
1DD8   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DD9   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDA   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDB   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DDC   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DDD   0000           02604                 nop
  00000029            02605                 count = count + 1
1DDE   0808           02599                 movf ADC_DATAPORT, W                    ;Sample
1DDF   1409           02600                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 206


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DE0   1009           02601                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE1   0080           02602                 movwf INDF                                              ;Save to QUEUE
1DE2   0384           02603                 decf FSR, F                                             ;Increment QUEUE pointer
1DE3   0000           02604                 nop
  0000002A            02605                 count = count + 1
                      02606         endw
1DE4   0808           02607         movf ADC_DATAPORT, W
1DE5   1409           02608         bsf ADC_CONTROLPORT, RDD
1DE6   1009           02609         bcf ADC_CONTROLPORT, RDD
1DE7   0080           02610         movwf INDF
1DE8   1783           02611         bsf STATUS, IRP                                         ;goto bank 4
1DE9   0000           02612         nop
  00000001            02613         count = 1
                      02614         while count < D'43'
1DEA   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1DEB   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DEC   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DED   0080           02618                 movwf INDF                                              ;Save to QUEUE
1DEE   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1DEF   0000           02620                 nop
  00000002            02621                 count = count + 1
1DF0   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1DF1   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF2   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF3   0080           02618                 movwf INDF                                              ;Save to QUEUE
1DF4   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1DF5   0000           02620                 nop
  00000003            02621                 count = count + 1
1DF6   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1DF7   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF8   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF9   0080           02618                 movwf INDF                                              ;Save to QUEUE
1DFA   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1DFB   0000           02620                 nop
  00000004            02621                 count = count + 1
1DFC   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1DFD   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFE   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFF   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E00   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E01   0000           02620                 nop
  00000005            02621                 count = count + 1
1E02   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E03   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E04   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E05   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E06   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E07   0000           02620                 nop
  00000006            02621                 count = count + 1
1E08   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E09   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E0A   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E0B   0080           02618                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 207


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E0C   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E0D   0000           02620                 nop
  00000007            02621                 count = count + 1
1E0E   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E0F   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E10   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E11   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E12   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E13   0000           02620                 nop
  00000008            02621                 count = count + 1
1E14   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E15   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E16   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E17   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E18   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E19   0000           02620                 nop
  00000009            02621                 count = count + 1
1E1A   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E1B   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E1C   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E1D   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E1E   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E1F   0000           02620                 nop
  0000000A            02621                 count = count + 1
1E20   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E21   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E22   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E23   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E24   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E25   0000           02620                 nop
  0000000B            02621                 count = count + 1
1E26   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E27   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E28   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E29   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E2A   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E2B   0000           02620                 nop
  0000000C            02621                 count = count + 1
1E2C   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E2D   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E2E   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E2F   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E30   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E31   0000           02620                 nop
  0000000D            02621                 count = count + 1
1E32   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E33   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E34   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E35   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E36   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E37   0000           02620                 nop
  0000000E            02621                 count = count + 1
1E38   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 208


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E39   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E3A   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E3B   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E3C   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E3D   0000           02620                 nop
  0000000F            02621                 count = count + 1
1E3E   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E3F   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E40   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E41   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E42   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E43   0000           02620                 nop
  00000010            02621                 count = count + 1
1E44   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E45   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E46   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E47   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E48   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E49   0000           02620                 nop
  00000011            02621                 count = count + 1
1E4A   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E4B   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E4C   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E4D   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E4E   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E4F   0000           02620                 nop
  00000012            02621                 count = count + 1
1E50   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E51   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E52   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E53   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E54   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E55   0000           02620                 nop
  00000013            02621                 count = count + 1
1E56   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E57   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E58   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E59   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E5A   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E5B   0000           02620                 nop
  00000014            02621                 count = count + 1
1E5C   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E5D   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E5E   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E5F   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E60   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E61   0000           02620                 nop
  00000015            02621                 count = count + 1
1E62   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E63   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E64   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E65   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E66   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 209


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E67   0000           02620                 nop
  00000016            02621                 count = count + 1
1E68   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E69   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E6A   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E6B   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E6C   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E6D   0000           02620                 nop
  00000017            02621                 count = count + 1
1E6E   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E6F   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E70   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E71   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E72   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E73   0000           02620                 nop
  00000018            02621                 count = count + 1
1E74   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E75   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E76   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E77   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E78   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E79   0000           02620                 nop
  00000019            02621                 count = count + 1
1E7A   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E7B   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E7C   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E7D   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E7E   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E7F   0000           02620                 nop
  0000001A            02621                 count = count + 1
1E80   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E81   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E82   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E83   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E84   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E85   0000           02620                 nop
  0000001B            02621                 count = count + 1
1E86   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E87   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E88   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E89   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E8A   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E8B   0000           02620                 nop
  0000001C            02621                 count = count + 1
1E8C   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E8D   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E8E   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E8F   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E90   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E91   0000           02620                 nop
  0000001D            02621                 count = count + 1
1E92   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E93   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 210


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E94   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E95   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E96   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E97   0000           02620                 nop
  0000001E            02621                 count = count + 1
1E98   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E99   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E9A   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E9B   0080           02618                 movwf INDF                                              ;Save to QUEUE
1E9C   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1E9D   0000           02620                 nop
  0000001F            02621                 count = count + 1
1E9E   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1E9F   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EA0   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EA1   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EA2   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EA3   0000           02620                 nop
  00000020            02621                 count = count + 1
1EA4   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EA5   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EA6   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EA7   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EA8   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EA9   0000           02620                 nop
  00000021            02621                 count = count + 1
1EAA   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EAB   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EAC   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EAD   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EAE   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EAF   0000           02620                 nop
  00000022            02621                 count = count + 1
1EB0   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EB1   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EB2   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EB3   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EB4   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EB5   0000           02620                 nop
  00000023            02621                 count = count + 1
1EB6   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EB7   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EB8   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EB9   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EBA   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EBB   0000           02620                 nop
  00000024            02621                 count = count + 1
1EBC   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EBD   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EBE   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EBF   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EC0   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EC1   0000           02620                 nop
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 211


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000025            02621                 count = count + 1
1EC2   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EC3   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EC4   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EC5   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EC6   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EC7   0000           02620                 nop
  00000026            02621                 count = count + 1
1EC8   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EC9   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ECA   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ECB   0080           02618                 movwf INDF                                              ;Save to QUEUE
1ECC   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1ECD   0000           02620                 nop
  00000027            02621                 count = count + 1
1ECE   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1ECF   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ED0   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ED1   0080           02618                 movwf INDF                                              ;Save to QUEUE
1ED2   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1ED3   0000           02620                 nop
  00000028            02621                 count = count + 1
1ED4   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1ED5   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ED6   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ED7   0080           02618                 movwf INDF                                              ;Save to QUEUE
1ED8   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1ED9   0000           02620                 nop
  00000029            02621                 count = count + 1
1EDA   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EDB   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EDC   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EDD   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EDE   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EDF   0000           02620                 nop
  0000002A            02621                 count = count + 1
1EE0   0808           02615                 movf ADC_DATAPORT, W                    ;Sample
1EE1   1409           02616                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EE2   1009           02617                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EE3   0080           02618                 movwf INDF                                              ;Save to QUEUE
1EE4   0A84           02619                 incf FSR, F                                             ;Increment QUEUE pointer
1EE5   0000           02620                 nop
  0000002B            02621                 count = count + 1
                      02622         endw
1EE6   0808           02623         movf ADC_DATAPORT, W                            ;Sample
1EE7   1409           02624         bsf ADC_CONTROLPORT, RDD
                      02625         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1EE8   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 212


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bsf PCLATH, 3
                          M         else
1EE9   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1EEA   2FBB               M         goto SampleRep5MEndA
                      02626 
1EEB                  02627 SampleRep2MStep3
1EEB   2EEC           02628         goto $ + 1                                                      ;Delay 4
                      02629         if (Sample833kEnd & (0x1000))
1EEC   160A           02630                 bsf PCLATH, 4
                      02631         else
                      02632                 bcf PCLATH, 4
                      02633         endif
                      02634         if (Sample833kEnd & (0x800))
                      02635                 bsf PCLATH, 3
                      02636         else
1EED   118A           02637                 bcf PCLATH, 3
                      02638         endif
1EEE   1009           02639         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1EEF   0000           02640         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1EF0   2CA6           02641         goto Sample833kEnd
                      02642 
                      02643 ;=============================================================================
                      02644 end             ;end of program
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       0000013A
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
ATTNPORT                          00000006
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

BANK0                             00000000
BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1ATTN                           00000006
CH1SEL                            00000001
CH1SELG                           00000004
CH2ATTN                           00000007
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   000002FF
ChannelConfStore                  0000030E
ConfReceive                       000002B2
ConfReceiveRateOnly               000002CF
ConfSend                          000002DE
D                                 00000005
DATAREADYBIT                      00000005
DATA_ADDRESS                      00000005
DC                                00000001
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
D_NOT_A                           00000005
Delay                             0000012F
DelayFive                         00000503
DelayLoop                         00000130
DelaySeven                        00000502
DelayTwo                          00000505
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLESTRIPCHART              0000000D
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

GO_DONE                           00000001
GO_NOT_DONE                       00000001
GetByte                           00000119
GetByteB                          0000011B
GetByteC                          0000011F
GetByteD                          00000123
GetByteE                          00000127
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           0000005D
IntHandler                        00000004
IrqServiceTimer1                  0000013F
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

MSK7                              00000007
Main                              00000089
MainB                             0000008C
MainSelect                        00000017
MainWTrigB                        000000B8
MainWTrigB_1                      000000BB
MainWaitTrig                      00000099
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PTMEMNEW                          00000004
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           0000012A
PutByteSerial                     0000012A
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RDD                               00000000
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RUNNINGBIT                        00000007
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
RotateSampleMemLeft               00000250
RotateSampleMemRight              00000275
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 221


SYMBOL TABLE
  LABEL                             VALUE 

SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          00000599
Sample1MhzEnd                     0000099E
Sample250kA                       000004B3
Sample250kB                       000004CA
Sample250kC                       000004E1
Sample250kD                       000004F8
Sample417k250k                    000004A3
Sample417kA                       000004B4
Sample417kB                       000004CB
Sample417kC                       000004E2
Sample417kD                       000004F9
Sample417kLoopA                   000004AC
Sample417kLoopB                   000004C3
Sample417kLoopC                   000004DA
Sample417kLoopD                   000004F1
Sample625k                        00000460
Sample625kLoopA                   00000466
Sample625kLoopB                   00000476
Sample625kLoopC                   00000486
Sample625kLoopD                   00000496
Sample833k                        000010A0
Sample833kEnd                     000014A6
SampleDelayed                     00000352
SampleDelayedLoopA                0000035D
SampleDelayedLoopB                00000377
SampleDelayedLoopC                00000391
SampleDelayedLoopD                000003AB
SampleIntDrvn                     000001C7
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 222


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2M                       00001AD6
SampleRep2MPickEn                 00001AE3
SampleRep2MPickSt                 00001ADA
SampleRep2MStep1                  00001AE3
SampleRep2MStep2                  00001CEA
SampleRep2MStep3                  00001EEB
SampleRep5M                       000016A3
SampleRep5MEndA                   000017BB
SampleRep5MEndB                   000017C0
SampleRep5MEndC                   000017BE
SampleRep5MPickEn                 000016B6
SampleRep5MPickSt                 000016A7
SampleRep5MStep1                  000016B6
SampleRep5MStep2                  000017C6
SampleRep5MStep3                  000018C9
SampleRep5MStep4                  000019CC
SampleRep5MStep5                  00001AD0
SampleXY250k192k                  00000506
SampleXY250kLA                    00000515
SampleXY250kLB                    00000539
SampleXY250kLC                    0000055D
SampleXY250kLD                    00000581
SampleXY417k                      00000A9D
SampleXYDelayed                   000003BD
SampleXYDelayedLA                 000003CF
SampleXYDelayedLB                 000003F7
SampleXYDelayedLC                 0000041F
SampleXYDelayedLD                 00000447
StSample417kLoopB                 000004C8
StSample417kLoopC                 000004DF
StSample417kLoopD                 000004F6
StSampleDelayedLoopA              00000362
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 223


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRGCH                             00000003
TRGSRCPORT                        00000005
TRIGGER                           00000000
TRIGGEREDBIT                      00000006
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 224


SYMBOL TABLE
  LABEL                             VALUE 

TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 225


SYMBOL TABLE
  LABEL                             VALUE 

WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000C6
WaitComm_Break                    00000111
WaitComm_Conf                     000000FA
WaitComm_Data                     000000C7
WaitComm_Rec                      00000103
WaitComm_SendDataA                000000D3
WaitComm_SendDataB                000000DD
WaitComm_SendDataC                000000E7
WaitComm_SendDataD                000000F1
WaitComm_SendDataExit             000000F7
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 226


SYMBOL TABLE
  LABEL                             VALUE 

_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000068
b0_ptFsrTemp                      0000006E
b0_ptPlaceTriggerHere             0000006C
b0_ptPtSampleCntr                 00000069
b0_ptRotationCntr                 0000006D
b0_ptTemp0                        0000006F
b0_ptTriggerAddr                  0000006A
b0_ptTriggerBank                  0000006B
b0_sampleAddr                     00000066
b0_sampleBank                     00000067
b0_triggerChannel                 00000064
b0_triggerDelay0                  00000060
b0_triggerDelay1                  00000061
b0_triggerDelay2                  00000062
b0_triggerDelay3                  00000063
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 227


SYMBOL TABLE
  LABEL                             VALUE 

b0_triggerLevel                   00000065
b1_ptFlushCntr                    000000E0
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
b1_unusedD                        000000E2
b1_unusedE                        000000E1
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused10                       0000011F
b2_unused11                       0000011E
b2_unused12                       0000011D
b2_unused13                       0000011C
b2_unused14                       0000011B
b2_unused15                       0000011A
b2_unused16                       00000119
b2_unused17                       00000118
b2_unused18                       00000117
b2_unused19                       00000116
b2_unused1A                       00000115
b2_unused1B                       00000114
b2_unused1C                       00000113
b2_unused1D                       00000112
b2_unused1E                       00000111
b2_unused1F                       00000110
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused10                       0000019F
b3_unused11                       0000019E
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 228


SYMBOL TABLE
  LABEL                             VALUE 

b3_unused12                       0000019D
b3_unused13                       0000019C
b3_unused14                       0000019B
b3_unused15                       0000019A
b3_unused16                       00000199
b3_unused17                       00000198
b3_unused18                       00000197
b3_unused19                       00000196
b3_unused1A                       00000195
b3_unused1B                       00000194
b3_unused1C                       00000193
b3_unused1D                       00000192
b3_unused1E                       00000191
b3_unused1F                       00000190
b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000074
gbl_cntrb                         00000075
gbl_cntrc                         00000076
gbl_cntrd                         00000077
gbl_configLoc1                    00000070
gbl_dataConfig                    0000007B
gbl_modetemp                      00000078
gbl_modetempb                     00000079
gbl_ptStatus                      0000007F
gbl_sampleCntr                    0000007E
gbl_sampleRate0                   00000071
gbl_sampleRate1                   00000072
gbl_sampleRate2                   00000073
gbl_spdata                        0000007A
gbl_status_temp                   0000007D
gbl_w_temp                        0000007C
ih_1                              0000000E
ih_2                              0000004F
ih_3                              00000058
ih_pt                             00000048
irqst1_1                          00000181
irqst1_2                          00000183
irqst1_3                          0000018B
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 229


SYMBOL TABLE
  LABEL                             VALUE 

irqst1_3_1                        000001BA
irqst1_3_2                        000001BB
irqst1_3_a                        0000019D
irqst1_4                          000001BC
irqst1_5                          000001C2
rsmL_1                            00000254
rsmR_1                            00000279
rsm_exit                          00000299
rsm_slide_higher                  000002A7
rsm_slide_lower                   0000029C
sid_Exit                          00000245
sid_GetByte                       000001DE
sid_GetByteB                      000001E6
sid_GetByteC                      000001EA
sid_GetByteD                      000001EE
sid_GetByteE                      000001F2
sid_WaitComm_Break                0000023D
sid_WaitComm_Conf                 0000022B
sid_WaitComm_Data                 000001F8
sid_WaitComm_Rec                  00000234
sid_WaitComm_SendDataA            00000204
sid_WaitComm_SendDataB            0000020E
sid_WaitComm_SendDataC            00000218
sid_WaitComm_SendDataD            00000222
sid_WaitComm_SendDataExit         00000228
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 230


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 231


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20130403.ASM   4-18-2013  16:21:27         PAGE 232


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX X---------------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7921
Program Memory Words Free:   271


Errors   :     0
Warnings :     0 reported,  1143 suppressed
Messages :    18 reported,    31 suppressed

