MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;       20120927.1 - by PM
                      00071 ;               Begin adding sampling/sending methodology for a Strip Chart mode.
                      00072 ;       20120929.1 -
                      00073 ;               Incorporated Jonathan Weaver's changes and coding improvements from
                      00074 ;               the DSOscope_A03_20120928b.zip file.
                      00075 ;       20130113.1 - by PM
                      00076 ;               Changes made for Rev A03 hardware to support selection reporting bits
                      00077 ;               for the Trigger Channel switch and the Channel 1 and 2 Attenuator switches.
                      00078 ;               Also added timing byte for future slower interrupt driven acquisition
                      00079 ;               support and an added byte for longer trigger delays... Changes will
                      00080 ;               require updates to the PC App code.
                      00081 ;
                      00082 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00083 ;
                      00084 ;
                      00085 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00086 ;
                      00087 ;This program is free software; you can redistribute it and/or modify it under
                      00088 ;the terms of the GNU General Public License as published by the Free Software
                      00089 ;Foundation; either version 2 of the License, or (at your option) any later
                      00090 ;version.
                      00091 ;
                      00092 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00093 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00094 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00095 ;details.
                      00096 ;
                      00097 ;You should have received a copy of the GNU General Public License along with
                      00098 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00099 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00100 ;
                      00101 ;==============================================================================
                      00102 
                      00103 ;=============================================================================
                      00104 ; C O N F I G U R A T I O N
                      00105 ;=============================================================================
                      00106 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107         LIST P=16F887
                      00108 
                      00109         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00110 
                      00111 
                      00112 ;*****************************************************
                      00113 ;       === Configuration Word Definitions ===
                      00114 ;*****************************************************
                      00115 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00116 
                      00117 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00118 ; The labels following the directive are located in the respective .inc file.
                      00119 ; See respective data sheet for additional information on configuration word.
                      00120 
2007   20F2           00121         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00122         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00123 
                      00124 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00125 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00126 
2000   0001 0002 0003 00127         __idlocs        0x1234
       0004 
                      00128 
  00000020            00129         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00130 
                      00131 ;=============================================================================
                      00132 ; C O N S T A N T S
                      00133 ;=============================================================================
                      00134 
  00000000            00135 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00136 BANK1                   equ     0x0080
  00000100            00137 BANK2                   equ     0x0100
  00000180            00138 BANK3                   equ     0x0180
                      00139 
  00000020            00140 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00141 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00142                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00143                                                         ;the data points alternate between channel 1 and
                      00144                                                         ;channel 2
  0000005F            00145 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00146 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00147 
                      00148 ;I/O Pin maps
                      00149 ;-----------------------------------------------------------------------------
  00000007            00150         SERIALPORT      set     PORTC
  00000007            00151                 RX              equ     0x07
  00000006            00152                 TX              equ     0x06
                      00153 
  00000009            00154         ADC_CONTROLPORT set     PORTE
  00000000            00155                 RDD             equ     0x00
  00000001            00156                 ADDR0   equ     0x01
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00157 
  00000006            00158         TRIGGERPORT     set     PORTB
  00000000            00159                 TRIGGER equ     0x00
                      00160 
  00000006            00161         ADC_PORT        set     PORTB
  00000003            00162                 ADDR2   equ     0x03
  00000002            00163                 ADDR1   equ     0x02
  00000001            00164                 CS              equ     0x01
                      00165 
  00000008            00166         ADC_DATAPORT    set     PORTD
                      00167 
  00000007            00168         ANALOG_SEL      set     PORTC
  00000001            00169                 CH1SEL  equ     0x01
  00000002            00170                 CH2SEL  equ     0x02
                      00171 
  00000005            00172         ANALOG_GAIN     set     PORTA
  00000000            00173                 GAIN1   equ     0x00
  00000001            00174                 GAIN5   equ     0x01
  00000004            00175                 CH1SELG equ     0x04
  00000005            00176                 CH2SELG equ     0x05
                      00177 
  00000007            00178         ANALOG_ACDC     set     PORTC
  00000000            00179                 ACDCMODE        equ     0x00
                      00180 
  00000006            00181         ATTNPORT        set     PORTB
  00000006            00182                 CH1ATTN equ     0x06
  00000007            00183                 CH2ATTN equ     0x07
                      00184 
  00000005            00185         TRGSRCPORT      set     PORTA
  00000003            00186                 TRGCH   equ     0x03
                      00187 
                      00188 ;Configuration memory map
                      00189 ;-----------------------------------------------------------------------------
                      00190 ;Bit map for gbl_configLoc1
  00000007            00191         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00192         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00193         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00194         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00195         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00196         FREQMODEBIT2            equ     0x02
  00000001            00197         FREQMODEBIT1            equ     0x01
  00000000            00198         FREQMODEBIT0            equ     0x00
                      00199 
                      00200 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00201         SAMPLEBANK3                     equ     0x02
  00000003            00202         SAMPLEBANK2                     equ     0x03
  00000001            00203         SAMPLEBANK1                     equ     0x01
  00000000            00204         SAMPLEBANK0                     equ     0x00
                      00205 
                      00206 
                      00207 ;Table of frequency modes, 0 to 15
  00000000            00208         FREQSAMPLE1M            equ     D'0'
  00000001            00209         FREQSAMPLE833K          equ     D'1'
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            00210         FREQSAMPLE625K          equ     D'2'
  00000003            00211         FREQSAMPLE417K          equ     D'3'
  00000004            00212         FREQSAMPLE250K          equ     D'4'
  00000005            00213         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00214         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00215         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00216         FREQSAMPLEXY417K        equ     D'8'
  00000009            00217         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00218         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00219         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00220         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
  0000000D            00221         FREQSAMPLESTRIPCHART equ D'13'  ;Interrupt Driven Strip Chart Mode
                      00222 
                      00223 
                      00224 ;=============================================================================
                      00225 ; V A R I A B L E S
                      00226 ;=============================================================================
                      00227 
                      00228         ;Global General Purpose Registers, accessible anywhere
                      00229 CBLOCK  0x70
  00000070            00230         gbl_configLoc1                  ;Configuration mode
  00000071            00231         gbl_sampleRate0                 ;sample rate delay extender byte for interrupt driven sampling
  00000072            00232         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000073            00233         gbl_sampleRate2
  00000074            00234         gbl_cntra                               ;general use counter
  00000075            00235         gbl_cntrb                               ;second counter
  00000076            00236         gbl_cntrc                               ;third counter
  00000077            00237         gbl_cntrd                               ;fourth counter
  00000078            00238         gbl_modetemp                    ;temporary mode variable
  00000079            00239         gbl_modetempb                   ;temporary mode for repetitive sampling
  0000007A            00240         gbl_spdata                              ;data to/from serial port
  0000007B            00241         gbl_dataConfig                  ;the data configuration
  0000007C            00242         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007D            00243         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007E            00244         gbl_sampleCntr                  ;temporary variable for counting interrupts for extended "slow m
                            ode" interrupt sampling (Added JWW 1/30/2013)
  0000007F            00245         gbl_unused0
                      00246 ENDC
                      00247 
                      00248         ;Bank0 General Purpose Registers
                      00249 CBLOCK  0x60
  00000060            00250         b0_triggerDelay0                ;trigger delay (4 bytes)
  00000061            00251         b0_triggerDelay1                
  00000062            00252         b0_triggerDelay2
  00000063            00253         b0_triggerDelay3
  00000064            00254         b0_triggerChannel               ;the trigger channel
  00000065            00255         b0_triggerLevel                 ;the trigger level
  00000066            00256         b0_sampleAddr                   ;address to store ADC sampled value
  00000067            00257         b0_sampleBank                   ;bank to store ADC sampled value
  00000068            00258         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000069            00259         b0_unused6
  0000006A            00260         b0_unused5
  0000006B            00261         b0_unused4
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000006C            00262         b0_unused3
  0000006D            00263         b0_unused2
  0000006E            00264         b0_unused1
  0000006F            00265         b0_unused0
                      00266 ENDC
                      00267 
                      00268         ;Bank1 General Purpose Registers
                      00269 CBLOCK  0xE0
  000000E0            00270         b1_unusedF
  000000E1            00271         b1_unusedE
  000000E2            00272         b1_unusedD
  000000E3            00273         b1_unusedC
  000000E4            00274         b1_unusedB
  000000E5            00275         b1_unusedA
  000000E6            00276         b1_unused9
  000000E7            00277         b1_unused8
  000000E8            00278         b1_unused7
  000000E9            00279         b1_unused6
  000000EA            00280         b1_unused5
  000000EB            00281         b1_unused4
  000000EC            00282         b1_unused3
  000000ED            00283         b1_unused2
  000000EE            00284         b1_unused1
  000000EF            00285         b1_unused0
                      00286 ENDC
                      00287 
                      00288         ;Bank2 General Purpose Registers
                      00289 CBLOCK  0x110
  00000110            00290         b2_unused1F
  00000111            00291         b2_unused1E
  00000112            00292         b2_unused1D
  00000113            00293         b2_unused1C
  00000114            00294         b2_unused1B
  00000115            00295         b2_unused1A
  00000116            00296         b2_unused19
  00000117            00297         b2_unused18
  00000118            00298         b2_unused17
  00000119            00299         b2_unused16
  0000011A            00300         b2_unused15
  0000011B            00301         b2_unused14
  0000011C            00302         b2_unused13
  0000011D            00303         b2_unused12
  0000011E            00304         b2_unused11
  0000011F            00305         b2_unused10
                      00306 ENDC
                      00307 CBLOCK  0x160
  00000160            00308         b2_unusedF
  00000161            00309         b2_unusedE
  00000162            00310         b2_unusedD
  00000163            00311         b2_unusedC
  00000164            00312         b2_unusedB
  00000165            00313         b2_unusedA
  00000166            00314         b2_unused9
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000167            00315         b2_unused8
  00000168            00316         b2_unused7
  00000169            00317         b2_unused6
  0000016A            00318         b2_unused5
  0000016B            00319         b2_unused4
  0000016C            00320         b2_unused3
  0000016D            00321         b2_unused2
  0000016E            00322         b2_unused1
  0000016F            00323         b2_unused0
                      00324 ENDC
                      00325 
                      00326         ;Bank3 General Purpose Registers
                      00327 CBLOCK  0x190
  00000190            00328         b3_unused1F
  00000191            00329         b3_unused1E
  00000192            00330         b3_unused1D
  00000193            00331         b3_unused1C
  00000194            00332         b3_unused1B
  00000195            00333         b3_unused1A
  00000196            00334         b3_unused19
  00000197            00335         b3_unused18
  00000198            00336         b3_unused17
  00000199            00337         b3_unused16
  0000019A            00338         b3_unused15
  0000019B            00339         b3_unused14
  0000019C            00340         b3_unused13
  0000019D            00341         b3_unused12
  0000019E            00342         b3_unused11
  0000019F            00343         b3_unused10
                      00344 ENDC
                      00345 CBLOCK  0x1E0
  000001E0            00346         b3_unusedF
  000001E1            00347         b3_unusedE
  000001E2            00348         b3_unusedD
  000001E3            00349         b3_unusedC
  000001E4            00350         b3_unusedB
  000001E5            00351         b3_unusedA
  000001E6            00352         b3_unused9
  000001E7            00353         b3_unused8
  000001E8            00354         b3_unused7
  000001E9            00355         b3_unused6
  000001EA            00356         b3_unused5
  000001EB            00357         b3_unused4
  000001EC            00358         b3_unused3
  000001ED            00359         b3_unused2
  000001EE            00360         b3_unused1
  000001EF            00361         b3_unused0
                      00362 ENDC
                      00363 
                      00364 ;=============================================================================
                      00365 ; I N C L U D E S
                      00366 ;=============================================================================
                      00367         include "p16F887.inc"
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00368         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00369         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00370 
                      00371 
                      00372 ;=============================================================================
                      00373 ; M A C R O S
                      00374 ;=============================================================================
                      00375 
                      00376 MGOTO macro address
                      00377         if (address & (0x1000))
                      00378                 bsf PCLATH, 4
                      00379         else
                      00380                 bcf PCLATH, 4
                      00381         endif
                      00382         if (address & (0x800))
                      00383                 bsf PCLATH, 3
                      00384         else
                      00385                 bcf PCLATH, 3
                      00386         endif
                      00387         goto address
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00388         endm
                      00389 
                      00390 
                      00391 
                      00392 
                      00393 ;=============================================================================
                      00394 ; I N T E R R U P T S
                      00395 ;=============================================================================
                      00396 
0000                  00397 org 0x0000      ;Reset Vector
                      00398 ;First three lines of initialization included here to save on memory.
                      00399         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00400         clrf ADC_DATAPORT
0003   2852           00401         goto Initial
                      00402 
0004                  00403 org 0x0004      ;Interrupt Vector
0004                  00404 IntHandler
                      00405         ;Save the current state
0004   00FC           00406     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00407         swapf   STATUS,W                                        ;Move status register into W register
0006   00FD           00408         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00409 
                      00410         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00411         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00412         ; the interrupt is truly enabled before acting on the flag state.
                      00413         ;HOWEVER, we can shorten/speed up this interrupt check!  Since we only enable the trigger
                      00414         ; interrupt when we are actually looking for it, and since we only enter this routine if
                      00415         ; we have an interrupt, we can shorten the trigger interrupt check to just look at the
                      00416         ; enable being active:
0007   1E0B           00417         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   2844           00418                 goto    ih_2
0009   120B           00419         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00420                                                                                 ; for the duration of th
                            e acquisition
000A                  00421 ih_1
000A   0BF4           00422         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0x0101010
                            1 implies minimum delay
000B   280A           00423                 goto ih_1
000C   0BF5           00424         decfsz gbl_cntrb, f
000D   280A           00425                 goto ih_1
000E   0BF6           00426         decfsz gbl_cntrc, f
000F   280A           00427                 goto ih_1
0010   0BF7           00428         decfsz gbl_cntrd, f                                     ;Added JWW 1/30/2013
0011   280A           00429                 goto ih_1                                               ;Added JWW 1/30/2013
0012   0878           00430         movf gbl_modetemp, w
                      00431 
0013                  00432 MainSelect
0013   0782           00433         addwf PCL, f                                            ;Add freqMode to Program Counter
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00434         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0014   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0015   118A               M                 bcf PCLATH, 3
                          M         endif
0016   2CE0               M         goto Sample1M
                      00435         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0017   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0018   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0019   2FE7               M         goto Sample833k
                      00436         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001B   118A               M                 bcf PCLATH, 3
                          M         endif
001C   2BA7               M         goto Sample625k
                      00437         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001E   118A               M                 bcf PCLATH, 3
                          M         endif
001F   2BEA               M         goto Sample417k250k
                      00438         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0020   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0021   118A               M                 bcf PCLATH, 3
                          M         endif
0022   2BEA               M         goto Sample417k250k
                      00439         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0023   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0024   118A               M                 bcf PCLATH, 3
                          M         endif
0025   2A99               M         goto SampleDelayed
                      00440         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0026   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0027   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0028   2DEA               M         goto SampleRep5M
                      00441         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0029   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
002A   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002B   2A1D               M         goto SampleRep2M
                      00442         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002D   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002E   29E4               M         goto SampleXY417k
                      00443         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0030   118A               M                 bcf PCLATH, 3
                          M         endif
0031   2C4D               M         goto SampleXY250k192k
                      00444         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0032   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0033   118A               M                 bcf PCLATH, 3
                          M         endif
0034   2C4D               M         goto SampleXY250k192k
                      00445         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0035   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0036   118A               M                 bcf PCLATH, 3
                          M         endif
0037   2B04               M         goto SampleXYDelayed
                      00446         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0038   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0039   118A               M                 bcf PCLATH, 3
                          M         endif
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003A   2974               M         goto SampleIntDrvn
                      00447         MGOTO SampleStripChart                          ;FreqMode = 13
                          M         if (SampleStripChart & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003B   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleStripChart & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003C   118A               M                 bcf PCLATH, 3
                          M         endif
003D   29F9               M         goto SampleStripChart
                      00448         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003F   118A               M                 bcf PCLATH, 3
                          M         endif
0040   287C               M         goto Main
                      00449         MGOTO Main                                                      ;Invalid FreqMode = 15
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0041   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0042   118A               M                 bcf PCLATH, 3
                          M         endif
0043   287C               M         goto Main
                      00450 
                      00451 
0044                  00452 ih_2
0044   1283 1303      00453         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0046   1C0C           00454         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0047   284D           00455                 goto    ih_3                                    ;It wasn't, so restore registers and the
                            n return from interrupt
0048   1683 1303      00456         banksel BANK1
004A   1C0C           00457         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
004B   284D           00458                 goto    ih_3
004C   2121           00459         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00460 
004D                  00461 ih_3
                      00462         ;restore previous state 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   0E7D           00463     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
004E   0083           00464     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
004F   0EFC           00465     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
0050   0E7C           00466     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
0051   0009           00467     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00468 
                      00469 
                      00470 ;=============================================================================
                      00471 ; M A I N
                      00472 ;=============================================================================
                      00473 ;Initalize for the program
                      00474 ;-----------------------------------------------------------------------------
0052                  00475 Initial
0052   0185           00476         clrf PORTA
0053   1683 1303      00477         banksel TRISA
                      00478         MOVLF B'00011111', TRISA                        ;Configure PORTA
0055   301F               M     movlw B'00011111'
0056   0085               M     movwf TRISA
                      00479         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0057   30C0               M     movlw B'11000000'
0058   0081               M     movwf OPTION_REG
                      00480         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0059   3010               M     movlw B'00010000'
005A   008B               M     movwf INTCON
                      00481         MOVLF B'11110001', TRISB
005B   30F1               M     movlw B'11110001'
005C   0086               M     movwf TRISB
                      00482         MOVLF B'11111111', TRISD
005D   30FF               M     movlw B'11111111'
005E   0088               M     movwf TRISD
                      00483         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
005F   3004               M     movlw B'00000100'
0060   0089               M     movwf TRISE
                      00484         MOVLF B'10111001', TRISC                        ;Configure PORTC
0061   30B9               M     movlw B'10111001'
0062   0087               M     movwf TRISC
                      00485 
0063   1683 1703      00486         banksel ANSEL                   ;Access bank 3
0065   0188           00487         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0066   0189           00488         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00489 
                      00490         ;Initialize Serial Port
                      00491 
0067   3008           00492         movlw   0x08                    ;Set the Serial Port baud rate generators
0068   0087           00493         movwf   BAUDCTL
0069   1683 1303      00494         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
006B   3056           00495         movlw   0x56                    ; for 57.6K baud
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006C   0099           00496         movwf   SPBRG
006D   3000           00497         movlw   0x00
006E   009A           00498         movwf   SPBRGH
006F   3024           00499         movlw   0x24                    ;Set the Serial Port Transmitter configuration
0070   0098           00500         movwf   TXSTA
0071   1283 1303      00501         banksel RCSTA                   ;Access bank 0
0073   3090           00502         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0074   0098           00503         movwf   RCSTA
                      00504 
0075   1383           00505         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
0076   019F           00506         clrf    ADCON0                  ;Make sure PIC's ADC is off
0077   3001           00507         movlw   0x01                    ;Initialize the "trigger delay counter" to minimium delay
0078   00F4           00508         movwf   gbl_cntra               ; for the initial case of "RUN" button pushed with the "TRIGGER 
                            OFF"
0079   00F5           00509         movwf   gbl_cntrb               ; selection having being set
007A   00F6           00510         movwf   gbl_cntrc
007B   00F7           00511         movwf   gbl_cntrd
                      00512         
007C                  00513 Main
007C   20A9           00514         call    WaitComm                ;Call WaitComm and stay there until we have
                      00515                                                         ; received a "ConfReceive" Configuration Informa
                            tion Field
                      00516 
007D   01F9           00517         clrf gbl_modetempb                              ;Clear the gbl_modetempb for repetitive sampling
                      00518         
007E                  00519 MainB
007E   1089           00520         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
007F   1A70           00521         btfsc   gbl_configLoc1, CHANNELBIT
0080   1489           00522                 bsf             ADC_CONTROLPORT, ADDR0
                      00523         if (high MainSelect)
                      00524                 movlw   high MainSelect                 ;Prepare for jump
                      00525                 movwf   PCLATH
                      00526         else
0081   018A           00527                 clrf PCLATH
                      00528         endif
0082   0870           00529         movf    gbl_configLoc1, w                       ;Put configuration in WREG
0083   390F           00530         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
0084   00F8           00531         movwf   gbl_modetemp                            ;Multiply by 3
0085   1003           00532         bcf             STATUS, C
0086   0DF8           00533         rlf             gbl_modetemp, f
0087   0778           00534         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0088   1086           00535         bcf             ADC_PORT, CS                            ;Select MAX118
0089   1F70           00536         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
008A   2813           00537                 goto    MainSelect
008B                  00538 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
008B   00F8           00539         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
008C   0A63           00540         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
008D   00F4           00541         movwf   gbl_cntra
008E   0A62           00542         incf    b0_triggerDelay2, w     
008F   00F5           00543         movwf   gbl_cntrb
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0090   0A61           00544         incf    b0_triggerDelay1, w
0091   00F6           00545         movwf   gbl_cntrc
0092   0A60           00546         incf    b0_triggerDelay0, w
0093   00F7           00547         movwf   gbl_cntrd
0094   1683 1303      00548         banksel OPTION_REG                                      ;Access bank 1
0096   1301           00549         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
0097   1BF0           00550         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
0098   1701           00551                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
0099   1283 1303      00552         banksel BANK0                                           ;Access bank 0
009B   108B           00553         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
009C   160B           00554         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
009D   178B           00555         bsf             INTCON, GIE                                     ;Enable interrupts
                      00556 
009E                  00557 MainWTrigB
009E   20FB           00558         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00559         skipEqLF B'11110011', gbl_spdata        ;message is received
009F   087A               M         movf gbl_spdata, w
00A0   3AF3               M         xorlw B'11110011'
00A1   1D03               M         btfss STATUS, Z
00A2   289E           00560                 goto    MainWTrigB
00A3   120B           00561         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
00A4   138B           00562         bcf             INTCON, GIE                                     ;Disable interrupts
                      00563         MOVLF B'11011100', gbl_spdata           ;Respond
00A5   30DC               M     movlw B'11011100'
00A6   00FA               M     movwf gbl_spdata
00A7   210C           00564         call    PutByte
00A8   287C           00565         goto    Main                                            ;Abort
                      00566 
                      00567                                                                                 ;Note that the jitter on
                             the interrupt is
                      00568                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00569                                                                                 ;on the PIC running at 2
                            0 MHz
                      00570 
                      00571 ;=============================================================================
                      00572 ; S U B R O U T I N E S
                      00573 ;=============================================================================
                      00574 
                      00575 ;Wait for command from computer and respond accordingly
                      00576 
                      00577         ; Received Commands are:
                      00578         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00579         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00580         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00581         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00582 
                      00583 ;-----------------------------------------------------------------------------
00A9                  00584 WaitComm
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A9   20FB           00585         call GetByte                                            ;Wait for receive
                      00586 
00AA                  00587 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00588         skipEqLF B'11111000', gbl_spdata
00AA   087A               M         movf gbl_spdata, w
00AB   3AF8               M         xorlw B'11111000'
00AC   1D03               M         btfss STATUS, Z
00AD   28DC           00589                 goto WaitComm_Conf
                      00590         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00AE   30DC               M     movlw B'11011100'
00AF   00FA               M     movwf gbl_spdata
00B0   210C           00591         call PutByte
                      00592         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue, also clears 
                            FSR7
00B1   3020               M     movlw BUFFERMIN
00B2   0084               M     movwf FSR
                      00593         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00B3   3040               M     movlw BUFFERSIZE
00B4   00F5               M     movwf gbl_cntrb
00B5                  00594 WaitComm_SendDataA
                      00595         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00B5   0800               M     movf INDF, w
00B6   00FA               M     movwf gbl_spdata
00B7   0A84           00596         incf FSR, F                                                     ;Increment pointer
00B8   210C           00597         call PutByte                                            ;Send data
00B9   0BF5           00598         decfsz gbl_cntrb, f
00BA   28B5           00599                 goto WaitComm_SendDataA
                      00600         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00BB   3040               M     movlw BUFFERSIZE
00BC   00F5               M     movwf gbl_cntrb
00BD   1784           00601         bsf FSR, 7                                                      ;Bank 1
00BE   0384           00602         decf FSR, f
00BF                  00603 WaitComm_SendDataB
                      00604         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00BF   0800               M     movf INDF, w
00C0   00FA               M     movwf gbl_spdata
00C1   0384           00605         decf FSR, F                                                     ;Increment pointer
00C2   210C           00606         call PutByte                                            ;Send data
00C3   0BF5           00607         decfsz gbl_cntrb, f
00C4   28BF           00608                 goto WaitComm_SendDataB
                      00609         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00C5   3040               M     movlw BUFFERSIZE
00C6   00F5               M     movwf gbl_cntrb
00C7   1783           00610         bsf STATUS, IRP                                         ;Bank 3
00C8   0A84           00611         incf FSR, f
00C9                  00612 WaitComm_SendDataC
                      00613         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00C9   0800               M     movf INDF, w
00CA   00FA               M     movwf gbl_spdata
00CB   0A84           00614         incf FSR, F                                                     ;Increment pointer
00CC   210C           00615         call PutByte                                            ;Send data
00CD   0BF5           00616         decfsz gbl_cntrb, f
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   28C9           00617                 goto WaitComm_SendDataC
                      00618         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00CF   3040               M     movlw BUFFERSIZE
00D0   00F5               M     movwf gbl_cntrb
00D1   1384           00619         bcf FSR, 7                                                      ;Bank 2
00D2   0384           00620         decf FSR, f
00D3                  00621 WaitComm_SendDataD
                      00622         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00D3   0800               M     movf INDF, w
00D4   00FA               M     movwf gbl_spdata
00D5   0384           00623         decf FSR, F                                                     ;Increment pointer
00D6   210C           00624         call PutByte                                            ;Send data
00D7   0BF5           00625         decfsz gbl_cntrb, f
00D8   28D3           00626                 goto WaitComm_SendDataD
00D9                  00627 WaitComm_SendDataExit
00D9   1383           00628         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
00DA   2246           00629         call    ChannelConfSend
00DB   28A9           00630         goto    WaitComm
                      00631 
00DC                  00632 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00633         skipEqLF B'11111001', gbl_spdata
00DC   087A               M         movf gbl_spdata, w
00DD   3AF9               M         xorlw B'11111001'
00DE   1D03               M         btfss STATUS, Z
00DF   28E5           00634                 goto WaitComm_Rec
                      00635         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00E0   30DD               M     movlw B'11011101'
00E1   00FA               M     movwf gbl_spdata
00E2   210C           00636         call    PutByte
00E3   2225           00637         call    ConfSend
00E4   28A9           00638         goto    WaitComm
                      00639 
00E5                  00640 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00641         skipEqLF B'11111010', gbl_spdata
00E5   087A               M         movf gbl_spdata, w
00E6   3AFA               M         xorlw B'11111010'
00E7   1D03               M         btfss STATUS, Z
00E8   28F3           00642                 goto WaitComm_Break
                      00643         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
00E9   30DE               M     movlw B'11011110'
00EA   00FA               M     movwf gbl_spdata
00EB   210C           00644         call    PutByte
00EC   21FA           00645         call    ConfReceive
00ED   3001           00646         movlw   0x01                                            ;Set counters to 0x01010101 for the case
                             of
00EE   00F4           00647         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
00EF   00F5           00648         movwf   gbl_cntrb
00F0   00F6           00649         movwf   gbl_cntrc
00F1   00F7           00650         movwf   gbl_cntrd
00F2   0008           00651         return
                      00652 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F3                  00653 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00654         skipEqLF B'11110011', gbl_spdata
00F3   087A               M         movf gbl_spdata, w
00F4   3AF3               M         xorlw B'11110011'
00F5   1D03               M         btfss STATUS, Z
00F6   28A9           00655                 goto WaitComm                                   ;No valid message sent
                      00656         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
00F7   30DC               M     movlw B'11011100'
00F8   00FA               M     movwf gbl_spdata
00F9   210C           00657         call    PutByte
00FA   28A9           00658         goto    WaitComm
                      00659 
                      00660 
                      00661 
                      00662 ;GetByte is used to receive a byte on the serial port
                      00663 ;------------------------------------------------------------------------------
00FB                  00664 GetByte
00FB   1E8C           00665         btfss PIR1, RCIF                        
00FC   28FB           00666                 goto GetByte
00FD                  00667 GetByteB
00FD   1D18           00668         btfss RCSTA, FERR                                       ;Handle the frame error
00FE   2901           00669                 goto GetByteC
00FF   081A           00670         movf RCREG, w                                           ;Throw away data with errors
0100   28FB           00671         goto GetByte
0101                  00672 GetByteC
0101   1C98           00673         btfss RCSTA, OERR                                       ;Handle the over run error
0102   2909           00674                 goto GetByteE
0103   1218           00675         bcf RCSTA, CREN                                         ;Reset the receive logic
0104   1618           00676         bsf RCSTA, CREN
0105                  00677 GetByteD
0105   081A           00678         movf RCREG, w                                           ;Throw away data with errors
0106   1A8C           00679         btfsc PIR1, RCIF
0107   2905           00680                 goto GetByteD
0108   28FB           00681         goto GetByte
0109                  00682 GetByteE                                                                ;No errors if we got here       
                      00683         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0109   081A               M     movf RCREG, w
010A   00FA               M     movwf gbl_spdata
010B   3400           00684         retlw 0
                      00685         
                      00686 ;PutByte is used to put a byte on the serial port
                      00687 ;------------------------------------------------------------------------------
010C                  00688 PutByte
010C                  00689 PutByteSerial
010C   1E0C           00690         btfss PIR1, TXIF
010D   290C           00691                 goto PutByteSerial
                      00692         MOVFF gbl_spdata, TXREG
010E   087A               M     movf gbl_spdata, w
010F   0099               M     movwf TXREG
0110   3400           00693         retlw 0
                      00694 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00695 ;Delay used to adjust sample rate
                      00696 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00697 ;statement)
                      00698 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00699 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00700 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00701 ;-----------------------------------------------------------------------------
0111                  00702 Delay
0111   3001           00703         movlw 0x01
0112                  00704 DelayLoop
0112   02F4           00705         subwf gbl_cntra, F
0113   1C03           00706         btfss STATUS, C
0114   02F5           00707                 subwf gbl_cntrb, F
0115   08F4           00708         movf gbl_cntra, F
                      00709         skipZero
0116   1D03               M         btfss STATUS, Z
0117   2912           00710                 goto DelayLoop
0118   08F5           00711         movf gbl_cntrb, F
                      00712         skipZero
0119   1D03               M         btfss STATUS, Z
011A   2912           00713                 goto DelayLoop
011B   0008           00714         return
                      00715 
                      00716 ;ADCShutdown, shutsdown the MAX118
                      00717 ;-----------------------------------------------------------------------------
011C                  00718 ADCShutdown
011C   0080           00719         movwf   INDF                                            ;Save to QUEUE
011D   1486           00720         bsf             ADC_PORT, CS                            ;Unselect MAX118
011E   1383           00721         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
011F   2255           00722         call    ChannelConfStore
0120   287C           00723         goto Main
                      00724 
                      00725 ;=============================================================================
                      00726 ;*****************************************************************************
                      00727 ;=============================================================================
                      00728 
                      00729 ;Interrupt Driven Sampling with Command Responder
                      00730 ;This code section consists of two routines:
                      00731 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00732 ; (2) A looping routine that responds to PC commands while we are waiting for
                      00733 ;               sampling interrupts
                      00734 
                      00735 ;Jonathan Weaver: Measurements from simulation (9/27/2012 and 9/28/2012)
                      00736 ;Interrupt to the first sample = 103 cycles using minimum delay
                      00737 ;Sampling rate = 5000000/(8*SAMPLERATE1:SAMPLERATE2+35) with 20 MHz clock
                      00738 ;Minimum value for SAMPLERATE1:SAMPLERATE2 ~= 20 
                      00739 ;(around 140 cycles to execute the timer1 interrupt.  Added some time for
                      00740 ;processing the serial port.)
                      00741 ;Maximum sample rate (at SAMPLERATE1:SAMPLERATE2 = 20) is 25,641 Hz.
                      00742 ;Waveform completion at that sample rate is 100 times per second
                      00743 ;Maximum communication rate is 5,670 bytes per second or 22 waveforms per second
                      00744 ;using the serial interface.
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00745 
                      00746 ;Note!  There is an ~35 cycle delay between the actual Timer 1 interrupt
                      00747 ; being asserted and the Timer 1 counter being reloaded.
                      00748 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00749 ; when it rolls over to 0x0000, the interrupt is generated.
                      00750 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00751 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00752 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00753 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00754 ;-----------------------------------------------------------------------------
                      00755 
0121                  00756 IrqServiceTimer1
                      00757         ;reload timer for next interrupt and clear the interrupt flag
                      00758         ;sample ADC and store into appropriate location
                      00759         ;increment location and maybe the bank to store into for next time around
                      00760         ;turn off interrupt if done acquiring
                      00761         ;return from call
0121   1283 1303      00762         banksel BANK0
0123   1010           00763         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0124   0972           00764         comf    gbl_sampleRate1, W                      ;MSB of sampling rate
0125   008F           00765         movwf   TMR1H
0126   0973           00766         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
0127   008E           00767         movwf   TMR1L
0128   100C           00768         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0129   1410           00769         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
                      00770 
                      00771         ;Added JWW 1/30/2013
012A   0BFE           00772         decfsz gbl_sampleCntr, f                        ;Implement the longer sample delay, only sample 
                            when sampleCntr is zero
012B   0008           00773                 return
012C   0A71           00774         incf    gbl_sampleRate0, w                      ;Restore sampleCntr using sampleRate0
012D   00FE           00775         movwf   gbl_sampleCntr
                      00776 
012E   0000           00777         nop
012F   0804           00778         movf    FSR, W                                          ;Save the current FSR
0130   00E8           00779         movwf   b0_fsr_temp
                      00780 
                      00781                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
0131   0866           00782         movf b0_sampleAddr, W
0132   0084           00783         movwf FSR
                      00784         ;Assume bank0
0133   1383           00785         bcf STATUS, IRP
0134   1384           00786         bcf FSR, 7
                      00787         ;Set bank1 if needed
0135   18E7           00788         btfsc b0_sampleBank, SAMPLEBANK1
0136   1784           00789         bsf FSR, 7
                      00790         ;Set bank2 if needed
0137   19E7           00791     btfsc b0_sampleBank, SAMPLEBANK2
0138   1783           00792         bsf STATUS, IRP
                      00793     ;Set bank3 if needed
0139   1967           00794     btfsc b0_sampleBank, SAMPLEBANK3
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013A   1784           00795         bsf FSR, 7
013B   1967           00796     btfsc b0_sampleBank, SAMPLEBANK3
013C   1783           00797         bsf STATUS, IRP
                      00798 
013D   1089           00799         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
013E   1009           00800         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
013F   2940           00801         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
0140   2941           00802         goto    $+1
0141   0000           00803         nop
0142   0808           00804         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0143   1409           00805         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0144   1489           00806         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
0145   1009           00807         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
0146   0080           00808         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
0147   1867           00809     btfsc b0_sampleBank, SAMPLEBANK0    ;Increment acquistion memory pointer if Bank0
0148   0A84           00810         incf    FSR, F                                          
0149   18E7           00811     btfsc b0_sampleBank, SAMPLEBANK1    ;Decrement memory pointer if Bank1
014A   0384           00812         decf FSR, F
014B   0808           00813         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
014C   1409           00814         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
014D   19E7           00815     btfsc b0_sampleBank, SAMPLEBANK2    ;Decrement memory pointer if Bank2
014E   0384           00816         decf FSR, F
014F   1967           00817         btfsc b0_sampleBank, SAMPLEBANK3    ;Increment memory pointer if Bank3
0150   0A84           00818                 incf FSR, F
0151   0080           00819         movwf   INDF                                            ;Save channel 1 sample to the acquistion
                             memory
0152   3002           00820         movlw 0x02                                                      ;Prepare to increment sampleAddr
                             by 2
0153   18E7           00821         btfsc b0_sampleBank, SAMPLEBANK1        ;If BANK1, prepare to decrement sampleAddr by 2
0154   30FE           00822                 movlw (0x00 - 0x02)
0155   19E7           00823         btfsc b0_sampleBank, SAMPLEBANK2        ;If BANK2, prepare to decrement sampleAddr by 2
0156   30FE           00824                 movlw (0x00 - 0x02)
0157   07E6           00825         addwf b0_sampleAddr, F
0158   301F           00826         movlw BUFFERMIN-1                                       ;Check for filling last aquisition memor
                            y location in bank
0159   0666           00827         xorwf b0_sampleAddr, W
015A   1903           00828         btfsc STATUS, Z
015B   2963           00829                 goto irqst1_1                                   ;Jump, filled last aquisition memory loc
                            ation in bank
                      00830 
015C   3060           00831         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
015D   0666           00832         xorwf   b0_sampleAddr, W
015E   1D03           00833         btfss   STATUS, Z
015F   296F           00834                 goto    irqst1_3                                ;Jump, we are not done filling the curre
                            nt bank
0160   305F           00835         movlw   BUFFERMAX                                       ;Reset the acquisition memory pointer to
                             its END
0161   00E6           00836         movwf   b0_sampleAddr
0162   2965           00837         goto irqst1_2
                      00838 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0163                  00839 irqst1_1
                      00840     MOVLF BUFFERMIN, b0_sampleAddr              ;Reset the acquisition memory pointer to its BEGINNING
0163   3020               M     movlw BUFFERMIN
0164   00E6               M     movwf b0_sampleAddr
                      00841 
0165                  00842 irqst1_2
0165   1003           00843         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0166   0DE7           00844         rlf     b0_sampleBank, F
0167   1E67           00845         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
0168   296F           00846                 goto    irqst1_3                                ;Not done, so keep going...
0169   1010           00847         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
016A   100C           00848         bcf             PIR1, TMR1IF                            ;Clear the interrupt flag, too
016B   1683 1303      00849         banksel BANK1
016D   100C           00850         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
016E   130B           00851         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
016F                  00852 irqst1_3
016F   1283 1303      00853         banksel BANK0
0171   0868           00854         movf    b0_fsr_temp, W                          ;Restore FSR register
0172   0084           00855         movwf   FSR
0173   0008           00856         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      00857                                                                                 ; state and does the ret
                            fie
                      00858 
                      00859 
                      00860 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
0174                  00861 SampleIntDrvn
                      00862         ;Setup the sample write location and sample bank variables
                      00863         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      00864         ;Turn on Timer 1
                      00865         ;Enable the Timer 1 interrupt
0174   1283 1303      00866         banksel BANK0
0176   3020           00867         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
0177   00E6           00868         movwf   b0_sampleAddr
0178   01E7           00869         clrf    b0_sampleBank                           ;Initialize sample bank pointer
0179   1467           00870         bsf             b0_sampleBank, SAMPLEBANK0
017A   1010           00871         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
017B   1690           00872         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
017C   1610           00873         bsf             T1CON, T1CKPS0
                      00874         ;Added JWW 1/30/2013
017D   3001           00875         movlw   0x01
017E   00FE           00876         movwf   gbl_sampleCntr                          ;Set the sampleCntr to 1 so it will sample on th
                            e first interrupt
                      00877         
017F   30FF           00878         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
0180   008F           00879         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0181   008E           00880         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
0182   100C           00881         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0183   1683 1303      00882         banksel BANK1
0185   140C           00883         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
0186   170B           00884         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
0187   178B           00885         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
0188   1283 1303      00886         banksel BANK0
018A   1410           00887         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
                      00888 
                      00889         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      00890         ; Received Commands are:
                      00891         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00892         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00893         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00894         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00895         ;
                      00896         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      00897         ; routine after the sample memory buffer has been fully filled), leave this
                      00898         ; routine and go back to Main
                      00899 
018B                  00900 sid_GetByte
018B   1683 1303      00901         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
018D   1C0C           00902         btfss   PIE1, TMR1IE
018E   29EE           00903                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
018F   1283 1303      00904         banksel BANK0
0191   1E8C           00905         btfss   PIR1, RCIF                      
0192   298B           00906                 goto sid_GetByte
0193                  00907 sid_GetByteB
0193   1D18           00908         btfss   RCSTA, FERR                                     ;Handle the frame error
0194   2997           00909                 goto sid_GetByteC
0195   081A           00910         movf    RCREG, w                                        ;Throw away data with errors
0196   298B           00911         goto    sid_GetByte
0197                  00912 sid_GetByteC
0197   1C98           00913         btfss   RCSTA, OERR                                     ;Handle the over run error
0198   299F           00914                 goto sid_GetByteE
0199   1218           00915         bcf             RCSTA, CREN                                     ;Reset the receive logic
019A   1618           00916         bsf             RCSTA, CREN
019B                  00917 sid_GetByteD
019B   081A           00918         movf    RCREG, w                                        ;Throw away data with errors
019C   1A8C           00919         btfsc   PIR1, RCIF
019D   299B           00920                 goto sid_GetByteD
019E   298B           00921         goto    sid_GetByte
019F                  00922 sid_GetByteE                                                    ;No errors if we got here       
                      00923         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
019F   081A               M     movf RCREG, w
01A0   00FA               M     movwf gbl_spdata
                      00924 
                      00925 
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A1                  00926 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00927         skipEqLF B'11111000', gbl_spdata
01A1   087A               M         movf gbl_spdata, w
01A2   3AF8               M         xorlw B'11111000'
01A3   1D03               M         btfss STATUS, Z
01A4   29D4           00928                 goto sid_WaitComm_Conf
                      00929         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
01A5   30DC               M     movlw B'11011100'
01A6   00FA               M     movwf gbl_spdata
01A7   210C           00930         call    PutByte
                      00931         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
01A8   3020               M     movlw BUFFERMIN
01A9   0084               M     movwf FSR
                      00932         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01AA   3040               M     movlw BUFFERSIZE
01AB   00F5               M     movwf gbl_cntrb
01AC   1383           00933         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
01AD                  00934 sid_WaitComm_SendDataA                                  ;In Bank 0
                      00935         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01AD   0800               M     movf INDF, w
01AE   00FA               M     movwf gbl_spdata
01AF   0A84           00936         incf    FSR, F                                          ;Increment pointer
01B0   210C           00937         call    PutByte                                         ;Send data
01B1   0BF5           00938         decfsz  gbl_cntrb, f
01B2   29AD           00939                 goto sid_WaitComm_SendDataA
                      00940         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01B3   3040               M     movlw BUFFERSIZE
01B4   00F5               M     movwf gbl_cntrb
01B5   0384           00941         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 1 
01B6   1784           00942         bsf             FSR, 7                                          ;Set Bank 1
01B7                  00943 sid_WaitComm_SendDataB
                      00944         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01B7   0800               M     movf INDF, w
01B8   00FA               M     movwf gbl_spdata
01B9   0384           00945         decf    FSR, F                                          ;Increment pointer
01BA   210C           00946         call    PutByte                                         ;Send data
01BB   0BF5           00947         decfsz  gbl_cntrb, f
01BC   29B7           00948                 goto sid_WaitComm_SendDataB
                      00949         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01BD   3040               M     movlw BUFFERSIZE
01BE   00F5               M     movwf gbl_cntrb
01BF   0A84           00950         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
01C0   1783           00951         bsf             STATUS, IRP                                     ;Set Bank 3
01C1                  00952 sid_WaitComm_SendDataC
                      00953         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01C1   0800               M     movf INDF, w
01C2   00FA               M     movwf gbl_spdata
01C3   0A84           00954         incf    FSR, F                                          ;Increment pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C4   210C           00955         call    PutByte                                         ;Send data
01C5   0BF5           00956         decfsz  gbl_cntrb, f
01C6   29C1           00957                 goto sid_WaitComm_SendDataC
                      00958         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01C7   3040               M     movlw BUFFERSIZE
01C8   00F5               M     movwf gbl_cntrb
01C9   0384           00959         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 2
01CA   1384           00960         bcf             FSR, 7                                          ;Set Bank 2
01CB                  00961 sid_WaitComm_SendDataD
                      00962         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01CB   0800               M     movf INDF, w
01CC   00FA               M     movwf gbl_spdata
01CD   0384           00963         decf    FSR, F                                          ;Increment pointer
01CE   210C           00964         call    PutByte                                         ;Send data
01CF   0BF5           00965         decfsz  gbl_cntrb, f
01D0   29CB           00966                 goto sid_WaitComm_SendDataD
01D1                  00967 sid_WaitComm_SendDataExit
01D1   1383           00968         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
01D2   2246           00969         call    ChannelConfSend
01D3   298B           00970         goto    sid_GetByte
                      00971 
01D4                  00972 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00973         skipEqLF B'11111001', gbl_spdata
01D4   087A               M         movf gbl_spdata, w
01D5   3AF9               M         xorlw B'11111001'
01D6   1D03               M         btfss STATUS, Z
01D7   29DD           00974                 goto sid_WaitComm_Rec
                      00975         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
01D8   30DD               M     movlw B'11011101'
01D9   00FA               M     movwf gbl_spdata
01DA   210C           00976         call    PutByte
01DB   2225           00977         call    ConfSend
01DC   298B           00978         goto    sid_GetByte
                      00979 
01DD                  00980 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00981         skipEqLF B'11111010', gbl_spdata
01DD   087A               M         movf gbl_spdata, w
01DE   3AFA               M         xorlw B'11111010'
01DF   1D03               M         btfss STATUS, Z
01E0   29E6           00982                 goto sid_WaitComm_Break
                      00983         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
01E1   30DE               M     movlw B'11011110'
01E2   00FA               M     movwf gbl_spdata
01E3   210C           00984         call    PutByte
01E4   2217           00985         call    ConfReceiveRateOnly
01E5   298B           00986         goto    sid_GetByte
                      00987 
01E6                  00988 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00989         skipEqLF B'11110011', gbl_spdata
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E6   087A               M         movf gbl_spdata, w
01E7   3AF3               M         xorlw B'11110011'
01E8   1D03               M         btfss STATUS, Z
01E9   298B           00990                 goto sid_GetByte                                ;No valid message sent
                      00991         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
01EA   30DC               M     movlw B'11011100'
01EB   00FA               M     movwf gbl_spdata
01EC   210C           00992         call    PutByte
01ED   298B           00993         goto    sid_GetByte
                      00994 
                      00995 
01EE                  00996 sid_Exit
01EE   1283 1303      00997         banksel BANK0
01F0   1486           00998         bsf ADC_PORT, CS                                        ;Unselect MAX118
01F1   1383           00999         bcf STATUS, IRP                                         ;Set indirection to bank 0 and/or bank 1
01F2   2255           01000         call    ChannelConfStore                        ;Update state of front panel switches/knobs
01F3   3001           01001         movlw   0x01                                            ;Set counters to 0x010101 for the case o
                            f
01F4   00F4           01002         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
01F5   00F5           01003         movwf   gbl_cntrb
01F6   00F6           01004         movwf   gbl_cntrc
01F7   00F7           01005         movwf   gbl_cntrd
01F8   287C           01006         goto    Main
                      01007 
                      01008 
                      01009 
                      01010 
                      01011 ;SampleStripChart is used to send a continuous stream of ADC samples to the PC app.
                      01012 ;The sample pairs for channel 0 and channel 1 are sent as acquired at the rate
                      01013 ; determined by the Timer 1 interrupt.  The sampling rate can not be higher than
                      01014 ; the interface character rate divide by 2, or samples will be lost!  Be sure to keep
                      01015 ; the interrupt rate, determined by sampleRate1:sampleRate2, below the effective
                      01016 ; character rate divided by 2 on the interface.  57.6K baud would support a maximum sample
                      01017 ; rate of approximately 2000Hz, or a 500uSec interrupt period.  Remember, there are
                      01018 ; two data characters for each interrupt, channel 0's ADC byte and channel 1's ADC byte.
                      01019 ;-----------------------------------------------------------------------------
01F9                  01020 SampleStripChart
01F9   287C           01021         goto    Main                                            ;Still being implemented
                      01022 
                      01023 
                      01024 
                      01025 
                      01026 
                      01027 ;Receive and store the user settings from the PC application
                      01028 ;-----------------------------------------------------------------------------
01FA                  01029 ConfReceive
01FA   20FB           01030         call GetByte                                            ;Receive ConfigLoc1
01FB   087A           01031         movf gbl_spdata, w
01FC   39DF           01032         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      01033         if clockFreq == 20                                      ;if necessary
01FD   3820           01034                 iorlw 1 << CLOCKFREQBIT
                      01035         endif
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FE   00F0           01036         movwf gbl_configLoc1
01FF   1283 1303      01037         banksel BANK0
0201   20FB           01038         call GetByte                                            ;Receive trigger delay
                      01039         MOVFF gbl_spdata, b0_triggerDelay0
0202   087A               M     movf gbl_spdata, w
0203   00E0               M     movwf b0_triggerDelay0
0204   20FB           01040         call GetByte
                      01041         MOVFF gbl_spdata, b0_triggerDelay1
0205   087A               M     movf gbl_spdata, w
0206   00E1               M     movwf b0_triggerDelay1
0207   20FB           01042         call GetByte
                      01043         MOVFF gbl_spdata, b0_triggerDelay2
0208   087A               M     movf gbl_spdata, w
0209   00E2               M     movwf b0_triggerDelay2
020A   20FB           01044         call GetByte
                      01045         MOVFF gbl_spdata, b0_triggerDelay3
020B   087A               M     movf gbl_spdata, w
020C   00E3               M     movwf b0_triggerDelay3
020D   20FB           01046         call GetByte                                            ;Receive sample rate
                      01047         MOVFF gbl_spdata, gbl_sampleRate0
020E   087A               M     movf gbl_spdata, w
020F   00F1               M     movwf gbl_sampleRate0
0210   20FB           01048         call GetByte
                      01049         MOVFF gbl_spdata, gbl_sampleRate1
0211   087A               M     movf gbl_spdata, w
0212   00F2               M     movwf gbl_sampleRate1
0213   20FB           01050         call GetByte
                      01051         MOVFF gbl_spdata, gbl_sampleRate2
0214   087A               M     movf gbl_spdata, w
0215   00F3               M     movwf gbl_sampleRate2
0216   0008           01052         return
                      01053 
                      01054 ;Receive user settings from the PC application. BUT, throw most of them away!
                      01055 ;This is used during the SampleIntDrvn routine to prevent changing
                      01056 ;of state during an interrupt driven acquisition that is in progress.
                      01057 ;However, allow the sampleRate0,1,2 variable to be changed.  This allows
                      01058 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      01059 ;the user might have to wait a long time before the sampling completed and
                      01060 ;the user would again get control.
                      01061 ;-----------------------------------------------------------------------------
0217                  01062 ConfReceiveRateOnly
0217   20FB           01063         call GetByte                                            ;Receive ConfigLoc1
0218   20FB           01064         call GetByte                                            ;Receive trigger delay
0219   20FB           01065         call GetByte
021A   20FB           01066         call GetByte
021B   20FB           01067         call GetByte                                            ;Receive sample rate
                      01068         MOVFF gbl_spdata, gbl_sampleRate0
021C   087A               M     movf gbl_spdata, w
021D   00F1               M     movwf gbl_sampleRate0
021E   20FB           01069         call GetByte
                      01070         MOVFF gbl_spdata, gbl_sampleRate1
021F   087A               M     movf gbl_spdata, w
0220   00F2               M     movwf gbl_sampleRate1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0221   20FB           01071         call GetByte
                      01072         MOVFF gbl_spdata, gbl_sampleRate2
0222   087A               M     movf gbl_spdata, w
0223   00F3               M     movwf gbl_sampleRate2
0224   0008           01073         return
                      01074 
                      01075 ;Send the current DSOscope configuration to the PC application
                      01076 ;-----------------------------------------------------------------------------
0225                  01077 ConfSend
                      01078         ;Send number of datapoints (2 bytes)
                      01079         MOVLF high TOTALBUFFERSIZE, gbl_spdata
0225   3001               M     movlw high TOTALBUFFERSIZE
0226   00FA               M     movwf gbl_spdata
0227   210C           01080         call PutByte
                      01081         MOVLF low TOTALBUFFERSIZE, gbl_spdata
0228   3000               M     movlw low TOTALBUFFERSIZE
0229   00FA               M     movwf gbl_spdata
022A   210C           01082         call PutByte
                      01083         ;Send clock frequency configuration
                      01084         MOVFF gbl_configLoc1, gbl_spdata
022B   0870               M     movf gbl_configLoc1, w
022C   00FA               M     movwf gbl_spdata
022D   210C           01085         call PutByte
022E   1283 1303      01086         banksel BANK0
                      01087         MOVFF b0_triggerDelay0, gbl_spdata
0230   0860               M     movf b0_triggerDelay0, w
0231   00FA               M     movwf gbl_spdata
0232   210C           01088         call PutByte
                      01089         MOVFF b0_triggerDelay1, gbl_spdata
0233   0861               M     movf b0_triggerDelay1, w
0234   00FA               M     movwf gbl_spdata
0235   210C           01090         call PutByte
                      01091         MOVFF b0_triggerDelay2, gbl_spdata
0236   0862               M     movf b0_triggerDelay2, w
0237   00FA               M     movwf gbl_spdata
0238   210C           01092         call PutByte
                      01093         MOVFF b0_triggerDelay3, gbl_spdata
0239   0863               M     movf b0_triggerDelay3, w
023A   00FA               M     movwf gbl_spdata
023B   210C           01094         call PutByte
                      01095         MOVFF gbl_sampleRate0, gbl_spdata
023C   0871               M     movf gbl_sampleRate0, w
023D   00FA               M     movwf gbl_spdata
023E   210C           01096         call PutByte
                      01097         MOVFF gbl_sampleRate1, gbl_spdata
023F   0872               M     movf gbl_sampleRate1, w
0240   00FA               M     movwf gbl_spdata
0241   210C           01098         call PutByte
                      01099         MOVFF gbl_sampleRate2, gbl_spdata
0242   0873               M     movf gbl_sampleRate2, w
0243   00FA               M     movwf gbl_spdata
0244   210C           01100         call PutByte
0245   0008           01101         return
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01102 
                      01103 ;Send the current DSOscope channel settings to the PC application
                      01104 ;-----------------------------------------------------------------------------
0246                  01105 ChannelConfSend
                      01106         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
0246   087B               M     movf gbl_dataConfig, w
0247   00FA               M     movwf gbl_spdata
0248   210C           01107         call PutByte
0249   01FA           01108         clrf gbl_spdata
024A   210C           01109         call PutByte                                            ;Channel 1 offset
024B   210C           01110         call PutByte                                            ;Channel 2 offset
024C   1283 1303      01111         banksel BANK0
                      01112         MOVFF b0_triggerLevel, gbl_spdata
024E   0865               M     movf b0_triggerLevel, w
024F   00FA               M     movwf gbl_spdata
0250   210C           01113         call PutByte                                            ;Triggerlevel
                      01114         MOVFF b0_triggerChannel, gbl_spdata
0251   0864               M     movf b0_triggerChannel, w
0252   00FA               M     movwf gbl_spdata
0253   210C           01115         call PutByte                                            ;Trigger Channel
0254   0008           01116         return
                      01117 
                      01118 
                      01119 ;Read and store the current front panel settings of the DSOscope
                      01120 ;-----------------------------------------------------------------------------
0255                  01121 ChannelConfStore
                      01122         ;Format of channel data configuration byte is:  Channel 1 Gain Scale (2) bits
                      01123         ;                                                                                               
                                    For gain scale, 00 = 1, 01 = 2, 10 = 5
                      01124         ;                                                                                               
                            Channel 2 Gain Scale (2) bits
                      01125         ;                                                                                               
                            Channel 1 AC = 1 / DC = 0 (1) bit
                      01126         ;                                                                                               
                            Channel 2 AC = 1 / DC = 0 (1) bit
                      01127         ;                                                                                               
                            Channel 1 Attenuated by 10 = 1 / by 1 = 0
                      01128         ;                                                                                               
                            Channel 2 Attenuated by 10 = 1 / by 1 = 0
0255   01FB           01129         clrf gbl_dataConfig
0256   1683 1303      01130         banksel TRISC                                   ;Access Bank1
0258   1507           01131         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0259   1087           01132         bcf TRISC, CH1SEL                                       ;Ch1Sel output
025A   1685           01133         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
025B   1205           01134         bcf TRISA, CH1SELG                                      ;Ch1Sel output
025C   1283 1303      01135         banksel ANALOG_SEL                              ;Access Bank0
025E   1087           01136         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
025F   1205           01137         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
0260   177B           01138         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
0261   1C05           01139         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0262   137B           01140                 bcf gbl_dataConfig, 6
0263   1C85           01141         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0264   137B           01142                 bcf gbl_dataConfig, 6
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0265   1C85           01143         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0266   17FB           01144                 bsf gbl_dataConfig, 7
0267   1807           01145         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0268   15FB           01146                 bsf gbl_dataConfig, 3
0269   1487           01147         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
026A   1605           01148         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01149 
026B   1683 1303      01150         banksel TRISC                                   ;Access Bank1
026D   1487           01151         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
026E   1107           01152         bcf TRISC, CH2SEL                                       ;Ch2Sel output
026F   1605           01153         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
0270   1285           01154         bcf TRISA, CH2SELG                                      ;Ch2Sel output
0271   1283 1303      01155         banksel ANALOG_SEL                              ;Access Bank0
0273   1107           01156         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
0274   1285           01157         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
0275   167B           01158         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
0276   1C05           01159         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0277   127B           01160                 bcf gbl_dataConfig, 4
0278   1C85           01161         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0279   127B           01162                 bcf gbl_dataConfig, 4
027A   1C85           01163         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
027B   16FB           01164                 bsf gbl_dataConfig, 5
027C   1807           01165         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
027D   157B           01166                 bsf gbl_dataConfig, 2
027E   1507           01167         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
027F   1685           01168         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01169 
0280   1B06           01170         btfsc ATTNPORT, CH1ATTN                         ;If Channel 1 is Attenuated by 10 then mark
0281   14FB           01171                 bsf gbl_dataConfig, 1
0282   1B86           01172         btfsc ATTNPORT, CH2ATTN                         ;If Channel 2 is Attenuated by 10 then mark
0283   147B           01173                 bsf gbl_dataConfig, 0
                      01174 
                      01175         ;Next byte/bit is Trigger Source Channel
0284   01E4           01176         clrf b0_triggerChannel
0285   1985           01177         btfsc TRGSRCPORT, TRGCH                         ;If Trigger Source is Channel 2 then mark
0286   1464           01178                 bsf     b0_triggerChannel, 0
                      01179 
                      01180         ;Next byte is Trigger Level
0287   1089           01181         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0288   1506           01182         bsf ADC_PORT, ADDR1
0289   1186           01183         bcf ADC_PORT, ADDR2
028A   1086           01184         bcf ADC_PORT, CS                                        ;Select maxim ADC
028B   1009           01185         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
028C   0000           01186         nop                                                                     ;Wait 5
028D   0000           01187         nop
028E   0000           01188         nop
028F   0000           01189         nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0290   0000           01190         nop
0291   0808           01191         movf ADC_DATAPORT, W                            ;Save trigger level
0292   1409           01192         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0293   1486           01193         bsf ADC_PORT, CS                                        ;unselect maxim ADC
0294   1089           01194         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
0295   1106           01195         bcf ADC_PORT, ADDR1
0296   1186           01196         bcf ADC_PORT, ADDR2
0297   00E5           01197         movwf b0_triggerLevel
0298   0008           01198         return
                      01199 
                      01200 
                      01201 ;=============================================================================
                      01202 ;*****************************************************************************
                      01203 ;=============================================================================
                      01204 
                      01205 
                      01206 ;Sample Delayed
                      01207 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01208 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01209 ;-----------------------------------------------------------------------------
0299                  01210 SampleDelayed
0299   1009           01211         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01212         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
029A   303F               M     movlw BUFFERSIZE-1
029B   00F6               M     movwf gbl_cntrc
                      01213         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
029C   3020               M     movlw BUFFERMIN
029D   0084               M     movwf FSR
                      01214         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
029E   0873               M     movf gbl_sampleRate2, w
029F   00F4               M     movwf gbl_cntra
                      01215         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02A0   0872               M     movf gbl_sampleRate1, w
02A1   00F5               M     movwf gbl_cntrb
02A2   0000           01216         nop
02A3   2111           01217         call Delay
02A4                  01218 SampleDelayedLoopA
02A4   0808           01219         movf ADC_DATAPORT, W                            ;Sample
02A5   1409           01220         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02A6   1009           01221         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02A7   0080           01222         movwf INDF                                                      ;Save to QUEUE
02A8   0A84           01223         incf FSR, F                                                     ;Increment QUEUE pointer
02A9                  01224 StSampleDelayedLoopA
                      01225         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02A9   0873               M     movf gbl_sampleRate2, w
02AA   00F4               M     movwf gbl_cntra
                      01226         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02AB   0872               M     movf gbl_sampleRate1, w
02AC   00F5               M     movwf gbl_cntrb
02AD   2111           01227         call Delay
02AE   0BF6           01228         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02AF   2AA4           01229                 goto SampleDelayedLoopA
02B0   0000           01230         nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1   0808           01231         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
02B2   1409           01232         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02B3   1009           01233         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02B4   0080           01234         movwf INDF                                                      ;Save to QUEUE
02B5   1784           01235         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01236         MOVLF BUFFERSIZE-1, gbl_cntrc
02B6   303F               M     movlw BUFFERSIZE-1
02B7   00F6               M     movwf gbl_cntrc
                      01237         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02B8   0873               M     movf gbl_sampleRate2, w
02B9   00F4               M     movwf gbl_cntra
                      01238         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02BA   0872               M     movf gbl_sampleRate1, w
02BB   00F5               M     movwf gbl_cntrb
02BC   2111           01239         call Delay
02BD   0000           01240         nop
02BE                  01241 SampleDelayedLoopB
02BE   0808           01242         movf ADC_DATAPORT, W                            ;Sample
02BF   1409           01243         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02C0   1009           01244         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02C1   0080           01245         movwf INDF                                                      ;Save to QUEUE
02C2   0384           01246         decf FSR, F                                                     ;Increment QUEUE pointer
                      01247         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02C3   0873               M     movf gbl_sampleRate2, w
02C4   00F4               M     movwf gbl_cntra
                      01248         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02C5   0872               M     movf gbl_sampleRate1, w
02C6   00F5               M     movwf gbl_cntrb
02C7   2111           01249         call Delay
02C8   0BF6           01250         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02C9   2ABE           01251                 goto SampleDelayedLoopB
02CA   0000           01252         nop
02CB   0808           01253         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
02CC   1409           01254         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02CD   1009           01255         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02CE   0080           01256         movwf INDF                                                      ;Save to QUEUE
02CF   1783           01257         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01258         MOVLF BUFFERSIZE-1, gbl_cntrc
02D0   303F               M     movlw BUFFERSIZE-1
02D1   00F6               M     movwf gbl_cntrc
                      01259         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02D2   0873               M     movf gbl_sampleRate2, w
02D3   00F4               M     movwf gbl_cntra
                      01260         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02D4   0872               M     movf gbl_sampleRate1, w
02D5   00F5               M     movwf gbl_cntrb
02D6   2111           01261         call Delay
02D7   0000           01262         nop
02D8                  01263 SampleDelayedLoopC
02D8   0808           01264         movf ADC_DATAPORT, W                            ;Sample
02D9   1409           01265         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02DA   1009           01266         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02DB   0080           01267         movwf INDF                                                      ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DC   0A84           01268         incf FSR, F                                                     ;Increment QUEUE pointer
                      01269         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02DD   0873               M     movf gbl_sampleRate2, w
02DE   00F4               M     movwf gbl_cntra
                      01270         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02DF   0872               M     movf gbl_sampleRate1, w
02E0   00F5               M     movwf gbl_cntrb
02E1   2111           01271         call Delay
02E2   0BF6           01272         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02E3   2AD8           01273                 goto SampleDelayedLoopC
02E4   0000           01274         nop
02E5   0808           01275         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
02E6   1409           01276         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02E7   1009           01277         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02E8   0080           01278         movwf INDF                                                      ;Save to QUEUE
02E9   1384           01279         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01280         MOVLF BUFFERSIZE-1, gbl_cntrc
02EA   303F               M     movlw BUFFERSIZE-1
02EB   00F6               M     movwf gbl_cntrc
                      01281         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02EC   0873               M     movf gbl_sampleRate2, w
02ED   00F4               M     movwf gbl_cntra
                      01282         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02EE   0872               M     movf gbl_sampleRate1, w
02EF   00F5               M     movwf gbl_cntrb
02F0   2111           01283         call Delay
02F1   0000           01284         nop
02F2                  01285 SampleDelayedLoopD
02F2   0808           01286         movf ADC_DATAPORT, W                            ;Sample
02F3   1409           01287         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F4   1009           01288         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F5   0080           01289         movwf INDF                                                      ;Save to QUEUE
02F6   0384           01290         decf FSR, F                                                     ;Increment QUEUE pointer
                      01291         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02F7   0873               M     movf gbl_sampleRate2, w
02F8   00F4               M     movwf gbl_cntra
                      01292         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02F9   0872               M     movf gbl_sampleRate1, w
02FA   00F5               M     movwf gbl_cntrb
02FB   2111           01293         call Delay
02FC   0BF6           01294         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02FD   2AF2           01295                 goto SampleDelayedLoopD
02FE   0000           01296         nop
02FF   0808           01297         movf ADC_DATAPORT, W                            ;Last sample
0300   1409           01298         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0301   118A           01299         bcf PCLATH, 3                                           ;insure correct program memory page
0302   120A           01300         bcf PCLATH, 4
0303   291C           01301         goto ADCShutdown
                      01302 
                      01303 ;SampleXYDelayed
                      01304 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01305 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01306 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01307 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01308 ;-----------------------------------------------------------------------------
0304                  01309 SampleXYDelayed
0304   1009           01310         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0305   1489           01311         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01312         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0306   3020               M     movlw BUFFERMIN
0307   0084               M     movwf FSR
0308   0808           01313         movf ADC_DATAPORT, W                            ;Sample X
0309   1409           01314         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
030A   1009           01315         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
030B   1089           01316         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
030C   0080           01317         movwf INDF                                                      ;Save to QUEUE
030D   0A84           01318         incf FSR, F                                                     ;Increment QUEUE pointer
                      01319         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
030E   301F               M     movlw BUFFERSIZE/2-1
030F   00F6               M     movwf gbl_cntrc
                      01320         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0310   0873               M     movf gbl_sampleRate2, w
0311   00F4               M     movwf gbl_cntra
                      01321         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0312   0872               M     movf gbl_sampleRate1, w
0313   00F5               M     movwf gbl_cntrb
0314   2111           01322         call Delay
0315   0000           01323         nop
0316                  01324 SampleXYDelayedLA
0316   0808           01325         movf ADC_DATAPORT, W                            ;Sample Y
0317   1409           01326         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0318   1009           01327         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0319   1489           01328         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
031A   0080           01329         movwf INDF                                                      ;Save to QUEUE
031B   0A84           01330         incf FSR, F                                                     ;Increment QUEUE pointer
031C   0808           01331         movf ADC_DATAPORT, W                            ;Sample X
031D   1409           01332         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
031E   1009           01333         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
031F   1089           01334         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0320   0080           01335         movwf INDF                                                      ;Save to QUEUE
0321   0A84           01336         incf FSR, F                                                     ;Increment QUEUE pointer
                      01337         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0322   0873               M     movf gbl_sampleRate2, w
0323   00F4               M     movwf gbl_cntra
                      01338         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0324   0872               M     movf gbl_sampleRate1, w
0325   00F5               M     movwf gbl_cntrb
0326   2111           01339         call Delay
0327   0BF6           01340         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0328   2B16           01341                 goto SampleXYDelayedLA
0329   0000           01342         nop
032A   0808           01343         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
032B   1409           01344         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
032C   1009           01345         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
032D   1489           01346         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
032E   0080           01347         movwf INDF                                                      ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032F   1784           01348         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0330   0808           01349         movf ADC_DATAPORT, W                            ;Sample X
0331   1409           01350         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0332   1009           01351         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0333   1089           01352         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0334   0080           01353         movwf INDF                                                      ;Save to QUEUE
0335   0384           01354         decf FSR, f                                                     ;Increment QUEUE pointer
                      01355         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0336   301F               M     movlw BUFFERSIZE/2-1
0337   00F6               M     movwf gbl_cntrc
                      01356         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0338   0873               M     movf gbl_sampleRate2, w
0339   00F4               M     movwf gbl_cntra
                      01357         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
033A   0872               M     movf gbl_sampleRate1, w
033B   00F5               M     movwf gbl_cntrb
033C   2111           01358         call Delay
033D   0000           01359         nop
033E                  01360 SampleXYDelayedLB
033E   0808           01361         movf ADC_DATAPORT, W                            ;Sample Y
033F   1409           01362         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0340   1009           01363         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0341   1489           01364         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0342   0080           01365         movwf INDF                                                      ;Save to QUEUE
0343   0384           01366         decf FSR, F                                                     ;Increment QUEUE pointer
0344   0808           01367         movf ADC_DATAPORT, W                            ;Sample X
0345   1409           01368         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0346   1009           01369         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0347   1089           01370         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0348   0080           01371         movwf INDF                                                      ;Save to QUEUE
0349   0384           01372         decf FSR, F                                                     ;Increment QUEUE pointer
                      01373         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
034A   0873               M     movf gbl_sampleRate2, w
034B   00F4               M     movwf gbl_cntra
                      01374         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
034C   0872               M     movf gbl_sampleRate1, w
034D   00F5               M     movwf gbl_cntrb
034E   2111           01375         call Delay
034F   0BF6           01376         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0350   2B3E           01377                 goto SampleXYDelayedLB
0351   0000           01378         nop
0352   0808           01379         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0353   1409           01380         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0354   1009           01381         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0355   1489           01382         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0356   0080           01383         movwf INDF                                                      ;Save to QUEUE
0357   1783           01384         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0358   0808           01385         movf ADC_DATAPORT, W                            ;Sample X
0359   1409           01386         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
035A   1009           01387         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
035B   1089           01388         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
035C   0080           01389         movwf INDF                                                      ;Save to QUEUE
035D   0A84           01390         incf FSR, f                                                     ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01391         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
035E   301F               M     movlw BUFFERSIZE/2-1
035F   00F6               M     movwf gbl_cntrc
                      01392         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0360   0873               M     movf gbl_sampleRate2, w
0361   00F4               M     movwf gbl_cntra
                      01393         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0362   0872               M     movf gbl_sampleRate1, w
0363   00F5               M     movwf gbl_cntrb
0364   2111           01394         call Delay
0365   0000           01395         nop
0366                  01396 SampleXYDelayedLC
0366   0808           01397         movf ADC_DATAPORT, W                            ;Sample Y
0367   1409           01398         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0368   1009           01399         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0369   1489           01400         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
036A   0080           01401         movwf INDF                                                      ;Save to QUEUE
036B   0A84           01402         incf FSR, F                                                     ;Increment QUEUE pointer
036C   0808           01403         movf ADC_DATAPORT, W                            ;Sample X
036D   1409           01404         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
036E   1009           01405         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
036F   1089           01406         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0370   0080           01407         movwf INDF                                                      ;Save to QUEUE
0371   0A84           01408         incf FSR, F                                                     ;Increment QUEUE pointer
                      01409         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0372   0873               M     movf gbl_sampleRate2, w
0373   00F4               M     movwf gbl_cntra
                      01410         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0374   0872               M     movf gbl_sampleRate1, w
0375   00F5               M     movwf gbl_cntrb
0376   2111           01411         call Delay
0377   0BF6           01412         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0378   2B66           01413                 goto SampleXYDelayedLC
0379   0000           01414         nop
037A   0808           01415         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
037B   1409           01416         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037C   1009           01417         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
037D   1489           01418         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
037E   0080           01419         movwf INDF                                                      ;Save to QUEUE
037F   1384           01420         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0380   0808           01421         movf ADC_DATAPORT, W                            ;Sample X
0381   1409           01422         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0382   1009           01423         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0383   1089           01424         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0384   0080           01425         movwf INDF                                                      ;Save to QUEUE
0385   0384           01426         decf FSR, f                                                     ;Increment QUEUE pointer
                      01427         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0386   301F               M     movlw BUFFERSIZE/2-1
0387   00F6               M     movwf gbl_cntrc
                      01428         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0388   0873               M     movf gbl_sampleRate2, w
0389   00F4               M     movwf gbl_cntra
                      01429         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038A   0872               M     movf gbl_sampleRate1, w
038B   00F5               M     movwf gbl_cntrb
038C   2111           01430         call Delay
038D   0000           01431         nop
038E                  01432 SampleXYDelayedLD
038E   0808           01433         movf ADC_DATAPORT, W                            ;Sample Y
038F   1409           01434         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0390   1009           01435         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0391   1489           01436         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0392   0080           01437         movwf INDF                                                      ;Save to QUEUE
0393   0384           01438         decf FSR, F                                                     ;Increment QUEUE pointer
0394   0808           01439         movf ADC_DATAPORT, W                            ;Sample X
0395   1409           01440         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0396   1009           01441         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0397   1089           01442         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0398   0080           01443         movwf INDF                                                      ;Save to QUEUE
0399   0384           01444         decf FSR, F                                                     ;Increment QUEUE pointer
                      01445         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
039A   0873               M     movf gbl_sampleRate2, w
039B   00F4               M     movwf gbl_cntra
                      01446         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
039C   0872               M     movf gbl_sampleRate1, w
039D   00F5               M     movwf gbl_cntrb
039E   2111           01447         call Delay
039F   0BF6           01448         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03A0   2B8E           01449                 goto SampleXYDelayedLD
03A1   0000           01450         nop
03A2   0808           01451         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
03A3   1409           01452         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A4   118A           01453         bcf PCLATH, 3                                           ;insure correct program memory page
03A5   120A           01454         bcf PCLATH, 4
03A6   291C           01455         goto ADCShutdown
                      01456 
                      01457 ;Fast sample
                      01458 ;Sampling rate = 625 kHz with 20 MHz clock
                      01459 ;Sampling rate = 125 kHz with 4 MHz clock
                      01460 ;-----------------------------------------------------------------------------
03A7                  01461 Sample625k
03A7   1009           01462         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01463         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
03A8   303F               M     movlw BUFFERSIZE-1
03A9   00F4               M     movwf gbl_cntra
                      01464         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03AA   3020               M     movlw BUFFERMIN
03AB   0084               M     movwf FSR
03AC   0000           01465         nop
03AD                  01466 Sample625kLoopA
03AD   0808           01467         movf ADC_DATAPORT, W                            ;Sample
03AE   1409           01468         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03AF   1009           01469         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03B0   0080           01470         movwf INDF                                                      ;Save to QUEUE
03B1   0A84           01471         incf FSR, F                                                     ;Increment QUEUE pointer
03B2   0BF4           01472         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B3   2BAD           01473                 goto Sample625kLoopA
03B4   0000           01474         nop
03B5   0808           01475         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
03B6   1409           01476         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03B7   1009           01477         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03B8   0080           01478         movwf INDF                                                      ;Save to QUEUE
03B9   1784           01479         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01480         MOVLF BUFFERSIZE-1, gbl_cntra
03BA   303F               M     movlw BUFFERSIZE-1
03BB   00F4               M     movwf gbl_cntra
03BC   0000           01481         nop
03BD                  01482 Sample625kLoopB
03BD   0808           01483         movf ADC_DATAPORT, W                            ;Sample
03BE   1409           01484         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03BF   1009           01485         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03C0   0080           01486         movwf INDF                                                      ;Save to QUEUE
03C1   0384           01487         decf FSR, F                                                     ;Increment QUEUE pointer
03C2   0BF4           01488         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03C3   2BBD           01489                 goto Sample625kLoopB
03C4   0000           01490         nop
03C5   0808           01491         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
03C6   1409           01492         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03C7   1009           01493         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03C8   0080           01494         movwf INDF                                                      ;Save to QUEUE
03C9   1783           01495         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01496         MOVLF BUFFERSIZE-1, gbl_cntra
03CA   303F               M     movlw BUFFERSIZE-1
03CB   00F4               M     movwf gbl_cntra
03CC   0000           01497         nop
03CD                  01498 Sample625kLoopC
03CD   0808           01499         movf ADC_DATAPORT, W                            ;Sample
03CE   1409           01500         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03CF   1009           01501         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D0   0080           01502         movwf INDF                                                      ;Save to QUEUE
03D1   0A84           01503         incf FSR, F                                                     ;Increment QUEUE pointer
03D2   0BF4           01504         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03D3   2BCD           01505                 goto Sample625kLoopC
03D4   0000           01506         nop
03D5   0808           01507         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
03D6   1409           01508         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03D7   1009           01509         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03D8   0080           01510         movwf INDF                                                      ;Save to QUEUE
03D9   1384           01511         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01512         MOVLF BUFFERSIZE-1, gbl_cntra
03DA   303F               M     movlw BUFFERSIZE-1
03DB   00F4               M     movwf gbl_cntra
03DC   0000           01513         nop
03DD                  01514 Sample625kLoopD
03DD   0808           01515         movf ADC_DATAPORT, W                            ;Sample
03DE   1409           01516         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03DF   1009           01517         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03E0   0080           01518         movwf INDF                                                      ;Save to QUEUE
03E1   0384           01519         decf FSR, F                                                     ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E2   0BF4           01520         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03E3   2BDD           01521                 goto Sample625kLoopD
03E4   0000           01522         nop
03E5   0808           01523         movf ADC_DATAPORT, W                            ;Last sample
03E6   1409           01524         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E7   118A           01525         bcf PCLATH, 3                                           ;insure correct program memory page
03E8   120A           01526         bcf PCLATH, 4
03E9   291C           01527         goto ADCShutdown
                      01528 
                      01529 ;Fast sample
                      01530 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01531 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01532 ;or
                      01533 ;Sampling rate = 250 kHz with 20 MHz clock
                      01534 ;Sampling rate =  50 kHz with 4 MHz clock
                      01535 ;-----------------------------------------------------------------------------
03EA                  01536 Sample417k250k
03EA   1009           01537         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01538         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
03EB   303F               M     movlw BUFFERSIZE - 1
03EC   00F4               M     movwf gbl_cntra
                      01539         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03ED   3020               M     movlw BUFFERMIN
03EE   0084               M     movwf FSR
03EF   2BF0           01540         goto $ + 1                                                      ;Delay 3
03F0   1D70           01541         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
03F1   2BF3           01542                 goto Sample417kLoopA
03F2   2449           01543         call DelaySeven                                         ;Delay 9 cycles
03F3                  01544 Sample417kLoopA
03F3   0808           01545         movf ADC_DATAPORT, W                            ;Sample
03F4   1409           01546         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F5   1009           01547         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F6   0080           01548         movwf INDF                                                      ;Save to QUEUE
03F7   0A84           01549         incf FSR, F                                                     ;Increment QUEUE pointer
03F8   1D70           01550         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03F9   2BFB           01551                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
03FA                  01552 Sample250kA
03FA   2449           01553         call DelaySeven                                         ;Delay 9 cycles
03FB                  01554 Sample417kA
03FB   0000           01555         nop
03FC   0BF4           01556         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03FD   2BF3           01557                 goto Sample417kLoopA
03FE   0000           01558         nop
03FF   0808           01559         movf ADC_DATAPORT, W                            ;Last sample bank 1
0400   1409           01560         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0401   1009           01561         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0402   0080           01562         movwf INDF                                                      ;Save to QUEUE
0403   1784           01563         bsf FSR, 7                                                      ;Goto bank 2
                      01564         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
0404   303F               M     movlw BUFFERSIZE - 1
0405   00F4               M     movwf gbl_cntra
0406   2C07           01565         goto $ + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0407   1D70           01566         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
0408   2C0A           01567                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
0409   2449           01568         call DelaySeven                                         ;Delay 9 cycles
040A                  01569 Sample417kLoopB
040A   0808           01570         movf ADC_DATAPORT, W                            ;Sample
040B   1409           01571         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
040C   1009           01572         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
040D   0080           01573         movwf INDF                                                      ;Save to QUEUE
040E   0384           01574         decf FSR, F                                                     ;Increment QUEUE pointer
040F                  01575 StSample417kLoopB
040F   1D70           01576         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0410   2C12           01577                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
0411                  01578 Sample250kB
0411   2449           01579         call DelaySeven                                         ;Delay 9 cycles
0412                  01580 Sample417kB
0412   0000           01581         nop
0413   0BF4           01582         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0414   2C0A           01583                 goto Sample417kLoopB
0415   0000           01584         nop
0416   0808           01585         movf ADC_DATAPORT, W                            ;Last sample bank 2
0417   1409           01586         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0418   1009           01587         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0419   0080           01588         movwf INDF                                                      ;Save to QUEUE
041A   1783           01589         bsf STATUS, IRP                                         ;Goto bank 4
                      01590         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
041B   303F               M     movlw BUFFERSIZE - 1
041C   00F4               M     movwf gbl_cntra
041D   2C1E           01591         goto $ + 1
041E   1D70           01592         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
041F   2C21           01593                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
0420   2449           01594         call DelaySeven                                         ;Delay 9 cycles
0421                  01595 Sample417kLoopC
0421   0808           01596         movf ADC_DATAPORT, W                            ;Sample
0422   1409           01597         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0423   1009           01598         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0424   0080           01599         movwf INDF                                                      ;Save to QUEUE
0425   0A84           01600         incf FSR, F                                                     ;Increment QUEUE pointer
0426                  01601 StSample417kLoopC
0426   1D70           01602         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0427   2C29           01603                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
0428                  01604 Sample250kC
0428   2449           01605         call DelaySeven                                         ;Delay 9 cycles
0429                  01606 Sample417kC
0429   0000           01607         nop
042A   0BF4           01608         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
042B   2C21           01609                 goto Sample417kLoopC
042C   0000           01610         nop
042D   0808           01611         movf ADC_DATAPORT, W                            ;Last sample bank 4
042E   1409           01612         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042F   1009           01613         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0430   0080           01614         movwf INDF                                                      ;Save to QUEUE
0431   1384           01615         bcf FSR, 7                                                      ;Goto bank 3
                      01616         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
0432   303F               M     movlw BUFFERSIZE - 1
0433   00F4               M     movwf gbl_cntra
0434   2C35           01617         goto $ + 1
0435   1D70           01618         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
0436   2C38           01619                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
0437   2449           01620         call DelaySeven                                         ;Delay 9 cycles
0438                  01621 Sample417kLoopD
0438   0808           01622         movf ADC_DATAPORT, W                            ;Sample
0439   1409           01623         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043A   1009           01624         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043B   0080           01625         movwf INDF                                                      ;Save to QUEUE
043C   0384           01626         decf FSR, F                                                     ;Increment QUEUE pointer
043D                  01627 StSample417kLoopD
043D   1D70           01628         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
043E   2C40           01629                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
043F                  01630 Sample250kD
043F   2449           01631         call DelaySeven                                         ;Delay 9 cycles
0440                  01632 Sample417kD
0440   0000           01633         nop
0441   0BF4           01634         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0442   2C38           01635                 goto Sample417kLoopD
0443   0000           01636         nop
0444   0808           01637         movf ADC_DATAPORT, W                            ;Last sample
0445   1409           01638         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0446   118A           01639         bcf PCLATH, 3                                           ;insure correct program memory page
0447   120A           01640         bcf PCLATH, 4
0448   291C           01641         goto ADCShutdown
                      01642 
                      01643 ;Delay Seven Cycles, helper to Sample417k250k
0449                  01644 DelaySeven
0449   2C4A           01645         goto $ + 1                                                      ;7
                      01646 ;Delay Five Cycles, helper to SampleXY250k192k
044A                  01647 DelayFive
044A   0000           01648         nop                                                                     ;5
044B   2C4C           01649         goto $ + 1                                              
                      01650 ;Delay Two Cycles, helper to SampleXY250k192k
044C                  01651 DelayTwo
044C   0008           01652         return                                                          ;2
                      01653 
                      01654 
                      01655 ;Fast sample XY
                      01656 ;Sampling rate = 250 kHz with 20 MHz clock
044D                  01657 SampleXY250k192k
044D   1009           01658         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
044E   1489           01659         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01660         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
044F   3020               M     movlw BUFFERMIN
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0450   0084               M     movwf FSR
0451   0808           01661         movf ADC_DATAPORT, W                            ;Sample X
0452   1409           01662         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0453   1009           01663         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0454   1089           01664         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0455   0080           01665         movwf INDF                                                      ;Save to QUEUE
0456   0A84           01666         incf FSR, F                                                     ;Increment QUEUE pointer
                      01667         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0457   301F               M     movlw BUFFERSIZE/2-1
0458   00F6               M     movwf gbl_cntrc
0459   1C70           01668         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
045A   244A           01669                 call DelayFive                                  ;192k
045B   244C           01670         call DelayTwo
045C                  01671 SampleXY250kLA
045C   0808           01672         movf ADC_DATAPORT, W                            ;Sample Y
045D   1409           01673         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
045E   1009           01674         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
045F   1489           01675         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0460   0080           01676         movwf INDF                                                      ;Save to QUEUE
0461   0A84           01677         incf FSR, F                                                     ;Increment QUEUE pointer
0462   0808           01678         movf ADC_DATAPORT, W                            ;Sample X
0463   1409           01679         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0464   1009           01680         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0465   1089           01681         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0466   0080           01682         movwf INDF                                                      ;Save to QUEUE
0467   0A84           01683         incf FSR, F                                                     ;Increment QUEUE pointer
0468   1C70           01684         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0469   244A           01685                 call DelayFive                                  ;192k
046A   2C6B           01686         goto $ + 1
046B   0000           01687         nop
046C   0BF6           01688         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
046D   2C5C           01689                 goto SampleXY250kLA
046E   0000           01690         nop
046F   0808           01691         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0470   1409           01692         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0471   1009           01693         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0472   1489           01694         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0473   0080           01695         movwf INDF                                                      ;Save to QUEUE
0474   1784           01696         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0475   0808           01697         movf ADC_DATAPORT, W                            ;Sample X
0476   1409           01698         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0477   1009           01699         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0478   1089           01700         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0479   0080           01701         movwf INDF                                                      ;Save to QUEUE
047A   0384           01702         decf FSR, f                                                     ;Increment QUEUE pointer
                      01703         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
047B   301F               M     movlw BUFFERSIZE/2-1
047C   00F6               M     movwf gbl_cntrc
047D   1C70           01704         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
047E   244A           01705                 call DelayFive                                  ;192k
047F   244C           01706         call DelayTwo
0480                  01707 SampleXY250kLB
0480   0808           01708         movf ADC_DATAPORT, W                            ;Sample Y
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0481   1409           01709         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0482   1009           01710         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0483   1489           01711         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0484   0080           01712         movwf INDF                                                      ;Save to QUEUE
0485   0384           01713         decf FSR, F                                                     ;Increment QUEUE pointer
0486   0808           01714         movf ADC_DATAPORT, W                            ;Sample X
0487   1409           01715         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0488   1009           01716         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0489   1089           01717         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
048A   0080           01718         movwf INDF                                                      ;Save to QUEUE
048B   0384           01719         decf FSR, F                                                     ;Increment QUEUE pointer
048C   1C70           01720         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
048D   244A           01721                 call DelayFive                                  ;192k
048E   2C8F           01722         goto $ + 1
048F   0000           01723         nop
0490   0BF6           01724         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0491   2C80           01725                 goto SampleXY250kLB
0492   0000           01726         nop
0493   0808           01727         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0494   1409           01728         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0495   1009           01729         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0496   1489           01730         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0497   0080           01731         movwf INDF                                                      ;Save to QUEUE
0498   1783           01732         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0499   0808           01733         movf ADC_DATAPORT, W                            ;Sample X
049A   1409           01734         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
049B   1009           01735         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
049C   1089           01736         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
049D   0080           01737         movwf INDF                                                      ;Save to QUEUE
049E   0A84           01738         incf FSR, f                                                     ;Increment QUEUE pointer
                      01739         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
049F   301F               M     movlw BUFFERSIZE/2-1
04A0   00F6               M     movwf gbl_cntrc
04A1   1C70           01740         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04A2   244A           01741                 call DelayFive                                  ;192k
04A3   244C           01742         call DelayTwo
04A4                  01743 SampleXY250kLC
04A4   0808           01744         movf ADC_DATAPORT, W                            ;Sample Y
04A5   1409           01745         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A6   1009           01746         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A7   1489           01747         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04A8   0080           01748         movwf INDF                                                      ;Save to QUEUE
04A9   0A84           01749         incf FSR, F                                                     ;Increment QUEUE pointer
04AA   0808           01750         movf ADC_DATAPORT, W                            ;Sample X
04AB   1409           01751         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04AC   1009           01752         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04AD   1089           01753         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04AE   0080           01754         movwf INDF                                                      ;Save to QUEUE
04AF   0A84           01755         incf FSR, F                                                     ;Increment QUEUE pointer
04B0   1C70           01756         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04B1   244A           01757                 call DelayFive                                  ;192k
04B2   2CB3           01758         goto $ + 1
04B3   0000           01759         nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B4   0BF6           01760         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04B5   2CA4           01761                 goto SampleXY250kLC
04B6   0000           01762         nop
04B7   0808           01763         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
04B8   1409           01764         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04B9   1009           01765         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04BA   1489           01766         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04BB   0080           01767         movwf INDF                                                      ;Save to QUEUE
04BC   1384           01768         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
04BD   0808           01769         movf ADC_DATAPORT, W                            ;Sample X
04BE   1409           01770         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04BF   1009           01771         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04C0   1089           01772         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04C1   0080           01773         movwf INDF                                                      ;Save to QUEUE
04C2   0384           01774         decf FSR, f                                                     ;Increment QUEUE pointer
                      01775         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
04C3   301F               M     movlw BUFFERSIZE/2-1
04C4   00F6               M     movwf gbl_cntrc
04C5   1C70           01776         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04C6   244A           01777                 call DelayFive                                  ;192k
04C7   244C           01778         call DelayTwo
04C8                  01779 SampleXY250kLD
04C8   0808           01780         movf ADC_DATAPORT, W                            ;Sample Y
04C9   1409           01781         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04CA   1009           01782         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04CB   1489           01783         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04CC   0080           01784         movwf INDF                                                      ;Save to QUEUE
04CD   0384           01785         decf FSR, F                                                     ;Increment QUEUE pointer
04CE   0808           01786         movf ADC_DATAPORT, W                            ;Sample X
04CF   1409           01787         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04D0   1009           01788         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04D1   1089           01789         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04D2   0080           01790         movwf INDF                                                      ;Save to QUEUE
04D3   0384           01791         decf FSR, F                                                     ;Increment QUEUE pointer
04D4   1C70           01792         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04D5   244A           01793                 call DelayFive                                  ;192k
04D6   2CD7           01794         goto $ + 1
04D7   0000           01795         nop
04D8   0BF6           01796         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04D9   2CC8           01797                 goto SampleXY250kLD
04DA   0000           01798         nop
04DB   0808           01799         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
04DC   1409           01800         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04DD   118A           01801         bcf PCLATH, 3                                           ;insure correct program memory page
04DE   120A           01802         bcf PCLATH, 4
04DF   291C           01803         goto ADCShutdown
                      01804 
                      01805 ;Fastest sample
                      01806 ;Sampling rate = 1 MHz with 20 MHz clock
                      01807 ;Sampling rate = 200 kHz with 4 MHz clock
                      01808 ;-----------------------------------------------------------------------------
04E0                  01809 Sample1M
04E0   1009           01810         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01811         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04E1   3020               M     movlw BUFFERMIN
04E2   0084               M     movwf FSR
04E3   0000           01812         nop
  0000                01813         local count
  00000001            01814         count = 1
                      01815         while count < BUFFERSIZE
04E4   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E5   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E6   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
04E7   0080           01819                 movwf INDF                                              ;Save to QUEUE
04E8   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01821                 count = count + 1
04E9   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EA   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04EB   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
04EC   0080           01819                 movwf INDF                                              ;Save to QUEUE
04ED   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01821                 count = count + 1
04EE   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EF   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F0   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
04F1   0080           01819                 movwf INDF                                              ;Save to QUEUE
04F2   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01821                 count = count + 1
04F3   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F4   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F5   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
04F6   0080           01819                 movwf INDF                                              ;Save to QUEUE
04F7   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01821                 count = count + 1
04F8   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F9   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FA   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
04FB   0080           01819                 movwf INDF                                              ;Save to QUEUE
04FC   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01821                 count = count + 1
04FD   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04FE   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FF   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0500   0080           01819                 movwf INDF                                              ;Save to QUEUE
0501   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01821                 count = count + 1
0502   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0503   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0504   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0505   0080           01819                 movwf INDF                                              ;Save to QUEUE
0506   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01821                 count = count + 1
0507   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0508   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0509   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
050A   0080           01819                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

050B   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01821                 count = count + 1
050C   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050D   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
050E   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
050F   0080           01819                 movwf INDF                                              ;Save to QUEUE
0510   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01821                 count = count + 1
0511   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0512   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0513   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0514   0080           01819                 movwf INDF                                              ;Save to QUEUE
0515   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01821                 count = count + 1
0516   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0517   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0518   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0519   0080           01819                 movwf INDF                                              ;Save to QUEUE
051A   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01821                 count = count + 1
051B   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
051C   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051D   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
051E   0080           01819                 movwf INDF                                              ;Save to QUEUE
051F   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01821                 count = count + 1
0520   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0521   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0522   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0523   0080           01819                 movwf INDF                                              ;Save to QUEUE
0524   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01821                 count = count + 1
0525   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0526   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0527   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0528   0080           01819                 movwf INDF                                              ;Save to QUEUE
0529   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01821                 count = count + 1
052A   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
052B   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
052C   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
052D   0080           01819                 movwf INDF                                              ;Save to QUEUE
052E   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01821                 count = count + 1
052F   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0530   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0531   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0532   0080           01819                 movwf INDF                                              ;Save to QUEUE
0533   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01821                 count = count + 1
0534   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0535   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0536   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0537   0080           01819                 movwf INDF                                              ;Save to QUEUE
0538   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01821                 count = count + 1
0539   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053A   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
053B   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
053C   0080           01819                 movwf INDF                                              ;Save to QUEUE
053D   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01821                 count = count + 1
053E   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053F   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0540   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0541   0080           01819                 movwf INDF                                              ;Save to QUEUE
0542   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01821                 count = count + 1
0543   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0544   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0545   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0546   0080           01819                 movwf INDF                                              ;Save to QUEUE
0547   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01821                 count = count + 1
0548   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0549   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054A   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
054B   0080           01819                 movwf INDF                                              ;Save to QUEUE
054C   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01821                 count = count + 1
054D   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
054E   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054F   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0550   0080           01819                 movwf INDF                                              ;Save to QUEUE
0551   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01821                 count = count + 1
0552   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0553   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0554   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0555   0080           01819                 movwf INDF                                              ;Save to QUEUE
0556   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01821                 count = count + 1
0557   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0558   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0559   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
055A   0080           01819                 movwf INDF                                              ;Save to QUEUE
055B   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01821                 count = count + 1
055C   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055D   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
055E   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
055F   0080           01819                 movwf INDF                                              ;Save to QUEUE
0560   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01821                 count = count + 1
0561   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0562   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0563   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0564   0080           01819                 movwf INDF                                              ;Save to QUEUE
0565   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01821                 count = count + 1
0566   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0567   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0568   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0569   0080           01819                 movwf INDF                                              ;Save to QUEUE
056A   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01821                 count = count + 1
056B   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
056C   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056D   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
056E   0080           01819                 movwf INDF                                              ;Save to QUEUE
056F   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01821                 count = count + 1
0570   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0571   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0572   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0573   0080           01819                 movwf INDF                                              ;Save to QUEUE
0574   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01821                 count = count + 1
0575   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0576   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0577   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0578   0080           01819                 movwf INDF                                              ;Save to QUEUE
0579   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01821                 count = count + 1
057A   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
057B   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
057C   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
057D   0080           01819                 movwf INDF                                              ;Save to QUEUE
057E   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01821                 count = count + 1
057F   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0580   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0581   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0582   0080           01819                 movwf INDF                                              ;Save to QUEUE
0583   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01821                 count = count + 1
0584   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0585   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0586   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0587   0080           01819                 movwf INDF                                              ;Save to QUEUE
0588   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01821                 count = count + 1
0589   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058A   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
058B   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
058C   0080           01819                 movwf INDF                                              ;Save to QUEUE
058D   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01821                 count = count + 1
058E   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

058F   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0590   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0591   0080           01819                 movwf INDF                                              ;Save to QUEUE
0592   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01821                 count = count + 1
0593   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0594   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0595   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0596   0080           01819                 movwf INDF                                              ;Save to QUEUE
0597   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01821                 count = count + 1
0598   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0599   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059A   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
059B   0080           01819                 movwf INDF                                              ;Save to QUEUE
059C   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01821                 count = count + 1
059D   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
059E   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059F   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05A0   0080           01819                 movwf INDF                                              ;Save to QUEUE
05A1   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01821                 count = count + 1
05A2   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A3   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A4   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05A5   0080           01819                 movwf INDF                                              ;Save to QUEUE
05A6   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01821                 count = count + 1
05A7   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A8   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A9   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05AA   0080           01819                 movwf INDF                                              ;Save to QUEUE
05AB   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01821                 count = count + 1
05AC   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AD   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AE   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05AF   0080           01819                 movwf INDF                                              ;Save to QUEUE
05B0   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01821                 count = count + 1
05B1   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B2   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B3   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05B4   0080           01819                 movwf INDF                                              ;Save to QUEUE
05B5   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01821                 count = count + 1
05B6   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B7   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B8   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05B9   0080           01819                 movwf INDF                                              ;Save to QUEUE
05BA   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01821                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05BB   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BC   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BD   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05BE   0080           01819                 movwf INDF                                              ;Save to QUEUE
05BF   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01821                 count = count + 1
05C0   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C1   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C2   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05C3   0080           01819                 movwf INDF                                              ;Save to QUEUE
05C4   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01821                 count = count + 1
05C5   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C6   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C7   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05C8   0080           01819                 movwf INDF                                              ;Save to QUEUE
05C9   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01821                 count = count + 1
05CA   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CB   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CC   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05CD   0080           01819                 movwf INDF                                              ;Save to QUEUE
05CE   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01821                 count = count + 1
05CF   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D0   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D1   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05D2   0080           01819                 movwf INDF                                              ;Save to QUEUE
05D3   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01821                 count = count + 1
05D4   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D5   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D6   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05D7   0080           01819                 movwf INDF                                              ;Save to QUEUE
05D8   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01821                 count = count + 1
05D9   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DA   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DB   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05DC   0080           01819                 movwf INDF                                              ;Save to QUEUE
05DD   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01821                 count = count + 1
05DE   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DF   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E0   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05E1   0080           01819                 movwf INDF                                              ;Save to QUEUE
05E2   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01821                 count = count + 1
05E3   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E4   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E5   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05E6   0080           01819                 movwf INDF                                              ;Save to QUEUE
05E7   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000035            01821                 count = count + 1
05E8   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E9   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EA   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05EB   0080           01819                 movwf INDF                                              ;Save to QUEUE
05EC   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01821                 count = count + 1
05ED   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EE   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EF   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05F0   0080           01819                 movwf INDF                                              ;Save to QUEUE
05F1   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01821                 count = count + 1
05F2   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F3   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F4   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05F5   0080           01819                 movwf INDF                                              ;Save to QUEUE
05F6   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01821                 count = count + 1
05F7   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F8   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F9   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05FA   0080           01819                 movwf INDF                                              ;Save to QUEUE
05FB   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01821                 count = count + 1
05FC   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05FD   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05FE   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
05FF   0080           01819                 movwf INDF                                              ;Save to QUEUE
0600   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01821                 count = count + 1
0601   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0602   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0603   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0604   0080           01819                 movwf INDF                                              ;Save to QUEUE
0605   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01821                 count = count + 1
0606   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0607   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0608   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0609   0080           01819                 movwf INDF                                              ;Save to QUEUE
060A   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01821                 count = count + 1
060B   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
060C   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
060D   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
060E   0080           01819                 movwf INDF                                              ;Save to QUEUE
060F   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01821                 count = count + 1
0610   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0611   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0612   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0613   0080           01819                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0614   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01821                 count = count + 1
0615   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0616   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0617   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
0618   0080           01819                 movwf INDF                                              ;Save to QUEUE
0619   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01821                 count = count + 1
061A   1409           01816                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
061B   1009           01817                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
061C   0808           01818                 movf ADC_DATAPORT, W                    ;Save Sample
061D   0080           01819                 movwf INDF                                              ;Save to QUEUE
061E   0A84           01820                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01821                 count = count + 1
                      01822         endw
061F   1409           01823         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
0620   1009           01824         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
0621   0808           01825         movf ADC_DATAPORT, W
0622   0080           01826         movwf INDF
0623   1784           01827         bsf FSR, 7                                                      ;goto bank 2
  00000001            01828         count = 1
                      01829         while count < BUFFERSIZE
0624   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0625   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0626   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0627   0080           01833                 movwf INDF                                              ;Save to QUEUE
0628   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01835                 count = count + 1
0629   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062A   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
062B   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
062C   0080           01833                 movwf INDF                                              ;Save to QUEUE
062D   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01835                 count = count + 1
062E   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062F   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0630   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0631   0080           01833                 movwf INDF                                              ;Save to QUEUE
0632   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01835                 count = count + 1
0633   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0634   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0635   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0636   0080           01833                 movwf INDF                                              ;Save to QUEUE
0637   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01835                 count = count + 1
0638   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0639   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063A   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
063B   0080           01833                 movwf INDF                                              ;Save to QUEUE
063C   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01835                 count = count + 1
063D   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

063E   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063F   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0640   0080           01833                 movwf INDF                                              ;Save to QUEUE
0641   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01835                 count = count + 1
0642   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0643   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0644   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0645   0080           01833                 movwf INDF                                              ;Save to QUEUE
0646   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01835                 count = count + 1
0647   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0648   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0649   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
064A   0080           01833                 movwf INDF                                              ;Save to QUEUE
064B   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01835                 count = count + 1
064C   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064D   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064E   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
064F   0080           01833                 movwf INDF                                              ;Save to QUEUE
0650   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01835                 count = count + 1
0651   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0652   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0653   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0654   0080           01833                 movwf INDF                                              ;Save to QUEUE
0655   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01835                 count = count + 1
0656   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0657   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0658   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0659   0080           01833                 movwf INDF                                              ;Save to QUEUE
065A   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01835                 count = count + 1
065B   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065C   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065D   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
065E   0080           01833                 movwf INDF                                              ;Save to QUEUE
065F   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01835                 count = count + 1
0660   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0661   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0662   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0663   0080           01833                 movwf INDF                                              ;Save to QUEUE
0664   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01835                 count = count + 1
0665   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0666   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0667   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0668   0080           01833                 movwf INDF                                              ;Save to QUEUE
0669   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01835                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

066A   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
066B   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066C   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
066D   0080           01833                 movwf INDF                                              ;Save to QUEUE
066E   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01835                 count = count + 1
066F   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0670   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0671   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0672   0080           01833                 movwf INDF                                              ;Save to QUEUE
0673   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01835                 count = count + 1
0674   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0675   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0676   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0677   0080           01833                 movwf INDF                                              ;Save to QUEUE
0678   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01835                 count = count + 1
0679   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067A   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067B   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
067C   0080           01833                 movwf INDF                                              ;Save to QUEUE
067D   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01835                 count = count + 1
067E   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067F   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0680   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0681   0080           01833                 movwf INDF                                              ;Save to QUEUE
0682   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01835                 count = count + 1
0683   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0684   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0685   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0686   0080           01833                 movwf INDF                                              ;Save to QUEUE
0687   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01835                 count = count + 1
0688   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0689   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068A   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
068B   0080           01833                 movwf INDF                                              ;Save to QUEUE
068C   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01835                 count = count + 1
068D   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068E   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068F   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0690   0080           01833                 movwf INDF                                              ;Save to QUEUE
0691   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01835                 count = count + 1
0692   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0693   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0694   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0695   0080           01833                 movwf INDF                                              ;Save to QUEUE
0696   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000018            01835                 count = count + 1
0697   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0698   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0699   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
069A   0080           01833                 movwf INDF                                              ;Save to QUEUE
069B   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01835                 count = count + 1
069C   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069D   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069E   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
069F   0080           01833                 movwf INDF                                              ;Save to QUEUE
06A0   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01835                 count = count + 1
06A1   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A2   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A3   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06A4   0080           01833                 movwf INDF                                              ;Save to QUEUE
06A5   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01835                 count = count + 1
06A6   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A7   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A8   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06A9   0080           01833                 movwf INDF                                              ;Save to QUEUE
06AA   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01835                 count = count + 1
06AB   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AC   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AD   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06AE   0080           01833                 movwf INDF                                              ;Save to QUEUE
06AF   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01835                 count = count + 1
06B0   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B1   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B2   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06B3   0080           01833                 movwf INDF                                              ;Save to QUEUE
06B4   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01835                 count = count + 1
06B5   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B6   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B7   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06B8   0080           01833                 movwf INDF                                              ;Save to QUEUE
06B9   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01835                 count = count + 1
06BA   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BB   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BC   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06BD   0080           01833                 movwf INDF                                              ;Save to QUEUE
06BE   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01835                 count = count + 1
06BF   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C0   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C1   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06C2   0080           01833                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06C3   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01835                 count = count + 1
06C4   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C5   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C6   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06C7   0080           01833                 movwf INDF                                              ;Save to QUEUE
06C8   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01835                 count = count + 1
06C9   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CA   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CB   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06CC   0080           01833                 movwf INDF                                              ;Save to QUEUE
06CD   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01835                 count = count + 1
06CE   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CF   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D0   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06D1   0080           01833                 movwf INDF                                              ;Save to QUEUE
06D2   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01835                 count = count + 1
06D3   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D4   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D5   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06D6   0080           01833                 movwf INDF                                              ;Save to QUEUE
06D7   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01835                 count = count + 1
06D8   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D9   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DA   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06DB   0080           01833                 movwf INDF                                              ;Save to QUEUE
06DC   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01835                 count = count + 1
06DD   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DE   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DF   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06E0   0080           01833                 movwf INDF                                              ;Save to QUEUE
06E1   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01835                 count = count + 1
06E2   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E3   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E4   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06E5   0080           01833                 movwf INDF                                              ;Save to QUEUE
06E6   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01835                 count = count + 1
06E7   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E8   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E9   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06EA   0080           01833                 movwf INDF                                              ;Save to QUEUE
06EB   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01835                 count = count + 1
06EC   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06ED   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EE   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06EF   0080           01833                 movwf INDF                                              ;Save to QUEUE
06F0   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01835                 count = count + 1
06F1   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F2   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F3   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06F4   0080           01833                 movwf INDF                                              ;Save to QUEUE
06F5   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01835                 count = count + 1
06F6   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F7   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F8   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06F9   0080           01833                 movwf INDF                                              ;Save to QUEUE
06FA   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01835                 count = count + 1
06FB   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FC   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FD   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
06FE   0080           01833                 movwf INDF                                              ;Save to QUEUE
06FF   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01835                 count = count + 1
0700   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0701   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0702   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0703   0080           01833                 movwf INDF                                              ;Save to QUEUE
0704   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01835                 count = count + 1
0705   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0706   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0707   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0708   0080           01833                 movwf INDF                                              ;Save to QUEUE
0709   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01835                 count = count + 1
070A   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070B   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070C   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
070D   0080           01833                 movwf INDF                                              ;Save to QUEUE
070E   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01835                 count = count + 1
070F   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0710   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0711   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0712   0080           01833                 movwf INDF                                              ;Save to QUEUE
0713   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01835                 count = count + 1
0714   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0715   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0716   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0717   0080           01833                 movwf INDF                                              ;Save to QUEUE
0718   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01835                 count = count + 1
0719   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071A   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

071B   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
071C   0080           01833                 movwf INDF                                              ;Save to QUEUE
071D   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01835                 count = count + 1
071E   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071F   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0720   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0721   0080           01833                 movwf INDF                                              ;Save to QUEUE
0722   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01835                 count = count + 1
0723   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0724   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0725   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0726   0080           01833                 movwf INDF                                              ;Save to QUEUE
0727   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01835                 count = count + 1
0728   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0729   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072A   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
072B   0080           01833                 movwf INDF                                              ;Save to QUEUE
072C   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01835                 count = count + 1
072D   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072E   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072F   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0730   0080           01833                 movwf INDF                                              ;Save to QUEUE
0731   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01835                 count = count + 1
0732   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0733   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0734   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0735   0080           01833                 movwf INDF                                              ;Save to QUEUE
0736   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01835                 count = count + 1
0737   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0738   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0739   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
073A   0080           01833                 movwf INDF                                              ;Save to QUEUE
073B   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01835                 count = count + 1
073C   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073D   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073E   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
073F   0080           01833                 movwf INDF                                              ;Save to QUEUE
0740   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01835                 count = count + 1
0741   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0742   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0743   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0744   0080           01833                 movwf INDF                                              ;Save to QUEUE
0745   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01835                 count = count + 1
0746   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0747   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0748   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0749   0080           01833                 movwf INDF                                              ;Save to QUEUE
074A   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01835                 count = count + 1
074B   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074C   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074D   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
074E   0080           01833                 movwf INDF                                              ;Save to QUEUE
074F   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01835                 count = count + 1
0750   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0751   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0752   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0753   0080           01833                 movwf INDF                                              ;Save to QUEUE
0754   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01835                 count = count + 1
0755   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0756   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0757   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
0758   0080           01833                 movwf INDF                                              ;Save to QUEUE
0759   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01835                 count = count + 1
075A   1409           01830                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075B   1009           01831                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075C   0808           01832                 movf ADC_DATAPORT, W                    ;Sample
075D   0080           01833                 movwf INDF                                              ;Save to QUEUE
075E   0384           01834                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01835                 count = count + 1
                      01836         endw
075F   1409           01837         bsf ADC_CONTROLPORT, RDD
0760   1009           01838         bcf ADC_CONTROLPORT, RDD
0761   0808           01839         movf ADC_DATAPORT, W
0762   0080           01840         movwf INDF
0763   1783           01841         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01842         count = 1
                      01843         while count < BUFFERSIZE
0764   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0765   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0766   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0767   0080           01847                 movwf INDF                                              ;Save to QUEUE
0768   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01849                 count = count + 1
0769   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076A   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076B   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
076C   0080           01847                 movwf INDF                                              ;Save to QUEUE
076D   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01849                 count = count + 1
076E   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076F   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0770   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0771   0080           01847                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0772   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01849                 count = count + 1
0773   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0774   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0775   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0776   0080           01847                 movwf INDF                                              ;Save to QUEUE
0777   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01849                 count = count + 1
0778   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0779   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077A   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
077B   0080           01847                 movwf INDF                                              ;Save to QUEUE
077C   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01849                 count = count + 1
077D   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077E   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077F   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0780   0080           01847                 movwf INDF                                              ;Save to QUEUE
0781   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01849                 count = count + 1
0782   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0783   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0784   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0785   0080           01847                 movwf INDF                                              ;Save to QUEUE
0786   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01849                 count = count + 1
0787   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0788   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0789   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
078A   0080           01847                 movwf INDF                                              ;Save to QUEUE
078B   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01849                 count = count + 1
078C   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078D   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078E   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
078F   0080           01847                 movwf INDF                                              ;Save to QUEUE
0790   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01849                 count = count + 1
0791   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0792   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0793   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0794   0080           01847                 movwf INDF                                              ;Save to QUEUE
0795   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01849                 count = count + 1
0796   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0797   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0798   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0799   0080           01847                 movwf INDF                                              ;Save to QUEUE
079A   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01849                 count = count + 1
079B   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079C   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079D   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

079E   0080           01847                 movwf INDF                                              ;Save to QUEUE
079F   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01849                 count = count + 1
07A0   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A1   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A2   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07A3   0080           01847                 movwf INDF                                              ;Save to QUEUE
07A4   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01849                 count = count + 1
07A5   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A6   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A7   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07A8   0080           01847                 movwf INDF                                              ;Save to QUEUE
07A9   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01849                 count = count + 1
07AA   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AB   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AC   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07AD   0080           01847                 movwf INDF                                              ;Save to QUEUE
07AE   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01849                 count = count + 1
07AF   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B0   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B1   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07B2   0080           01847                 movwf INDF                                              ;Save to QUEUE
07B3   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01849                 count = count + 1
07B4   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B5   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B6   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07B7   0080           01847                 movwf INDF                                              ;Save to QUEUE
07B8   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01849                 count = count + 1
07B9   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BA   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BB   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07BC   0080           01847                 movwf INDF                                              ;Save to QUEUE
07BD   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01849                 count = count + 1
07BE   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BF   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C0   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07C1   0080           01847                 movwf INDF                                              ;Save to QUEUE
07C2   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01849                 count = count + 1
07C3   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C4   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C5   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07C6   0080           01847                 movwf INDF                                              ;Save to QUEUE
07C7   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01849                 count = count + 1
07C8   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C9   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07CA   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07CB   0080           01847                 movwf INDF                                              ;Save to QUEUE
07CC   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01849                 count = count + 1
07CD   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CE   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CF   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07D0   0080           01847                 movwf INDF                                              ;Save to QUEUE
07D1   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01849                 count = count + 1
07D2   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D3   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D4   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07D5   0080           01847                 movwf INDF                                              ;Save to QUEUE
07D6   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01849                 count = count + 1
07D7   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D8   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D9   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07DA   0080           01847                 movwf INDF                                              ;Save to QUEUE
07DB   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01849                 count = count + 1
07DC   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DD   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DE   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07DF   0080           01847                 movwf INDF                                              ;Save to QUEUE
07E0   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01849                 count = count + 1
07E1   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E2   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E3   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07E4   0080           01847                 movwf INDF                                              ;Save to QUEUE
07E5   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01849                 count = count + 1
07E6   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E7   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E8   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07E9   0080           01847                 movwf INDF                                              ;Save to QUEUE
07EA   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01849                 count = count + 1
07EB   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EC   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07ED   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07EE   0080           01847                 movwf INDF                                              ;Save to QUEUE
07EF   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01849                 count = count + 1
07F0   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F1   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F2   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07F3   0080           01847                 movwf INDF                                              ;Save to QUEUE
07F4   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01849                 count = count + 1
07F5   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07F6   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F7   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07F8   0080           01847                 movwf INDF                                              ;Save to QUEUE
07F9   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01849                 count = count + 1
07FA   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FB   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FC   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
07FD   0080           01847                 movwf INDF                                              ;Save to QUEUE
07FE   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01849                 count = count + 1
07FF   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0800   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0801   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0802   0080           01847                 movwf INDF                                              ;Save to QUEUE
0803   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01849                 count = count + 1
0804   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0805   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0806   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0807   0080           01847                 movwf INDF                                              ;Save to QUEUE
0808   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01849                 count = count + 1
0809   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080A   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080B   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
080C   0080           01847                 movwf INDF                                              ;Save to QUEUE
080D   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01849                 count = count + 1
080E   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080F   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0810   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0811   0080           01847                 movwf INDF                                              ;Save to QUEUE
0812   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01849                 count = count + 1
0813   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0814   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0815   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0816   0080           01847                 movwf INDF                                              ;Save to QUEUE
0817   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01849                 count = count + 1
0818   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0819   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081A   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
081B   0080           01847                 movwf INDF                                              ;Save to QUEUE
081C   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01849                 count = count + 1
081D   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081E   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081F   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0820   0080           01847                 movwf INDF                                              ;Save to QUEUE
0821   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01849                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0822   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0823   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0824   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0825   0080           01847                 movwf INDF                                              ;Save to QUEUE
0826   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01849                 count = count + 1
0827   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0828   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0829   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
082A   0080           01847                 movwf INDF                                              ;Save to QUEUE
082B   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01849                 count = count + 1
082C   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082D   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082E   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
082F   0080           01847                 movwf INDF                                              ;Save to QUEUE
0830   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01849                 count = count + 1
0831   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0832   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0833   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0834   0080           01847                 movwf INDF                                              ;Save to QUEUE
0835   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01849                 count = count + 1
0836   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0837   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0838   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0839   0080           01847                 movwf INDF                                              ;Save to QUEUE
083A   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01849                 count = count + 1
083B   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083C   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083D   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
083E   0080           01847                 movwf INDF                                              ;Save to QUEUE
083F   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01849                 count = count + 1
0840   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0841   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0842   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0843   0080           01847                 movwf INDF                                              ;Save to QUEUE
0844   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01849                 count = count + 1
0845   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0846   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0847   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0848   0080           01847                 movwf INDF                                              ;Save to QUEUE
0849   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01849                 count = count + 1
084A   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084B   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084C   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
084D   0080           01847                 movwf INDF                                              ;Save to QUEUE
084E   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            01849                 count = count + 1
084F   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0850   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0851   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0852   0080           01847                 movwf INDF                                              ;Save to QUEUE
0853   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01849                 count = count + 1
0854   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0855   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0856   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0857   0080           01847                 movwf INDF                                              ;Save to QUEUE
0858   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01849                 count = count + 1
0859   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085A   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085B   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
085C   0080           01847                 movwf INDF                                              ;Save to QUEUE
085D   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01849                 count = count + 1
085E   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085F   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0860   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0861   0080           01847                 movwf INDF                                              ;Save to QUEUE
0862   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01849                 count = count + 1
0863   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0864   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0865   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0866   0080           01847                 movwf INDF                                              ;Save to QUEUE
0867   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01849                 count = count + 1
0868   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0869   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086A   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
086B   0080           01847                 movwf INDF                                              ;Save to QUEUE
086C   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01849                 count = count + 1
086D   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086E   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086F   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0870   0080           01847                 movwf INDF                                              ;Save to QUEUE
0871   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01849                 count = count + 1
0872   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0873   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0874   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0875   0080           01847                 movwf INDF                                              ;Save to QUEUE
0876   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01849                 count = count + 1
0877   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0878   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0879   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
087A   0080           01847                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

087B   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01849                 count = count + 1
087C   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087D   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087E   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
087F   0080           01847                 movwf INDF                                              ;Save to QUEUE
0880   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01849                 count = count + 1
0881   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0882   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0883   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0884   0080           01847                 movwf INDF                                              ;Save to QUEUE
0885   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01849                 count = count + 1
0886   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0887   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0888   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0889   0080           01847                 movwf INDF                                              ;Save to QUEUE
088A   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01849                 count = count + 1
088B   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088C   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088D   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
088E   0080           01847                 movwf INDF                                              ;Save to QUEUE
088F   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01849                 count = count + 1
0890   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0891   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0892   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0893   0080           01847                 movwf INDF                                              ;Save to QUEUE
0894   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01849                 count = count + 1
0895   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0896   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0897   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
0898   0080           01847                 movwf INDF                                              ;Save to QUEUE
0899   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01849                 count = count + 1
089A   1409           01844                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089B   1009           01845                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089C   0808           01846                 movf ADC_DATAPORT, W                    ;Sample
089D   0080           01847                 movwf INDF                                              ;Save to QUEUE
089E   0A84           01848                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01849                 count = count + 1
                      01850         endw
089F   1409           01851         bsf ADC_CONTROLPORT, RDD
08A0   1009           01852         bcf ADC_CONTROLPORT, RDD
08A1   0808           01853         movf ADC_DATAPORT, W                            ;Sample
08A2   0080           01854         movwf INDF
08A3   1384           01855         bcf FSR, 7                                                      ;goto bank 3
  00000001            01856         count = 1
                      01857         while count < D'14'
08A4   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08A5   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A6   0808           01860                 movf ADC_DATAPORT, W
08A7   0080           01861                 movwf INDF                                              ;Save to QUEUE
08A8   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01863                 count = count + 1
08A9   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AA   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AB   0808           01860                 movf ADC_DATAPORT, W
08AC   0080           01861                 movwf INDF                                              ;Save to QUEUE
08AD   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01863                 count = count + 1
08AE   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AF   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B0   0808           01860                 movf ADC_DATAPORT, W
08B1   0080           01861                 movwf INDF                                              ;Save to QUEUE
08B2   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01863                 count = count + 1
08B3   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B4   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B5   0808           01860                 movf ADC_DATAPORT, W
08B6   0080           01861                 movwf INDF                                              ;Save to QUEUE
08B7   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01863                 count = count + 1
08B8   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B9   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BA   0808           01860                 movf ADC_DATAPORT, W
08BB   0080           01861                 movwf INDF                                              ;Save to QUEUE
08BC   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01863                 count = count + 1
08BD   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BE   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BF   0808           01860                 movf ADC_DATAPORT, W
08C0   0080           01861                 movwf INDF                                              ;Save to QUEUE
08C1   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01863                 count = count + 1
08C2   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C3   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C4   0808           01860                 movf ADC_DATAPORT, W
08C5   0080           01861                 movwf INDF                                              ;Save to QUEUE
08C6   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01863                 count = count + 1
08C7   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C8   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C9   0808           01860                 movf ADC_DATAPORT, W
08CA   0080           01861                 movwf INDF                                              ;Save to QUEUE
08CB   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01863                 count = count + 1
08CC   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CD   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CE   0808           01860                 movf ADC_DATAPORT, W
08CF   0080           01861                 movwf INDF                                              ;Save to QUEUE
08D0   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01863                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08D1   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D2   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D3   0808           01860                 movf ADC_DATAPORT, W
08D4   0080           01861                 movwf INDF                                              ;Save to QUEUE
08D5   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01863                 count = count + 1
08D6   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D7   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D8   0808           01860                 movf ADC_DATAPORT, W
08D9   0080           01861                 movwf INDF                                              ;Save to QUEUE
08DA   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01863                 count = count + 1
08DB   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DC   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DD   0808           01860                 movf ADC_DATAPORT, W
08DE   0080           01861                 movwf INDF                                              ;Save to QUEUE
08DF   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01863                 count = count + 1
08E0   1409           01858                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E1   1009           01859                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E2   0808           01860                 movf ADC_DATAPORT, W
08E3   0080           01861                 movwf INDF                                              ;Save to QUEUE
08E4   0384           01862                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01863                 count = count + 1
                      01864         endw
08E5                  01865 Sample1MhzEnd
                      01866         while count < BUFFERSIZE
08E5   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E6   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E7   0808           01869                 movf ADC_DATAPORT, W
08E8   0080           01870                 movwf INDF                                              ;Save to QUEUE
08E9   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01872                 count = count + 1
08EA   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EB   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EC   0808           01869                 movf ADC_DATAPORT, W
08ED   0080           01870                 movwf INDF                                              ;Save to QUEUE
08EE   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01872                 count = count + 1
08EF   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F0   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F1   0808           01869                 movf ADC_DATAPORT, W
08F2   0080           01870                 movwf INDF                                              ;Save to QUEUE
08F3   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01872                 count = count + 1
08F4   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F5   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F6   0808           01869                 movf ADC_DATAPORT, W
08F7   0080           01870                 movwf INDF                                              ;Save to QUEUE
08F8   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01872                 count = count + 1
08F9   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FA   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08FB   0808           01869                 movf ADC_DATAPORT, W
08FC   0080           01870                 movwf INDF                                              ;Save to QUEUE
08FD   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01872                 count = count + 1
08FE   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FF   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0900   0808           01869                 movf ADC_DATAPORT, W
0901   0080           01870                 movwf INDF                                              ;Save to QUEUE
0902   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01872                 count = count + 1
0903   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0904   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0905   0808           01869                 movf ADC_DATAPORT, W
0906   0080           01870                 movwf INDF                                              ;Save to QUEUE
0907   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01872                 count = count + 1
0908   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0909   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090A   0808           01869                 movf ADC_DATAPORT, W
090B   0080           01870                 movwf INDF                                              ;Save to QUEUE
090C   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01872                 count = count + 1
090D   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090E   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090F   0808           01869                 movf ADC_DATAPORT, W
0910   0080           01870                 movwf INDF                                              ;Save to QUEUE
0911   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01872                 count = count + 1
0912   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0913   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0914   0808           01869                 movf ADC_DATAPORT, W
0915   0080           01870                 movwf INDF                                              ;Save to QUEUE
0916   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01872                 count = count + 1
0917   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0918   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0919   0808           01869                 movf ADC_DATAPORT, W
091A   0080           01870                 movwf INDF                                              ;Save to QUEUE
091B   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01872                 count = count + 1
091C   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091D   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091E   0808           01869                 movf ADC_DATAPORT, W
091F   0080           01870                 movwf INDF                                              ;Save to QUEUE
0920   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01872                 count = count + 1
0921   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0922   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0923   0808           01869                 movf ADC_DATAPORT, W
0924   0080           01870                 movwf INDF                                              ;Save to QUEUE
0925   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01872                 count = count + 1
0926   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0927   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0928   0808           01869                 movf ADC_DATAPORT, W
0929   0080           01870                 movwf INDF                                              ;Save to QUEUE
092A   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01872                 count = count + 1
092B   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092C   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092D   0808           01869                 movf ADC_DATAPORT, W
092E   0080           01870                 movwf INDF                                              ;Save to QUEUE
092F   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01872                 count = count + 1
0930   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0931   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0932   0808           01869                 movf ADC_DATAPORT, W
0933   0080           01870                 movwf INDF                                              ;Save to QUEUE
0934   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01872                 count = count + 1
0935   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0936   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0937   0808           01869                 movf ADC_DATAPORT, W
0938   0080           01870                 movwf INDF                                              ;Save to QUEUE
0939   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01872                 count = count + 1
093A   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093B   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093C   0808           01869                 movf ADC_DATAPORT, W
093D   0080           01870                 movwf INDF                                              ;Save to QUEUE
093E   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01872                 count = count + 1
093F   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0940   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0941   0808           01869                 movf ADC_DATAPORT, W
0942   0080           01870                 movwf INDF                                              ;Save to QUEUE
0943   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01872                 count = count + 1
0944   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0945   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0946   0808           01869                 movf ADC_DATAPORT, W
0947   0080           01870                 movwf INDF                                              ;Save to QUEUE
0948   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01872                 count = count + 1
0949   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094A   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094B   0808           01869                 movf ADC_DATAPORT, W
094C   0080           01870                 movwf INDF                                              ;Save to QUEUE
094D   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01872                 count = count + 1
094E   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094F   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0950   0808           01869                 movf ADC_DATAPORT, W
0951   0080           01870                 movwf INDF                                              ;Save to QUEUE
0952   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01872                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0953   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0954   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0955   0808           01869                 movf ADC_DATAPORT, W
0956   0080           01870                 movwf INDF                                              ;Save to QUEUE
0957   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01872                 count = count + 1
0958   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0959   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095A   0808           01869                 movf ADC_DATAPORT, W
095B   0080           01870                 movwf INDF                                              ;Save to QUEUE
095C   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01872                 count = count + 1
095D   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095E   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095F   0808           01869                 movf ADC_DATAPORT, W
0960   0080           01870                 movwf INDF                                              ;Save to QUEUE
0961   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01872                 count = count + 1
0962   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0963   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0964   0808           01869                 movf ADC_DATAPORT, W
0965   0080           01870                 movwf INDF                                              ;Save to QUEUE
0966   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01872                 count = count + 1
0967   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0968   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0969   0808           01869                 movf ADC_DATAPORT, W
096A   0080           01870                 movwf INDF                                              ;Save to QUEUE
096B   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01872                 count = count + 1
096C   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096D   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096E   0808           01869                 movf ADC_DATAPORT, W
096F   0080           01870                 movwf INDF                                              ;Save to QUEUE
0970   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01872                 count = count + 1
0971   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0972   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0973   0808           01869                 movf ADC_DATAPORT, W
0974   0080           01870                 movwf INDF                                              ;Save to QUEUE
0975   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01872                 count = count + 1
0976   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0977   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0978   0808           01869                 movf ADC_DATAPORT, W
0979   0080           01870                 movwf INDF                                              ;Save to QUEUE
097A   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01872                 count = count + 1
097B   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097C   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097D   0808           01869                 movf ADC_DATAPORT, W
097E   0080           01870                 movwf INDF                                              ;Save to QUEUE
097F   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002D            01872                 count = count + 1
0980   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0981   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0982   0808           01869                 movf ADC_DATAPORT, W
0983   0080           01870                 movwf INDF                                              ;Save to QUEUE
0984   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01872                 count = count + 1
0985   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0986   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0987   0808           01869                 movf ADC_DATAPORT, W
0988   0080           01870                 movwf INDF                                              ;Save to QUEUE
0989   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01872                 count = count + 1
098A   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098B   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098C   0808           01869                 movf ADC_DATAPORT, W
098D   0080           01870                 movwf INDF                                              ;Save to QUEUE
098E   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01872                 count = count + 1
098F   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0990   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0991   0808           01869                 movf ADC_DATAPORT, W
0992   0080           01870                 movwf INDF                                              ;Save to QUEUE
0993   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01872                 count = count + 1
0994   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0995   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0996   0808           01869                 movf ADC_DATAPORT, W
0997   0080           01870                 movwf INDF                                              ;Save to QUEUE
0998   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01872                 count = count + 1
0999   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099A   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099B   0808           01869                 movf ADC_DATAPORT, W
099C   0080           01870                 movwf INDF                                              ;Save to QUEUE
099D   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01872                 count = count + 1
099E   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099F   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A0   0808           01869                 movf ADC_DATAPORT, W
09A1   0080           01870                 movwf INDF                                              ;Save to QUEUE
09A2   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01872                 count = count + 1
09A3   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A4   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A5   0808           01869                 movf ADC_DATAPORT, W
09A6   0080           01870                 movwf INDF                                              ;Save to QUEUE
09A7   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01872                 count = count + 1
09A8   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A9   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AA   0808           01869                 movf ADC_DATAPORT, W
09AB   0080           01870                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09AC   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01872                 count = count + 1
09AD   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AE   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AF   0808           01869                 movf ADC_DATAPORT, W
09B0   0080           01870                 movwf INDF                                              ;Save to QUEUE
09B1   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01872                 count = count + 1
09B2   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B3   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B4   0808           01869                 movf ADC_DATAPORT, W
09B5   0080           01870                 movwf INDF                                              ;Save to QUEUE
09B6   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01872                 count = count + 1
09B7   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B8   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B9   0808           01869                 movf ADC_DATAPORT, W
09BA   0080           01870                 movwf INDF                                              ;Save to QUEUE
09BB   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01872                 count = count + 1
09BC   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09BD   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09BE   0808           01869                 movf ADC_DATAPORT, W
09BF   0080           01870                 movwf INDF                                              ;Save to QUEUE
09C0   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01872                 count = count + 1
09C1   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C2   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C3   0808           01869                 movf ADC_DATAPORT, W
09C4   0080           01870                 movwf INDF                                              ;Save to QUEUE
09C5   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01872                 count = count + 1
09C6   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C7   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C8   0808           01869                 movf ADC_DATAPORT, W
09C9   0080           01870                 movwf INDF                                              ;Save to QUEUE
09CA   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01872                 count = count + 1
09CB   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CC   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CD   0808           01869                 movf ADC_DATAPORT, W
09CE   0080           01870                 movwf INDF                                              ;Save to QUEUE
09CF   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01872                 count = count + 1
09D0   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D1   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D2   0808           01869                 movf ADC_DATAPORT, W
09D3   0080           01870                 movwf INDF                                              ;Save to QUEUE
09D4   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01872                 count = count + 1
09D5   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D6   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D7   0808           01869                 movf ADC_DATAPORT, W
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09D8   0080           01870                 movwf INDF                                              ;Save to QUEUE
09D9   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01872                 count = count + 1
09DA   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DB   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DC   0808           01869                 movf ADC_DATAPORT, W
09DD   0080           01870                 movwf INDF                                              ;Save to QUEUE
09DE   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01872                 count = count + 1
                      01873         endw
09DF   1409           01874         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09E0   0808           01875         movf ADC_DATAPORT, W                            ;Sample
09E1   118A           01876         bcf PCLATH, 3                                           ;insure correct program memory page
09E2   120A           01877         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
09E3   291C           01878         goto ADCShutdown
                      01879 
                      01880 ;Fastest XY sample
                      01881 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01882 ;Sampling rate =  83.333 kHz with 4 MHz clock
09E4                  01883 SampleXY417k
09E4   1009           01884         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
09E5   1489           01885         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01886         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
09E6   3020               M     movlw BUFFERMIN
09E7   0084               M     movwf FSR
09E8   0808           01887         movf ADC_DATAPORT, W                            ;Sample X
09E9   1409           01888         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09EA   1009           01889         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
09EB   1089           01890         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
09EC   0080           01891         movwf INDF                                                      ;Save to QUEUE
09ED   0A84           01892         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            01893         count = 1
                      01894         while count < BUFFERSIZE / 2
09EE   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
09EF   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F0   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F1   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09F2   0080           01899                 movwf INDF                                              ;Save to QUEUE
09F3   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
09F4   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
09F5   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F6   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F7   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F8   0080           01905                 movwf INDF                                              ;Save to QUEUE
09F9   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01907                 count = count + 1
09FA   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
09FB   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FC   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FD   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09FE   0080           01899                 movwf INDF                                              ;Save to QUEUE
09FF   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A00   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A01   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A02   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A03   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A04   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A05   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01907                 count = count + 1
0A06   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A07   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A08   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A09   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A0A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A0B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A0C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A0D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A10   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A11   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01907                 count = count + 1
0A12   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A13   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A14   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A15   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A16   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A17   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A18   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A19   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1A   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1B   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A1C   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A1D   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01907                 count = count + 1
0A1E   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A1F   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A20   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A21   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A22   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A23   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A24   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A25   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A26   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A27   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A28   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A29   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01907                 count = count + 1
0A2A   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A2B   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2C   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2D   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A2E   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A2F   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A30   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A31   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A32   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A33   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A34   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A35   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01907                 count = count + 1
0A36   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A37   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A38   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A39   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A3A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A3B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A3C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A3D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A40   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A41   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01907                 count = count + 1
0A42   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A43   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A44   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A45   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A46   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A47   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A48   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A49   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4A   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4B   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A4C   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A4D   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01907                 count = count + 1
0A4E   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A4F   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A50   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A51   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A52   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A53   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A54   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A55   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A56   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A57   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A58   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A59   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01907                 count = count + 1
0A5A   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A5B   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5C   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5D   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A5E   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A5F   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A60   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A61   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A62   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A63   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A64   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A65   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01907                 count = count + 1
0A66   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A67   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A68   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A69   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A6A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A6B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A6C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A6D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A70   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A71   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01907                 count = count + 1
0A72   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A73   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A74   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A75   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A76   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A77   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A78   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A79   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7A   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7B   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A7C   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A7D   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01907                 count = count + 1
0A7E   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A7F   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A80   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A81   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A82   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A83   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A84   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A85   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A86   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A87   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A88   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A89   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01907                 count = count + 1
0A8A   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A8B   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8C   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8D   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A8E   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A8F   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A90   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A91   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A92   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A93   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A94   0080           01905                 movwf INDF                                              ;Save to QUEUE
0A95   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01907                 count = count + 1
0A96   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0A97   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A98   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A99   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A9A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0A9B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0A9C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0A9D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AA0   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AA1   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01907                 count = count + 1
0AA2   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AA3   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA4   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA5   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AA6   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AA7   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AA8   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AA9   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAA   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAB   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AAC   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AAD   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01907                 count = count + 1
0AAE   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AAF   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB0   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB1   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB2   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AB3   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AB4   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AB5   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB6   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB7   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB8   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AB9   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01907                 count = count + 1
0ABA   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0ABB   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABC   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABD   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABE   0080           01899                 movwf INDF                                              ;Save to QUEUE
0ABF   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AC0   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AC1   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC2   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC3   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AC4   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AC5   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01907                 count = count + 1
0AC6   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AC7   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC8   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC9   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ACA   0080           01899                 movwf INDF                                              ;Save to QUEUE
0ACB   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0ACC   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0ACD   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACE   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACF   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD0   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AD1   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01907                 count = count + 1
0AD2   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AD3   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD4   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD5   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD6   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AD7   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AD8   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AD9   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADA   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADB   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ADC   0080           01905                 movwf INDF                                              ;Save to QUEUE
0ADD   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01907                 count = count + 1
0ADE   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0ADF   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE0   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE1   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE2   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AE3   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AE4   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AE5   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE6   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE7   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE8   0080           01905                 movwf INDF                                              ;Save to QUEUE
0AE9   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01907                 count = count + 1
0AEA   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AEB   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEC   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AED   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AEE   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AEF   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AF0   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AF1   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF2   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF3   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF4   0080           01905                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AF5   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01907                 count = count + 1
0AF6   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0AF7   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF8   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF9   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AFA   0080           01899                 movwf INDF                                              ;Save to QUEUE
0AFB   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0AFC   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0AFD   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFE   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFF   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B00   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B01   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01907                 count = count + 1
0B02   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B03   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B04   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B05   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B06   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B07   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B08   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B09   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0A   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0B   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B0C   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B0D   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01907                 count = count + 1
0B0E   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B0F   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B10   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B11   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B12   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B13   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B14   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B15   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B16   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B17   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B18   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B19   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01907                 count = count + 1
0B1A   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B1B   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1C   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1D   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1E   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B1F   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B20   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B21   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B22   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B23   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B24   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B25   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001B            01907                 count = count + 1
0B26   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B27   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B28   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B29   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B2A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B2B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B2C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B2D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B30   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B31   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01907                 count = count + 1
0B32   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B33   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B34   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B35   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B36   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B37   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B38   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B39   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B3A   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B3B   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B3C   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B3D   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01907                 count = count + 1
0B3E   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B3F   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B40   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B41   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B42   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B43   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B44   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B45   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B46   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B47   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B48   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B49   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01907                 count = count + 1
0B4A   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B4B   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4C   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4D   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B4E   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B4F   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B50   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B51   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B52   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B53   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B54   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B55   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01907                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B56   0808           01895                 movf ADC_DATAPORT, W                    ;Sample Y
0B57   1409           01896                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B58   1009           01897                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B59   1489           01898                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B5A   0080           01899                 movwf INDF                                              ;Save to QUEUE
0B5B   0A84           01900                 incf FSR, F                                             ;Increment QUEUE pointer
0B5C   0808           01901                 movf ADC_DATAPORT, W                    ;Sample X
0B5D   1409           01902                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5E   1009           01903                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5F   1089           01904                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B60   0080           01905                 movwf INDF                                              ;Save to QUEUE
0B61   0A84           01906                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01907                 count = count + 1
                      01908         endw
0B62   0808           01909         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0B63   1409           01910         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B64   1009           01911         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B65   1489           01912         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0B66   0080           01913         movwf INDF                                                      ;Save to QUEUE
0B67   1784           01914         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0B68   0808           01915         movf ADC_DATAPORT, W                            ;Sample X
0B69   1409           01916         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B6A   1009           01917         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B6B   1089           01918         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0B6C   0080           01919         movwf INDF                                                      ;Save to QUEUE
0B6D   0384           01920         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01921         count = 1
                      01922         while count < BUFFERSIZE / 2
0B6E   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0B6F   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B70   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B71   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B72   0080           01927                 movwf INDF                                              ;Save to QUEUE
0B73   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0B74   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0B75   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B76   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B77   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B78   0080           01933                 movwf INDF                                              ;Save to QUEUE
0B79   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01935                 count = count + 1
0B7A   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0B7B   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7C   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7D   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7E   0080           01927                 movwf INDF                                              ;Save to QUEUE
0B7F   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0B80   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0B81   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B82   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B83   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B84   0080           01933                 movwf INDF                                              ;Save to QUEUE
0B85   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            01935                 count = count + 1
0B86   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0B87   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B88   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B89   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B8A   0080           01927                 movwf INDF                                              ;Save to QUEUE
0B8B   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0B8C   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0B8D   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8E   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8F   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B90   0080           01933                 movwf INDF                                              ;Save to QUEUE
0B91   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01935                 count = count + 1
0B92   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0B93   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B94   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B95   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B96   0080           01927                 movwf INDF                                              ;Save to QUEUE
0B97   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0B98   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0B99   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9A   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9B   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B9C   0080           01933                 movwf INDF                                              ;Save to QUEUE
0B9D   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01935                 count = count + 1
0B9E   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0B9F   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA0   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA1   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA2   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BA3   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BA4   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BA5   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA6   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA7   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA8   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BA9   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01935                 count = count + 1
0BAA   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BAB   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAC   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAD   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAE   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BAF   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BB0   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BB1   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB2   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB3   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB4   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BB5   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01935                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BB6   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BB7   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB8   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB9   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BBA   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BBB   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BBC   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BBD   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBE   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBF   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BC0   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BC1   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01935                 count = count + 1
0BC2   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BC3   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC4   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC5   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC6   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BC7   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BC8   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BC9   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCA   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCB   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BCC   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BCD   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01935                 count = count + 1
0BCE   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BCF   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD0   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD1   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD2   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BD3   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BD4   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BD5   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD6   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD7   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD8   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BD9   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01935                 count = count + 1
0BDA   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BDB   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDC   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDD   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDE   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BDF   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BE0   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BE1   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE2   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE3   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE4   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BE5   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01935                 count = count + 1
0BE6   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BE7   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE8   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE9   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BEA   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BEB   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BEC   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BED   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEE   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEF   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BF0   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BF1   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01935                 count = count + 1
0BF2   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BF3   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF4   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF5   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF6   0080           01927                 movwf INDF                                              ;Save to QUEUE
0BF7   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0BF8   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0BF9   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFA   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFB   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BFC   0080           01933                 movwf INDF                                              ;Save to QUEUE
0BFD   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01935                 count = count + 1
0BFE   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0BFF   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C00   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C01   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C02   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C03   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C04   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C05   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C06   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C07   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C08   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C09   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01935                 count = count + 1
0C0A   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C0B   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0C   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0D   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0E   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C0F   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C10   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C11   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C12   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C13   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C14   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C15   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01935                 count = count + 1
0C16   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C17   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C18   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C19   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C1A   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C1B   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C1C   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C1D   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1E   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1F   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C20   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C21   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01935                 count = count + 1
0C22   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C23   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C24   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C25   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C26   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C27   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C28   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C29   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2A   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2B   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C2C   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C2D   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01935                 count = count + 1
0C2E   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C2F   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C30   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C31   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C32   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C33   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C34   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C35   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C36   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C37   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C38   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C39   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01935                 count = count + 1
0C3A   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C3B   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3C   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3D   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3E   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C3F   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C40   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C41   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C42   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C43   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C44   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C45   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01935                 count = count + 1
0C46   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C47   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C48   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C49   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C4A   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C4B   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C4C   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C4D   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4E   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4F   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C50   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C51   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01935                 count = count + 1
0C52   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C53   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C54   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C55   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C56   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C57   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C58   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C59   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5A   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5B   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C5C   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C5D   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01935                 count = count + 1
0C5E   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C5F   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C60   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C61   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C62   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C63   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C64   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C65   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C66   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C67   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C68   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C69   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01935                 count = count + 1
0C6A   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C6B   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6C   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6D   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6E   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C6F   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C70   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C71   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C72   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C73   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C74   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C75   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01935                 count = count + 1
0C76   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C77   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C78   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C79   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C7A   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C7B   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C7C   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C7D   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7E   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7F   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C80   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C81   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01935                 count = count + 1
0C82   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C83   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C84   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C85   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C86   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C87   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C88   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C89   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8A   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8B   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C8C   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C8D   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01935                 count = count + 1
0C8E   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C8F   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C90   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C91   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C92   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C93   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0C94   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0C95   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C96   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C97   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C98   0080           01933                 movwf INDF                                              ;Save to QUEUE
0C99   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01935                 count = count + 1
0C9A   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0C9B   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9C   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9D   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9E   0080           01927                 movwf INDF                                              ;Save to QUEUE
0C9F   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0CA0   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CA1   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA2   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA3   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA4   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CA5   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01935                 count = count + 1
0CA6   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0CA7   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA8   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA9   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CAA   0080           01927                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CAB   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0CAC   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CAD   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAE   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAF   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB0   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CB1   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01935                 count = count + 1
0CB2   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0CB3   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB4   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB5   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB6   0080           01927                 movwf INDF                                              ;Save to QUEUE
0CB7   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0CB8   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CB9   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CBA   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CBB   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CBC   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CBD   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01935                 count = count + 1
0CBE   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0CBF   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC0   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC1   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CC2   0080           01927                 movwf INDF                                              ;Save to QUEUE
0CC3   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0CC4   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CC5   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC6   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC7   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC8   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CC9   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01935                 count = count + 1
0CCA   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0CCB   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCC   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCD   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CCE   0080           01927                 movwf INDF                                              ;Save to QUEUE
0CCF   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
0CD0   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CD1   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD2   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD3   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD4   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CD5   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01935                 count = count + 1
0CD6   0808           01923                 movf ADC_DATAPORT, W                    ;Sample Y
0CD7   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD8   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD9   1489           01926                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CDA   0080           01927                 movwf INDF                                              ;Save to QUEUE
0CDB   0384           01928                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CDC   0808           01929                 movf ADC_DATAPORT, W                    ;Sample X
0CDD   1409           01930                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDE   1009           01931                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDF   1089           01932                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE0   0080           01933                 movwf INDF                                              ;Save to QUEUE
0CE1   0384           01934                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01935                 count = count + 1
                      01936         endw
0CE2   0808           01937         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0CE3   1409           01938         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CE4   1009           01939         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CE5   1489           01940         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0CE6   0080           01941         movwf INDF                                                      ;Save to QUEUE
0CE7   1783           01942         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0CE8   0808           01943         movf ADC_DATAPORT, W                            ;Sample X
0CE9   1409           01944         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CEA   1009           01945         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CEB   1089           01946         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0CEC   0080           01947         movwf INDF                                                      ;Save to QUEUE
0CED   0A84           01948         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01949         count = 1
                      01950         while count < BUFFERSIZE / 2
0CEE   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0CEF   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF0   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF1   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF2   0080           01955                 movwf INDF                                              ;Save to QUEUE
0CF3   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0CF4   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0CF5   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF6   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF7   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF8   0080           01961                 movwf INDF                                              ;Save to QUEUE
0CF9   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01963                 count = count + 1
0CFA   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0CFB   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFC   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFD   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFE   0080           01955                 movwf INDF                                              ;Save to QUEUE
0CFF   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D00   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D01   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D02   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D03   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D04   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D05   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01963                 count = count + 1
0D06   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D07   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D08   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D09   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D0A   0080           01955                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D0B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D0C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D0D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D10   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D11   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01963                 count = count + 1
0D12   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D13   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D14   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D15   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D16   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D17   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D18   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D19   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1A   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1B   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D1C   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D1D   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01963                 count = count + 1
0D1E   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D1F   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D20   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D21   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D22   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D23   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D24   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D25   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D26   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D27   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D28   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D29   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01963                 count = count + 1
0D2A   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D2B   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2C   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2D   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2E   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D2F   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D30   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D31   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D32   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D33   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D34   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D35   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01963                 count = count + 1
0D36   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D37   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D38   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D39   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D3A   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D3B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D3C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D3D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D40   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D41   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01963                 count = count + 1
0D42   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D43   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D44   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D45   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D46   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D47   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D48   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D49   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4A   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4B   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D4C   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D4D   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01963                 count = count + 1
0D4E   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D4F   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D50   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D51   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D52   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D53   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D54   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D55   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D56   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D57   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D58   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D59   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01963                 count = count + 1
0D5A   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D5B   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5C   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5D   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5E   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D5F   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D60   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D61   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D62   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D63   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D64   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D65   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01963                 count = count + 1
0D66   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D67   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D68   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D69   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D6A   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D6B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D6C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D6D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D70   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D71   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01963                 count = count + 1
0D72   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D73   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D74   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D75   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D76   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D77   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D78   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D79   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7A   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7B   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D7C   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D7D   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01963                 count = count + 1
0D7E   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D7F   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D80   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D81   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D82   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D83   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D84   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D85   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D86   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D87   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D88   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D89   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01963                 count = count + 1
0D8A   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D8B   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8C   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8D   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8E   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D8F   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D90   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D91   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D92   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D93   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D94   0080           01961                 movwf INDF                                              ;Save to QUEUE
0D95   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01963                 count = count + 1
0D96   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0D97   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D98   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D99   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D9A   0080           01955                 movwf INDF                                              ;Save to QUEUE
0D9B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0D9C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0D9D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D9E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DA0   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DA1   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01963                 count = count + 1
0DA2   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DA3   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA4   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA5   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA6   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DA7   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DA8   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DA9   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAA   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAB   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DAC   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DAD   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01963                 count = count + 1
0DAE   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DAF   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB0   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB1   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DB2   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DB3   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DB4   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DB5   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB6   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB7   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB8   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DB9   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01963                 count = count + 1
0DBA   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DBB   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBC   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBD   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBE   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DBF   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DC0   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DC1   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC2   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC3   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC4   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DC5   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01963                 count = count + 1
0DC6   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DC7   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC8   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC9   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DCA   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DCB   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DCC   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DCD   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCE   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DCF   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD0   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DD1   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01963                 count = count + 1
0DD2   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DD3   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD4   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD5   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD6   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DD7   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DD8   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DD9   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDA   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDB   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DDC   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DDD   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01963                 count = count + 1
0DDE   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DDF   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE0   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE1   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DE2   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DE3   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DE4   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DE5   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE6   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE7   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE8   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DE9   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01963                 count = count + 1
0DEA   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DEB   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEC   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DED   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DEE   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DEF   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DF0   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DF1   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF2   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF3   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF4   0080           01961                 movwf INDF                                              ;Save to QUEUE
0DF5   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01963                 count = count + 1
0DF6   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0DF7   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF8   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF9   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DFA   0080           01955                 movwf INDF                                              ;Save to QUEUE
0DFB   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0DFC   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0DFD   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFE   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFF   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E00   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E01   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01963                 count = count + 1
0E02   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E03   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E04   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E05   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E06   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E07   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E08   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E09   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0A   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0B   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E0C   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E0D   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01963                 count = count + 1
0E0E   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E0F   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E10   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E11   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E12   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E13   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E14   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E15   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E16   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E17   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E18   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E19   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01963                 count = count + 1
0E1A   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E1B   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1C   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1D   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1E   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E1F   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E20   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E21   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E22   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E23   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E24   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E25   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01963                 count = count + 1
0E26   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E27   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E28   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E29   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E2A   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E2B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E2C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E2D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E30   0080           01961                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E31   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01963                 count = count + 1
0E32   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E33   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E34   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E35   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E36   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E37   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E38   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E39   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E3A   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E3B   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E3C   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E3D   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01963                 count = count + 1
0E3E   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E3F   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E40   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E41   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E42   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E43   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E44   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E45   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E46   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E47   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E48   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E49   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01963                 count = count + 1
0E4A   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E4B   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4C   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4D   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E4E   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E4F   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E50   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E51   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E52   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E53   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E54   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E55   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01963                 count = count + 1
0E56   0808           01951                 movf ADC_DATAPORT, W                    ;Sample Y
0E57   1409           01952                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E58   1009           01953                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E59   1489           01954                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E5A   0080           01955                 movwf INDF                                              ;Save to QUEUE
0E5B   0A84           01956                 incf FSR, F                                             ;Increment QUEUE pointer
0E5C   0808           01957                 movf ADC_DATAPORT, W                    ;Sample X
0E5D   1409           01958                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5E   1009           01959                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5F   1089           01960                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E60   0080           01961                 movwf INDF                                              ;Save to QUEUE
0E61   0A84           01962                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000020            01963                 count = count + 1
                      01964         endw
0E62   0808           01965         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0E63   1409           01966         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E64   1009           01967         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E65   1489           01968         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0E66   0080           01969         movwf INDF                                                      ;Save to QUEUE
0E67   1384           01970         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0E68   0808           01971         movf ADC_DATAPORT, W                            ;Sample X
0E69   1409           01972         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E6A   1009           01973         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E6B   1089           01974         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0E6C   0080           01975         movwf INDF                                                      ;Save to QUEUE
0E6D   0384           01976         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01977         count = 1
                      01978         while count < BUFFERSIZE / 2
0E6E   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0E6F   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E70   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E71   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E72   0080           01983                 movwf INDF                                              ;Save to QUEUE
0E73   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0E74   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0E75   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E76   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E77   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E78   0080           01989                 movwf INDF                                              ;Save to QUEUE
0E79   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01991                 count = count + 1
0E7A   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0E7B   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7C   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7D   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7E   0080           01983                 movwf INDF                                              ;Save to QUEUE
0E7F   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0E80   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0E81   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E82   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E83   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E84   0080           01989                 movwf INDF                                              ;Save to QUEUE
0E85   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01991                 count = count + 1
0E86   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0E87   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E88   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E89   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E8A   0080           01983                 movwf INDF                                              ;Save to QUEUE
0E8B   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0E8C   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0E8D   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8E   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8F   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E90   0080           01989                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E91   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01991                 count = count + 1
0E92   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0E93   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E94   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E95   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E96   0080           01983                 movwf INDF                                              ;Save to QUEUE
0E97   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0E98   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0E99   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9A   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9B   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E9C   0080           01989                 movwf INDF                                              ;Save to QUEUE
0E9D   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01991                 count = count + 1
0E9E   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0E9F   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA0   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA1   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EA2   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EA3   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EA4   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EA5   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA6   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA7   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA8   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EA9   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01991                 count = count + 1
0EAA   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EAB   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAC   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAD   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAE   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EAF   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EB0   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EB1   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB2   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB3   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB4   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EB5   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01991                 count = count + 1
0EB6   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EB7   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB8   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB9   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EBA   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EBB   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EBC   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EBD   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBE   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBF   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EC0   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EC1   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            01991                 count = count + 1
0EC2   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EC3   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC4   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC5   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EC6   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EC7   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EC8   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EC9   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECA   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECB   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ECC   0080           01989                 movwf INDF                                              ;Save to QUEUE
0ECD   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01991                 count = count + 1
0ECE   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0ECF   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED0   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED1   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ED2   0080           01983                 movwf INDF                                              ;Save to QUEUE
0ED3   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0ED4   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0ED5   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED6   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED7   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED8   0080           01989                 movwf INDF                                              ;Save to QUEUE
0ED9   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01991                 count = count + 1
0EDA   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EDB   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDC   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDD   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDE   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EDF   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EE0   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EE1   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE2   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE3   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE4   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EE5   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01991                 count = count + 1
0EE6   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EE7   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE8   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE9   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EEA   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EEB   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EEC   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EED   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEE   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEF   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EF0   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EF1   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01991                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EF2   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EF3   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF4   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF5   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF6   0080           01983                 movwf INDF                                              ;Save to QUEUE
0EF7   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0EF8   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0EF9   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFA   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFB   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EFC   0080           01989                 movwf INDF                                              ;Save to QUEUE
0EFD   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01991                 count = count + 1
0EFE   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0EFF   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F00   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F01   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F02   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F03   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F04   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F05   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F06   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F07   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F08   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F09   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01991                 count = count + 1
0F0A   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F0B   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0C   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0D   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0E   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F0F   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F10   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F11   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F12   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F13   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F14   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F15   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01991                 count = count + 1
0F16   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F17   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F18   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F19   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F1A   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F1B   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F1C   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F1D   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1E   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1F   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F20   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F21   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01991                 count = count + 1
0F22   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F23   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F24   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F25   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F26   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F27   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F28   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F29   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2A   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2B   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F2C   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F2D   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01991                 count = count + 1
0F2E   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F2F   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F30   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F31   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F32   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F33   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F34   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F35   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F36   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F37   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F38   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F39   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01991                 count = count + 1
0F3A   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F3B   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3C   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3D   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3E   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F3F   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F40   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F41   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F42   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F43   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F44   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F45   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01991                 count = count + 1
0F46   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F47   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F48   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F49   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F4A   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F4B   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F4C   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F4D   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4E   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4F   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F50   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F51   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01991                 count = count + 1
0F52   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F53   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F54   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F55   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F56   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F57   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F58   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F59   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5A   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5B   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F5C   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F5D   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01991                 count = count + 1
0F5E   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F5F   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F60   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F61   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F62   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F63   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F64   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F65   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F66   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F67   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F68   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F69   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01991                 count = count + 1
0F6A   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F6B   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6C   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6D   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6E   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F6F   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F70   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F71   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F72   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F73   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F74   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F75   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01991                 count = count + 1
0F76   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F77   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F78   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F79   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F7A   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F7B   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F7C   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F7D   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7E   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7F   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F80   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F81   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01991                 count = count + 1
0F82   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F83   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F84   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F85   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F86   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F87   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F88   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F89   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8A   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8B   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F8C   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F8D   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01991                 count = count + 1
0F8E   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F8F   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F90   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F91   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F92   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F93   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0F94   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0F95   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F96   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F97   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F98   0080           01989                 movwf INDF                                              ;Save to QUEUE
0F99   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01991                 count = count + 1
0F9A   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0F9B   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9C   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9D   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F9E   0080           01983                 movwf INDF                                              ;Save to QUEUE
0F9F   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FA0   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FA1   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA2   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA3   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA4   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FA5   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01991                 count = count + 1
0FA6   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0FA7   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA8   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA9   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FAA   0080           01983                 movwf INDF                                              ;Save to QUEUE
0FAB   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FAC   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FAD   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAE   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAF   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FB0   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FB1   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01991                 count = count + 1
0FB2   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0FB3   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB4   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB5   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FB6   0080           01983                 movwf INDF                                              ;Save to QUEUE
0FB7   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FB8   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FB9   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBA   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FBB   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FBC   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FBD   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01991                 count = count + 1
0FBE   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0FBF   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC0   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC1   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FC2   0080           01983                 movwf INDF                                              ;Save to QUEUE
0FC3   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FC4   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FC5   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC6   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC7   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FC8   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FC9   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01991                 count = count + 1
0FCA   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0FCB   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCC   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCD   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FCE   0080           01983                 movwf INDF                                              ;Save to QUEUE
0FCF   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FD0   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FD1   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD2   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD3   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FD4   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FD5   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01991                 count = count + 1
0FD6   0808           01979                 movf ADC_DATAPORT, W                    ;Sample Y
0FD7   1409           01980                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD8   1009           01981                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD9   1489           01982                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FDA   0080           01983                 movwf INDF                                              ;Save to QUEUE
0FDB   0384           01984                 decf FSR, F                                             ;Increment QUEUE pointer
0FDC   0808           01985                 movf ADC_DATAPORT, W                    ;Sample X
0FDD   1409           01986                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDE   1009           01987                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDF   1089           01988                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FE0   0080           01989                 movwf INDF                                              ;Save to QUEUE
0FE1   0384           01990                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01991                 count = count + 1
                      01992         endw
0FE2   0808           01993         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0FE3   1409           01994         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0FE4   118A           01995         bcf PCLATH, 3                                           ;insure correct program memory page
0FE5   120A           01996         bcf PCLATH, 4
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
0FE6   291C           01997         goto ADCShutdown
                      01998         
                      01999 ;Fast sample
                      02000 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      02001 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      02002 ;-----------------------------------------------------------------------------
0FE7                  02003 Sample833k
0FE7   1009           02004         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02005         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0FE8   3020               M     movlw BUFFERMIN
0FE9   0084               M     movwf FSR
0FEA   0000           02006         nop
  0000                02007         local count
  00000001            02008         count = 1
                      02009         while count < BUFFERSIZE
0FEB   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
0FEC   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FED   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEE   0080           02013                 movwf INDF                                              ;Save to QUEUE
0FEF   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
0FF0   0000           02015                 nop                                                             ;Wait a cycle
  00000002            02016                 count = count + 1
0FF1   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
0FF2   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF3   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF4   0080           02013                 movwf INDF                                              ;Save to QUEUE
0FF5   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
0FF6   0000           02015                 nop                                                             ;Wait a cycle
  00000003            02016                 count = count + 1
0FF7   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
0FF8   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF9   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFA   0080           02013                 movwf INDF                                              ;Save to QUEUE
0FFB   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
0FFC   0000           02015                 nop                                                             ;Wait a cycle
  00000004            02016                 count = count + 1
0FFD   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
0FFE   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFF   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1000   0080           02013                 movwf INDF                                              ;Save to QUEUE
1001   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1002   0000           02015                 nop                                                             ;Wait a cycle
  00000005            02016                 count = count + 1
1003   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1004   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1005   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1006   0080           02013                 movwf INDF                                              ;Save to QUEUE
1007   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1008   0000           02015                 nop                                                             ;Wait a cycle
  00000006            02016                 count = count + 1
1009   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
100A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

100B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100C   0080           02013                 movwf INDF                                              ;Save to QUEUE
100D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
100E   0000           02015                 nop                                                             ;Wait a cycle
  00000007            02016                 count = count + 1
100F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1010   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1011   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1012   0080           02013                 movwf INDF                                              ;Save to QUEUE
1013   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1014   0000           02015                 nop                                                             ;Wait a cycle
  00000008            02016                 count = count + 1
1015   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1016   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1017   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1018   0080           02013                 movwf INDF                                              ;Save to QUEUE
1019   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
101A   0000           02015                 nop                                                             ;Wait a cycle
  00000009            02016                 count = count + 1
101B   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
101C   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101D   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101E   0080           02013                 movwf INDF                                              ;Save to QUEUE
101F   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1020   0000           02015                 nop                                                             ;Wait a cycle
  0000000A            02016                 count = count + 1
1021   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1022   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1023   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1024   0080           02013                 movwf INDF                                              ;Save to QUEUE
1025   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1026   0000           02015                 nop                                                             ;Wait a cycle
  0000000B            02016                 count = count + 1
1027   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1028   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1029   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102A   0080           02013                 movwf INDF                                              ;Save to QUEUE
102B   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
102C   0000           02015                 nop                                                             ;Wait a cycle
  0000000C            02016                 count = count + 1
102D   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
102E   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102F   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1030   0080           02013                 movwf INDF                                              ;Save to QUEUE
1031   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1032   0000           02015                 nop                                                             ;Wait a cycle
  0000000D            02016                 count = count + 1
1033   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1034   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1035   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1036   0080           02013                 movwf INDF                                              ;Save to QUEUE
1037   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1038   0000           02015                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            02016                 count = count + 1
1039   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
103A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103C   0080           02013                 movwf INDF                                              ;Save to QUEUE
103D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
103E   0000           02015                 nop                                                             ;Wait a cycle
  0000000F            02016                 count = count + 1
103F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1040   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1041   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1042   0080           02013                 movwf INDF                                              ;Save to QUEUE
1043   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1044   0000           02015                 nop                                                             ;Wait a cycle
  00000010            02016                 count = count + 1
1045   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1046   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1047   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1048   0080           02013                 movwf INDF                                              ;Save to QUEUE
1049   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
104A   0000           02015                 nop                                                             ;Wait a cycle
  00000011            02016                 count = count + 1
104B   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
104C   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104D   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104E   0080           02013                 movwf INDF                                              ;Save to QUEUE
104F   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1050   0000           02015                 nop                                                             ;Wait a cycle
  00000012            02016                 count = count + 1
1051   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1052   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1053   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1054   0080           02013                 movwf INDF                                              ;Save to QUEUE
1055   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1056   0000           02015                 nop                                                             ;Wait a cycle
  00000013            02016                 count = count + 1
1057   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1058   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1059   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105A   0080           02013                 movwf INDF                                              ;Save to QUEUE
105B   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
105C   0000           02015                 nop                                                             ;Wait a cycle
  00000014            02016                 count = count + 1
105D   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
105E   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105F   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1060   0080           02013                 movwf INDF                                              ;Save to QUEUE
1061   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1062   0000           02015                 nop                                                             ;Wait a cycle
  00000015            02016                 count = count + 1
1063   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1064   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1065   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1066   0080           02013                 movwf INDF                                              ;Save to QUEUE
1067   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1068   0000           02015                 nop                                                             ;Wait a cycle
  00000016            02016                 count = count + 1
1069   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
106A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106C   0080           02013                 movwf INDF                                              ;Save to QUEUE
106D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
106E   0000           02015                 nop                                                             ;Wait a cycle
  00000017            02016                 count = count + 1
106F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1070   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1071   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1072   0080           02013                 movwf INDF                                              ;Save to QUEUE
1073   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1074   0000           02015                 nop                                                             ;Wait a cycle
  00000018            02016                 count = count + 1
1075   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1076   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1077   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1078   0080           02013                 movwf INDF                                              ;Save to QUEUE
1079   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
107A   0000           02015                 nop                                                             ;Wait a cycle
  00000019            02016                 count = count + 1
107B   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
107C   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107D   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107E   0080           02013                 movwf INDF                                              ;Save to QUEUE
107F   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1080   0000           02015                 nop                                                             ;Wait a cycle
  0000001A            02016                 count = count + 1
1081   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1082   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1083   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1084   0080           02013                 movwf INDF                                              ;Save to QUEUE
1085   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1086   0000           02015                 nop                                                             ;Wait a cycle
  0000001B            02016                 count = count + 1
1087   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1088   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1089   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108A   0080           02013                 movwf INDF                                              ;Save to QUEUE
108B   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
108C   0000           02015                 nop                                                             ;Wait a cycle
  0000001C            02016                 count = count + 1
108D   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
108E   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108F   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1090   0080           02013                 movwf INDF                                              ;Save to QUEUE
1091   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1092   0000           02015                 nop                                                             ;Wait a cycle
  0000001D            02016                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1093   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1094   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1095   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1096   0080           02013                 movwf INDF                                              ;Save to QUEUE
1097   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1098   0000           02015                 nop                                                             ;Wait a cycle
  0000001E            02016                 count = count + 1
1099   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
109A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109C   0080           02013                 movwf INDF                                              ;Save to QUEUE
109D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
109E   0000           02015                 nop                                                             ;Wait a cycle
  0000001F            02016                 count = count + 1
109F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10A0   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A1   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A2   0080           02013                 movwf INDF                                              ;Save to QUEUE
10A3   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10A4   0000           02015                 nop                                                             ;Wait a cycle
  00000020            02016                 count = count + 1
10A5   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10A6   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A7   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A8   0080           02013                 movwf INDF                                              ;Save to QUEUE
10A9   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10AA   0000           02015                 nop                                                             ;Wait a cycle
  00000021            02016                 count = count + 1
10AB   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10AC   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AD   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AE   0080           02013                 movwf INDF                                              ;Save to QUEUE
10AF   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10B0   0000           02015                 nop                                                             ;Wait a cycle
  00000022            02016                 count = count + 1
10B1   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10B2   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B3   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B4   0080           02013                 movwf INDF                                              ;Save to QUEUE
10B5   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10B6   0000           02015                 nop                                                             ;Wait a cycle
  00000023            02016                 count = count + 1
10B7   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10B8   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B9   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BA   0080           02013                 movwf INDF                                              ;Save to QUEUE
10BB   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10BC   0000           02015                 nop                                                             ;Wait a cycle
  00000024            02016                 count = count + 1
10BD   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10BE   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BF   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C0   0080           02013                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10C1   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10C2   0000           02015                 nop                                                             ;Wait a cycle
  00000025            02016                 count = count + 1
10C3   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10C4   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C5   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C6   0080           02013                 movwf INDF                                              ;Save to QUEUE
10C7   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10C8   0000           02015                 nop                                                             ;Wait a cycle
  00000026            02016                 count = count + 1
10C9   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10CA   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CB   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CC   0080           02013                 movwf INDF                                              ;Save to QUEUE
10CD   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10CE   0000           02015                 nop                                                             ;Wait a cycle
  00000027            02016                 count = count + 1
10CF   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10D0   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D1   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D2   0080           02013                 movwf INDF                                              ;Save to QUEUE
10D3   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10D4   0000           02015                 nop                                                             ;Wait a cycle
  00000028            02016                 count = count + 1
10D5   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10D6   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D7   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D8   0080           02013                 movwf INDF                                              ;Save to QUEUE
10D9   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10DA   0000           02015                 nop                                                             ;Wait a cycle
  00000029            02016                 count = count + 1
10DB   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10DC   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DD   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DE   0080           02013                 movwf INDF                                              ;Save to QUEUE
10DF   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10E0   0000           02015                 nop                                                             ;Wait a cycle
  0000002A            02016                 count = count + 1
10E1   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10E2   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E3   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E4   0080           02013                 movwf INDF                                              ;Save to QUEUE
10E5   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10E6   0000           02015                 nop                                                             ;Wait a cycle
  0000002B            02016                 count = count + 1
10E7   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10E8   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E9   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EA   0080           02013                 movwf INDF                                              ;Save to QUEUE
10EB   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10EC   0000           02015                 nop                                                             ;Wait a cycle
  0000002C            02016                 count = count + 1
10ED   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10EE   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EF   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F0   0080           02013                 movwf INDF                                              ;Save to QUEUE
10F1   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10F2   0000           02015                 nop                                                             ;Wait a cycle
  0000002D            02016                 count = count + 1
10F3   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10F4   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F5   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F6   0080           02013                 movwf INDF                                              ;Save to QUEUE
10F7   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10F8   0000           02015                 nop                                                             ;Wait a cycle
  0000002E            02016                 count = count + 1
10F9   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
10FA   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FB   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FC   0080           02013                 movwf INDF                                              ;Save to QUEUE
10FD   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
10FE   0000           02015                 nop                                                             ;Wait a cycle
  0000002F            02016                 count = count + 1
10FF   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1100   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1101   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1102   0080           02013                 movwf INDF                                              ;Save to QUEUE
1103   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1104   0000           02015                 nop                                                             ;Wait a cycle
  00000030            02016                 count = count + 1
1105   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1106   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1107   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1108   0080           02013                 movwf INDF                                              ;Save to QUEUE
1109   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
110A   0000           02015                 nop                                                             ;Wait a cycle
  00000031            02016                 count = count + 1
110B   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
110C   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110D   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110E   0080           02013                 movwf INDF                                              ;Save to QUEUE
110F   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1110   0000           02015                 nop                                                             ;Wait a cycle
  00000032            02016                 count = count + 1
1111   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1112   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1113   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1114   0080           02013                 movwf INDF                                              ;Save to QUEUE
1115   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1116   0000           02015                 nop                                                             ;Wait a cycle
  00000033            02016                 count = count + 1
1117   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1118   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1119   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111A   0080           02013                 movwf INDF                                              ;Save to QUEUE
111B   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

111C   0000           02015                 nop                                                             ;Wait a cycle
  00000034            02016                 count = count + 1
111D   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
111E   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111F   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1120   0080           02013                 movwf INDF                                              ;Save to QUEUE
1121   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1122   0000           02015                 nop                                                             ;Wait a cycle
  00000035            02016                 count = count + 1
1123   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1124   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1125   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1126   0080           02013                 movwf INDF                                              ;Save to QUEUE
1127   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1128   0000           02015                 nop                                                             ;Wait a cycle
  00000036            02016                 count = count + 1
1129   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
112A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112C   0080           02013                 movwf INDF                                              ;Save to QUEUE
112D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
112E   0000           02015                 nop                                                             ;Wait a cycle
  00000037            02016                 count = count + 1
112F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1130   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1131   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1132   0080           02013                 movwf INDF                                              ;Save to QUEUE
1133   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1134   0000           02015                 nop                                                             ;Wait a cycle
  00000038            02016                 count = count + 1
1135   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1136   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1137   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1138   0080           02013                 movwf INDF                                              ;Save to QUEUE
1139   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
113A   0000           02015                 nop                                                             ;Wait a cycle
  00000039            02016                 count = count + 1
113B   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
113C   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113D   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113E   0080           02013                 movwf INDF                                              ;Save to QUEUE
113F   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1140   0000           02015                 nop                                                             ;Wait a cycle
  0000003A            02016                 count = count + 1
1141   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1142   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1143   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1144   0080           02013                 movwf INDF                                              ;Save to QUEUE
1145   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1146   0000           02015                 nop                                                             ;Wait a cycle
  0000003B            02016                 count = count + 1
1147   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1148   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1149   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114A   0080           02013                 movwf INDF                                              ;Save to QUEUE
114B   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
114C   0000           02015                 nop                                                             ;Wait a cycle
  0000003C            02016                 count = count + 1
114D   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
114E   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114F   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1150   0080           02013                 movwf INDF                                              ;Save to QUEUE
1151   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1152   0000           02015                 nop                                                             ;Wait a cycle
  0000003D            02016                 count = count + 1
1153   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1154   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1155   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1156   0080           02013                 movwf INDF                                              ;Save to QUEUE
1157   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1158   0000           02015                 nop                                                             ;Wait a cycle
  0000003E            02016                 count = count + 1
1159   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
115A   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115B   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115C   0080           02013                 movwf INDF                                              ;Save to QUEUE
115D   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
115E   0000           02015                 nop                                                             ;Wait a cycle
  0000003F            02016                 count = count + 1
115F   0808           02010                 movf ADC_DATAPORT, W                    ;Sample
1160   1409           02011                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1161   1009           02012                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1162   0080           02013                 movwf INDF                                              ;Save to QUEUE
1163   0A84           02014                 incf FSR, F                                             ;Increment QUEUE pointer
1164   0000           02015                 nop                                                             ;Wait a cycle
  00000040            02016                 count = count + 1
                      02017         endw
1165   0808           02018         movf ADC_DATAPORT, W
1166   1409           02019         bsf ADC_CONTROLPORT, RDD
1167   1009           02020         bcf ADC_CONTROLPORT, RDD
1168   0080           02021         movwf INDF
1169   1784           02022         bsf FSR, 7                                                      ;goto bank 2
116A   0000           02023         nop                                                                     ;Wait a cycle
  00000001            02024         count = 1
                      02025         while count < BUFFERSIZE
116B   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
116C   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116D   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116E   0080           02029                 movwf INDF                                              ;Save to QUEUE
116F   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1170   0000           02031                 nop                                                             ;Wait a cycle
  00000002            02032                 count = count + 1
1171   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1172   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1173   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1174   0080           02029                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1175   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1176   0000           02031                 nop                                                             ;Wait a cycle
  00000003            02032                 count = count + 1
1177   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1178   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1179   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117A   0080           02029                 movwf INDF                                              ;Save to QUEUE
117B   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
117C   0000           02031                 nop                                                             ;Wait a cycle
  00000004            02032                 count = count + 1
117D   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
117E   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117F   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1180   0080           02029                 movwf INDF                                              ;Save to QUEUE
1181   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1182   0000           02031                 nop                                                             ;Wait a cycle
  00000005            02032                 count = count + 1
1183   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1184   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1185   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1186   0080           02029                 movwf INDF                                              ;Save to QUEUE
1187   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1188   0000           02031                 nop                                                             ;Wait a cycle
  00000006            02032                 count = count + 1
1189   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
118A   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118B   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118C   0080           02029                 movwf INDF                                              ;Save to QUEUE
118D   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
118E   0000           02031                 nop                                                             ;Wait a cycle
  00000007            02032                 count = count + 1
118F   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1190   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1191   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1192   0080           02029                 movwf INDF                                              ;Save to QUEUE
1193   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1194   0000           02031                 nop                                                             ;Wait a cycle
  00000008            02032                 count = count + 1
1195   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1196   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1197   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1198   0080           02029                 movwf INDF                                              ;Save to QUEUE
1199   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
119A   0000           02031                 nop                                                             ;Wait a cycle
  00000009            02032                 count = count + 1
119B   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
119C   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119D   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119E   0080           02029                 movwf INDF                                              ;Save to QUEUE
119F   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11A0   0000           02031                 nop                                                             ;Wait a cycle
  0000000A            02032                 count = count + 1
11A1   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11A2   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A3   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A4   0080           02029                 movwf INDF                                              ;Save to QUEUE
11A5   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11A6   0000           02031                 nop                                                             ;Wait a cycle
  0000000B            02032                 count = count + 1
11A7   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11A8   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A9   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AA   0080           02029                 movwf INDF                                              ;Save to QUEUE
11AB   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11AC   0000           02031                 nop                                                             ;Wait a cycle
  0000000C            02032                 count = count + 1
11AD   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11AE   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AF   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B0   0080           02029                 movwf INDF                                              ;Save to QUEUE
11B1   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11B2   0000           02031                 nop                                                             ;Wait a cycle
  0000000D            02032                 count = count + 1
11B3   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11B4   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B5   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B6   0080           02029                 movwf INDF                                              ;Save to QUEUE
11B7   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11B8   0000           02031                 nop                                                             ;Wait a cycle
  0000000E            02032                 count = count + 1
11B9   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11BA   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BB   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BC   0080           02029                 movwf INDF                                              ;Save to QUEUE
11BD   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11BE   0000           02031                 nop                                                             ;Wait a cycle
  0000000F            02032                 count = count + 1
11BF   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11C0   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C1   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C2   0080           02029                 movwf INDF                                              ;Save to QUEUE
11C3   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11C4   0000           02031                 nop                                                             ;Wait a cycle
  00000010            02032                 count = count + 1
11C5   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11C6   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C7   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C8   0080           02029                 movwf INDF                                              ;Save to QUEUE
11C9   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11CA   0000           02031                 nop                                                             ;Wait a cycle
  00000011            02032                 count = count + 1
11CB   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11CC   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CD   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CE   0080           02029                 movwf INDF                                              ;Save to QUEUE
11CF   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11D0   0000           02031                 nop                                                             ;Wait a cycle
  00000012            02032                 count = count + 1
11D1   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11D2   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D3   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D4   0080           02029                 movwf INDF                                              ;Save to QUEUE
11D5   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11D6   0000           02031                 nop                                                             ;Wait a cycle
  00000013            02032                 count = count + 1
11D7   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11D8   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D9   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DA   0080           02029                 movwf INDF                                              ;Save to QUEUE
11DB   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11DC   0000           02031                 nop                                                             ;Wait a cycle
  00000014            02032                 count = count + 1
11DD   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11DE   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DF   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E0   0080           02029                 movwf INDF                                              ;Save to QUEUE
11E1   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11E2   0000           02031                 nop                                                             ;Wait a cycle
  00000015            02032                 count = count + 1
11E3   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11E4   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E5   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E6   0080           02029                 movwf INDF                                              ;Save to QUEUE
11E7   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11E8   0000           02031                 nop                                                             ;Wait a cycle
  00000016            02032                 count = count + 1
11E9   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11EA   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EB   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EC   0080           02029                 movwf INDF                                              ;Save to QUEUE
11ED   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11EE   0000           02031                 nop                                                             ;Wait a cycle
  00000017            02032                 count = count + 1
11EF   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11F0   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F1   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F2   0080           02029                 movwf INDF                                              ;Save to QUEUE
11F3   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11F4   0000           02031                 nop                                                             ;Wait a cycle
  00000018            02032                 count = count + 1
11F5   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11F6   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F7   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F8   0080           02029                 movwf INDF                                              ;Save to QUEUE
11F9   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
11FA   0000           02031                 nop                                                             ;Wait a cycle
  00000019            02032                 count = count + 1
11FB   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
11FC   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11FD   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FE   0080           02029                 movwf INDF                                              ;Save to QUEUE
11FF   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1200   0000           02031                 nop                                                             ;Wait a cycle
  0000001A            02032                 count = count + 1
1201   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1202   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1203   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1204   0080           02029                 movwf INDF                                              ;Save to QUEUE
1205   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1206   0000           02031                 nop                                                             ;Wait a cycle
  0000001B            02032                 count = count + 1
1207   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1208   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1209   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120A   0080           02029                 movwf INDF                                              ;Save to QUEUE
120B   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
120C   0000           02031                 nop                                                             ;Wait a cycle
  0000001C            02032                 count = count + 1
120D   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
120E   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120F   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1210   0080           02029                 movwf INDF                                              ;Save to QUEUE
1211   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1212   0000           02031                 nop                                                             ;Wait a cycle
  0000001D            02032                 count = count + 1
1213   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1214   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1215   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1216   0080           02029                 movwf INDF                                              ;Save to QUEUE
1217   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1218   0000           02031                 nop                                                             ;Wait a cycle
  0000001E            02032                 count = count + 1
1219   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
121A   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121B   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121C   0080           02029                 movwf INDF                                              ;Save to QUEUE
121D   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
121E   0000           02031                 nop                                                             ;Wait a cycle
  0000001F            02032                 count = count + 1
121F   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1220   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1221   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1222   0080           02029                 movwf INDF                                              ;Save to QUEUE
1223   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1224   0000           02031                 nop                                                             ;Wait a cycle
  00000020            02032                 count = count + 1
1225   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1226   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1227   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1228   0080           02029                 movwf INDF                                              ;Save to QUEUE
1229   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
122A   0000           02031                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000021            02032                 count = count + 1
122B   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
122C   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122D   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122E   0080           02029                 movwf INDF                                              ;Save to QUEUE
122F   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1230   0000           02031                 nop                                                             ;Wait a cycle
  00000022            02032                 count = count + 1
1231   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1232   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1233   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1234   0080           02029                 movwf INDF                                              ;Save to QUEUE
1235   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1236   0000           02031                 nop                                                             ;Wait a cycle
  00000023            02032                 count = count + 1
1237   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1238   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1239   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123A   0080           02029                 movwf INDF                                              ;Save to QUEUE
123B   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
123C   0000           02031                 nop                                                             ;Wait a cycle
  00000024            02032                 count = count + 1
123D   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
123E   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123F   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1240   0080           02029                 movwf INDF                                              ;Save to QUEUE
1241   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1242   0000           02031                 nop                                                             ;Wait a cycle
  00000025            02032                 count = count + 1
1243   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1244   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1245   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1246   0080           02029                 movwf INDF                                              ;Save to QUEUE
1247   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1248   0000           02031                 nop                                                             ;Wait a cycle
  00000026            02032                 count = count + 1
1249   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
124A   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124B   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124C   0080           02029                 movwf INDF                                              ;Save to QUEUE
124D   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
124E   0000           02031                 nop                                                             ;Wait a cycle
  00000027            02032                 count = count + 1
124F   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1250   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1251   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1252   0080           02029                 movwf INDF                                              ;Save to QUEUE
1253   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1254   0000           02031                 nop                                                             ;Wait a cycle
  00000028            02032                 count = count + 1
1255   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1256   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1257   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1258   0080           02029                 movwf INDF                                              ;Save to QUEUE
1259   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
125A   0000           02031                 nop                                                             ;Wait a cycle
  00000029            02032                 count = count + 1
125B   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
125C   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125D   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125E   0080           02029                 movwf INDF                                              ;Save to QUEUE
125F   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1260   0000           02031                 nop                                                             ;Wait a cycle
  0000002A            02032                 count = count + 1
1261   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1262   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1263   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1264   0080           02029                 movwf INDF                                              ;Save to QUEUE
1265   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1266   0000           02031                 nop                                                             ;Wait a cycle
  0000002B            02032                 count = count + 1
1267   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1268   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1269   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126A   0080           02029                 movwf INDF                                              ;Save to QUEUE
126B   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
126C   0000           02031                 nop                                                             ;Wait a cycle
  0000002C            02032                 count = count + 1
126D   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
126E   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126F   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1270   0080           02029                 movwf INDF                                              ;Save to QUEUE
1271   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1272   0000           02031                 nop                                                             ;Wait a cycle
  0000002D            02032                 count = count + 1
1273   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1274   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1275   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1276   0080           02029                 movwf INDF                                              ;Save to QUEUE
1277   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1278   0000           02031                 nop                                                             ;Wait a cycle
  0000002E            02032                 count = count + 1
1279   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
127A   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127B   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127C   0080           02029                 movwf INDF                                              ;Save to QUEUE
127D   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
127E   0000           02031                 nop                                                             ;Wait a cycle
  0000002F            02032                 count = count + 1
127F   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1280   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1281   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1282   0080           02029                 movwf INDF                                              ;Save to QUEUE
1283   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1284   0000           02031                 nop                                                             ;Wait a cycle
  00000030            02032                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1285   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1286   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1287   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1288   0080           02029                 movwf INDF                                              ;Save to QUEUE
1289   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
128A   0000           02031                 nop                                                             ;Wait a cycle
  00000031            02032                 count = count + 1
128B   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
128C   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128D   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128E   0080           02029                 movwf INDF                                              ;Save to QUEUE
128F   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1290   0000           02031                 nop                                                             ;Wait a cycle
  00000032            02032                 count = count + 1
1291   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1292   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1293   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1294   0080           02029                 movwf INDF                                              ;Save to QUEUE
1295   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
1296   0000           02031                 nop                                                             ;Wait a cycle
  00000033            02032                 count = count + 1
1297   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
1298   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1299   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129A   0080           02029                 movwf INDF                                              ;Save to QUEUE
129B   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
129C   0000           02031                 nop                                                             ;Wait a cycle
  00000034            02032                 count = count + 1
129D   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
129E   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129F   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A0   0080           02029                 movwf INDF                                              ;Save to QUEUE
12A1   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12A2   0000           02031                 nop                                                             ;Wait a cycle
  00000035            02032                 count = count + 1
12A3   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12A4   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A5   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A6   0080           02029                 movwf INDF                                              ;Save to QUEUE
12A7   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12A8   0000           02031                 nop                                                             ;Wait a cycle
  00000036            02032                 count = count + 1
12A9   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12AA   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AB   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AC   0080           02029                 movwf INDF                                              ;Save to QUEUE
12AD   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12AE   0000           02031                 nop                                                             ;Wait a cycle
  00000037            02032                 count = count + 1
12AF   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12B0   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B1   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B2   0080           02029                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12B3   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12B4   0000           02031                 nop                                                             ;Wait a cycle
  00000038            02032                 count = count + 1
12B5   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12B6   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B7   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B8   0080           02029                 movwf INDF                                              ;Save to QUEUE
12B9   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12BA   0000           02031                 nop                                                             ;Wait a cycle
  00000039            02032                 count = count + 1
12BB   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12BC   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BD   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BE   0080           02029                 movwf INDF                                              ;Save to QUEUE
12BF   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12C0   0000           02031                 nop                                                             ;Wait a cycle
  0000003A            02032                 count = count + 1
12C1   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12C2   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C3   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C4   0080           02029                 movwf INDF                                              ;Save to QUEUE
12C5   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12C6   0000           02031                 nop                                                             ;Wait a cycle
  0000003B            02032                 count = count + 1
12C7   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12C8   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C9   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CA   0080           02029                 movwf INDF                                              ;Save to QUEUE
12CB   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12CC   0000           02031                 nop                                                             ;Wait a cycle
  0000003C            02032                 count = count + 1
12CD   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12CE   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CF   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D0   0080           02029                 movwf INDF                                              ;Save to QUEUE
12D1   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12D2   0000           02031                 nop                                                             ;Wait a cycle
  0000003D            02032                 count = count + 1
12D3   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12D4   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D5   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D6   0080           02029                 movwf INDF                                              ;Save to QUEUE
12D7   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12D8   0000           02031                 nop                                                             ;Wait a cycle
  0000003E            02032                 count = count + 1
12D9   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
12DA   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DB   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DC   0080           02029                 movwf INDF                                              ;Save to QUEUE
12DD   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12DE   0000           02031                 nop                                                             ;Wait a cycle
  0000003F            02032                 count = count + 1
12DF   0808           02026                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12E0   1409           02027                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E1   1009           02028                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E2   0080           02029                 movwf INDF                                              ;Save to QUEUE
12E3   0384           02030                 decf FSR, F                                             ;Increment QUEUE pointer
12E4   0000           02031                 nop                                                             ;Wait a cycle
  00000040            02032                 count = count + 1
                      02033         endw
12E5   0808           02034         movf ADC_DATAPORT, W
12E6   1409           02035         bsf ADC_CONTROLPORT, RDD
12E7   1009           02036         bcf ADC_CONTROLPORT, RDD
12E8   0080           02037         movwf INDF
12E9   1783           02038         bsf STATUS, IRP                                         ;goto bank 4
12EA   0000           02039         nop                                                                     ;Wait a cycle
  00000001            02040         count = 1
                      02041         while count < D'44'
12EB   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
12EC   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12ED   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12EE   0080           02045                 movwf INDF                                              ;Save to QUEUE
12EF   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
12F0   0000           02047                 nop                                                             ;Wait a cycle
  00000002            02048                 count = count + 1
12F1   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
12F2   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F3   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F4   0080           02045                 movwf INDF                                              ;Save to QUEUE
12F5   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
12F6   0000           02047                 nop                                                             ;Wait a cycle
  00000003            02048                 count = count + 1
12F7   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
12F8   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F9   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FA   0080           02045                 movwf INDF                                              ;Save to QUEUE
12FB   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
12FC   0000           02047                 nop                                                             ;Wait a cycle
  00000004            02048                 count = count + 1
12FD   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
12FE   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FF   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1300   0080           02045                 movwf INDF                                              ;Save to QUEUE
1301   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1302   0000           02047                 nop                                                             ;Wait a cycle
  00000005            02048                 count = count + 1
1303   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1304   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1305   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1306   0080           02045                 movwf INDF                                              ;Save to QUEUE
1307   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1308   0000           02047                 nop                                                             ;Wait a cycle
  00000006            02048                 count = count + 1
1309   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
130A   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130B   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

130C   0080           02045                 movwf INDF                                              ;Save to QUEUE
130D   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
130E   0000           02047                 nop                                                             ;Wait a cycle
  00000007            02048                 count = count + 1
130F   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1310   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1311   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1312   0080           02045                 movwf INDF                                              ;Save to QUEUE
1313   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1314   0000           02047                 nop                                                             ;Wait a cycle
  00000008            02048                 count = count + 1
1315   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1316   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1317   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1318   0080           02045                 movwf INDF                                              ;Save to QUEUE
1319   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
131A   0000           02047                 nop                                                             ;Wait a cycle
  00000009            02048                 count = count + 1
131B   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
131C   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131D   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131E   0080           02045                 movwf INDF                                              ;Save to QUEUE
131F   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1320   0000           02047                 nop                                                             ;Wait a cycle
  0000000A            02048                 count = count + 1
1321   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1322   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1323   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1324   0080           02045                 movwf INDF                                              ;Save to QUEUE
1325   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1326   0000           02047                 nop                                                             ;Wait a cycle
  0000000B            02048                 count = count + 1
1327   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1328   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1329   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132A   0080           02045                 movwf INDF                                              ;Save to QUEUE
132B   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
132C   0000           02047                 nop                                                             ;Wait a cycle
  0000000C            02048                 count = count + 1
132D   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
132E   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132F   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1330   0080           02045                 movwf INDF                                              ;Save to QUEUE
1331   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1332   0000           02047                 nop                                                             ;Wait a cycle
  0000000D            02048                 count = count + 1
1333   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1334   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1335   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1336   0080           02045                 movwf INDF                                              ;Save to QUEUE
1337   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1338   0000           02047                 nop                                                             ;Wait a cycle
  0000000E            02048                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1339   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
133A   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133B   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133C   0080           02045                 movwf INDF                                              ;Save to QUEUE
133D   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
133E   0000           02047                 nop                                                             ;Wait a cycle
  0000000F            02048                 count = count + 1
133F   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1340   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1341   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1342   0080           02045                 movwf INDF                                              ;Save to QUEUE
1343   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1344   0000           02047                 nop                                                             ;Wait a cycle
  00000010            02048                 count = count + 1
1345   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1346   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1347   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1348   0080           02045                 movwf INDF                                              ;Save to QUEUE
1349   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
134A   0000           02047                 nop                                                             ;Wait a cycle
  00000011            02048                 count = count + 1
134B   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
134C   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134D   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134E   0080           02045                 movwf INDF                                              ;Save to QUEUE
134F   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1350   0000           02047                 nop                                                             ;Wait a cycle
  00000012            02048                 count = count + 1
1351   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1352   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1353   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1354   0080           02045                 movwf INDF                                              ;Save to QUEUE
1355   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1356   0000           02047                 nop                                                             ;Wait a cycle
  00000013            02048                 count = count + 1
1357   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1358   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1359   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135A   0080           02045                 movwf INDF                                              ;Save to QUEUE
135B   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
135C   0000           02047                 nop                                                             ;Wait a cycle
  00000014            02048                 count = count + 1
135D   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
135E   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135F   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1360   0080           02045                 movwf INDF                                              ;Save to QUEUE
1361   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1362   0000           02047                 nop                                                             ;Wait a cycle
  00000015            02048                 count = count + 1
1363   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1364   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1365   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1366   0080           02045                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1367   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1368   0000           02047                 nop                                                             ;Wait a cycle
  00000016            02048                 count = count + 1
1369   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
136A   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136B   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136C   0080           02045                 movwf INDF                                              ;Save to QUEUE
136D   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
136E   0000           02047                 nop                                                             ;Wait a cycle
  00000017            02048                 count = count + 1
136F   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1370   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1371   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1372   0080           02045                 movwf INDF                                              ;Save to QUEUE
1373   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1374   0000           02047                 nop                                                             ;Wait a cycle
  00000018            02048                 count = count + 1
1375   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1376   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1377   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1378   0080           02045                 movwf INDF                                              ;Save to QUEUE
1379   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
137A   0000           02047                 nop                                                             ;Wait a cycle
  00000019            02048                 count = count + 1
137B   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
137C   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137D   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137E   0080           02045                 movwf INDF                                              ;Save to QUEUE
137F   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1380   0000           02047                 nop                                                             ;Wait a cycle
  0000001A            02048                 count = count + 1
1381   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1382   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1383   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1384   0080           02045                 movwf INDF                                              ;Save to QUEUE
1385   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1386   0000           02047                 nop                                                             ;Wait a cycle
  0000001B            02048                 count = count + 1
1387   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
1388   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1389   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138A   0080           02045                 movwf INDF                                              ;Save to QUEUE
138B   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
138C   0000           02047                 nop                                                             ;Wait a cycle
  0000001C            02048                 count = count + 1
138D   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
138E   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138F   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1390   0080           02045                 movwf INDF                                              ;Save to QUEUE
1391   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1392   0000           02047                 nop                                                             ;Wait a cycle
  0000001D            02048                 count = count + 1
1393   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1394   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1395   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1396   0080           02045                 movwf INDF                                              ;Save to QUEUE
1397   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
1398   0000           02047                 nop                                                             ;Wait a cycle
  0000001E            02048                 count = count + 1
1399   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
139A   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139B   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139C   0080           02045                 movwf INDF                                              ;Save to QUEUE
139D   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
139E   0000           02047                 nop                                                             ;Wait a cycle
  0000001F            02048                 count = count + 1
139F   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13A0   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A1   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A2   0080           02045                 movwf INDF                                              ;Save to QUEUE
13A3   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13A4   0000           02047                 nop                                                             ;Wait a cycle
  00000020            02048                 count = count + 1
13A5   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13A6   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A7   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A8   0080           02045                 movwf INDF                                              ;Save to QUEUE
13A9   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13AA   0000           02047                 nop                                                             ;Wait a cycle
  00000021            02048                 count = count + 1
13AB   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13AC   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AD   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AE   0080           02045                 movwf INDF                                              ;Save to QUEUE
13AF   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13B0   0000           02047                 nop                                                             ;Wait a cycle
  00000022            02048                 count = count + 1
13B1   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13B2   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B3   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B4   0080           02045                 movwf INDF                                              ;Save to QUEUE
13B5   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13B6   0000           02047                 nop                                                             ;Wait a cycle
  00000023            02048                 count = count + 1
13B7   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13B8   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B9   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BA   0080           02045                 movwf INDF                                              ;Save to QUEUE
13BB   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13BC   0000           02047                 nop                                                             ;Wait a cycle
  00000024            02048                 count = count + 1
13BD   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13BE   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BF   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C0   0080           02045                 movwf INDF                                              ;Save to QUEUE
13C1   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13C2   0000           02047                 nop                                                             ;Wait a cycle
  00000025            02048                 count = count + 1
13C3   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13C4   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C5   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C6   0080           02045                 movwf INDF                                              ;Save to QUEUE
13C7   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13C8   0000           02047                 nop                                                             ;Wait a cycle
  00000026            02048                 count = count + 1
13C9   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13CA   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CB   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CC   0080           02045                 movwf INDF                                              ;Save to QUEUE
13CD   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13CE   0000           02047                 nop                                                             ;Wait a cycle
  00000027            02048                 count = count + 1
13CF   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13D0   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D1   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D2   0080           02045                 movwf INDF                                              ;Save to QUEUE
13D3   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13D4   0000           02047                 nop                                                             ;Wait a cycle
  00000028            02048                 count = count + 1
13D5   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13D6   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D7   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D8   0080           02045                 movwf INDF                                              ;Save to QUEUE
13D9   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13DA   0000           02047                 nop                                                             ;Wait a cycle
  00000029            02048                 count = count + 1
13DB   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13DC   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DD   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DE   0080           02045                 movwf INDF                                              ;Save to QUEUE
13DF   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13E0   0000           02047                 nop                                                             ;Wait a cycle
  0000002A            02048                 count = count + 1
13E1   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13E2   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E3   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E4   0080           02045                 movwf INDF                                              ;Save to QUEUE
13E5   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13E6   0000           02047                 nop                                                             ;Wait a cycle
  0000002B            02048                 count = count + 1
13E7   0808           02042                 movf ADC_DATAPORT, W                    ;Sample
13E8   1409           02043                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E9   1009           02044                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EA   0080           02045                 movwf INDF                                              ;Save to QUEUE
13EB   0A84           02046                 incf FSR, F                                             ;Increment QUEUE pointer
13EC   0000           02047                 nop                                                             ;Wait a cycle
  0000002C            02048                 count = count + 1
                      02049         endw
13ED                  02050 Sample833kEnd
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02051         while count < BUFFERSIZE
13ED   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
13EE   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EF   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F0   0080           02055                 movwf INDF                                              ;Save to QUEUE
13F1   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
13F2   0000           02057                 nop                                                             ;Wait a cycle
  0000002D            02058                 count = count + 1
13F3   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
13F4   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F5   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F6   0080           02055                 movwf INDF                                              ;Save to QUEUE
13F7   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
13F8   0000           02057                 nop                                                             ;Wait a cycle
  0000002E            02058                 count = count + 1
13F9   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
13FA   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FB   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FC   0080           02055                 movwf INDF                                              ;Save to QUEUE
13FD   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
13FE   0000           02057                 nop                                                             ;Wait a cycle
  0000002F            02058                 count = count + 1
13FF   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1400   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1401   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1402   0080           02055                 movwf INDF                                              ;Save to QUEUE
1403   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1404   0000           02057                 nop                                                             ;Wait a cycle
  00000030            02058                 count = count + 1
1405   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1406   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1407   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1408   0080           02055                 movwf INDF                                              ;Save to QUEUE
1409   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
140A   0000           02057                 nop                                                             ;Wait a cycle
  00000031            02058                 count = count + 1
140B   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
140C   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140D   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140E   0080           02055                 movwf INDF                                              ;Save to QUEUE
140F   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1410   0000           02057                 nop                                                             ;Wait a cycle
  00000032            02058                 count = count + 1
1411   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1412   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1413   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1414   0080           02055                 movwf INDF                                              ;Save to QUEUE
1415   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1416   0000           02057                 nop                                                             ;Wait a cycle
  00000033            02058                 count = count + 1
1417   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1418   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1419   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

141A   0080           02055                 movwf INDF                                              ;Save to QUEUE
141B   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
141C   0000           02057                 nop                                                             ;Wait a cycle
  00000034            02058                 count = count + 1
141D   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
141E   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141F   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1420   0080           02055                 movwf INDF                                              ;Save to QUEUE
1421   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1422   0000           02057                 nop                                                             ;Wait a cycle
  00000035            02058                 count = count + 1
1423   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1424   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1425   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1426   0080           02055                 movwf INDF                                              ;Save to QUEUE
1427   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1428   0000           02057                 nop                                                             ;Wait a cycle
  00000036            02058                 count = count + 1
1429   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
142A   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142B   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142C   0080           02055                 movwf INDF                                              ;Save to QUEUE
142D   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
142E   0000           02057                 nop                                                             ;Wait a cycle
  00000037            02058                 count = count + 1
142F   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1430   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1431   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1432   0080           02055                 movwf INDF                                              ;Save to QUEUE
1433   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1434   0000           02057                 nop                                                             ;Wait a cycle
  00000038            02058                 count = count + 1
1435   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1436   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1437   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1438   0080           02055                 movwf INDF                                              ;Save to QUEUE
1439   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
143A   0000           02057                 nop                                                             ;Wait a cycle
  00000039            02058                 count = count + 1
143B   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
143C   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143D   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143E   0080           02055                 movwf INDF                                              ;Save to QUEUE
143F   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1440   0000           02057                 nop                                                             ;Wait a cycle
  0000003A            02058                 count = count + 1
1441   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1442   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1443   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1444   0080           02055                 movwf INDF                                              ;Save to QUEUE
1445   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1446   0000           02057                 nop                                                             ;Wait a cycle
  0000003B            02058                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1447   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1448   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1449   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144A   0080           02055                 movwf INDF                                              ;Save to QUEUE
144B   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
144C   0000           02057                 nop                                                             ;Wait a cycle
  0000003C            02058                 count = count + 1
144D   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
144E   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144F   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1450   0080           02055                 movwf INDF                                              ;Save to QUEUE
1451   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1452   0000           02057                 nop                                                             ;Wait a cycle
  0000003D            02058                 count = count + 1
1453   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1454   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1455   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1456   0080           02055                 movwf INDF                                              ;Save to QUEUE
1457   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1458   0000           02057                 nop                                                             ;Wait a cycle
  0000003E            02058                 count = count + 1
1459   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
145A   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145B   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145C   0080           02055                 movwf INDF                                              ;Save to QUEUE
145D   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
145E   0000           02057                 nop                                                             ;Wait a cycle
  0000003F            02058                 count = count + 1
145F   0808           02052                 movf ADC_DATAPORT, W                    ;Sample
1460   1409           02053                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1461   1009           02054                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1462   0080           02055                 movwf INDF                                              ;Save to QUEUE
1463   0A84           02056                 incf FSR, F                                             ;Increment QUEUE pointer
1464   0000           02057                 nop                                                             ;Wait a cycle
  00000040            02058                 count = count + 1
                      02059         endw
1465   0808           02060         movf ADC_DATAPORT, W
1466   1409           02061         bsf ADC_CONTROLPORT, RDD
1467   1009           02062         bcf ADC_CONTROLPORT, RDD
1468   0080           02063         movwf INDF
1469   1384           02064         bcf FSR, 7                                                      ;goto bank 3
146A   0000           02065         nop                                                                     ;Wait a cycle
  00000001            02066         count = 1
                      02067         while count < BUFFERSIZE
146B   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
146C   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146D   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146E   0080           02071                 movwf INDF                                              ;Save to QUEUE
146F   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1470   0000           02073                 nop                                                             ;Wait a cycle
  00000002            02074                 count = count + 1
1471   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1472   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1473   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1474   0080           02071                 movwf INDF                                              ;Save to QUEUE
1475   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1476   0000           02073                 nop                                                             ;Wait a cycle
  00000003            02074                 count = count + 1
1477   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1478   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1479   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147A   0080           02071                 movwf INDF                                              ;Save to QUEUE
147B   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
147C   0000           02073                 nop                                                             ;Wait a cycle
  00000004            02074                 count = count + 1
147D   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
147E   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147F   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1480   0080           02071                 movwf INDF                                              ;Save to QUEUE
1481   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1482   0000           02073                 nop                                                             ;Wait a cycle
  00000005            02074                 count = count + 1
1483   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1484   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1485   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1486   0080           02071                 movwf INDF                                              ;Save to QUEUE
1487   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1488   0000           02073                 nop                                                             ;Wait a cycle
  00000006            02074                 count = count + 1
1489   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
148A   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148B   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148C   0080           02071                 movwf INDF                                              ;Save to QUEUE
148D   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
148E   0000           02073                 nop                                                             ;Wait a cycle
  00000007            02074                 count = count + 1
148F   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1490   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1491   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1492   0080           02071                 movwf INDF                                              ;Save to QUEUE
1493   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1494   0000           02073                 nop                                                             ;Wait a cycle
  00000008            02074                 count = count + 1
1495   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1496   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1497   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1498   0080           02071                 movwf INDF                                              ;Save to QUEUE
1499   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
149A   0000           02073                 nop                                                             ;Wait a cycle
  00000009            02074                 count = count + 1
149B   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
149C   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149D   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149E   0080           02071                 movwf INDF                                              ;Save to QUEUE
149F   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14A0   0000           02073                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000A            02074                 count = count + 1
14A1   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14A2   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A3   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A4   0080           02071                 movwf INDF                                              ;Save to QUEUE
14A5   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14A6   0000           02073                 nop                                                             ;Wait a cycle
  0000000B            02074                 count = count + 1
14A7   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14A8   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A9   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AA   0080           02071                 movwf INDF                                              ;Save to QUEUE
14AB   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14AC   0000           02073                 nop                                                             ;Wait a cycle
  0000000C            02074                 count = count + 1
14AD   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14AE   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AF   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B0   0080           02071                 movwf INDF                                              ;Save to QUEUE
14B1   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14B2   0000           02073                 nop                                                             ;Wait a cycle
  0000000D            02074                 count = count + 1
14B3   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14B4   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B5   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B6   0080           02071                 movwf INDF                                              ;Save to QUEUE
14B7   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14B8   0000           02073                 nop                                                             ;Wait a cycle
  0000000E            02074                 count = count + 1
14B9   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14BA   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BB   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BC   0080           02071                 movwf INDF                                              ;Save to QUEUE
14BD   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14BE   0000           02073                 nop                                                             ;Wait a cycle
  0000000F            02074                 count = count + 1
14BF   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14C0   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C1   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C2   0080           02071                 movwf INDF                                              ;Save to QUEUE
14C3   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14C4   0000           02073                 nop                                                             ;Wait a cycle
  00000010            02074                 count = count + 1
14C5   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14C6   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C7   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C8   0080           02071                 movwf INDF                                              ;Save to QUEUE
14C9   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14CA   0000           02073                 nop                                                             ;Wait a cycle
  00000011            02074                 count = count + 1
14CB   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14CC   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CD   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14CE   0080           02071                 movwf INDF                                              ;Save to QUEUE
14CF   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14D0   0000           02073                 nop                                                             ;Wait a cycle
  00000012            02074                 count = count + 1
14D1   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14D2   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D3   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D4   0080           02071                 movwf INDF                                              ;Save to QUEUE
14D5   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14D6   0000           02073                 nop                                                             ;Wait a cycle
  00000013            02074                 count = count + 1
14D7   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14D8   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D9   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DA   0080           02071                 movwf INDF                                              ;Save to QUEUE
14DB   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14DC   0000           02073                 nop                                                             ;Wait a cycle
  00000014            02074                 count = count + 1
14DD   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14DE   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DF   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E0   0080           02071                 movwf INDF                                              ;Save to QUEUE
14E1   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14E2   0000           02073                 nop                                                             ;Wait a cycle
  00000015            02074                 count = count + 1
14E3   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14E4   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E5   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E6   0080           02071                 movwf INDF                                              ;Save to QUEUE
14E7   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14E8   0000           02073                 nop                                                             ;Wait a cycle
  00000016            02074                 count = count + 1
14E9   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14EA   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EB   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EC   0080           02071                 movwf INDF                                              ;Save to QUEUE
14ED   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14EE   0000           02073                 nop                                                             ;Wait a cycle
  00000017            02074                 count = count + 1
14EF   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14F0   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F1   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F2   0080           02071                 movwf INDF                                              ;Save to QUEUE
14F3   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14F4   0000           02073                 nop                                                             ;Wait a cycle
  00000018            02074                 count = count + 1
14F5   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14F6   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F7   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F8   0080           02071                 movwf INDF                                              ;Save to QUEUE
14F9   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
14FA   0000           02073                 nop                                                             ;Wait a cycle
  00000019            02074                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14FB   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
14FC   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FD   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FE   0080           02071                 movwf INDF                                              ;Save to QUEUE
14FF   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1500   0000           02073                 nop                                                             ;Wait a cycle
  0000001A            02074                 count = count + 1
1501   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1502   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1503   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1504   0080           02071                 movwf INDF                                              ;Save to QUEUE
1505   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1506   0000           02073                 nop                                                             ;Wait a cycle
  0000001B            02074                 count = count + 1
1507   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1508   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1509   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150A   0080           02071                 movwf INDF                                              ;Save to QUEUE
150B   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
150C   0000           02073                 nop                                                             ;Wait a cycle
  0000001C            02074                 count = count + 1
150D   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
150E   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150F   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1510   0080           02071                 movwf INDF                                              ;Save to QUEUE
1511   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1512   0000           02073                 nop                                                             ;Wait a cycle
  0000001D            02074                 count = count + 1
1513   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1514   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1515   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1516   0080           02071                 movwf INDF                                              ;Save to QUEUE
1517   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1518   0000           02073                 nop                                                             ;Wait a cycle
  0000001E            02074                 count = count + 1
1519   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
151A   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151B   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151C   0080           02071                 movwf INDF                                              ;Save to QUEUE
151D   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
151E   0000           02073                 nop                                                             ;Wait a cycle
  0000001F            02074                 count = count + 1
151F   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1520   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1521   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1522   0080           02071                 movwf INDF                                              ;Save to QUEUE
1523   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1524   0000           02073                 nop                                                             ;Wait a cycle
  00000020            02074                 count = count + 1
1525   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1526   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1527   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1528   0080           02071                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1529   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
152A   0000           02073                 nop                                                             ;Wait a cycle
  00000021            02074                 count = count + 1
152B   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
152C   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152D   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152E   0080           02071                 movwf INDF                                              ;Save to QUEUE
152F   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1530   0000           02073                 nop                                                             ;Wait a cycle
  00000022            02074                 count = count + 1
1531   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1532   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1533   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1534   0080           02071                 movwf INDF                                              ;Save to QUEUE
1535   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1536   0000           02073                 nop                                                             ;Wait a cycle
  00000023            02074                 count = count + 1
1537   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1538   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1539   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153A   0080           02071                 movwf INDF                                              ;Save to QUEUE
153B   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
153C   0000           02073                 nop                                                             ;Wait a cycle
  00000024            02074                 count = count + 1
153D   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
153E   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153F   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1540   0080           02071                 movwf INDF                                              ;Save to QUEUE
1541   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1542   0000           02073                 nop                                                             ;Wait a cycle
  00000025            02074                 count = count + 1
1543   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1544   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1545   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1546   0080           02071                 movwf INDF                                              ;Save to QUEUE
1547   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1548   0000           02073                 nop                                                             ;Wait a cycle
  00000026            02074                 count = count + 1
1549   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
154A   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154B   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154C   0080           02071                 movwf INDF                                              ;Save to QUEUE
154D   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
154E   0000           02073                 nop                                                             ;Wait a cycle
  00000027            02074                 count = count + 1
154F   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1550   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1551   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1552   0080           02071                 movwf INDF                                              ;Save to QUEUE
1553   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1554   0000           02073                 nop                                                             ;Wait a cycle
  00000028            02074                 count = count + 1
1555   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1556   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1557   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1558   0080           02071                 movwf INDF                                              ;Save to QUEUE
1559   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
155A   0000           02073                 nop                                                             ;Wait a cycle
  00000029            02074                 count = count + 1
155B   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
155C   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155D   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155E   0080           02071                 movwf INDF                                              ;Save to QUEUE
155F   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1560   0000           02073                 nop                                                             ;Wait a cycle
  0000002A            02074                 count = count + 1
1561   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1562   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1563   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1564   0080           02071                 movwf INDF                                              ;Save to QUEUE
1565   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1566   0000           02073                 nop                                                             ;Wait a cycle
  0000002B            02074                 count = count + 1
1567   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1568   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1569   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156A   0080           02071                 movwf INDF                                              ;Save to QUEUE
156B   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
156C   0000           02073                 nop                                                             ;Wait a cycle
  0000002C            02074                 count = count + 1
156D   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
156E   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156F   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1570   0080           02071                 movwf INDF                                              ;Save to QUEUE
1571   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1572   0000           02073                 nop                                                             ;Wait a cycle
  0000002D            02074                 count = count + 1
1573   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1574   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1575   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1576   0080           02071                 movwf INDF                                              ;Save to QUEUE
1577   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1578   0000           02073                 nop                                                             ;Wait a cycle
  0000002E            02074                 count = count + 1
1579   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
157A   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157B   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157C   0080           02071                 movwf INDF                                              ;Save to QUEUE
157D   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
157E   0000           02073                 nop                                                             ;Wait a cycle
  0000002F            02074                 count = count + 1
157F   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1580   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1581   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1582   0080           02071                 movwf INDF                                              ;Save to QUEUE
1583   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1584   0000           02073                 nop                                                             ;Wait a cycle
  00000030            02074                 count = count + 1
1585   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1586   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1587   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1588   0080           02071                 movwf INDF                                              ;Save to QUEUE
1589   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
158A   0000           02073                 nop                                                             ;Wait a cycle
  00000031            02074                 count = count + 1
158B   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
158C   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158D   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158E   0080           02071                 movwf INDF                                              ;Save to QUEUE
158F   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1590   0000           02073                 nop                                                             ;Wait a cycle
  00000032            02074                 count = count + 1
1591   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1592   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1593   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1594   0080           02071                 movwf INDF                                              ;Save to QUEUE
1595   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
1596   0000           02073                 nop                                                             ;Wait a cycle
  00000033            02074                 count = count + 1
1597   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
1598   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1599   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159A   0080           02071                 movwf INDF                                              ;Save to QUEUE
159B   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
159C   0000           02073                 nop                                                             ;Wait a cycle
  00000034            02074                 count = count + 1
159D   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
159E   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159F   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A0   0080           02071                 movwf INDF                                              ;Save to QUEUE
15A1   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15A2   0000           02073                 nop                                                             ;Wait a cycle
  00000035            02074                 count = count + 1
15A3   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15A4   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A5   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A6   0080           02071                 movwf INDF                                              ;Save to QUEUE
15A7   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15A8   0000           02073                 nop                                                             ;Wait a cycle
  00000036            02074                 count = count + 1
15A9   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15AA   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AB   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AC   0080           02071                 movwf INDF                                              ;Save to QUEUE
15AD   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15AE   0000           02073                 nop                                                             ;Wait a cycle
  00000037            02074                 count = count + 1
15AF   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15B0   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15B1   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B2   0080           02071                 movwf INDF                                              ;Save to QUEUE
15B3   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15B4   0000           02073                 nop                                                             ;Wait a cycle
  00000038            02074                 count = count + 1
15B5   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15B6   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B7   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B8   0080           02071                 movwf INDF                                              ;Save to QUEUE
15B9   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15BA   0000           02073                 nop                                                             ;Wait a cycle
  00000039            02074                 count = count + 1
15BB   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15BC   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15BD   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BE   0080           02071                 movwf INDF                                              ;Save to QUEUE
15BF   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15C0   0000           02073                 nop                                                             ;Wait a cycle
  0000003A            02074                 count = count + 1
15C1   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15C2   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C3   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C4   0080           02071                 movwf INDF                                              ;Save to QUEUE
15C5   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15C6   0000           02073                 nop                                                             ;Wait a cycle
  0000003B            02074                 count = count + 1
15C7   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15C8   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C9   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15CA   0080           02071                 movwf INDF                                              ;Save to QUEUE
15CB   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15CC   0000           02073                 nop                                                             ;Wait a cycle
  0000003C            02074                 count = count + 1
15CD   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15CE   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15CF   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15D0   0080           02071                 movwf INDF                                              ;Save to QUEUE
15D1   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15D2   0000           02073                 nop                                                             ;Wait a cycle
  0000003D            02074                 count = count + 1
15D3   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15D4   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15D5   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15D6   0080           02071                 movwf INDF                                              ;Save to QUEUE
15D7   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15D8   0000           02073                 nop                                                             ;Wait a cycle
  0000003E            02074                 count = count + 1
15D9   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15DA   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15DB   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15DC   0080           02071                 movwf INDF                                              ;Save to QUEUE
15DD   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15DE   0000           02073                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003F            02074                 count = count + 1
15DF   0808           02068                 movf ADC_DATAPORT, W                    ;Sample
15E0   1409           02069                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15E1   1009           02070                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15E2   0080           02071                 movwf INDF                                              ;Save to QUEUE
15E3   0384           02072                 decf FSR, F                                             ;Increment QUEUE pointer
15E4   0000           02073                 nop                                                             ;Wait a cycle
  00000040            02074                 count = count + 1
                      02075         endw
15E5   0808           02076         movf ADC_DATAPORT, W                            ;Last sample
15E6   1409           02077         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15E7   118A           02078         bcf PCLATH, 3                                           ;insure correct program memory page
15E8   120A           02079         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
15E9   291C           02080         goto ADCShutdown
                      02081 
                      02082 ;Repetitive sample
                      02083 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      02084 ;-----------------------------------------------------------------------------
15EA                  02085 SampleRep5M
15EA   3015           02086         movlw high SampleRep5MPickSt
15EB   008A           02087         movwf PCLATH
15EC   0879           02088         movf gbl_modetempb, w
15ED   0782           02089         addwf PCL, f
15EE                  02090 SampleRep5MPickSt
                      02091         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
15EE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15EF   118A               M                 bcf PCLATH, 3
                          M         endif
15F0   2DFD               M         goto SampleRep5MStep1
                      02092         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
15F1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15F2   118A               M                 bcf PCLATH, 3
                          M         endif
15F3   2F0D               M         goto SampleRep5MStep2
                      02093         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
15F4   160A               M                 bsf PCLATH, 4
                          M         else
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
15F5   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15F6   2810               M         goto SampleRep5MStep3
                      02094         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
15F7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
15F8   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15F9   2913               M         goto SampleRep5MStep4
                      02095         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
15FA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
15FB   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15FC   2A17               M         goto SampleRep5MStep5
15FD                  02096 SampleRep5MPickEn
15FD                  02097 SampleRep5MStep1
15FD   1009           02098         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02099         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
15FE   3020               M     movlw BUFFERMIN
15FF   0084               M     movwf FSR
1600   0000           02100         nop
  0000                02101         local count
  00000001            02102         count = 1
                      02103         while count < D'52'
1601   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1602   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1603   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1604   0080           02107                 movwf INDF                                              ;Save to QUEUE
1605   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02109                 count = count + 1
1606   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1607   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1608   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1609   0080           02107                 movwf INDF                                              ;Save to QUEUE
160A   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02109                 count = count + 1
160B   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
160C   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160D   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
160E   0080           02107                 movwf INDF                                              ;Save to QUEUE
160F   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02109                 count = count + 1
1610   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1611   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1612   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1613   0080           02107                 movwf INDF                                              ;Save to QUEUE
1614   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02109                 count = count + 1
1615   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1616   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1617   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1618   0080           02107                 movwf INDF                                              ;Save to QUEUE
1619   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02109                 count = count + 1
161A   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
161B   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
161C   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
161D   0080           02107                 movwf INDF                                              ;Save to QUEUE
161E   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02109                 count = count + 1
161F   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1620   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1621   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1622   0080           02107                 movwf INDF                                              ;Save to QUEUE
1623   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02109                 count = count + 1
1624   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1625   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1626   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1627   0080           02107                 movwf INDF                                              ;Save to QUEUE
1628   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02109                 count = count + 1
1629   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162A   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
162B   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
162C   0080           02107                 movwf INDF                                              ;Save to QUEUE
162D   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02109                 count = count + 1
162E   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162F   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1630   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1631   0080           02107                 movwf INDF                                              ;Save to QUEUE
1632   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02109                 count = count + 1
1633   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1634   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1635   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1636   0080           02107                 movwf INDF                                              ;Save to QUEUE
1637   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02109                 count = count + 1
1638   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1639   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163A   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
163B   0080           02107                 movwf INDF                                              ;Save to QUEUE
163C   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02109                 count = count + 1
163D   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
163E   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163F   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1640   0080           02107                 movwf INDF                                              ;Save to QUEUE
1641   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02109                 count = count + 1
1642   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1643   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1644   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1645   0080           02107                 movwf INDF                                              ;Save to QUEUE
1646   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02109                 count = count + 1
1647   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1648   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1649   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
164A   0080           02107                 movwf INDF                                              ;Save to QUEUE
164B   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02109                 count = count + 1
164C   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164D   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
164E   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
164F   0080           02107                 movwf INDF                                              ;Save to QUEUE
1650   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02109                 count = count + 1
1651   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1652   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1653   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1654   0080           02107                 movwf INDF                                              ;Save to QUEUE
1655   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02109                 count = count + 1
1656   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1657   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1658   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1659   0080           02107                 movwf INDF                                              ;Save to QUEUE
165A   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02109                 count = count + 1
165B   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
165C   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165D   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
165E   0080           02107                 movwf INDF                                              ;Save to QUEUE
165F   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02109                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1660   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1661   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1662   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1663   0080           02107                 movwf INDF                                              ;Save to QUEUE
1664   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02109                 count = count + 1
1665   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1666   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1667   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1668   0080           02107                 movwf INDF                                              ;Save to QUEUE
1669   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02109                 count = count + 1
166A   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
166B   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
166C   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
166D   0080           02107                 movwf INDF                                              ;Save to QUEUE
166E   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02109                 count = count + 1
166F   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1670   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1671   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1672   0080           02107                 movwf INDF                                              ;Save to QUEUE
1673   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02109                 count = count + 1
1674   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1675   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1676   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1677   0080           02107                 movwf INDF                                              ;Save to QUEUE
1678   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02109                 count = count + 1
1679   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167A   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
167B   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
167C   0080           02107                 movwf INDF                                              ;Save to QUEUE
167D   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02109                 count = count + 1
167E   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167F   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1680   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1681   0080           02107                 movwf INDF                                              ;Save to QUEUE
1682   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02109                 count = count + 1
1683   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1684   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1685   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1686   0080           02107                 movwf INDF                                              ;Save to QUEUE
1687   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02109                 count = count + 1
1688   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1689   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168A   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
168B   0080           02107                 movwf INDF                                              ;Save to QUEUE
168C   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001D            02109                 count = count + 1
168D   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
168E   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168F   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1690   0080           02107                 movwf INDF                                              ;Save to QUEUE
1691   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02109                 count = count + 1
1692   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1693   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1694   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
1695   0080           02107                 movwf INDF                                              ;Save to QUEUE
1696   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02109                 count = count + 1
1697   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1698   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1699   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
169A   0080           02107                 movwf INDF                                              ;Save to QUEUE
169B   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02109                 count = count + 1
169C   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169D   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
169E   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
169F   0080           02107                 movwf INDF                                              ;Save to QUEUE
16A0   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02109                 count = count + 1
16A1   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A2   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A3   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16A4   0080           02107                 movwf INDF                                              ;Save to QUEUE
16A5   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02109                 count = count + 1
16A6   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A7   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A8   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16A9   0080           02107                 movwf INDF                                              ;Save to QUEUE
16AA   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02109                 count = count + 1
16AB   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16AC   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AD   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16AE   0080           02107                 movwf INDF                                              ;Save to QUEUE
16AF   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02109                 count = count + 1
16B0   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B1   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B2   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16B3   0080           02107                 movwf INDF                                              ;Save to QUEUE
16B4   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02109                 count = count + 1
16B5   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B6   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B7   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16B8   0080           02107                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16B9   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02109                 count = count + 1
16BA   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BB   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BC   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16BD   0080           02107                 movwf INDF                                              ;Save to QUEUE
16BE   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02109                 count = count + 1
16BF   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C0   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C1   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16C2   0080           02107                 movwf INDF                                              ;Save to QUEUE
16C3   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02109                 count = count + 1
16C4   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C5   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C6   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16C7   0080           02107                 movwf INDF                                              ;Save to QUEUE
16C8   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02109                 count = count + 1
16C9   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CA   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CB   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16CC   0080           02107                 movwf INDF                                              ;Save to QUEUE
16CD   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02109                 count = count + 1
16CE   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CF   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D0   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16D1   0080           02107                 movwf INDF                                              ;Save to QUEUE
16D2   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02109                 count = count + 1
16D3   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D4   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D5   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16D6   0080           02107                 movwf INDF                                              ;Save to QUEUE
16D7   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02109                 count = count + 1
16D8   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D9   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DA   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16DB   0080           02107                 movwf INDF                                              ;Save to QUEUE
16DC   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02109                 count = count + 1
16DD   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16DE   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DF   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16E0   0080           02107                 movwf INDF                                              ;Save to QUEUE
16E1   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02109                 count = count + 1
16E2   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E3   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E4   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16E5   0080           02107                 movwf INDF                                              ;Save to QUEUE
16E6   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02109                 count = count + 1
16E7   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E8   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E9   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16EA   0080           02107                 movwf INDF                                              ;Save to QUEUE
16EB   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02109                 count = count + 1
16EC   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16ED   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16EE   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16EF   0080           02107                 movwf INDF                                              ;Save to QUEUE
16F0   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02109                 count = count + 1
16F1   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F2   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F3   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16F4   0080           02107                 movwf INDF                                              ;Save to QUEUE
16F5   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02109                 count = count + 1
16F6   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F7   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F8   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16F9   0080           02107                 movwf INDF                                              ;Save to QUEUE
16FA   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02109                 count = count + 1
16FB   1409           02104                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FC   1009           02105                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FD   0808           02106                 movf ADC_DATAPORT, W                    ;Save Sample
16FE   0080           02107                 movwf INDF                                              ;Save to QUEUE
16FF   0A84           02108                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02109                 count = count + 1
                      02110         endw
1700   1409           02111         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1701   0808           02112         movf ADC_DATAPORT, W                            ;Sample
1702                  02113 SampleRep5MEndA
1702   0080           02114         movwf INDF
1703   0A84           02115         incf FSR, F
1704   2F07           02116         goto SampleRep5MEndB
1705                  02117 SampleRep5MEndC
1705   0080           02118         movwf INDF
1706   0384           02119         decf FSR, F
1707                  02120 SampleRep5MEndB
                      02121         ADDLF D'3', gbl_modetempb, f
1707   3003               M     movlw D'3'
1708   07F9               M     addwf gbl_modetempb, f
1709   1486           02122         bsf ADC_PORT, CS
                      02123         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
170A   120A               M                 bcf PCLATH, 4
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
170B   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
170C   287E               M         goto MainB
                      02124         
170D                  02125 SampleRep5MStep2
170D   0000           02126         nop
170E   1009           02127         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
170F   2F10           02128         goto $ + 1
1710   0000           02129         nop
  0000                02130         local count
  00000001            02131         count = 1
                      02132         while count < D'12'
1711   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1712   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1713   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1714   0080           02136                 movwf INDF                                              ;Save to QUEUE
1715   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02138                 count = count + 1
1716   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1717   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1718   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1719   0080           02136                 movwf INDF                                              ;Save to QUEUE
171A   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02138                 count = count + 1
171B   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171C   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171D   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
171E   0080           02136                 movwf INDF                                              ;Save to QUEUE
171F   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02138                 count = count + 1
1720   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1721   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1722   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1723   0080           02136                 movwf INDF                                              ;Save to QUEUE
1724   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02138                 count = count + 1
1725   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1726   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1727   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1728   0080           02136                 movwf INDF                                              ;Save to QUEUE
1729   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02138                 count = count + 1
172A   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
172B   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
172C   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
172D   0080           02136                 movwf INDF                                              ;Save to QUEUE
172E   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02138                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

172F   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1730   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1731   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1732   0080           02136                 movwf INDF                                              ;Save to QUEUE
1733   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02138                 count = count + 1
1734   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1735   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1736   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1737   0080           02136                 movwf INDF                                              ;Save to QUEUE
1738   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02138                 count = count + 1
1739   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
173A   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
173B   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
173C   0080           02136                 movwf INDF                                              ;Save to QUEUE
173D   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02138                 count = count + 1
173E   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
173F   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1740   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1741   0080           02136                 movwf INDF                                              ;Save to QUEUE
1742   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02138                 count = count + 1
1743   1409           02133                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1744   1009           02134                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1745   0808           02135                 movf ADC_DATAPORT, W                    ;Save Sample
1746   0080           02136                 movwf INDF                                              ;Save to QUEUE
1747   0A84           02137                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02138                 count = count + 1
                      02139         endw
1748   1409           02140         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1749   1009           02141         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
174A   0808           02142         movf ADC_DATAPORT, W                            ;Sample
174B   0080           02143         movwf INDF
174C   1784           02144         bsf FSR, 7                                                      ;goto bank 2
  00000001            02145         count = 1
                      02146         while count < D'39'
174D   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174E   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174F   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1750   0080           02150                 movwf INDF                                              ;Save to QUEUE
1751   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02152                 count = count + 1
1752   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1753   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1754   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1755   0080           02150                 movwf INDF                                              ;Save to QUEUE
1756   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02152                 count = count + 1
1757   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1758   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1759   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

175A   0080           02150                 movwf INDF                                              ;Save to QUEUE
175B   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02152                 count = count + 1
175C   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175D   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175E   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
175F   0080           02150                 movwf INDF                                              ;Save to QUEUE
1760   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02152                 count = count + 1
1761   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1762   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1763   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1764   0080           02150                 movwf INDF                                              ;Save to QUEUE
1765   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02152                 count = count + 1
1766   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1767   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1768   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1769   0080           02150                 movwf INDF                                              ;Save to QUEUE
176A   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02152                 count = count + 1
176B   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176C   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176D   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
176E   0080           02150                 movwf INDF                                              ;Save to QUEUE
176F   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02152                 count = count + 1
1770   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1771   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1772   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1773   0080           02150                 movwf INDF                                              ;Save to QUEUE
1774   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02152                 count = count + 1
1775   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1776   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1777   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1778   0080           02150                 movwf INDF                                              ;Save to QUEUE
1779   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02152                 count = count + 1
177A   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177B   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177C   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
177D   0080           02150                 movwf INDF                                              ;Save to QUEUE
177E   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02152                 count = count + 1
177F   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1780   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1781   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1782   0080           02150                 movwf INDF                                              ;Save to QUEUE
1783   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02152                 count = count + 1
1784   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1785   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1786   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1787   0080           02150                 movwf INDF                                              ;Save to QUEUE
1788   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02152                 count = count + 1
1789   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178A   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178B   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
178C   0080           02150                 movwf INDF                                              ;Save to QUEUE
178D   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02152                 count = count + 1
178E   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178F   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1790   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1791   0080           02150                 movwf INDF                                              ;Save to QUEUE
1792   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02152                 count = count + 1
1793   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1794   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1795   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1796   0080           02150                 movwf INDF                                              ;Save to QUEUE
1797   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02152                 count = count + 1
1798   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1799   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179A   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
179B   0080           02150                 movwf INDF                                              ;Save to QUEUE
179C   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02152                 count = count + 1
179D   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179E   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179F   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17A0   0080           02150                 movwf INDF                                              ;Save to QUEUE
17A1   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02152                 count = count + 1
17A2   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A3   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A4   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17A5   0080           02150                 movwf INDF                                              ;Save to QUEUE
17A6   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02152                 count = count + 1
17A7   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A8   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A9   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17AA   0080           02150                 movwf INDF                                              ;Save to QUEUE
17AB   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02152                 count = count + 1
17AC   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AD   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AE   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17AF   0080           02150                 movwf INDF                                              ;Save to QUEUE
17B0   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02152                 count = count + 1
17B1   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17B2   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B3   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17B4   0080           02150                 movwf INDF                                              ;Save to QUEUE
17B5   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02152                 count = count + 1
17B6   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B7   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B8   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17B9   0080           02150                 movwf INDF                                              ;Save to QUEUE
17BA   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02152                 count = count + 1
17BB   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BC   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BD   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17BE   0080           02150                 movwf INDF                                              ;Save to QUEUE
17BF   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02152                 count = count + 1
17C0   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C1   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C2   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17C3   0080           02150                 movwf INDF                                              ;Save to QUEUE
17C4   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02152                 count = count + 1
17C5   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C6   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C7   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17C8   0080           02150                 movwf INDF                                              ;Save to QUEUE
17C9   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02152                 count = count + 1
17CA   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CB   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CC   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17CD   0080           02150                 movwf INDF                                              ;Save to QUEUE
17CE   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02152                 count = count + 1
17CF   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D0   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D1   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17D2   0080           02150                 movwf INDF                                              ;Save to QUEUE
17D3   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02152                 count = count + 1
17D4   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D5   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D6   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17D7   0080           02150                 movwf INDF                                              ;Save to QUEUE
17D8   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02152                 count = count + 1
17D9   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DA   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17DB   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17DC   0080           02150                 movwf INDF                                              ;Save to QUEUE
17DD   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02152                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17DE   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DF   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E0   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17E1   0080           02150                 movwf INDF                                              ;Save to QUEUE
17E2   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02152                 count = count + 1
17E3   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E4   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E5   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17E6   0080           02150                 movwf INDF                                              ;Save to QUEUE
17E7   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02152                 count = count + 1
17E8   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E9   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EA   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17EB   0080           02150                 movwf INDF                                              ;Save to QUEUE
17EC   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02152                 count = count + 1
17ED   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EE   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EF   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17F0   0080           02150                 movwf INDF                                              ;Save to QUEUE
17F1   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02152                 count = count + 1
17F2   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F3   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F4   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17F5   0080           02150                 movwf INDF                                              ;Save to QUEUE
17F6   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02152                 count = count + 1
17F7   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F8   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F9   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17FA   0080           02150                 movwf INDF                                              ;Save to QUEUE
17FB   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02152                 count = count + 1
17FC   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FD   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FE   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
17FF   0080           02150                 movwf INDF                                              ;Save to QUEUE
1800   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02152                 count = count + 1
1801   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1802   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1803   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1804   0080           02150                 movwf INDF                                              ;Save to QUEUE
1805   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02152                 count = count + 1
1806   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1807   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1808   0808           02149                 movf ADC_DATAPORT, W                    ;Sample
1809   0080           02150                 movwf INDF                                              ;Save to QUEUE
180A   0384           02151                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000027            02152                 count = count + 1
                      02153         endw
180B   1409           02154         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
180C   0808           02155         movf ADC_DATAPORT, W                            ;Sample
                      02156         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
180D   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
180E   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
180F   2F05               M         goto SampleRep5MEndC
                      02157         
1810                  02158 SampleRep5MStep3
1810   2811           02159         goto $ + 1
1811   1009           02160         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1812   2813           02161         goto $ + 1
1813   0000           02162         nop
  0000                02163         local count
  00000001            02164         count = 1
                      02165         while count < D'25'
1814   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1815   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1816   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1817   0080           02169                 movwf INDF                                              ;Save to QUEUE
1818   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02171                 count = count + 1
1819   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181A   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181B   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
181C   0080           02169                 movwf INDF                                              ;Save to QUEUE
181D   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02171                 count = count + 1
181E   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181F   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1820   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1821   0080           02169                 movwf INDF                                              ;Save to QUEUE
1822   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02171                 count = count + 1
1823   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1824   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1825   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1826   0080           02169                 movwf INDF                                              ;Save to QUEUE
1827   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02171                 count = count + 1
1828   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1829   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182A   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

182B   0080           02169                 movwf INDF                                              ;Save to QUEUE
182C   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02171                 count = count + 1
182D   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182E   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182F   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1830   0080           02169                 movwf INDF                                              ;Save to QUEUE
1831   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02171                 count = count + 1
1832   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1833   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1834   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1835   0080           02169                 movwf INDF                                              ;Save to QUEUE
1836   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02171                 count = count + 1
1837   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1838   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1839   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
183A   0080           02169                 movwf INDF                                              ;Save to QUEUE
183B   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02171                 count = count + 1
183C   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183D   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183E   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
183F   0080           02169                 movwf INDF                                              ;Save to QUEUE
1840   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02171                 count = count + 1
1841   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1842   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1843   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1844   0080           02169                 movwf INDF                                              ;Save to QUEUE
1845   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02171                 count = count + 1
1846   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1847   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1848   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1849   0080           02169                 movwf INDF                                              ;Save to QUEUE
184A   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02171                 count = count + 1
184B   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184C   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184D   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
184E   0080           02169                 movwf INDF                                              ;Save to QUEUE
184F   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02171                 count = count + 1
1850   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1851   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1852   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1853   0080           02169                 movwf INDF                                              ;Save to QUEUE
1854   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02171                 count = count + 1
1855   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1856   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1857   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1858   0080           02169                 movwf INDF                                              ;Save to QUEUE
1859   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02171                 count = count + 1
185A   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185B   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185C   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
185D   0080           02169                 movwf INDF                                              ;Save to QUEUE
185E   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02171                 count = count + 1
185F   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1860   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1861   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1862   0080           02169                 movwf INDF                                              ;Save to QUEUE
1863   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02171                 count = count + 1
1864   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1865   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1866   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1867   0080           02169                 movwf INDF                                              ;Save to QUEUE
1868   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02171                 count = count + 1
1869   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186A   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186B   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
186C   0080           02169                 movwf INDF                                              ;Save to QUEUE
186D   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02171                 count = count + 1
186E   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186F   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1870   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1871   0080           02169                 movwf INDF                                              ;Save to QUEUE
1872   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02171                 count = count + 1
1873   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1874   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1875   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1876   0080           02169                 movwf INDF                                              ;Save to QUEUE
1877   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02171                 count = count + 1
1878   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1879   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187A   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
187B   0080           02169                 movwf INDF                                              ;Save to QUEUE
187C   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02171                 count = count + 1
187D   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187E   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187F   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1880   0080           02169                 movwf INDF                                              ;Save to QUEUE
1881   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02171                 count = count + 1
1882   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1883   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1884   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
1885   0080           02169                 movwf INDF                                              ;Save to QUEUE
1886   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02171                 count = count + 1
1887   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1888   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1889   0808           02168                 movf ADC_DATAPORT, W                    ;Sample
188A   0080           02169                 movwf INDF                                              ;Save to QUEUE
188B   0384           02170                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02171                 count = count + 1
                      02172         endw
188C   1409           02173         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
188D   1009           02174         bcf ADC_CONTROLPORT, RDD
188E   0808           02175         movf ADC_DATAPORT, W                            ;Sample
188F   0080           02176         movwf INDF
1890   1783           02177         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02178         count = 1
                      02179         while count < D'26'
1891   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1892   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1893   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
1894   0080           02183                 movwf INDF                                              ;Save to QUEUE
1895   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02185                 count = count + 1
1896   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1897   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1898   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
1899   0080           02183                 movwf INDF                                              ;Save to QUEUE
189A   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02185                 count = count + 1
189B   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189C   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189D   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
189E   0080           02183                 movwf INDF                                              ;Save to QUEUE
189F   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02185                 count = count + 1
18A0   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A1   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A2   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18A3   0080           02183                 movwf INDF                                              ;Save to QUEUE
18A4   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02185                 count = count + 1
18A5   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A6   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A7   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18A8   0080           02183                 movwf INDF                                              ;Save to QUEUE
18A9   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02185                 count = count + 1
18AA   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AB   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AC   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18AD   0080           02183                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18AE   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02185                 count = count + 1
18AF   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B0   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B1   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18B2   0080           02183                 movwf INDF                                              ;Save to QUEUE
18B3   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02185                 count = count + 1
18B4   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B5   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B6   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18B7   0080           02183                 movwf INDF                                              ;Save to QUEUE
18B8   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02185                 count = count + 1
18B9   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BA   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BB   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18BC   0080           02183                 movwf INDF                                              ;Save to QUEUE
18BD   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02185                 count = count + 1
18BE   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BF   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C0   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18C1   0080           02183                 movwf INDF                                              ;Save to QUEUE
18C2   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02185                 count = count + 1
18C3   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C4   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C5   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18C6   0080           02183                 movwf INDF                                              ;Save to QUEUE
18C7   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02185                 count = count + 1
18C8   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C9   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CA   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18CB   0080           02183                 movwf INDF                                              ;Save to QUEUE
18CC   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02185                 count = count + 1
18CD   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CE   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CF   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18D0   0080           02183                 movwf INDF                                              ;Save to QUEUE
18D1   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02185                 count = count + 1
18D2   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D3   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D4   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18D5   0080           02183                 movwf INDF                                              ;Save to QUEUE
18D6   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02185                 count = count + 1
18D7   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D8   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D9   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18DA   0080           02183                 movwf INDF                                              ;Save to QUEUE
18DB   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02185                 count = count + 1
18DC   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DD   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DE   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18DF   0080           02183                 movwf INDF                                              ;Save to QUEUE
18E0   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02185                 count = count + 1
18E1   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E2   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E3   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18E4   0080           02183                 movwf INDF                                              ;Save to QUEUE
18E5   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02185                 count = count + 1
18E6   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E7   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E8   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18E9   0080           02183                 movwf INDF                                              ;Save to QUEUE
18EA   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02185                 count = count + 1
18EB   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18EC   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18ED   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18EE   0080           02183                 movwf INDF                                              ;Save to QUEUE
18EF   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02185                 count = count + 1
18F0   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F1   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F2   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18F3   0080           02183                 movwf INDF                                              ;Save to QUEUE
18F4   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02185                 count = count + 1
18F5   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F6   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F7   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18F8   0080           02183                 movwf INDF                                              ;Save to QUEUE
18F9   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02185                 count = count + 1
18FA   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FB   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FC   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
18FD   0080           02183                 movwf INDF                                              ;Save to QUEUE
18FE   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02185                 count = count + 1
18FF   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1900   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1901   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
1902   0080           02183                 movwf INDF                                              ;Save to QUEUE
1903   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02185                 count = count + 1
1904   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1905   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1906   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
1907   0080           02183                 movwf INDF                                              ;Save to QUEUE
1908   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02185                 count = count + 1
1909   1409           02180                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190A   1009           02181                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190B   0808           02182                 movf ADC_DATAPORT, W                    ;Sample
190C   0080           02183                 movwf INDF                                              ;Save to QUEUE
190D   0A84           02184                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02185                 count = count + 1
                      02186         endw
190E   1409           02187         bsf ADC_CONTROLPORT, RDD
190F   0808           02188         movf ADC_DATAPORT, W                            ;Sample
                      02189         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1910   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1911   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1912   2F02               M         goto SampleRep5MEndA
                      02190         
1913                  02191 SampleRep5MStep4
1913   2914           02192         goto $ + 1
1914   0000           02193         nop
1915   1009           02194         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1916   2917           02195         goto $ + 1
1917   0000           02196         nop
  0000                02197         local count
  00000001            02198         count = 1
                      02199         while count < D'38'
1918   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1919   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191A   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
191B   0080           02203                 movwf INDF                                              ;Save to QUEUE
191C   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02205                 count = count + 1
191D   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191E   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191F   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1920   0080           02203                 movwf INDF                                              ;Save to QUEUE
1921   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02205                 count = count + 1
1922   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1923   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1924   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1925   0080           02203                 movwf INDF                                              ;Save to QUEUE
1926   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            02205                 count = count + 1
1927   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1928   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1929   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
192A   0080           02203                 movwf INDF                                              ;Save to QUEUE
192B   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02205                 count = count + 1
192C   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192D   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192E   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
192F   0080           02203                 movwf INDF                                              ;Save to QUEUE
1930   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02205                 count = count + 1
1931   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1932   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1933   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1934   0080           02203                 movwf INDF                                              ;Save to QUEUE
1935   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02205                 count = count + 1
1936   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1937   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1938   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1939   0080           02203                 movwf INDF                                              ;Save to QUEUE
193A   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02205                 count = count + 1
193B   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193C   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193D   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
193E   0080           02203                 movwf INDF                                              ;Save to QUEUE
193F   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02205                 count = count + 1
1940   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1941   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1942   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1943   0080           02203                 movwf INDF                                              ;Save to QUEUE
1944   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02205                 count = count + 1
1945   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1946   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1947   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1948   0080           02203                 movwf INDF                                              ;Save to QUEUE
1949   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02205                 count = count + 1
194A   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194B   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194C   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
194D   0080           02203                 movwf INDF                                              ;Save to QUEUE
194E   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02205                 count = count + 1
194F   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1950   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1951   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1952   0080           02203                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1953   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02205                 count = count + 1
1954   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1955   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1956   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1957   0080           02203                 movwf INDF                                              ;Save to QUEUE
1958   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02205                 count = count + 1
1959   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195A   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195B   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
195C   0080           02203                 movwf INDF                                              ;Save to QUEUE
195D   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02205                 count = count + 1
195E   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195F   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1960   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1961   0080           02203                 movwf INDF                                              ;Save to QUEUE
1962   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02205                 count = count + 1
1963   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1964   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1965   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1966   0080           02203                 movwf INDF                                              ;Save to QUEUE
1967   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02205                 count = count + 1
1968   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1969   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196A   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
196B   0080           02203                 movwf INDF                                              ;Save to QUEUE
196C   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02205                 count = count + 1
196D   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196E   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196F   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1970   0080           02203                 movwf INDF                                              ;Save to QUEUE
1971   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02205                 count = count + 1
1972   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1973   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1974   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1975   0080           02203                 movwf INDF                                              ;Save to QUEUE
1976   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02205                 count = count + 1
1977   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1978   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1979   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
197A   0080           02203                 movwf INDF                                              ;Save to QUEUE
197B   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02205                 count = count + 1
197C   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197D   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197E   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

197F   0080           02203                 movwf INDF                                              ;Save to QUEUE
1980   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02205                 count = count + 1
1981   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1982   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1983   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1984   0080           02203                 movwf INDF                                              ;Save to QUEUE
1985   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02205                 count = count + 1
1986   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1987   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1988   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1989   0080           02203                 movwf INDF                                              ;Save to QUEUE
198A   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02205                 count = count + 1
198B   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198C   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198D   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
198E   0080           02203                 movwf INDF                                              ;Save to QUEUE
198F   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02205                 count = count + 1
1990   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1991   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1992   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1993   0080           02203                 movwf INDF                                              ;Save to QUEUE
1994   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02205                 count = count + 1
1995   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1996   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1997   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
1998   0080           02203                 movwf INDF                                              ;Save to QUEUE
1999   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02205                 count = count + 1
199A   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199B   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199C   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
199D   0080           02203                 movwf INDF                                              ;Save to QUEUE
199E   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02205                 count = count + 1
199F   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A0   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A1   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19A2   0080           02203                 movwf INDF                                              ;Save to QUEUE
19A3   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02205                 count = count + 1
19A4   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A5   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A6   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19A7   0080           02203                 movwf INDF                                              ;Save to QUEUE
19A8   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02205                 count = count + 1
19A9   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AA   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19AB   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19AC   0080           02203                 movwf INDF                                              ;Save to QUEUE
19AD   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02205                 count = count + 1
19AE   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AF   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B0   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19B1   0080           02203                 movwf INDF                                              ;Save to QUEUE
19B2   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02205                 count = count + 1
19B3   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B4   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B5   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19B6   0080           02203                 movwf INDF                                              ;Save to QUEUE
19B7   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02205                 count = count + 1
19B8   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B9   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BA   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19BB   0080           02203                 movwf INDF                                              ;Save to QUEUE
19BC   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02205                 count = count + 1
19BD   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BE   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BF   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19C0   0080           02203                 movwf INDF                                              ;Save to QUEUE
19C1   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02205                 count = count + 1
19C2   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C3   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C4   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19C5   0080           02203                 movwf INDF                                              ;Save to QUEUE
19C6   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02205                 count = count + 1
19C7   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C8   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C9   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19CA   0080           02203                 movwf INDF                                              ;Save to QUEUE
19CB   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02205                 count = count + 1
19CC   1409           02200                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CD   1009           02201                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19CE   0808           02202                 movf ADC_DATAPORT, W                    ;Sample
19CF   0080           02203                 movwf INDF                                              ;Save to QUEUE
19D0   0A84           02204                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02205                 count = count + 1
                      02206         endw
19D1   1409           02207         bsf ADC_CONTROLPORT, RDD
19D2   1009           02208         bcf ADC_CONTROLPORT, RDD
19D3   0808           02209         movf ADC_DATAPORT, W                            ;Sample
19D4   0080           02210         movwf INDF
19D5   1384           02211         bcf FSR, 7                                                      ;goto bank 3
  00000001            02212         count = 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02213         while count < D'13'
19D6   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D7   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D8   0808           02216                 movf ADC_DATAPORT, W
19D9   0080           02217                 movwf INDF                                              ;Save to QUEUE
19DA   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02219                 count = count + 1
19DB   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DC   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DD   0808           02216                 movf ADC_DATAPORT, W
19DE   0080           02217                 movwf INDF                                              ;Save to QUEUE
19DF   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02219                 count = count + 1
19E0   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E1   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E2   0808           02216                 movf ADC_DATAPORT, W
19E3   0080           02217                 movwf INDF                                              ;Save to QUEUE
19E4   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02219                 count = count + 1
19E5   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E6   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E7   0808           02216                 movf ADC_DATAPORT, W
19E8   0080           02217                 movwf INDF                                              ;Save to QUEUE
19E9   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02219                 count = count + 1
19EA   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19EB   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19EC   0808           02216                 movf ADC_DATAPORT, W
19ED   0080           02217                 movwf INDF                                              ;Save to QUEUE
19EE   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02219                 count = count + 1
19EF   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F0   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F1   0808           02216                 movf ADC_DATAPORT, W
19F2   0080           02217                 movwf INDF                                              ;Save to QUEUE
19F3   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02219                 count = count + 1
19F4   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F5   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F6   0808           02216                 movf ADC_DATAPORT, W
19F7   0080           02217                 movwf INDF                                              ;Save to QUEUE
19F8   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02219                 count = count + 1
19F9   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19FA   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19FB   0808           02216                 movf ADC_DATAPORT, W
19FC   0080           02217                 movwf INDF                                              ;Save to QUEUE
19FD   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02219                 count = count + 1
19FE   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19FF   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A00   0808           02216                 movf ADC_DATAPORT, W
1A01   0080           02217                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A02   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02219                 count = count + 1
1A03   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A04   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A05   0808           02216                 movf ADC_DATAPORT, W
1A06   0080           02217                 movwf INDF                                              ;Save to QUEUE
1A07   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02219                 count = count + 1
1A08   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A09   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A0A   0808           02216                 movf ADC_DATAPORT, W
1A0B   0080           02217                 movwf INDF                                              ;Save to QUEUE
1A0C   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02219                 count = count + 1
1A0D   1409           02214                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A0E   1009           02215                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A0F   0808           02216                 movf ADC_DATAPORT, W
1A10   0080           02217                 movwf INDF                                              ;Save to QUEUE
1A11   0384           02218                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02219                 count = count + 1
                      02220         endw
1A12   1409           02221         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1A13   0808           02222         movf ADC_DATAPORT, W                            ;Sample
                      02223         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1A14   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1A15   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1A16   2F05               M         goto SampleRep5MEndC
                      02224 
1A17                  02225 SampleRep5MStep5
1A17   2A18           02226         goto $ + 1
                      02227         if (Sample1MhzEnd & (0x1000))
                      02228                 bsf PCLATH, 4
                      02229         else
1A18   120A           02230                 bcf PCLATH, 4
                      02231         endif
                      02232         if (Sample1MhzEnd & (0x800))
1A19   158A           02233                 bsf PCLATH, 3
                      02234         else
                      02235                 bcf PCLATH, 3
                      02236         endif
1A1A   1009           02237         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1A1B   0000           02238         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1A1C   28E5           02239         goto Sample1MhzEnd
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02240         
                      02241 ;Repetitive sample
                      02242 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02243 ;-----------------------------------------------------------------------------
1A1D                  02244 SampleRep2M
1A1D   301A           02245         movlw high SampleRep2MPickSt
1A1E   008A           02246         movwf PCLATH
1A1F   0879           02247         movf gbl_modetempb, w
1A20   0782           02248         addwf PCL, f
1A21                  02249 SampleRep2MPickSt
                      02250         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
1A21   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
1A22   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A23   2A2A               M         goto SampleRep2MStep1
                      02251         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
1A24   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
1A25   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A26   2C31               M         goto SampleRep2MStep2
                      02252         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
1A27   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1A28   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A29   2E32               M         goto SampleRep2MStep3
1A2A                  02253 SampleRep2MPickEn
1A2A                  02254 SampleRep2MStep1
1A2A   1009           02255         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02256         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1A2B   3020               M     movlw BUFFERMIN
1A2C   0084               M     movwf FSR
1A2D   0000           02257         nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                02258         local count
  00000001            02259         count = 1
                      02260         while count < BUFFERSIZE
1A2E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A2F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A30   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A31   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A32   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A33   0000           02266                 nop
  00000002            02267                 count = count + 1
1A34   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A35   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A36   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A37   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A38   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A39   0000           02266                 nop
  00000003            02267                 count = count + 1
1A3A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A3B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A3D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A3E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A3F   0000           02266                 nop
  00000004            02267                 count = count + 1
1A40   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A41   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A42   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A43   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A44   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A45   0000           02266                 nop
  00000005            02267                 count = count + 1
1A46   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A47   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A48   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A49   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A4A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A4B   0000           02266                 nop
  00000006            02267                 count = count + 1
1A4C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A4D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A50   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A51   0000           02266                 nop
  00000007            02267                 count = count + 1
1A52   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A53   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A54   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A55   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A56   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A57   0000           02266                 nop
  00000008            02267                 count = count + 1
1A58   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A59   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5A   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5B   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A5C   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A5D   0000           02266                 nop
  00000009            02267                 count = count + 1
1A5E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A5F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A60   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A61   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A62   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A63   0000           02266                 nop
  0000000A            02267                 count = count + 1
1A64   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A65   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A66   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A67   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A68   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A69   0000           02266                 nop
  0000000B            02267                 count = count + 1
1A6A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A6B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A6C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A6D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A6E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A6F   0000           02266                 nop
  0000000C            02267                 count = count + 1
1A70   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A71   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A72   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A73   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A74   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A75   0000           02266                 nop
  0000000D            02267                 count = count + 1
1A76   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A77   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A78   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A79   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A7A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A7B   0000           02266                 nop
  0000000E            02267                 count = count + 1
1A7C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A7D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A7E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A7F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A80   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A81   0000           02266                 nop
  0000000F            02267                 count = count + 1
1A82   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A83   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A84   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A85   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A86   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A87   0000           02266                 nop
  00000010            02267                 count = count + 1
1A88   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A89   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A8A   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A8B   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A8C   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A8D   0000           02266                 nop
  00000011            02267                 count = count + 1
1A8E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A8F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A90   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A91   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A92   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A93   0000           02266                 nop
  00000012            02267                 count = count + 1
1A94   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A95   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A96   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A97   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A98   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A99   0000           02266                 nop
  00000013            02267                 count = count + 1
1A9A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1A9B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A9C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A9D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1A9E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1A9F   0000           02266                 nop
  00000014            02267                 count = count + 1
1AA0   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AA1   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA2   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA3   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AA4   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AA5   0000           02266                 nop
  00000015            02267                 count = count + 1
1AA6   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AA7   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA8   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA9   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AAA   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AAB   0000           02266                 nop
  00000016            02267                 count = count + 1
1AAC   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AAD   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AAE   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AAF   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AB0   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AB1   0000           02266                 nop
  00000017            02267                 count = count + 1
1AB2   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AB3   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AB4   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB5   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AB6   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AB7   0000           02266                 nop
  00000018            02267                 count = count + 1
1AB8   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AB9   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ABA   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ABB   0080           02264                 movwf INDF                                              ;Save to QUEUE
1ABC   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1ABD   0000           02266                 nop
  00000019            02267                 count = count + 1
1ABE   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1ABF   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC0   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC1   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AC2   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AC3   0000           02266                 nop
  0000001A            02267                 count = count + 1
1AC4   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AC5   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC6   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC7   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AC8   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AC9   0000           02266                 nop
  0000001B            02267                 count = count + 1
1ACA   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1ACB   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ACC   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ACD   0080           02264                 movwf INDF                                              ;Save to QUEUE
1ACE   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1ACF   0000           02266                 nop
  0000001C            02267                 count = count + 1
1AD0   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AD1   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD2   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD3   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AD4   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AD5   0000           02266                 nop
  0000001D            02267                 count = count + 1
1AD6   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AD7   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD8   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD9   0080           02264                 movwf INDF                                              ;Save to QUEUE
1ADA   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1ADB   0000           02266                 nop
  0000001E            02267                 count = count + 1
1ADC   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1ADD   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ADE   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ADF   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AE0   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AE1   0000           02266                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001F            02267                 count = count + 1
1AE2   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AE3   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE4   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE5   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AE6   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AE7   0000           02266                 nop
  00000020            02267                 count = count + 1
1AE8   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AE9   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEA   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AEB   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AEC   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AED   0000           02266                 nop
  00000021            02267                 count = count + 1
1AEE   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AEF   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF0   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF1   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AF2   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AF3   0000           02266                 nop
  00000022            02267                 count = count + 1
1AF4   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AF5   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF6   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF7   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AF8   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AF9   0000           02266                 nop
  00000023            02267                 count = count + 1
1AFA   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1AFB   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFC   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFD   0080           02264                 movwf INDF                                              ;Save to QUEUE
1AFE   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1AFF   0000           02266                 nop
  00000024            02267                 count = count + 1
1B00   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B01   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B02   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B03   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B04   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B05   0000           02266                 nop
  00000025            02267                 count = count + 1
1B06   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B07   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B08   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B09   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B0A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B0B   0000           02266                 nop
  00000026            02267                 count = count + 1
1B0C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B0D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B0F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B10   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B11   0000           02266                 nop
  00000027            02267                 count = count + 1
1B12   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B13   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B14   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B15   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B16   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B17   0000           02266                 nop
  00000028            02267                 count = count + 1
1B18   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B19   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1A   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1B   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B1C   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B1D   0000           02266                 nop
  00000029            02267                 count = count + 1
1B1E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B1F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B20   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B21   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B22   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B23   0000           02266                 nop
  0000002A            02267                 count = count + 1
1B24   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B25   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B26   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B27   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B28   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B29   0000           02266                 nop
  0000002B            02267                 count = count + 1
1B2A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B2B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B2E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B2F   0000           02266                 nop
  0000002C            02267                 count = count + 1
1B30   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B31   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B32   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B33   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B34   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B35   0000           02266                 nop
  0000002D            02267                 count = count + 1
1B36   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B37   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B38   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B39   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B3A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B3B   0000           02266                 nop
  0000002E            02267                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B3C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B3D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B40   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B41   0000           02266                 nop
  0000002F            02267                 count = count + 1
1B42   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B43   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B44   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B45   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B46   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B47   0000           02266                 nop
  00000030            02267                 count = count + 1
1B48   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B49   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4A   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4B   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B4C   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B4D   0000           02266                 nop
  00000031            02267                 count = count + 1
1B4E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B4F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B50   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B51   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B52   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B53   0000           02266                 nop
  00000032            02267                 count = count + 1
1B54   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B55   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B56   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B57   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B58   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B59   0000           02266                 nop
  00000033            02267                 count = count + 1
1B5A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B5B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B5E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B5F   0000           02266                 nop
  00000034            02267                 count = count + 1
1B60   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B61   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B62   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B63   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B64   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B65   0000           02266                 nop
  00000035            02267                 count = count + 1
1B66   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B67   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B68   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B69   0080           02264                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B6A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B6B   0000           02266                 nop
  00000036            02267                 count = count + 1
1B6C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B6D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B70   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B71   0000           02266                 nop
  00000037            02267                 count = count + 1
1B72   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B73   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B74   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B75   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B76   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B77   0000           02266                 nop
  00000038            02267                 count = count + 1
1B78   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B79   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7A   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7B   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B7C   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B7D   0000           02266                 nop
  00000039            02267                 count = count + 1
1B7E   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B7F   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B80   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B81   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B82   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B83   0000           02266                 nop
  0000003A            02267                 count = count + 1
1B84   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B85   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B86   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B87   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B88   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B89   0000           02266                 nop
  0000003B            02267                 count = count + 1
1B8A   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B8B   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B8C   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B8D   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B8E   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B8F   0000           02266                 nop
  0000003C            02267                 count = count + 1
1B90   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B91   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B92   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B93   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B94   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B95   0000           02266                 nop
  0000003D            02267                 count = count + 1
1B96   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B97   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B98   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B99   0080           02264                 movwf INDF                                              ;Save to QUEUE
1B9A   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1B9B   0000           02266                 nop
  0000003E            02267                 count = count + 1
1B9C   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1B9D   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B9E   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B9F   0080           02264                 movwf INDF                                              ;Save to QUEUE
1BA0   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1BA1   0000           02266                 nop
  0000003F            02267                 count = count + 1
1BA2   0808           02261                 movf ADC_DATAPORT, W                    ;Save Sample
1BA3   1409           02262                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BA4   1009           02263                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BA5   0080           02264                 movwf INDF                                              ;Save to QUEUE
1BA6   0A84           02265                 incf FSR, F                                             ;Increment QUEUE pointer
1BA7   0000           02266                 nop
  00000040            02267                 count = count + 1
                      02268         endw
1BA8   0808           02269         movf ADC_DATAPORT, W
1BA9   1409           02270         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1BAA   1009           02271         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1BAB   0080           02272         movwf INDF
1BAC   1784           02273         bsf FSR, 7                                                      ;goto bank 2
1BAD   0000           02274         nop
  00000001            02275         count = 1
                      02276         while count < D'22'
1BAE   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BAF   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB0   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB1   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BB2   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BB3   0000           02282                 nop
  00000002            02283                 count = count + 1
1BB4   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BB5   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB6   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB7   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BB8   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BB9   0000           02282                 nop
  00000003            02283                 count = count + 1
1BBA   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BBB   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBC   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBD   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BBE   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BBF   0000           02282                 nop
  00000004            02283                 count = count + 1
1BC0   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BC1   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC2   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BC3   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BC4   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BC5   0000           02282                 nop
  00000005            02283                 count = count + 1
1BC6   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BC7   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC8   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC9   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BCA   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BCB   0000           02282                 nop
  00000006            02283                 count = count + 1
1BCC   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BCD   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCE   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCF   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BD0   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BD1   0000           02282                 nop
  00000007            02283                 count = count + 1
1BD2   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BD3   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD4   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD5   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BD6   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BD7   0000           02282                 nop
  00000008            02283                 count = count + 1
1BD8   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BD9   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDA   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDB   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BDC   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BDD   0000           02282                 nop
  00000009            02283                 count = count + 1
1BDE   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BDF   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE0   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE1   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BE2   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BE3   0000           02282                 nop
  0000000A            02283                 count = count + 1
1BE4   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BE5   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE6   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE7   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BE8   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BE9   0000           02282                 nop
  0000000B            02283                 count = count + 1
1BEA   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BEB   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BEC   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BED   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BEE   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BEF   0000           02282                 nop
  0000000C            02283                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BF0   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BF1   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF2   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF3   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BF4   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BF5   0000           02282                 nop
  0000000D            02283                 count = count + 1
1BF6   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BF7   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF8   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF9   0080           02280                 movwf INDF                                              ;Save to QUEUE
1BFA   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1BFB   0000           02282                 nop
  0000000E            02283                 count = count + 1
1BFC   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1BFD   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BFE   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BFF   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C00   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C01   0000           02282                 nop
  0000000F            02283                 count = count + 1
1C02   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C03   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C04   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C05   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C06   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C07   0000           02282                 nop
  00000010            02283                 count = count + 1
1C08   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C09   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C0A   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C0B   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C0C   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C0D   0000           02282                 nop
  00000011            02283                 count = count + 1
1C0E   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C0F   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C10   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C11   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C12   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C13   0000           02282                 nop
  00000012            02283                 count = count + 1
1C14   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C15   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C16   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C17   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C18   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C19   0000           02282                 nop
  00000013            02283                 count = count + 1
1C1A   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C1B   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1C   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1D   0080           02280                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C1E   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C1F   0000           02282                 nop
  00000014            02283                 count = count + 1
1C20   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C21   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C22   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C23   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C24   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C25   0000           02282                 nop
  00000015            02283                 count = count + 1
1C26   0808           02277                 movf ADC_DATAPORT, W                    ;Sample
1C27   1409           02278                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C28   1009           02279                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C29   0080           02280                 movwf INDF                                              ;Save to QUEUE
1C2A   0384           02281                 decf FSR, F                                             ;Increment QUEUE pointer
1C2B   0000           02282                 nop
  00000016            02283                 count = count + 1
                      02284         endw
1C2C   0808           02285         movf ADC_DATAPORT, W                            ;Sample
1C2D   1409           02286         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02287         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1C2E   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1C2F   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1C30   2F05               M         goto SampleRep5MEndC
                      02288 
1C31                  02289 SampleRep2MStep2
1C31   2C32           02290         goto $ + 1                                                      ;Delay 2
1C32   1009           02291         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1C33   2C34           02292         goto $ + 1                                                      ;Wait three cycles
1C34   0000           02293         nop
  0000                02294         local count
  00000001            02295         count = 1
                      02296         while count < D'42'
1C35   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C36   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C37   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C38   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C39   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C3A   0000           02302                 nop
  00000002            02303                 count = count + 1
1C3B   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C3C   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3D   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3E   0080           02300                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C3F   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C40   0000           02302                 nop
  00000003            02303                 count = count + 1
1C41   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C42   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C43   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C44   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C45   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C46   0000           02302                 nop
  00000004            02303                 count = count + 1
1C47   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C48   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C49   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C4A   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C4B   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C4C   0000           02302                 nop
  00000005            02303                 count = count + 1
1C4D   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C4E   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4F   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C50   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C51   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C52   0000           02302                 nop
  00000006            02303                 count = count + 1
1C53   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C54   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C55   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C56   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C57   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C58   0000           02302                 nop
  00000007            02303                 count = count + 1
1C59   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C5A   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5B   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5C   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C5D   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C5E   0000           02302                 nop
  00000008            02303                 count = count + 1
1C5F   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C60   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C61   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C62   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C63   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C64   0000           02302                 nop
  00000009            02303                 count = count + 1
1C65   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C66   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C67   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C68   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C69   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C6A   0000           02302                 nop
  0000000A            02303                 count = count + 1
1C6B   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C6C   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6D   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6E   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C6F   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C70   0000           02302                 nop
  0000000B            02303                 count = count + 1
1C71   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C72   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C73   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C74   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C75   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C76   0000           02302                 nop
  0000000C            02303                 count = count + 1
1C77   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C78   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C79   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7A   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C7B   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C7C   0000           02302                 nop
  0000000D            02303                 count = count + 1
1C7D   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C7E   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7F   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C80   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C81   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C82   0000           02302                 nop
  0000000E            02303                 count = count + 1
1C83   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C84   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C85   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C86   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C87   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C88   0000           02302                 nop
  0000000F            02303                 count = count + 1
1C89   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C8A   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8B   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8C   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C8D   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C8E   0000           02302                 nop
  00000010            02303                 count = count + 1
1C8F   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C90   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C91   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C92   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C93   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1C94   0000           02302                 nop
  00000011            02303                 count = count + 1
1C95   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C96   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C97   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C98   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C99   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C9A   0000           02302                 nop
  00000012            02303                 count = count + 1
1C9B   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1C9C   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9D   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9E   0080           02300                 movwf INDF                                              ;Save to QUEUE
1C9F   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CA0   0000           02302                 nop
  00000013            02303                 count = count + 1
1CA1   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CA2   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA3   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA4   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CA5   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CA6   0000           02302                 nop
  00000014            02303                 count = count + 1
1CA7   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CA8   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA9   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAA   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CAB   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CAC   0000           02302                 nop
  00000015            02303                 count = count + 1
1CAD   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CAE   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAF   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB0   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CB1   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CB2   0000           02302                 nop
  00000016            02303                 count = count + 1
1CB3   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CB4   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB5   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB6   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CB7   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CB8   0000           02302                 nop
  00000017            02303                 count = count + 1
1CB9   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CBA   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBB   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBC   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CBD   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CBE   0000           02302                 nop
  00000018            02303                 count = count + 1
1CBF   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CC0   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC1   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC2   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CC3   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CC4   0000           02302                 nop
  00000019            02303                 count = count + 1
1CC5   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CC6   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CC7   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC8   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CC9   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CCA   0000           02302                 nop
  0000001A            02303                 count = count + 1
1CCB   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CCC   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCD   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCE   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CCF   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CD0   0000           02302                 nop
  0000001B            02303                 count = count + 1
1CD1   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CD2   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD3   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD4   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CD5   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CD6   0000           02302                 nop
  0000001C            02303                 count = count + 1
1CD7   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CD8   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD9   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDA   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CDB   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CDC   0000           02302                 nop
  0000001D            02303                 count = count + 1
1CDD   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CDE   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDF   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE0   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CE1   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CE2   0000           02302                 nop
  0000001E            02303                 count = count + 1
1CE3   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CE4   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE5   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE6   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CE7   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CE8   0000           02302                 nop
  0000001F            02303                 count = count + 1
1CE9   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CEA   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CEB   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEC   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CED   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CEE   0000           02302                 nop
  00000020            02303                 count = count + 1
1CEF   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CF0   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF1   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF2   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CF3   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CF4   0000           02302                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000021            02303                 count = count + 1
1CF5   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CF6   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF7   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF8   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CF9   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1CFA   0000           02302                 nop
  00000022            02303                 count = count + 1
1CFB   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1CFC   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFD   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CFE   0080           02300                 movwf INDF                                              ;Save to QUEUE
1CFF   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D00   0000           02302                 nop
  00000023            02303                 count = count + 1
1D01   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D02   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D03   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D04   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D05   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D06   0000           02302                 nop
  00000024            02303                 count = count + 1
1D07   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D08   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D09   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0A   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D0B   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D0C   0000           02302                 nop
  00000025            02303                 count = count + 1
1D0D   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D0E   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0F   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D10   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D11   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D12   0000           02302                 nop
  00000026            02303                 count = count + 1
1D13   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D14   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D15   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D16   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D17   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D18   0000           02302                 nop
  00000027            02303                 count = count + 1
1D19   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D1A   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1B   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1C   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D1D   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D1E   0000           02302                 nop
  00000028            02303                 count = count + 1
1D1F   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D20   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D21   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D22   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D23   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D24   0000           02302                 nop
  00000029            02303                 count = count + 1
1D25   0808           02297                 movf ADC_DATAPORT, W                    ;Sample
1D26   1409           02298                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D27   1009           02299                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D28   0080           02300                 movwf INDF                                              ;Save to QUEUE
1D29   0384           02301                 decf FSR, F                                             ;Increment QUEUE pointer
1D2A   0000           02302                 nop
  0000002A            02303                 count = count + 1
                      02304         endw
1D2B   0808           02305         movf ADC_DATAPORT, W
1D2C   1409           02306         bsf ADC_CONTROLPORT, RDD
1D2D   1009           02307         bcf ADC_CONTROLPORT, RDD
1D2E   0080           02308         movwf INDF
1D2F   1783           02309         bsf STATUS, IRP                                         ;goto bank 4
1D30   0000           02310         nop
  00000001            02311         count = 1
                      02312         while count < D'43'
1D31   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D32   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D33   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D34   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D35   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D36   0000           02318                 nop
  00000002            02319                 count = count + 1
1D37   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D38   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D39   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3A   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D3B   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D3C   0000           02318                 nop
  00000003            02319                 count = count + 1
1D3D   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D3E   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3F   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D40   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D41   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D42   0000           02318                 nop
  00000004            02319                 count = count + 1
1D43   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D44   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D45   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D46   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D47   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D48   0000           02318                 nop
  00000005            02319                 count = count + 1
1D49   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D4A   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4B   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4C   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D4D   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D4E   0000           02318                 nop
  00000006            02319                 count = count + 1
1D4F   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D50   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D51   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D52   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D53   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D54   0000           02318                 nop
  00000007            02319                 count = count + 1
1D55   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D56   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D57   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D58   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D59   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D5A   0000           02318                 nop
  00000008            02319                 count = count + 1
1D5B   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D5C   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5D   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5E   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D5F   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D60   0000           02318                 nop
  00000009            02319                 count = count + 1
1D61   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D62   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D63   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D64   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D65   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D66   0000           02318                 nop
  0000000A            02319                 count = count + 1
1D67   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D68   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D69   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6A   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D6B   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D6C   0000           02318                 nop
  0000000B            02319                 count = count + 1
1D6D   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D6E   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6F   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D70   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D71   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D72   0000           02318                 nop
  0000000C            02319                 count = count + 1
1D73   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D74   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D75   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D76   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D77   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D78   0000           02318                 nop
  0000000D            02319                 count = count + 1
1D79   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D7A   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D7B   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7C   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D7D   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D7E   0000           02318                 nop
  0000000E            02319                 count = count + 1
1D7F   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D80   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D81   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D82   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D83   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D84   0000           02318                 nop
  0000000F            02319                 count = count + 1
1D85   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D86   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D87   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D88   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D89   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D8A   0000           02318                 nop
  00000010            02319                 count = count + 1
1D8B   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D8C   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8D   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8E   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D8F   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D90   0000           02318                 nop
  00000011            02319                 count = count + 1
1D91   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D92   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D93   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D94   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D95   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D96   0000           02318                 nop
  00000012            02319                 count = count + 1
1D97   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D98   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D99   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9A   0080           02316                 movwf INDF                                              ;Save to QUEUE
1D9B   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1D9C   0000           02318                 nop
  00000013            02319                 count = count + 1
1D9D   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1D9E   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9F   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA0   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DA1   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DA2   0000           02318                 nop
  00000014            02319                 count = count + 1
1DA3   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DA4   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA5   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA6   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DA7   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DA8   0000           02318                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000015            02319                 count = count + 1
1DA9   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DAA   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAB   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAC   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DAD   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DAE   0000           02318                 nop
  00000016            02319                 count = count + 1
1DAF   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DB0   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB1   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB2   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DB3   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DB4   0000           02318                 nop
  00000017            02319                 count = count + 1
1DB5   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DB6   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB7   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB8   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DB9   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DBA   0000           02318                 nop
  00000018            02319                 count = count + 1
1DBB   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DBC   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBD   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBE   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DBF   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DC0   0000           02318                 nop
  00000019            02319                 count = count + 1
1DC1   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DC2   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC3   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC4   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DC5   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DC6   0000           02318                 nop
  0000001A            02319                 count = count + 1
1DC7   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DC8   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC9   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCA   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DCB   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DCC   0000           02318                 nop
  0000001B            02319                 count = count + 1
1DCD   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DCE   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCF   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD0   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DD1   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DD2   0000           02318                 nop
  0000001C            02319                 count = count + 1
1DD3   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DD4   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD5   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DD6   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DD7   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DD8   0000           02318                 nop
  0000001D            02319                 count = count + 1
1DD9   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DDA   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDB   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDC   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DDD   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DDE   0000           02318                 nop
  0000001E            02319                 count = count + 1
1DDF   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DE0   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE1   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE2   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DE3   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DE4   0000           02318                 nop
  0000001F            02319                 count = count + 1
1DE5   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DE6   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE7   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE8   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DE9   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DEA   0000           02318                 nop
  00000020            02319                 count = count + 1
1DEB   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DEC   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DED   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DEE   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DEF   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DF0   0000           02318                 nop
  00000021            02319                 count = count + 1
1DF1   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DF2   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF3   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF4   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DF5   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DF6   0000           02318                 nop
  00000022            02319                 count = count + 1
1DF7   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DF8   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF9   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFA   0080           02316                 movwf INDF                                              ;Save to QUEUE
1DFB   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1DFC   0000           02318                 nop
  00000023            02319                 count = count + 1
1DFD   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1DFE   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFF   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E00   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E01   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E02   0000           02318                 nop
  00000024            02319                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E03   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E04   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E05   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E06   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E07   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E08   0000           02318                 nop
  00000025            02319                 count = count + 1
1E09   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E0A   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E0B   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E0C   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E0D   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E0E   0000           02318                 nop
  00000026            02319                 count = count + 1
1E0F   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E10   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E11   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E12   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E13   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E14   0000           02318                 nop
  00000027            02319                 count = count + 1
1E15   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E16   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E17   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E18   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E19   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E1A   0000           02318                 nop
  00000028            02319                 count = count + 1
1E1B   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E1C   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E1D   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E1E   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E1F   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E20   0000           02318                 nop
  00000029            02319                 count = count + 1
1E21   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E22   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E23   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E24   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E25   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E26   0000           02318                 nop
  0000002A            02319                 count = count + 1
1E27   0808           02313                 movf ADC_DATAPORT, W                    ;Sample
1E28   1409           02314                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E29   1009           02315                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E2A   0080           02316                 movwf INDF                                              ;Save to QUEUE
1E2B   0A84           02317                 incf FSR, F                                             ;Increment QUEUE pointer
1E2C   0000           02318                 nop
  0000002B            02319                 count = count + 1
                      02320         endw
1E2D   0808           02321         movf ADC_DATAPORT, W                            ;Sample
1E2E   1409           02322         bsf ADC_CONTROLPORT, RDD
                      02323         MGOTO SampleRep5MEndA
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (SampleRep5MEndA & (0x1000))
1E2F   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1E30   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1E31   2F02               M         goto SampleRep5MEndA
                      02324 
1E32                  02325 SampleRep2MStep3
1E32   2E33           02326         goto $ + 1                                                      ;Delay 4
                      02327         if (Sample833kEnd & (0x1000))
1E33   160A           02328                 bsf PCLATH, 4
                      02329         else
                      02330                 bcf PCLATH, 4
                      02331         endif
                      02332         if (Sample833kEnd & (0x800))
                      02333                 bsf PCLATH, 3
                      02334         else
1E34   118A           02335                 bcf PCLATH, 3
                      02336         endif
1E35   1009           02337         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1E36   0000           02338         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1E37   2BED           02339         goto Sample833kEnd
                      02340 
                      02341 
                      02342 ;=============================================================================
                      02343 end             ;end of program
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       0000011C
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
ATTNPORT                          00000006
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

BANK0                             00000000
BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1ATTN                           00000006
CH1SEL                            00000001
CH1SELG                           00000004
CH2ATTN                           00000007
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   00000246
ChannelConfStore                  00000255
ConfReceive                       000001FA
ConfReceiveRateOnly               00000217
ConfSend                          00000225
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

DC2B1                             00000005
D_A                               00000005
Delay                             00000111
DelayFive                         0000044A
DelayLoop                         00000112
DelaySeven                        00000449
DelayTwo                          0000044C
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLESTRIPCHART              0000000D
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           000000FB
GetByteB                          000000FD
GetByteC                          00000101
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

GetByteD                          00000105
GetByteE                          00000109
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000052
IntHandler                        00000004
IrqServiceTimer1                  00000121
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              0000007C
MainB                             0000007E
MainSelect                        00000013
MainWTrigB                        0000009E
MainWaitTrig                      0000008B
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

PutByte                           0000010C
PutByteSerial                     0000010C
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000004E0
Sample1MhzEnd                     000008E5
Sample250kA                       000003FA
Sample250kB                       00000411
Sample250kC                       00000428
Sample250kD                       0000043F
Sample417k250k                    000003EA
Sample417kA                       000003FB
Sample417kB                       00000412
Sample417kC                       00000429
Sample417kD                       00000440
Sample417kLoopA                   000003F3
Sample417kLoopB                   0000040A
Sample417kLoopC                   00000421
Sample417kLoopD                   00000438
Sample625k                        000003A7
Sample625kLoopA                   000003AD
Sample625kLoopB                   000003BD
Sample625kLoopC                   000003CD
Sample625kLoopD                   000003DD
Sample833k                        00000FE7
Sample833kEnd                     000013ED
SampleDelayed                     00000299
SampleDelayedLoopA                000002A4
SampleDelayedLoopB                000002BE
SampleDelayedLoopC                000002D8
SampleDelayedLoopD                000002F2
SampleIntDrvn                     00000174
SampleRep2M                       00001A1D
SampleRep2MPickEn                 00001A2A
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2MPickSt                 00001A21
SampleRep2MStep1                  00001A2A
SampleRep2MStep2                  00001C31
SampleRep2MStep3                  00001E32
SampleRep5M                       000015EA
SampleRep5MEndA                   00001702
SampleRep5MEndB                   00001707
SampleRep5MEndC                   00001705
SampleRep5MPickEn                 000015FD
SampleRep5MPickSt                 000015EE
SampleRep5MStep1                  000015FD
SampleRep5MStep2                  0000170D
SampleRep5MStep3                  00001810
SampleRep5MStep4                  00001913
SampleRep5MStep5                  00001A17
SampleStripChart                  000001F9
SampleXY250k192k                  0000044D
SampleXY250kLA                    0000045C
SampleXY250kLB                    00000480
SampleXY250kLC                    000004A4
SampleXY250kLD                    000004C8
SampleXY417k                      000009E4
SampleXYDelayed                   00000304
SampleXYDelayedLA                 00000316
SampleXYDelayedLB                 0000033E
SampleXYDelayedLC                 00000366
SampleXYDelayedLD                 0000038E
StSample417kLoopB                 0000040F
StSample417kLoopC                 00000426
StSample417kLoopD                 0000043D
StSampleDelayedLoopA              000002A9
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRGCH                             00000003
TRGSRCPORT                        00000005
TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000A9
WaitComm_Break                    000000F3
WaitComm_Conf                     000000DC
WaitComm_Data                     000000AA
WaitComm_Rec                      000000E5
WaitComm_SendDataA                000000B5
WaitComm_SendDataB                000000BF
WaitComm_SendDataC                000000C9
WaitComm_SendDataD                000000D3
WaitComm_SendDataExit             000000D9
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000068
b0_sampleAddr                     00000066
b0_sampleBank                     00000067
b0_triggerChannel                 00000064
b0_triggerDelay0                  00000060
b0_triggerDelay1                  00000061
b0_triggerDelay2                  00000062
b0_triggerDelay3                  00000063
b0_triggerLevel                   00000065
b0_unused0                        0000006F
b0_unused1                        0000006E
b0_unused2                        0000006D
b0_unused3                        0000006C
b0_unused4                        0000006B
b0_unused5                        0000006A
b0_unused6                        00000069
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
b1_unusedD                        000000E2
b1_unusedE                        000000E1
b1_unusedF                        000000E0
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused10                       0000011F
b2_unused11                       0000011E
b2_unused12                       0000011D
b2_unused13                       0000011C
b2_unused14                       0000011B
b2_unused15                       0000011A
b2_unused16                       00000119
b2_unused17                       00000118
b2_unused18                       00000117
b2_unused19                       00000116
b2_unused1A                       00000115
b2_unused1B                       00000114
b2_unused1C                       00000113
b2_unused1D                       00000112
b2_unused1E                       00000111
b2_unused1F                       00000110
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused10                       0000019F
b3_unused11                       0000019E
b3_unused12                       0000019D
b3_unused13                       0000019C
b3_unused14                       0000019B
b3_unused15                       0000019A
b3_unused16                       00000199
b3_unused17                       00000198
b3_unused18                       00000197
b3_unused19                       00000196
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

b3_unused1A                       00000195
b3_unused1B                       00000194
b3_unused1C                       00000193
b3_unused1D                       00000192
b3_unused1E                       00000191
b3_unused1F                       00000190
b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000074
gbl_cntrb                         00000075
gbl_cntrc                         00000076
gbl_cntrd                         00000077
gbl_configLoc1                    00000070
gbl_dataConfig                    0000007B
gbl_modetemp                      00000078
gbl_modetempb                     00000079
gbl_sampleCntr                    0000007E
gbl_sampleRate0                   00000071
gbl_sampleRate1                   00000072
gbl_sampleRate2                   00000073
gbl_spdata                        0000007A
gbl_status_temp                   0000007D
gbl_unused0                       0000007F
gbl_w_temp                        0000007C
ih_1                              0000000A
ih_2                              00000044
ih_3                              0000004D
irqst1_1                          00000163
irqst1_2                          00000165
irqst1_3                          0000016F
sid_Exit                          000001EE
sid_GetByte                       0000018B
sid_GetByteB                      00000193
sid_GetByteC                      00000197
sid_GetByteD                      0000019B
sid_GetByteE                      0000019F
sid_WaitComm_Break                000001E6
sid_WaitComm_Conf                 000001D4
sid_WaitComm_Data                 000001A1
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

sid_WaitComm_Rec                  000001DD
sid_WaitComm_SendDataA            000001AD
sid_WaitComm_SendDataB            000001B7
sid_WaitComm_SendDataC            000001C1
sid_WaitComm_SendDataD            000001CB
sid_WaitComm_SendDataExit         000001D1
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 221


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 222


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   1-30-2013  23:44:33         PAGE 223


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXX--------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7736
Program Memory Words Free:   456


Errors   :     0
Warnings :     0 reported,  1139 suppressed
Messages :    18 reported,    26 suppressed

