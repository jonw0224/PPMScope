MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;       20120927.1 - by PM
                      00071 ;               Begin adding sampling/sending methodology for a Strip Chart mode.
                      00072 ;       20120929.1 -
                      00073 ;               Incorporated Jonathan Weaver's changes and coding improvements from
                      00074 ;               the DSOscope_A03_20120928b.zip file.
                      00075 ;       20130113.1 - by PM
                      00076 ;               Changes made for Rev A03 hardware to support selection reporting bits
                      00077 ;               for the Trigger Channel switch and the Channel 1 and 2 Attenuator switches.
                      00078 ;               Also added timing byte for future slower interrupt driven acquisition
                      00079 ;               support and an added byte for longer trigger delays... Changes will
                      00080 ;               require updates to the PC App code.
                      00081 ;       20130201.1 -
                      00082 ;               Incorporated Jonathan Weaver's changes and code fixes from his
                      00083 ;               DSOscope_A03_20130201_For_Paul.zip file.
                      00084 ;       20130208.1 -
                      00085 ;               Incorporated Jonathan Weaver's code fixes from email on 20130208.
                      00086 ;       20130209.1 - by PM
                      00087 ;               Bit setting changes made to the "Initial" routine to turn on PORTB weak
                      00088 ;               pull-ups for CH1ATTN and CH2ATTN input signals.  This will keep the
                      00089 ;               code compatible with the older Rev A02 hardware that does not have
                      00090 ;               CH1ATTN and CH2ATTN signals.  The on screen GAIN reporting will not
                      00091 ;               reflect the attenuator switch positions on the Rev A02 hardware, but
                      00092 ;               it will keep the bit values constant/consistent and the user can
                      00093 ;               mindfully make the appropriate gain conversions in their head.
                      00094 ;       20130211.1 / 20130302.1 - by PM
                      00095 ;               Started making changes to support a pre-trigger acquisition capability
                      00096 ;               using the interrupt driven sampling technique.
                      00097 ;               The maximum amount of pre-trigger capture is the (sweep-speed/div * 10 div).
                      00098 ;               Use a negatively entered trigger delay value to create a count of
                      00099 ;               samples to take after a trigger event.  This, or something like it,
                      00100 ;               will be left as an exercise to the reader HA HA... eventually some
                      00101 ;               method will need to be decided upon.  For now, we will fake it out.
                      00102 ;               A value of 0xffffffff will indicate that the trigger event is placed at
                      00103 ;               the far right side of the screen. A value of 0xffffffbf will be 25% from
                      00104 ;               the right side of the screen. A value of 0xffffff7f will be the middle of
                      00105 ;               the screen, and likewise up to a value of 0xffffff00 which will be the
                      00106 ;               left side of the screen.
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ;               The interrupt driven sampling mode will free run to continuously
                      00108 ;               acquire samples by just rolling around and around through the PIC's
                      00109 ;               sampling memory buffer.  The negative trigger delay is used to create
                      00110 ;               a "count of samples to acquire after a trigger event happens."  That
                      00111 ;               range being from 0x00 to the maximum memory buffer size.
                      00112 ;               While sampling, and when the trigger event occurs, capture the current
                      00113 ;               store into address & bank and continue to acquire the remaining "count
                      00114 ;               of samples to acquire after a trigger happens."
                      00115 ;               Now, use that saved "trigger event stored into address & bank" value
                      00116 ;               and the desired position for the trigger event to appear on the
                      00117 ;               screen to calculate a value to rotate the PIC memory buffer contents by.
                      00118 ;               The PIC memory buffer contents is then rotated.
                      00119 ;               For this pre-trigger acquistion mode, data will not be sent back to the
                      00120 ;               PC app until the acquistion is totally complete (similar to the current
                      00121 ;               "high speed sampling" methods).  Because the PIC memory buffer contents
                      00122 ;               have been rotated before the data is sent to the PC app, the data
                      00123 ;               will be perfectly aligned and presented from the Pre-Trigger Mode; So,
                      00124 ;               the current display methodolgy in the PC app will just work! We hope!
                      00125 ;       20130401.1 - by PM
                      00126 ;               Pre-trigger acquisition capability is working.  However, there is some
                      00127 ;               annoying jitter on the signal when running in continous sweep mode.
                      00128 ;       20130501.1 - by PM
                      00129 ;               Added code to check for a trigger event occurring during interrupt
                      00130 ;               driven pre-trigger sampling.  This eliminates the annoying
                      00131 ;               jitter that was occurring at the trigger position in pre-trigger mode.
                      00132 ;
                      00133 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00134 ;
                      00135 ;
                      00136 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00137 ;
                      00138 ;This program is free software; you can redistribute it and/or modify it under
                      00139 ;the terms of the GNU General Public License as published by the Free Software
                      00140 ;Foundation; either version 2 of the License, or (at your option) any later
                      00141 ;version.
                      00142 ;
                      00143 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00144 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00145 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00146 ;details.
                      00147 ;
                      00148 ;You should have received a copy of the GNU General Public License along with
                      00149 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00150 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00151 ;
                      00152 ;==============================================================================
                      00153 
                      00154 ;=============================================================================
                      00155 ; C O N F I G U R A T I O N
                      00156 ;=============================================================================
                      00157 
                      00158         LIST P=16F887
                      00159 
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00161 
                      00162 
                      00163 ;*****************************************************
                      00164 ;       === Configuration Word Definitions ===
                      00165 ;*****************************************************
                      00166 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00167 
                      00168 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00169 ; The labels following the directive are located in the respective .inc file.
                      00170 ; See respective data sheet for additional information on configuration word.
                      00171 
2007   20F2           00172         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00173         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00174 
                      00175 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00176 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00177 
2000   0001 0002 0003 00178         __idlocs        0x1234
       0004 
                      00179 
  00000020            00180         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00181 
                      00182 ;=============================================================================
                      00183 ; C O N S T A N T S
                      00184 ;=============================================================================
                      00185 
  00000000            00186 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00187 BANK1                   equ     0x0080
  00000100            00188 BANK2                   equ     0x0100
  00000180            00189 BANK3                   equ     0x0180
                      00190 
  00000020            00191 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00192 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00193                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00194                                                         ;the data points alternate between channel 1 and
                      00195                                                         ;channel 2
  0000005F            00196 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00197 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00198 
                      00199 ;I/O Pin maps
                      00200 ;-----------------------------------------------------------------------------
  00000007            00201         SERIALPORT      set     PORTC
  00000007            00202                 RX              equ     0x07
  00000006            00203                 TX              equ     0x06
                      00204 
  00000009            00205         ADC_CONTROLPORT set     PORTE
  00000000            00206                 RDD             equ     0x00
  00000001            00207                 ADDR0   equ     0x01
                      00208 
  00000006            00209         TRIGGERPORT     set     PORTB
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00210                 TRIGGER equ     0x00
                      00211 
  00000006            00212         ADC_PORT        set     PORTB
  00000003            00213                 ADDR2   equ     0x03
  00000002            00214                 ADDR1   equ     0x02
  00000001            00215                 CS              equ     0x01
                      00216 
  00000008            00217         ADC_DATAPORT    set     PORTD
                      00218 
  00000007            00219         ANALOG_SEL      set     PORTC
  00000001            00220                 CH1SEL  equ     0x01
  00000002            00221                 CH2SEL  equ     0x02
                      00222 
  00000005            00223         ANALOG_GAIN     set     PORTA
  00000000            00224                 GAIN1   equ     0x00
  00000001            00225                 GAIN5   equ     0x01
  00000004            00226                 CH1SELG equ     0x04
  00000005            00227                 CH2SELG equ     0x05
                      00228 
  00000007            00229         ANALOG_ACDC     set     PORTC
  00000000            00230                 ACDCMODE        equ     0x00
                      00231 
  00000006            00232         ATTNPORT        set     PORTB
  00000006            00233                 CH1ATTN equ     0x06
  00000007            00234                 CH2ATTN equ     0x07
                      00235 
  00000005            00236         TRGSRCPORT      set     PORTA
  00000003            00237                 TRGCH   equ     0x03
                      00238 
                      00239 ;Configuration memory map
                      00240 ;-----------------------------------------------------------------------------
                      00241 ;Bit map for gbl_configLoc1
  00000007            00242         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00243         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00244         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00245         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00246         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00247         FREQMODEBIT2            equ     0x02
  00000001            00248         FREQMODEBIT1            equ     0x01
  00000000            00249         FREQMODEBIT0            equ     0x00
                      00250 
                      00251 ;Bit map for gbl_ptStatus
  00000007            00252         RUNNINGBIT                      equ     0x07    ;1 is pre-triggered acquisition is running
  00000006            00253         TRIGGEREDBIT            equ     0x06    ;1 is pre-triggered acquisition is triggered
  00000005            00254         DATAREADYBIT            equ     0x05    ;1 is pre-triggered acquisition data is ready to send
  00000004            00255         PTMEMNEW                        equ     0x04    ;1 is pre-triggered acquisition memory pre-the-t
                            rigger now has new data
  00000003            00256     TEWS                                equ     0x03    ;1 is pre-triggered acquisition had a trigger ev
                            ent while sampling
                      00257 
                      00258 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00259         SAMPLEBANK3                     equ     0x02
  00000003            00260         SAMPLEBANK2                     equ     0x03
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00261         SAMPLEBANK1                     equ     0x01
  00000000            00262         SAMPLEBANK0                     equ     0x00
                      00263 
                      00264 ;Table of frequency modes, 0 to 15
  00000000            00265         FREQSAMPLE1M            equ     D'0'
  00000001            00266         FREQSAMPLE833K          equ     D'1'
  00000002            00267         FREQSAMPLE625K          equ     D'2'
  00000003            00268         FREQSAMPLE417K          equ     D'3'
  00000004            00269         FREQSAMPLE250K          equ     D'4'
  00000005            00270         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00271         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00272         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00273         FREQSAMPLEXY417K        equ     D'8'
  00000009            00274         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00275         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00276         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00277         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
  0000000D            00278         FREQSAMPLESTRIPCHART equ D'13'  ;Interrupt Driven Strip Chart Mode
                      00279 
                      00280 
                      00281 ;=============================================================================
                      00282 ; V A R I A B L E S
                      00283 ;=============================================================================
                      00284 
                      00285         ;Global General Purpose Registers, accessible anywhere
                      00286 CBLOCK  0x70
  00000070            00287         gbl_configLoc1                  ;Configuration mode
  00000071            00288         gbl_sampleRate0                 ;sample rate delay extender byte for interrupt driven sampling
  00000072            00289         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000073            00290         gbl_sampleRate2
  00000074            00291         gbl_cntra                               ;general use counter
  00000075            00292         gbl_cntrb                               ;second counter
  00000076            00293         gbl_cntrc                               ;third counter
  00000077            00294         gbl_cntrd                               ;fourth counter
  00000078            00295         gbl_modetemp                    ;temporary mode variable
  00000079            00296         gbl_modetempb                   ;temporary mode for repetitive sampling
  0000007A            00297         gbl_spdata                              ;data to/from serial port
  0000007B            00298         gbl_dataConfig                  ;the data configuration
  0000007C            00299         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007D            00300         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007E            00301         gbl_sampleCntr                  ;temporary variable for counting interrupts for extended "slow m
                            ode" interrupt sampling
  0000007F            00302         gbl_ptStatus                    ;pre-trigger acquistion status
                      00303 ENDC
                      00304 
                      00305         ;Bank0 General Purpose Registers
                      00306 CBLOCK  0x60
  00000060            00307         b0_triggerDelay0                ;trigger delay (4 bytes)
  00000061            00308         b0_triggerDelay1                
  00000062            00309         b0_triggerDelay2
  00000063            00310         b0_triggerDelay3
  00000064            00311         b0_triggerChannel               ;the trigger channel
  00000065            00312         b0_triggerLevel                 ;the trigger level
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000066            00313         b0_sampleAddr                   ;address to store ADC sampled value
  00000067            00314         b0_sampleBank                   ;bank to store ADC sampled value
  00000068            00315         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000069            00316         b0_ptPtSampleCntr               ;pre-trigger acquisition's post trigger sample counter
  0000006A            00317         b0_ptTriggerAddr                ;sample's storage address when pre-trigger's trigger happens
  0000006B            00318         b0_ptTriggerBank                ;sample's storage bank when pre-trigger's trigger happens
  0000006C            00319         b0_ptPlaceTriggerHere   ;place trigger (0xfe = right side, 0x00 = left side, in 0x02 increments)
  0000006D            00320         b0_ptRotationCntr               ;sample memory rotation counter
  0000006E            00321         b0_ptFsrTemp                    ;2nd level of fsr temp storage for pre-trigger
  0000006F            00322         b0_ptTemp0                              ;temporary storage
                      00323 ENDC
                      00324 
                      00325         ;Bank1 General Purpose Registers
                      00326 CBLOCK  0xE0
  000000E0            00327         b1_ptFlushCntr                  ;pre-trigger flush memory counter
  000000E1            00328         b1_unusedE
  000000E2            00329         b1_unusedD
  000000E3            00330         b1_unusedC
  000000E4            00331         b1_unusedB
  000000E5            00332         b1_unusedA
  000000E6            00333         b1_unused9
  000000E7            00334         b1_unused8
  000000E8            00335         b1_unused7
  000000E9            00336         b1_unused6
  000000EA            00337         b1_unused5
  000000EB            00338         b1_unused4
  000000EC            00339         b1_unused3
  000000ED            00340         b1_unused2
  000000EE            00341         b1_unused1
  000000EF            00342         b1_unused0
                      00343 ENDC
                      00344 
                      00345         ;Bank2 General Purpose Registers
                      00346 CBLOCK  0x110
  00000110            00347         b2_unused1F
  00000111            00348         b2_unused1E
  00000112            00349         b2_unused1D
  00000113            00350         b2_unused1C
  00000114            00351         b2_unused1B
  00000115            00352         b2_unused1A
  00000116            00353         b2_unused19
  00000117            00354         b2_unused18
  00000118            00355         b2_unused17
  00000119            00356         b2_unused16
  0000011A            00357         b2_unused15
  0000011B            00358         b2_unused14
  0000011C            00359         b2_unused13
  0000011D            00360         b2_unused12
  0000011E            00361         b2_unused11
  0000011F            00362         b2_unused10
                      00363 ENDC
                      00364 CBLOCK  0x160
  00000160            00365         b2_unusedF
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000161            00366         b2_unusedE
  00000162            00367         b2_unusedD
  00000163            00368         b2_unusedC
  00000164            00369         b2_unusedB
  00000165            00370         b2_unusedA
  00000166            00371         b2_unused9
  00000167            00372         b2_unused8
  00000168            00373         b2_unused7
  00000169            00374         b2_unused6
  0000016A            00375         b2_unused5
  0000016B            00376         b2_unused4
  0000016C            00377         b2_unused3
  0000016D            00378         b2_unused2
  0000016E            00379         b2_unused1
  0000016F            00380         b2_unused0
                      00381 ENDC
                      00382 
                      00383         ;Bank3 General Purpose Registers
                      00384 CBLOCK  0x190
  00000190            00385         b3_unused1F
  00000191            00386         b3_unused1E
  00000192            00387         b3_unused1D
  00000193            00388         b3_unused1C
  00000194            00389         b3_unused1B
  00000195            00390         b3_unused1A
  00000196            00391         b3_unused19
  00000197            00392         b3_unused18
  00000198            00393         b3_unused17
  00000199            00394         b3_unused16
  0000019A            00395         b3_unused15
  0000019B            00396         b3_unused14
  0000019C            00397         b3_unused13
  0000019D            00398         b3_unused12
  0000019E            00399         b3_unused11
  0000019F            00400         b3_unused10
                      00401 ENDC
                      00402 CBLOCK  0x1E0
  000001E0            00403         b3_unusedF
  000001E1            00404         b3_unusedE
  000001E2            00405         b3_unusedD
  000001E3            00406         b3_unusedC
  000001E4            00407         b3_unusedB
  000001E5            00408         b3_unusedA
  000001E6            00409         b3_unused9
  000001E7            00410         b3_unused8
  000001E8            00411         b3_unused7
  000001E9            00412         b3_unused6
  000001EA            00413         b3_unused5
  000001EB            00414         b3_unused4
  000001EC            00415         b3_unused3
  000001ED            00416         b3_unused2
  000001EE            00417         b3_unused1
  000001EF            00418         b3_unused0
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00419 ENDC
                      00420 
                      00421 ;=============================================================================
                      00422 ; I N C L U D E S
                      00423 ;=============================================================================
                      00424         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00425         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00426         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00427 
                      00428 
                      00429 ;=============================================================================
                      00430 ; M A C R O S
                      00431 ;=============================================================================
                      00432 
                      00433 MGOTO macro address
                      00434         if (address & (0x1000))
                      00435                 bsf PCLATH, 4
                      00436         else
                      00437                 bcf PCLATH, 4
                      00438         endif
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00439         if (address & (0x800))
                      00440                 bsf PCLATH, 3
                      00441         else
                      00442                 bcf PCLATH, 3
                      00443         endif
                      00444         goto address
                      00445         endm
                      00446 
                      00447 
                      00448 
                      00449 
                      00450 ;=============================================================================
                      00451 ; I N T E R R U P T S
                      00452 ;=============================================================================
                      00453 
0000                  00454 org 0x0000      ;Reset Vector
                      00455 ;First three lines of initialization included here to save on memory.
                      00456         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00457         clrf ADC_DATAPORT
0003   285D           00458         goto Initial
                      00459 
0004                  00460 org 0x0004      ;Interrupt Vector
0004                  00461 IntHandler
                      00462         ;Save the current state
0004   00FC           00463     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00464         swapf   STATUS,W                                        ;Move status register into W register
0006   00FD           00465         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00466 
                      00467         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00468         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00469         ; the interrupt is truly enabled before acting on the flag state.
0007   1E0B           00470         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   284F           00471                 goto ih_2
0009   1C8B           00472         btfss   INTCON, INTF                            ;Check for a trigger interrupt
000A   284F           00473                 goto ih_2
000B   120B           00474         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00475                                                                                 ; for the duration of th
                            e acquisition (or the rest of the
                      00476                                                                                 ; acquisition in the cas
                            e of Pre_Trigger acquisition)
                      00477 
000C   1BFF           00478         btfsc   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are doing Pre-Trigger Sampling
000D   2848           00479                 goto ih_pt                                              ;Jump if we are doing Pre-Trigge
                            r Sampling
                      00480 
000E                  00481 ih_1
000E   0BF4           00482         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0x0101010
                            1 implies minimum delay
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F   280E           00483                 goto ih_1
0010   0BF5           00484         decfsz gbl_cntrb, f
0011   280E           00485                 goto ih_1
0012   0BF6           00486         decfsz gbl_cntrc, f
0013   280E           00487                 goto ih_1
0014   0BF7           00488         decfsz gbl_cntrd, f
0015   280E           00489                 goto ih_1
0016   0878           00490         movf gbl_modetemp, w
                      00491 
0017                  00492 MainSelect
0017   0782           00493         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00494         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2D9D               M         goto Sample1M
                      00495         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
001B   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
001D   28A4               M         goto Sample833k
                      00496         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2C64               M         goto Sample625k
                      00497         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2CA7               M         goto Sample417k250k
                      00498         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0024   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
0026   2CA7               M         goto Sample417k250k
                      00499         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0027   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0028   118A               M                 bcf PCLATH, 3
                          M         endif
0029   2B56               M         goto SampleDelayed
                      00500         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
002A   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002B   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002C   2EA7               M         goto SampleRep5M
                      00501         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
002D   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
002E   158A               M                 bsf PCLATH, 3
                          M         else
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002F   2ADA               M         goto SampleRep2M
                      00502         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
0031   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0032   2AA1               M         goto SampleXY417k
                      00503         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2D0A               M         goto SampleXY250k192k
                      00504         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   2D0A               M         goto SampleXY250k192k
                      00505         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   2BC1               M         goto SampleXYDelayed
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00506         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   29CB               M         goto SampleIntDrvn
                      00507         MGOTO Main                                                      ;Invalid FreqMode = 13, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2889               M         goto Main
                      00508         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0042   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0043   118A               M                 bcf PCLATH, 3
                          M         endif
0044   2889               M         goto Main
                      00509         MGOTO Main                                                      ;Invalid FreqMode = 15, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0045   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0046   118A               M                 bcf PCLATH, 3
                          M         endif
0047   2889               M         goto Main
                      00510 
0048                  00511 ih_pt                                                                   ;This is for a "pre-trigger samp
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ling" trigger interrupt
0048   1283 1303      00512         banksel BANK0
004A   0867           00513         movf    b0_sampleBank, W                        ;Capture the current location that the interrupt
                             driven
004B   00EB           00514         movwf   b0_ptTriggerBank                        ; pre-trigger sample is being stored into
004C   0866           00515         movf    b0_sampleAddr, W
004D   00EA           00516         movwf   b0_ptTriggerAddr
004E   177F           00517         bsf             gbl_ptStatus, TRIGGEREDBIT      ;Flag that we have been triggered
                      00518         ;fall through to also check for a timer1 interrupt. May as well try to get two birds with one st
                            one!
                      00519 
004F                  00520 ih_2
004F   1283 1303      00521         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0051   1C0C           00522         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0052   2858           00523                 goto ih_3                                               ;It wasn't, so restore registers
                             and then return from interrupt
0053   1683 1303      00524         banksel BANK1
0055   1C0C           00525         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0056   2858           00526                 goto ih_3
0057   213F           00527         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00528 
0058                  00529 ih_3
                      00530         ;restore previous state 
0058   0E7D           00531     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
0059   0083           00532     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
005A   0EFC           00533     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
005B   0E7C           00534     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
005C   0009           00535     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00536 
                      00537 
                      00538 ;=============================================================================
                      00539 ; M A I N
                      00540 ;=============================================================================
                      00541 ;Initalize for the program
                      00542 ;-----------------------------------------------------------------------------
005D                  00543 Initial
005D   0185           00544         clrf    PORTA
005E   1683 1303      00545         banksel TRISA
                      00546         MOVLF B'11000000', WPUB                         ;Turn on weak pull-ups for CH1ATTN and CH2ATTN i
                            nput signals
0060   30C0               M     movlw B'11000000'
0061   0095               M     movwf WPUB
                      00547         MOVLF B'00011111', TRISA                        ;Configure PORTA
0062   301F               M     movlw B'00011111'
0063   0085               M     movwf TRISA
                      00548         MOVLF B'01000000', OPTION_REG           ;Interrupt on rising edge of RB0 plus enable PORTB's wea
                            k pull-ups
0064   3040               M     movlw B'01000000'
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065   0081               M     movwf OPTION_REG
                      00549         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0066   3010               M     movlw B'00010000'
0067   008B               M     movwf INTCON
                      00550         MOVLF B'11110001', TRISB
0068   30F1               M     movlw B'11110001'
0069   0086               M     movwf TRISB
                      00551         MOVLF B'11111111', TRISD
006A   30FF               M     movlw B'11111111'
006B   0088               M     movwf TRISD
                      00552         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
006C   3004               M     movlw B'00000100'
006D   0089               M     movwf TRISE
                      00553         MOVLF B'10111001', TRISC                        ;Configure PORTC
006E   30B9               M     movlw B'10111001'
006F   0087               M     movwf TRISC
                      00554 
0070   1683 1703      00555         banksel ANSEL                   ;Access bank 3
0072   0188           00556         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0073   0189           00557         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00558 
                      00559         ;Initialize Serial Port
                      00560 
0074   3008           00561         movlw   0x08                    ;Set the Serial Port baud rate generators
0075   0087           00562         movwf   BAUDCTL
0076   1683 1303      00563         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0078   3056           00564         movlw   0x56                    ; for 57.6K baud
0079   0099           00565         movwf   SPBRG
007A   3000           00566         movlw   0x00
007B   009A           00567         movwf   SPBRGH
007C   3024           00568         movlw   0x24                    ;Set the Serial Port Transmitter configuration
007D   0098           00569         movwf   TXSTA
007E   1283 1303      00570         banksel RCSTA                   ;Access bank 0
0080   3090           00571         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0081   0098           00572         movwf   RCSTA
                      00573 
0082   1383           00574         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
                      00575                                                         ; WaitComm_Data takes care of clearing FSR7 bit
0083   019F           00576         clrf    ADCON0                  ;Make sure PIC's ADC is off
0084   3001           00577         movlw   0x01                    ;Initialize the "trigger delay counter" to minimium delay
0085   00F4           00578         movwf   gbl_cntra               ; for the initial case of "RUN" button pushed with the "TRIGGER 
                            OFF"
0086   00F5           00579         movwf   gbl_cntrb               ; selection having been set
0087   00F6           00580         movwf   gbl_cntrc
0088   00F7           00581         movwf   gbl_cntrd
                      00582 
0089                  00583 Main
0089   01FF           00584         clrf    gbl_ptStatus                            ;Clear the pre-trigger status register
008A   01F9           00585         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00586 
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008B   20C6           00587         call    WaitComm                                        ;Call WaitComm and stay there until we h
                            ave
                      00588                                                                                 ; received a "ConfReceiv
                            e" Configuration Information Field
                      00589         
008C                  00590 MainB
008C   1089           00591         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
008D   1A70           00592         btfsc   gbl_configLoc1, CHANNELBIT
008E   1489           00593                 bsf             ADC_CONTROLPORT, ADDR0
                      00594 
                      00595         if (high MainSelect)
                      00596                 movlw   high MainSelect                 ;Prepare for jump
                      00597                 movwf   PCLATH
                      00598         else
008F   018A           00599                 clrf PCLATH
                      00600         endif
                      00601 
0090   0870           00602         movf    gbl_configLoc1, w                       ;Put configuration in WREG
0091   390F           00603         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
0092   00F8           00604         movwf   gbl_modetemp                            ;Multiply by 3
0093   1003           00605         bcf             STATUS, C
0094   0DF8           00606         rlf             gbl_modetemp, f
0095   0778           00607         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0096   1086           00608         bcf             ADC_PORT, CS                            ;Select MAX118
0097   1F70           00609         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
0098   2817           00610                 goto MainSelect
0099                  00611 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0099   00F8           00612         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
009A   0A63           00613         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
009B   00F4           00614         movwf   gbl_cntra
009C   0A62           00615         incf    b0_triggerDelay2, w     
009D   00F5           00616         movwf   gbl_cntrb
009E   0A61           00617         incf    b0_triggerDelay1, w
009F   00F6           00618         movwf   gbl_cntrc
00A0   0A60           00619         incf    b0_triggerDelay0, w
00A1   00F7           00620         movwf   gbl_cntrd
                      00621 
00A2   1683 1303      00622         banksel OPTION_REG                                      ;Access bank 1
00A4   1301           00623         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
00A5   1BF0           00624         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
00A6   1701           00625                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
00A7   1283 1303      00626         banksel BANK0                                           ;Access bank 0
                      00627 
                      00628                                                                                 ;Check for a negative va
                            lue of the trigger delay
00A9   1FE0           00629         btfss   b0_triggerDelay0, 0x07          ; to determine if we should be doing a pre-trigger acqui
                            sition          ... comment out when testing
00AA   28B8           00630                 goto    MainWTrigB                              ; if it is positive, go wait for the reg
                            ular trigger                            ... comment out when testing
00AB   0863           00631         movf    b0_triggerDelay3, W                     ;Assume that the PC app sends a pre-scaled value
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             of 0xff for right      ... comment out when testing
                      00632                                                                                 ; side, to 0x00 for left
                             side, screen placement of trigger event
                      00633 ;       movlw   0xbf                                            ;Load a fake value of a "negative trigge
                            r delay" (25% from right)       ... uncomment when testing
00AC   39FE           00634         andlw   0xfe                                            ;Make sure it is an even number
00AD   00EC           00635         movwf   b0_ptPlaceTriggerHere           ;Put it into the "place trigger position here" variable
00AE   1683 1303      00636         banksel BANK1
00B0   00E0           00637         movwf   b1_ptFlushCntr                          ;Also put it into the count of samples to take b
                            efore
                      00638                                                                                 ; allowing the trigger t
                            o be enabled. This essentially
                      00639                                                                                 ; flushes the memory of 
                            stale data.
00B1   1283 1303      00640         banksel BANK0
00B3   3AFE           00641         xorlw   0xfe                                            ;Then, invert that, but keep it even, to
                             arrive at a count of
                      00642                                                                                 ; samples to take after 
                            the trigger
00B4   00E9           00643         movwf   b0_ptPtSampleCntr
00B5   17FF           00644         bsf             gbl_ptStatus, RUNNINGBIT        ;Set the pre-trigger acquisition state to runnin
                            g
00B6   0878           00645         movf    gbl_modetemp, W                         ;Restore the freqmode for Mainselect's computed 
                            jump
00B7   2817           00646         goto    MainSelect                                      ; and, start the pre-trigger sampling
                      00647         
                      00648 
00B8                  00649 MainWTrigB
00B8   108B           00650         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
00B9   160B           00651         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
00BA   178B           00652         bsf             INTCON, GIE                                     ;Enable interrupts
00BB                  00653 MainWTrigB_1
00BB   2119           00654         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00655         skipEqLF B'11110011', gbl_spdata        ;message is received
00BC   087A               M         movf gbl_spdata, w
00BD   3AF3               M         xorlw B'11110011'
00BE   1D03               M         btfss STATUS, Z
00BF   28BB           00656                 goto    MainWTrigB_1
00C0   120B           00657         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
00C1   138B           00658         bcf             INTCON, GIE                                     ;Disable interrupts
                      00659         MOVLF B'11011100', gbl_spdata           ;Respond
00C2   30DC               M     movlw B'11011100'
00C3   00FA               M     movwf gbl_spdata
00C4   212A           00660         call    PutByte
00C5   2889           00661         goto    Main                                            ;Abort
                      00662 
                      00663                                                                                 ;Note that the jitter on
                             the interrupt is
                      00664                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00665                                                                                 ;on the PIC running at 2
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            0 MHz
                      00666 
                      00667 ;=============================================================================
                      00668 ; S U B R O U T I N E S
                      00669 ;=============================================================================
                      00670 
                      00671 ;Wait for command from computer and respond accordingly
                      00672 
                      00673         ; Received Commands are:
                      00674         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00675         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00676         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00677         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00678 
                      00679 ;-----------------------------------------------------------------------------
00C6                  00680 WaitComm
00C6   2119           00681         call GetByte                                            ;Wait for receive
                      00682 
00C7                  00683 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00684         skipEqLF B'11111000', gbl_spdata
00C7   087A               M         movf gbl_spdata, w
00C8   3AF8               M         xorlw B'11111000'
00C9   1D03               M         btfss STATUS, Z
00CA   28FA           00685                 goto WaitComm_Conf
                      00686         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00CB   30DC               M     movlw B'11011100'
00CC   00FA               M     movwf gbl_spdata
00CD   212A           00687         call PutByte
                      00688         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue, also clears 
                            FSR7
00CE   3020               M     movlw BUFFERMIN
00CF   0084               M     movwf FSR
                      00689         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00D0   3040               M     movlw BUFFERSIZE
00D1   00F5               M     movwf gbl_cntrb
00D2   1383           00690         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
00D3                  00691 WaitComm_SendDataA
                      00692         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00D3   0800               M     movf INDF, w
00D4   00FA               M     movwf gbl_spdata
00D5   0A84           00693         incf FSR, F                                                     ;Increment pointer
00D6   212A           00694         call PutByte                                            ;Send data
00D7   0BF5           00695         decfsz gbl_cntrb, f
00D8   28D3           00696                 goto WaitComm_SendDataA
                      00697         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00D9   3040               M     movlw BUFFERSIZE
00DA   00F5               M     movwf gbl_cntrb
00DB   1784           00698         bsf FSR, 7                                                      ;Bank 1
00DC   0384           00699         decf FSR, f
00DD                  00700 WaitComm_SendDataB
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00701         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00DD   0800               M     movf INDF, w
00DE   00FA               M     movwf gbl_spdata
00DF   0384           00702         decf FSR, F                                                     ;Increment pointer
00E0   212A           00703         call PutByte                                            ;Send data
00E1   0BF5           00704         decfsz gbl_cntrb, f
00E2   28DD           00705                 goto WaitComm_SendDataB
                      00706         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00E3   3040               M     movlw BUFFERSIZE
00E4   00F5               M     movwf gbl_cntrb
00E5   1783           00707         bsf STATUS, IRP                                         ;Bank 3
00E6   0A84           00708         incf FSR, f
00E7                  00709 WaitComm_SendDataC
                      00710         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00E7   0800               M     movf INDF, w
00E8   00FA               M     movwf gbl_spdata
00E9   0A84           00711         incf FSR, F                                                     ;Increment pointer
00EA   212A           00712         call PutByte                                            ;Send data
00EB   0BF5           00713         decfsz gbl_cntrb, f
00EC   28E7           00714                 goto WaitComm_SendDataC
                      00715         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00ED   3040               M     movlw BUFFERSIZE
00EE   00F5               M     movwf gbl_cntrb
00EF   1384           00716         bcf FSR, 7                                                      ;Bank 2
00F0   0384           00717         decf FSR, f
00F1                  00718 WaitComm_SendDataD
                      00719         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00F1   0800               M     movf INDF, w
00F2   00FA               M     movwf gbl_spdata
00F3   0384           00720         decf FSR, F                                                     ;Increment pointer
00F4   212A           00721         call PutByte                                            ;Send data
00F5   0BF5           00722         decfsz gbl_cntrb, f
00F6   28F1           00723                 goto WaitComm_SendDataD
00F7                  00724 WaitComm_SendDataExit
00F7   1383           00725         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
00F8   2303           00726         call    ChannelConfSend
00F9   28C6           00727         goto    WaitComm
                      00728 
00FA                  00729 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00730         skipEqLF B'11111001', gbl_spdata
00FA   087A               M         movf gbl_spdata, w
00FB   3AF9               M         xorlw B'11111001'
00FC   1D03               M         btfss STATUS, Z
00FD   2903           00731                 goto WaitComm_Rec
                      00732         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00FE   30DD               M     movlw B'11011101'
00FF   00FA               M     movwf gbl_spdata
0100   212A           00733         call    PutByte
0101   22E2           00734         call    ConfSend
0102   28C6           00735         goto    WaitComm
                      00736 
0103                  00737 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            A" (250) *****
                      00738         skipEqLF B'11111010', gbl_spdata
0103   087A               M         movf gbl_spdata, w
0104   3AFA               M         xorlw B'11111010'
0105   1D03               M         btfss STATUS, Z
0106   2911           00739                 goto WaitComm_Break
                      00740         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
0107   30DE               M     movlw B'11011110'
0108   00FA               M     movwf gbl_spdata
0109   212A           00741         call    PutByte
010A   22B6           00742         call    ConfReceive
010B   3001           00743         movlw   0x01                                            ;Set counters to 0x01010101 for the case
                             of
010C   00F4           00744         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
010D   00F5           00745         movwf   gbl_cntrb
010E   00F6           00746         movwf   gbl_cntrc
010F   00F7           00747         movwf   gbl_cntrd
0110   0008           00748         return
                      00749 
0111                  00750 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00751         skipEqLF B'11110011', gbl_spdata
0111   087A               M         movf gbl_spdata, w
0112   3AF3               M         xorlw B'11110011'
0113   1D03               M         btfss STATUS, Z
0114   28C6           00752                 goto WaitComm                                   ;No valid message sent
                      00753         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
0115   30DC               M     movlw B'11011100'
0116   00FA               M     movwf gbl_spdata
0117   212A           00754         call    PutByte
0118   28C6           00755         goto    WaitComm
                      00756 
                      00757 
                      00758 
                      00759 ;GetByte is used to receive a byte on the serial port
                      00760 ;------------------------------------------------------------------------------
0119                  00761 GetByte
0119   1E8C           00762         btfss PIR1, RCIF                        
011A   2919           00763                 goto GetByte
011B                  00764 GetByteB
011B   1D18           00765         btfss RCSTA, FERR                                       ;Handle the frame error
011C   291F           00766                 goto GetByteC
011D   081A           00767         movf RCREG, w                                           ;Throw away data with errors
011E   2919           00768         goto GetByte
011F                  00769 GetByteC
011F   1C98           00770         btfss RCSTA, OERR                                       ;Handle the over run error
0120   2927           00771                 goto GetByteE
0121   1218           00772         bcf RCSTA, CREN                                         ;Reset the receive logic
0122   1618           00773         bsf RCSTA, CREN
0123                  00774 GetByteD
0123   081A           00775         movf RCREG, w                                           ;Throw away data with errors
0124   1A8C           00776         btfsc PIR1, RCIF
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0125   2923           00777                 goto GetByteD
0126   2919           00778         goto GetByte
0127                  00779 GetByteE                                                                ;No errors if we got here       
                      00780         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0127   081A               M     movf RCREG, w
0128   00FA               M     movwf gbl_spdata
0129   3400           00781         retlw 0
                      00782         
                      00783 ;PutByte is used to put a byte on the serial port
                      00784 ;------------------------------------------------------------------------------
012A                  00785 PutByte
012A                  00786 PutByteSerial
012A   1E0C           00787         btfss PIR1, TXIF
012B   292A           00788                 goto PutByteSerial
                      00789         MOVFF gbl_spdata, TXREG
012C   087A               M     movf gbl_spdata, w
012D   0099               M     movwf TXREG
012E   3400           00790         retlw 0
                      00791 
                      00792 ;Delay used to adjust sample rate
                      00793 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00794 ;statement)
                      00795 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00796 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00797 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00798 ;-----------------------------------------------------------------------------
012F                  00799 Delay
012F   3001           00800         movlw 0x01
0130                  00801 DelayLoop
0130   02F4           00802         subwf gbl_cntra, F
0131   1C03           00803         btfss STATUS, C
0132   02F5           00804                 subwf gbl_cntrb, F
0133   08F4           00805         movf gbl_cntra, F
                      00806         skipZero
0134   1D03               M         btfss STATUS, Z
0135   2930           00807                 goto DelayLoop
0136   08F5           00808         movf gbl_cntrb, F
                      00809         skipZero
0137   1D03               M         btfss STATUS, Z
0138   2930           00810                 goto DelayLoop
0139   0008           00811         return
                      00812 
                      00813 ;ADCShutdown, shutsdown the MAX118
                      00814 ;-----------------------------------------------------------------------------
013A                  00815 ADCShutdown
013A   0080           00816         movwf   INDF                                            ;Save to QUEUE
013B   1486           00817         bsf             ADC_PORT, CS                            ;Unselect MAX118
013C   1383           00818         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
013D   2312           00819         call    ChannelConfStore
013E   2889           00820         goto Main
                      00821 
                      00822 ;=============================================================================
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00823 ;*****************************************************************************
                      00824 ;=============================================================================
                      00825 
                      00826 ;Interrupt Driven Sampling with Command Responder
                      00827 ;This code section consists of three routines:
                      00828 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00829 ; (2) A looping routine that responds to PC commands while we are waiting for
                      00830 ;               sampling interrupts
                      00831 ; (3) A routine to rotate the acquired sample memory to align it for proper
                      00832 ;               pre-trigger display
                      00833 
                      00834 ;Jonathan Weaver: Measurements from simulation (9/27/2012 and 9/28/2012)
                      00835 ;Interrupt to the first sample = 103 cycles using minimum delay
                      00836 ;Sampling rate = 5000000/(8*SAMPLERATE1:SAMPLERATE2+35) with 20 MHz clock
                      00837 ;Minimum value for SAMPLERATE1:SAMPLERATE2 ~= 20 
                      00838 ;(around 140 cycles to execute the timer1 interrupt.  Added some time for
                      00839 ;processing the serial port.)
                      00840 ;Maximum sample rate (at SAMPLERATE1:SAMPLERATE2 = 20) is 25,641 Hz.
                      00841 ;Waveform completion at that sample rate is 100 times per second
                      00842 ;Maximum communication rate is 5,670 bytes per second or 22 waveforms per second
                      00843 ;using the serial interface.
                      00844 
                      00845 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00846 ; when it rolls over to 0x0000, the interrupt is generated.
                      00847 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00848 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00849 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00850 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00851 ;-----------------------------------------------------------------------------
                      00852 
013F                  00853 IrqServiceTimer1
                      00854         ;reload timer for next interrupt and clear the interrupt flag
                      00855         ;sample ADC and store into appropriate location
                      00856         ;increment location and maybe the bank to store into for next time around
                      00857         ;turn off interrupt if done acquiring
                      00858         ;return from call
013F   1283 1303      00859         banksel BANK0
0141   1010           00860         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0142   0972           00861         comf    gbl_sampleRate1, W
0143   008F           00862         movwf   TMR1H
0144   0973           00863         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
0145   008E           00864         movwf   TMR1L
0146   100C           00865         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0147   1410           00866         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
                      00867 
0148   0BFE           00868         decfsz gbl_sampleCntr, f                        ;Implement the longer sample delay, only sample 
                            when sampleCntr is zero
0149   0008           00869                 return
014A   0A71           00870         incf    gbl_sampleRate0, w                      ;Restore sampleCntr using sampleRate0 (MSB)
014B   00FE           00871         movwf   gbl_sampleCntr
                      00872 
014C   0000           00873         nop
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014D   0804           00874         movf    FSR, W                                          ;Save the current FSR
014E   00E8           00875         movwf   b0_fsr_temp
                      00876                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
014F   0866           00877         movf b0_sampleAddr, W
0150   0084           00878         movwf FSR
                      00879         ;Assume indirect bank0
0151   1383           00880         bcf STATUS, IRP
0152   1384           00881         bcf FSR, 7
                      00882         ;Set indirect bank1 if needed
0153   18E7           00883         btfsc b0_sampleBank, SAMPLEBANK1
0154   1784           00884         bsf FSR, 7
                      00885         ;Set indirect bank2 if needed
0155   19E7           00886     btfsc b0_sampleBank, SAMPLEBANK2
0156   1783           00887         bsf STATUS, IRP
                      00888     ;Set indirect bank3 if needed
0157   1967           00889     btfsc b0_sampleBank, SAMPLEBANK3
0158   1784           00890         bsf FSR, 7
0159   1967           00891     btfsc b0_sampleBank, SAMPLEBANK3
015A   1783           00892         bsf STATUS, IRP
                      00893 
015B   1089           00894         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
015C   1009           00895         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
                      00896 ;--Start jitter reduction fix--
                      00897 ;       goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
                      00898 ;       goto    $+1
                      00899 ;       nop
                      00900 
                      00901         ;The following check is to used to eliminate the jitter seen on pre-trigger sampling.
                      00902     ; Without this check, a trigger event happening while we are already servicing
                      00903         ; a timer interrupt will end up being logged one sample clock late.  With the event
                      00904         ; being logged one sample clock late, the pre-trigger memory will end up being rotated
                      00905         ; one position too far.  This check and flag setting will be used to correct the
                      00906         ; rotation count... Note: this isn't perfect... there will still be a small window hole.
                      00907         ; By doing this check before CH1 is sampled, we are favoring the CH0 trigger for best
                      00908         ; jitter reduction.
                      00909         ;Check to see if a trigger event happened while sampling, if so set the flag
                      00910         ; Note: this also results in the needed 5 cycle delay that is commented out above
015D   1A0B           00911         btfsc   INTCON, INTE                            ;Trigger interrupt enable
015E   1C8B           00912                 btfss INTCON, INTF                              ;Trigger interrupt flag
015F   2961           00913         goto    irqst1_0                                        ;Jump if there was no trigger event whil
                            e sampling
0160   15FF           00914         bsf     gbl_ptStatus, TEWS                              ;Flag that there was a trigger event whi
                            le sampling
0161                  00915 irqst1_0
0161   0000           00916         nop
                      00917 ;--End jitter reduction fix--
                      00918 
0162   0808           00919         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0163   1409           00920         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0164   1489           00921         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
0165   1009           00922         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0166   0080           00923         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
0167   1867           00924     btfsc b0_sampleBank, SAMPLEBANK0    ;Increment acquistion memory pointer if Bank0
0168   0A84           00925         incf    FSR, F                                          
0169   18E7           00926     btfsc b0_sampleBank, SAMPLEBANK1    ;Decrement memory pointer if Bank1
016A   0384           00927         decf FSR, F
016B   0808           00928         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
016C   1409           00929         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
016D   19E7           00930     btfsc b0_sampleBank, SAMPLEBANK2    ;Decrement memory pointer if Bank2
016E   0384           00931         decf FSR, F
016F   1967           00932         btfsc b0_sampleBank, SAMPLEBANK3    ;Increment memory pointer if Bank3
0170   0A84           00933                 incf FSR, F
0171   0080           00934         movwf   INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00935 
0172   3002           00936         movlw 0x02                                                      ;Prepare to increment sampleAddr
                             by 2
0173   18E7           00937         btfsc b0_sampleBank, SAMPLEBANK1        ;If BANK1, prepare to decrement sampleAddr by 2
0174   30FE           00938                 movlw (0x00 - 0x02)
0175   19E7           00939         btfsc b0_sampleBank, SAMPLEBANK2        ;If BANK2, prepare to decrement sampleAddr by 2
0176   30FE           00940                 movlw (0x00 - 0x02)
0177   07E6           00941         addwf b0_sampleAddr, F
0178   301F           00942         movlw BUFFERMIN-1                                       ;Check for filling last aquisition memor
                            y location in bank
0179   0666           00943         xorwf b0_sampleAddr, W
017A   1903           00944         btfsc STATUS, Z
017B   2983           00945                 goto irqst1_1                                   ;Jump, filled last aquisition memory loc
                            ation in bank
                      00946 
017C   3060           00947         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
017D   0666           00948         xorwf   b0_sampleAddr, W
017E   1D03           00949         btfss   STATUS, Z
017F   298D           00950                 goto irqst1_3                                   ;Jump, we are not done filling the curre
                            nt bank
0180   305F           00951         movlw   BUFFERMAX                                       ;Reset the acquisition memory pointer to
                             its END
0181   00E6           00952         movwf   b0_sampleAddr
0182   2985           00953         goto    irqst1_2
                      00954 
0183                  00955 irqst1_1
                      00956     MOVLF BUFFERMIN, b0_sampleAddr              ;Reset the acquisition memory pointer to its BEGINNING
0183   3020               M     movlw BUFFERMIN
0184   00E6               M     movwf b0_sampleAddr
                      00957 
0185                  00958 irqst1_2
0185   1003           00959         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0186   0DE7           00960         rlf     b0_sampleBank, F
0187   1E67           00961         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
0188   298D           00962                 goto irqst1_3                                   ;Not done, so keep going...
0189   1FFF           00963         btfss   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are doing a pre-trigger sampling
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018A   29C0           00964                 goto irqst1_4                                   ;Done with a regular trigger's sampling
018B   01E7           00965         clrf    b0_sampleBank                           ;Pre-trigger sampling, so just set the bank back
                             to zero
018C   1467           00966         bsf             b0_sampleBank, SAMPLEBANK0
                      00967 
                      00968 
018D                  00969 irqst1_3
                      00970                 ;If we are doing pre-trigger sampling
                      00971                 ; check to see if the pre-trigger memory's pre-the-trigger area has been flushed (loaded
                            )
                      00972                 ; with the latest data for this sample run.
                      00973                 ; If it has been, then turn on the trigger interrupt.
018D   1FFF           00974         btfss   gbl_ptStatus, RUNNINGBIT
018E   29C6           00975                 goto irqst1_5
018F   1A7F           00976         btfsc   gbl_ptStatus, PTMEMNEW
0190   299F           00977                 goto irqst1_3_a
0191   1683 1303      00978         banksel BANK1
0193   08E0           00979         movf    b1_ptFlushCntr, F
0194   1903           00980         btfsc   STATUS, Z
0195   167F           00981                 bsf     gbl_ptStatus, PTMEMNEW
0196   03E0           00982         decf    b1_ptFlushCntr, F
0197   03E0           00983         decf    b1_ptFlushCntr, F
0198   1283 1303      00984         banksel BANK0
019A   1E7F           00985         btfss   gbl_ptStatus, PTMEMNEW
019B   299F           00986                 goto irqst1_3_a
019C   108B           00987         bcf             INTCON, INTF
019D   160B           00988         bsf             INTCON, INTE
019E   29C6           00989         goto    irqst1_5
                      00990 
019F                  00991 irqst1_3_a
                      00992                 ;If we are doing pre-trigger sampling AND if we have already seen a trigger, then
                      00993                 ; check to see if the required number of samples after a trigger event has been complete
                            d
                      00994                 ; If it has, then stop the acquisition so we don't overwrite the pre-trigger samples
                      00995 ;       btfss   gbl_ptStatus, RUNNINGBIT
                      00996 ;               goto irqst1_5
019F   1F7F           00997         btfss   gbl_ptStatus, TRIGGEREDBIT
01A0   29C6           00998                 goto irqst1_5
01A1   03E9           00999         decf    b0_ptPtSampleCntr, F
01A2   0BE9           01000         decfsz  b0_ptPtSampleCntr, F
01A3   29C6           01001                 goto irqst1_5
                      01002 
                      01003                 ;Now calculate an amount to rotate the sample memory to align the trigger with
                      01004                 ; its requested position on the screen
                      01005                 ;Convert the captured address/bank of where the trigger event was stored
                      01006                 ; into a meaningful linear address value... Wow is this confusing!  Lets hope we
                      01007                 ; get it right!
                      01008                 ;First account for whether the address was in an incrementing or a decrementing bank
01A4   3020           01009         movlw   BUFFERMIN
01A5   026A           01010         subwf   b0_ptTriggerAddr, W
01A6   18EB           01011         btfsc   b0_ptTriggerBank, SAMPLEBANK1
01A7   3A3F           01012                 xorlw 0x3f
01A8   19EB           01013         btfsc   b0_ptTriggerBank, SAMPLEBANK2
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A9   3A3F           01014                 xorlw 0x3f
                      01015                 ;Now account for the variouos banks
01AA   18EB           01016         btfsc   b0_ptTriggerBank, SAMPLEBANK1
01AB   3E40           01017                 addlw (BUFFERSIZE * 1)
01AC   19EB           01018         btfsc   b0_ptTriggerBank, SAMPLEBANK2
01AD   3EC0           01019                 addlw (BUFFERSIZE * 3)
01AE   196B           01020         btfsc   b0_ptTriggerBank, SAMPLEBANK3
01AF   3E80           01021                 addlw (BUFFERSIZE * 2)
01B0   3EFE           01022         addlw   0xfe                                            ;Subtract 2 from the value to account fo
                            r the post increment
                      01023 ;--Start jitter reduction fix--
01B1   19FF           01024         btfsc   gbl_ptStatus, TEWS                      ;Check if we previously logged a Trigger Event W
                            hile Sampling
01B2   3EFE           01025                 addlw 0xfe                                              ;Subtract 2 to account for the T
                            rigger Event While Sampling
                      01026 ;--End jitter reduction fix--
                      01027                 ;Then calculate out how much rotation is needed to align the trigger event with
                      01028                 ; the requested screen position
01B3   026C           01029         subwf   b0_ptPlaceTriggerHere, W
01B4   39FE           01030         andlw   0xfe                                            ;Make sure it is an even number
01B5   00ED           01031         movwf   b0_ptRotationCntr
                      01032                 ;Now decide whether rotating right or rotating left gets us aligned the quickest
01B6   1FED           01033         btfss   b0_ptRotationCntr, 7
01B7   29BE           01034                 goto irqst1_3_1                                 ;Fastest is to rotate right
01B8   30FE           01035         movlw   0xfe                                            ;Fastest is to rotate left, make some co
                            unter adjustments
01B9   06ED           01036         xorwf   b0_ptRotationCntr, F
01BA   0AED           01037         incf    b0_ptRotationCntr, F
01BB   0AED           01038         incf    b0_ptRotationCntr, F
01BC   2254           01039         call    RotateSampleMemLeft
01BD   29BF           01040         goto    irqst1_3_2
01BE                  01041 irqst1_3_1
01BE   2279           01042         call    RotateSampleMemRight
01BF                  01043 irqst1_3_2
01BF   16FF           01044         bsf             gbl_ptStatus, DATAREADYBIT      ;Set the pre-trigger acquisition's data is now r
                            eady flag
                      01045 
01C0                  01046 irqst1_4
01C0   1010           01047         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
01C1   100C           01048         bcf             PIR1, TMR1IF                            ;Clear the interrupt flag, too
01C2   1683 1303      01049         banksel BANK1
01C4   100C           01050         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
01C5   130B           01051         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
                      01052 
01C6                  01053 irqst1_5
01C6   1283 1303      01054         banksel BANK0
01C8   0868           01055         movf    b0_fsr_temp, W                          ;Restore FSR register
01C9   0084           01056         movwf   FSR
01CA   0008           01057         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      01058                                                                                 ; state and does the ret
                            fie
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01059 
                      01060 
                      01061 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
01CB                  01062 SampleIntDrvn
                      01063         ;Setup the sample write location and sample bank variables
                      01064         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      01065         ;Turn on Timer 1
                      01066         ;Enable the Timer 1 interrupt
01CB   1283 1303      01067         banksel BANK0
01CD   3020           01068         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
01CE   00E6           01069         movwf   b0_sampleAddr
01CF   01E7           01070         clrf    b0_sampleBank                           ;Initialize sample bank pointer
01D0   1467           01071         bsf             b0_sampleBank, SAMPLEBANK0
01D1   1010           01072         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
01D2   1690           01073         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
01D3   1610           01074         bsf             T1CON, T1CKPS0
                      01075 
01D4   3001           01076         movlw   0x01
01D5   00FE           01077         movwf   gbl_sampleCntr                          ;Set the sampleCntr to 1 so it will sample on th
                            e first interrupt
                      01078         
01D6   30FF           01079         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
01D7   008F           01080         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
01D8   008E           01081         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
01D9   100C           01082         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
01DA   1683 1303      01083         banksel BANK1
01DC   140C           01084         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
01DD   1283 1303      01085         banksel BANK0
01DF   170B           01086         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
                      01087 ;       bcf             INTCON, INTF                            ;Last chance clear of the trigger interr
                            upt flag,
                      01088 ;                                                                               ; used for pre-trigger a
                            cquisitions to maximize samples
01E0   1410           01089         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
01E1   178B           01090         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
                      01091 
                      01092 
                      01093         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      01094         ; Received Commands are:
                      01095         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      01096         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      01097         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      01098         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      01099         ;
                      01100         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      01101         ; routine after the sample memory buffer has been fully filled), leave this
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01102         ; routine and go back to Main
                      01103 
01E2                  01104 sid_GetByte
01E2   1683 1303      01105         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
01E4   1C0C           01106         btfss   PIE1, TMR1IE
01E5   2A49           01107                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
01E6   1283 1303      01108         banksel BANK0
01E8   1E8C           01109         btfss   PIR1, RCIF                      
01E9   29E2           01110                 goto sid_GetByte
01EA                  01111 sid_GetByteB
01EA   1D18           01112         btfss   RCSTA, FERR                                     ;Handle the frame error
01EB   29EE           01113                 goto sid_GetByteC
01EC   081A           01114         movf    RCREG, w                                        ;Throw away data with errors
01ED   29E2           01115         goto    sid_GetByte
01EE                  01116 sid_GetByteC
01EE   1C98           01117         btfss   RCSTA, OERR                                     ;Handle the over run error
01EF   29F6           01118                 goto sid_GetByteE
01F0   1218           01119         bcf             RCSTA, CREN                                     ;Reset the receive logic
01F1   1618           01120         bsf             RCSTA, CREN
01F2                  01121 sid_GetByteD
01F2   081A           01122         movf    RCREG, w                                        ;Throw away data with errors
01F3   1A8C           01123         btfsc   PIR1, RCIF
01F4   29F2           01124                 goto sid_GetByteD
01F5   29E2           01125         goto    sid_GetByte
01F6                  01126 sid_GetByteE                                                    ;No errors if we got here       
                      01127         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
01F6   081A               M     movf RCREG, w
01F7   00FA               M     movwf gbl_spdata
                      01128 
01F8   1FFF           01129         btfss   gbl_ptStatus, RUNNINGBIT        ;Check to see if we are/were running a pre-trigger acqui
                            sition
01F9   29FC           01130                 goto sid_WaitComm_Data
01FA   1EFF           01131         btfss   gbl_ptStatus, DATAREADYBIT      ;Check to see if pre-trigger acquisition data is ready
01FB   29E2           01132                 goto sid_GetByte                                ; if not, ignore commands at this time!
                      01133 
01FC                  01134 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      01135         skipEqLF B'11111000', gbl_spdata
01FC   087A               M         movf gbl_spdata, w
01FD   3AF8               M         xorlw B'11111000'
01FE   1D03               M         btfss STATUS, Z
01FF   2A2F           01136                 goto sid_WaitComm_Conf
                      01137         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
0200   30DC               M     movlw B'11011100'
0201   00FA               M     movwf gbl_spdata
0202   212A           01138         call    PutByte
                      01139         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
0203   3020               M     movlw BUFFERMIN
0204   0084               M     movwf FSR
                      01140         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0205   3040               M     movlw BUFFERSIZE
0206   00F5               M     movwf gbl_cntrb
0207   1383           01141         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
0208                  01142 sid_WaitComm_SendDataA                                  ;In Bank 0
                      01143         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0208   0800               M     movf INDF, w
0209   00FA               M     movwf gbl_spdata
020A   0A84           01144         incf    FSR, F                                          ;Increment pointer
020B   212A           01145         call    PutByte                                         ;Send data
020C   0BF5           01146         decfsz  gbl_cntrb, f
020D   2A08           01147                 goto sid_WaitComm_SendDataA
                      01148         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
020E   3040               M     movlw BUFFERSIZE
020F   00F5               M     movwf gbl_cntrb
0210   0384           01149         decf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 1 
0211   1784           01150         bsf             FSR, 7                                          ;Set Bank 1
0212                  01151 sid_WaitComm_SendDataB
                      01152         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0212   0800               M     movf INDF, w
0213   00FA               M     movwf gbl_spdata
0214   0384           01153         decf    FSR, F                                          ;Increment pointer
0215   212A           01154         call    PutByte                                         ;Send data
0216   0BF5           01155         decfsz  gbl_cntrb, f
0217   2A12           01156                 goto sid_WaitComm_SendDataB
                      01157         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
0218   3040               M     movlw BUFFERSIZE
0219   00F5               M     movwf gbl_cntrb
021A   0A84           01158         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
021B   1783           01159         bsf             STATUS, IRP                                     ;Set Bank 3
021C                  01160 sid_WaitComm_SendDataC
                      01161         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
021C   0800               M     movf INDF, w
021D   00FA               M     movwf gbl_spdata
021E   0A84           01162         incf    FSR, F                                          ;Increment pointer
021F   212A           01163         call    PutByte                                         ;Send data
0220   0BF5           01164         decfsz  gbl_cntrb, f
0221   2A1C           01165                 goto sid_WaitComm_SendDataC
                      01166         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
0222   3040               M     movlw BUFFERSIZE
0223   00F5               M     movwf gbl_cntrb
0224   0384           01167         decf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 2
0225   1384           01168         bcf             FSR, 7                                          ;Set Bank 2
0226                  01169 sid_WaitComm_SendDataD
                      01170         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
0226   0800               M     movf INDF, w
0227   00FA               M     movwf gbl_spdata
0228   0384           01171         decf    FSR, F                                          ;Increment pointer
0229   212A           01172         call    PutByte                                         ;Send data
022A   0BF5           01173         decfsz  gbl_cntrb, f
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   2A26           01174                 goto sid_WaitComm_SendDataD
022C                  01175 sid_WaitComm_SendDataExit
022C   1383           01176         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
022D   2303           01177         call    ChannelConfSend
022E   29E2           01178         goto    sid_GetByte
                      01179 
022F                  01180 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      01181         skipEqLF B'11111001', gbl_spdata
022F   087A               M         movf gbl_spdata, w
0230   3AF9               M         xorlw B'11111001'
0231   1D03               M         btfss STATUS, Z
0232   2A38           01182                 goto sid_WaitComm_Rec
                      01183         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
0233   30DD               M     movlw B'11011101'
0234   00FA               M     movwf gbl_spdata
0235   212A           01184         call    PutByte
0236   22E2           01185         call    ConfSend
0237   29E2           01186         goto    sid_GetByte
                      01187 
0238                  01188 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      01189         skipEqLF B'11111010', gbl_spdata
0238   087A               M         movf gbl_spdata, w
0239   3AFA               M         xorlw B'11111010'
023A   1D03               M         btfss STATUS, Z
023B   2A41           01190                 goto sid_WaitComm_Break
                      01191         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
023C   30DE               M     movlw B'11011110'
023D   00FA               M     movwf gbl_spdata
023E   212A           01192         call    PutByte
023F   22D3           01193         call    ConfReceiveRateOnly
0240   29E2           01194         goto    sid_GetByte
                      01195 
0241                  01196 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      01197         skipEqLF B'11110011', gbl_spdata
0241   087A               M         movf gbl_spdata, w
0242   3AF3               M         xorlw B'11110011'
0243   1D03               M         btfss STATUS, Z
0244   29E2           01198                 goto sid_GetByte                                ;No valid message sent
                      01199         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
0245   30DC               M     movlw B'11011100'
0246   00FA               M     movwf gbl_spdata
0247   212A           01200         call    PutByte
0248   29E2           01201         goto    sid_GetByte
                      01202 
                      01203 
0249                  01204 sid_Exit
0249   138B           01205         bcf             INTCON, GIE                                     ;Disable interrupts
024A   1283 1303      01206         banksel BANK0
024C   1486           01207         bsf             ADC_PORT, CS                            ;Unselect MAX118
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01208 ;       bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
024D   2312           01209         call    ChannelConfStore                        ;Update state of front panel switches/knobs
024E   3001           01210         movlw   0x01                                            ;Set counters to 0x01010101 for the case
                             of
024F   00F4           01211         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
0250   00F5           01212         movwf   gbl_cntrb
0251   00F6           01213         movwf   gbl_cntrc
0252   00F7           01214         movwf   gbl_cntrd
0253   2889           01215         goto    Main
                      01216 
                      01217 
                      01218 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
0254                  01219 RotateSampleMemLeft
                      01220         ;Rotate the data stored in the sample buffer memory by 0xNN positions to the left
                      01221         ;Used after a pre-trigger sampling to align the data in the buffer memory
0254   1283 1303      01222         banksel BANK0
0256   0804           01223         movf    FSR, W                                          ;Save the current FSR
0257   00EE           01224         movwf   b0_ptFsrTemp
                      01225 
0258                  01226 rsmL_1
0258   08ED           01227         movf    b0_ptRotationCntr, F            ;Check to see if no memory rotation is needed
0259   1903           01228         btfsc   STATUS, Z
025A   2A9D           01229                 goto rsm_exit
025B   3020           01230         movlw   BUFFERMIN                                       ;Not done, so setup the indirection regi
                            ster
025C   0084           01231         movwf   FSR
                      01232 
                      01233         ;Start the rotation with BANK0
025D   1383           01234         bcf             STATUS, IRP
025E   1384           01235         bcf             FSR, 7
025F   0800           01236         movf    INDF, W
0260   00EF           01237         movwf   b0_ptTemp0                                      ;Save very first location, to later be p
                            ut into very last location
0261   22A0           01238         call    rsm_slide_lower
                      01239 
                      01240         ;Set BANK1
0262   1784           01241         bsf             FSR, 7
0263   0800           01242         movf    INDF, W                                         ;Get the first location in bank 1 (is th
                            e top address of bank)
0264   1384           01243         bcf             FSR, 7                                          ;Set indirection back to bank 0
0265   0080           01244         movwf   INDF                                            ;Deposit bank 1's first location into ba
                            nk 0's last location
0266   1784           01245         bsf             FSR, 7                                          ;Now go back to bank 1
0267   22AB           01246         call    rsm_slide_higher
                      01247 
                      01248         ;Set BANK3
0268   1783           01249         bsf             STATUS, IRP
0269   0800           01250         movf    INDF, W                                         ;Get the first location in bank 3 (is th
                            e bottom address bank)
026A   1383           01251         bcf             STATUS, IRP                                     ;Set indirection back to bank 1
026B   0080           01252         movwf   INDF                                            ;Deposit bank 3's first location into ba
                            nk 1's last location
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026C   1783           01253         bsf             STATUS, IRP                                     ;Now go back to bank 3
026D   22A0           01254         call    rsm_slide_lower
                      01255 
                      01256     ;Set BANK2
026E   1384           01257         bcf             FSR, 7
026F   0800           01258         movf    INDF, W                                         ;Get the first location in bank 2 (is th
                            e top address of bank)
0270   1784           01259         bsf             FSR, 7                                          ;Set indirection back to bank 3
0271   0080           01260         movwf   INDF                                            ;Deposit bank 2's first location into ba
                            nk 3's last location
0272   1384           01261         bcf             FSR, 7                                          ;Now go back to bank 2
0273   22AB           01262         call    rsm_slide_higher
                      01263 
0274   086F           01264         movf    b0_ptTemp0, W                           ;Now put the very first location into the very l
                            ast location
0275   0080           01265         movwf   INDF
0276   0BED           01266         decfsz  b0_ptRotationCntr, F            ;Check to see if memory has been rotated enough
0277   2A58           01267                 goto rsmL_1
0278   2A9D           01268         goto    rsm_exit
                      01269 
                      01270 
0279                  01271 RotateSampleMemRight
                      01272         ;Rotate the data stored in the sample buffer memory by 0xNN positions to the right
                      01273         ;Used after a pre-trigger sampling to align the data in the buffer memory
0279   1283 1303      01274         banksel BANK0
027B   0804           01275         movf    FSR, W                                          ;Save the current FSR
027C   00EE           01276         movwf   b0_ptFsrTemp
                      01277 
027D                  01278 rsmR_1
027D   08ED           01279         movf    b0_ptRotationCntr, F            ;Check to see if no memory rotation is needed
027E   1903           01280         btfsc   STATUS, Z
027F   2A9D           01281                 goto rsm_exit
0280   3020           01282         movlw   BUFFERMIN                                       ;Not done, so setup the indirection regi
                            ster
0281   0084           01283         movwf   FSR
                      01284 
                      01285         ;Start the rotation with BANK2
0282   1783           01286         bsf             STATUS, IRP
0283   1384           01287         bcf             FSR, 7
0284   0800           01288         movf    INDF, W
0285   00EF           01289         movwf   b0_ptTemp0                                      ;Save very first location, to later be p
                            ut into very last location
0286   22A0           01290         call    rsm_slide_lower
                      01291 
                      01292         ;Set BANK3
0287   1784           01293         bsf             FSR, 7
0288   0800           01294         movf    INDF, W                                         ;Get the last location in bank 3 (is the
                             top address of bank)
0289   1384           01295         bcf             FSR, 7                                          ;Set indirection back to bank 2
028A   0080           01296         movwf   INDF                                            ;Deposit bank 3's last location into ban
                            k 2's first location
028B   1784           01297         bsf             FSR, 7                                          ;Now go back to bank 3
028C   22AB           01298         call    rsm_slide_higher
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01299 
                      01300         ;Set BANK1
028D   1383           01301         bcf             STATUS, IRP
028E   0800           01302         movf    INDF, W                                         ;Get the last location in bank 1 (is the
                             bottom address of bank)
028F   1783           01303         bsf             STATUS, IRP                                     ;Set indirection back to bank 3
0290   0080           01304         movwf   INDF                                            ;Deposit bank 1's last location into ban
                            k 3's first location
0291   1383           01305         bcf             STATUS, IRP                                     ;Now go back to bank 1
0292   22A0           01306         call    rsm_slide_lower
                      01307 
                      01308     ;Set BANK0
0293   1384           01309         bcf             FSR, 7
0294   0800           01310         movf    INDF, W                                         ;Get the last location in bank 0 (is the
                             top address of bank)
0295   1784           01311         bsf             FSR, 7                                          ;Set indirection back to bank 1
0296   0080           01312         movwf   INDF                                            ;Deposit bank 0's last location into ban
                            k 1's first location
0297   1384           01313         bcf             FSR, 7                                          ;Now go back to bank 0
0298   22AB           01314         call    rsm_slide_higher
                      01315 
0299   086F           01316         movf    b0_ptTemp0, W                           ;Now put the very first location into the very l
                            ast location
029A   0080           01317         movwf   INDF
029B   0BED           01318         decfsz  b0_ptRotationCntr, F            ;Check to see if memory has been rotated enough
029C   2A7D           01319                 goto rsmR_1
                      01320 
029D                  01321 rsm_exit
029D   086E           01322         movf    b0_ptFsrTemp, W                         ;Restore the previous FSR
029E   0084           01323         movwf   FSR
029F   0008           01324         return
                      01325 
02A0                  01326 rsm_slide_lower
02A0   0A84           01327         incf    FSR, F
02A1   0800           01328         movf    INDF, W
02A2   0384           01329         decf    FSR, F
02A3   0080           01330         movwf   INDF
02A4   0A84           01331         incf    FSR, F
02A5   305F           01332         movlw   BUFFERMAX
02A6   0604           01333         xorwf   FSR, W
02A7   397F           01334         andlw   0x7f                                            ;Mask out the FSR7 bit from the comparis
                            on
02A8   1D03           01335         btfss   STATUS, Z
02A9   2AA0           01336                 goto rsm_slide_lower
02AA   0008           01337         return
                      01338 
02AB                  01339 rsm_slide_higher
02AB   0384           01340         decf    FSR, F
02AC   0800           01341         movf    INDF, W
02AD   0A84           01342         incf    FSR, F
02AE   0080           01343         movwf   INDF
02AF   0384           01344         decf    FSR, F
02B0   3020           01345         movlw   BUFFERMIN
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1   0604           01346         xorwf   FSR, W
02B2   397F           01347         andlw   0x7f                                            ;Mask out the FSR7 bit from the comparis
                            on
02B3   1D03           01348         btfss   STATUS, Z
02B4   2AAB           01349                 goto rsm_slide_higher
02B5   0008           01350         return
                      01351 
                      01352 ;=============================================================================
                      01353 ;*****************************************************************************
                      01354 ;=============================================================================
                      01355 
                      01356 
                      01357 ;Receive and store the user settings from the PC application
                      01358 ;-----------------------------------------------------------------------------
02B6                  01359 ConfReceive
02B6   2119           01360         call GetByte                                            ;Receive ConfigLoc1
02B7   087A           01361         movf gbl_spdata, w
02B8   39DF           01362         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      01363         if clockFreq == 20                                      ;if necessary
02B9   3820           01364                 iorlw 1 << CLOCKFREQBIT
                      01365         endif
02BA   00F0           01366         movwf gbl_configLoc1
02BB   1283 1303      01367         banksel BANK0
02BD   2119           01368         call GetByte                                            ;Receive trigger delay
                      01369         MOVFF gbl_spdata, b0_triggerDelay0
02BE   087A               M     movf gbl_spdata, w
02BF   00E0               M     movwf b0_triggerDelay0
02C0   2119           01370         call GetByte
                      01371         MOVFF gbl_spdata, b0_triggerDelay1
02C1   087A               M     movf gbl_spdata, w
02C2   00E1               M     movwf b0_triggerDelay1
02C3   2119           01372         call GetByte
                      01373         MOVFF gbl_spdata, b0_triggerDelay2
02C4   087A               M     movf gbl_spdata, w
02C5   00E2               M     movwf b0_triggerDelay2
02C6   2119           01374         call GetByte
                      01375         MOVFF gbl_spdata, b0_triggerDelay3
02C7   087A               M     movf gbl_spdata, w
02C8   00E3               M     movwf b0_triggerDelay3
02C9   2119           01376         call GetByte                                            ;Receive sample rate
                      01377         MOVFF gbl_spdata, gbl_sampleRate0
02CA   087A               M     movf gbl_spdata, w
02CB   00F1               M     movwf gbl_sampleRate0
02CC   2119           01378         call GetByte
                      01379         MOVFF gbl_spdata, gbl_sampleRate1
02CD   087A               M     movf gbl_spdata, w
02CE   00F2               M     movwf gbl_sampleRate1
02CF   2119           01380         call GetByte
                      01381         MOVFF gbl_spdata, gbl_sampleRate2
02D0   087A               M     movf gbl_spdata, w
02D1   00F3               M     movwf gbl_sampleRate2
02D2   0008           01382         return
                      01383 
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01384 ;Receive user settings from the PC application. BUT, throw most of them away!
                      01385 ;This is used during the SampleIntDrvn routine to prevent changing
                      01386 ;of state during an interrupt driven acquisition that is in progress.
                      01387 ;However, allow the sampleRate0,1,2 variable to be changed.  This allows
                      01388 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      01389 ;the user might have to wait a long time before the sampling completed and
                      01390 ;the user would again get control.
                      01391 ;-----------------------------------------------------------------------------
02D3                  01392 ConfReceiveRateOnly
02D3   2119           01393         call GetByte                                            ;Receive ConfigLoc1
02D4   2119           01394         call GetByte                                            ;Receive trigger delay
02D5   2119           01395         call GetByte
02D6   2119           01396         call GetByte
02D7   2119           01397         call GetByte
02D8   2119           01398         call GetByte                                            ;Receive sample rate
                      01399         MOVFF gbl_spdata, gbl_sampleRate0
02D9   087A               M     movf gbl_spdata, w
02DA   00F1               M     movwf gbl_sampleRate0
02DB   2119           01400         call GetByte
                      01401         MOVFF gbl_spdata, gbl_sampleRate1
02DC   087A               M     movf gbl_spdata, w
02DD   00F2               M     movwf gbl_sampleRate1
02DE   2119           01402         call GetByte
                      01403         MOVFF gbl_spdata, gbl_sampleRate2
02DF   087A               M     movf gbl_spdata, w
02E0   00F3               M     movwf gbl_sampleRate2
02E1   0008           01404         return
                      01405 
                      01406 ;Send the current DSOscope configuration to the PC application
                      01407 ;-----------------------------------------------------------------------------
02E2                  01408 ConfSend
                      01409         ;Send number of datapoints (2 bytes)
                      01410         MOVLF high TOTALBUFFERSIZE, gbl_spdata
02E2   3001               M     movlw high TOTALBUFFERSIZE
02E3   00FA               M     movwf gbl_spdata
02E4   212A           01411         call PutByte
                      01412         MOVLF low TOTALBUFFERSIZE, gbl_spdata
02E5   3000               M     movlw low TOTALBUFFERSIZE
02E6   00FA               M     movwf gbl_spdata
02E7   212A           01413         call PutByte
                      01414         ;Send clock frequency configuration
                      01415         MOVFF gbl_configLoc1, gbl_spdata
02E8   0870               M     movf gbl_configLoc1, w
02E9   00FA               M     movwf gbl_spdata
02EA   212A           01416         call PutByte
02EB   1283 1303      01417         banksel BANK0
                      01418         MOVFF b0_triggerDelay0, gbl_spdata
02ED   0860               M     movf b0_triggerDelay0, w
02EE   00FA               M     movwf gbl_spdata
02EF   212A           01419         call PutByte
                      01420         MOVFF b0_triggerDelay1, gbl_spdata
02F0   0861               M     movf b0_triggerDelay1, w
02F1   00FA               M     movwf gbl_spdata
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F2   212A           01421         call PutByte
                      01422         MOVFF b0_triggerDelay2, gbl_spdata
02F3   0862               M     movf b0_triggerDelay2, w
02F4   00FA               M     movwf gbl_spdata
02F5   212A           01423         call PutByte
                      01424         MOVFF b0_triggerDelay3, gbl_spdata
02F6   0863               M     movf b0_triggerDelay3, w
02F7   00FA               M     movwf gbl_spdata
02F8   212A           01425         call PutByte
                      01426         MOVFF gbl_sampleRate0, gbl_spdata
02F9   0871               M     movf gbl_sampleRate0, w
02FA   00FA               M     movwf gbl_spdata
02FB   212A           01427         call PutByte
                      01428         MOVFF gbl_sampleRate1, gbl_spdata
02FC   0872               M     movf gbl_sampleRate1, w
02FD   00FA               M     movwf gbl_spdata
02FE   212A           01429         call PutByte
                      01430         MOVFF gbl_sampleRate2, gbl_spdata
02FF   0873               M     movf gbl_sampleRate2, w
0300   00FA               M     movwf gbl_spdata
0301   212A           01431         call PutByte
0302   0008           01432         return
                      01433 
                      01434 ;Send the current DSOscope channel settings to the PC application
                      01435 ;-----------------------------------------------------------------------------
0303                  01436 ChannelConfSend
                      01437         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
0303   087B               M     movf gbl_dataConfig, w
0304   00FA               M     movwf gbl_spdata
0305   212A           01438         call PutByte
0306   01FA           01439         clrf gbl_spdata
0307   212A           01440         call PutByte                                            ;Channel 1 offset
0308   212A           01441         call PutByte                                            ;Channel 2 offset
0309   1283 1303      01442         banksel BANK0
                      01443         MOVFF b0_triggerLevel, gbl_spdata
030B   0865               M     movf b0_triggerLevel, w
030C   00FA               M     movwf gbl_spdata
030D   212A           01444         call PutByte                                            ;Triggerlevel
                      01445         MOVFF b0_triggerChannel, gbl_spdata
030E   0864               M     movf b0_triggerChannel, w
030F   00FA               M     movwf gbl_spdata
0310   212A           01446         call PutByte                                            ;Trigger Channel
0311   0008           01447         return
                      01448 
                      01449 
                      01450 ;Read and store the current front panel settings of the DSOscope
                      01451 ;-----------------------------------------------------------------------------
0312                  01452 ChannelConfStore
                      01453         ;Format of channel data configuration byte is:  Channel 1 Gain Scale (2) bits
                      01454         ;                                                                                               
                                    For gain scale, 00 = 1, 01 = 2, 10 = 5
                      01455         ;                                                                                               
                            Channel 2 Gain Scale (2) bits
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01456         ;                                                                                               
                            Channel 1 AC = 1 / DC = 0 (1) bit
                      01457         ;                                                                                               
                            Channel 2 AC = 1 / DC = 0 (1) bit
                      01458         ;                                                                                               
                            Channel 1 Attenuated by 10 = 1 / by 1 = 0
                      01459         ;                                                                                               
                            Channel 2 Attenuated by 10 = 1 / by 1 = 0
0312   01FB           01460         clrf gbl_dataConfig
0313   1683 1303      01461         banksel TRISC                                   ;Access Bank1
0315   1507           01462         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0316   1087           01463         bcf TRISC, CH1SEL                                       ;Ch1Sel output
0317   1685           01464         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
0318   1205           01465         bcf TRISA, CH1SELG                                      ;Ch1Sel output
0319   1283 1303      01466         banksel ANALOG_SEL                              ;Access Bank0
031B   1087           01467         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
031C   1205           01468         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
031D   177B           01469         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
031E   1C05           01470         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
031F   137B           01471                 bcf gbl_dataConfig, 6
0320   1C85           01472         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0321   137B           01473                 bcf gbl_dataConfig, 6
0322   1C85           01474         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0323   17FB           01475                 bsf gbl_dataConfig, 7
0324   1807           01476         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0325   15FB           01477                 bsf gbl_dataConfig, 3
0326   1487           01478         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0327   1605           01479         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01480 
0328   1683 1303      01481         banksel TRISC                                   ;Access Bank1
032A   1487           01482         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
032B   1107           01483         bcf TRISC, CH2SEL                                       ;Ch2Sel output
032C   1605           01484         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
032D   1285           01485         bcf TRISA, CH2SELG                                      ;Ch2Sel output
032E   1283 1303      01486         banksel ANALOG_SEL                              ;Access Bank0
0330   1107           01487         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
0331   1285           01488         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
0332   167B           01489         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
0333   1C05           01490         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0334   127B           01491                 bcf gbl_dataConfig, 4
0335   1C85           01492         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0336   127B           01493                 bcf gbl_dataConfig, 4
0337   1C85           01494         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0338   16FB           01495                 bsf gbl_dataConfig, 5
0339   1807           01496         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
033A   157B           01497                 bsf gbl_dataConfig, 2
033B   1507           01498         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
033C   1685           01499         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            riven low by above checks
                      01500 
033D   1F06           01501         btfss ATTNPORT, CH1ATTN                         ;If Channel 1 is Attenuated by 10 then mark
033E   14FB           01502                 bsf gbl_dataConfig, 1
033F   1F86           01503         btfss ATTNPORT, CH2ATTN                         ;If Channel 2 is Attenuated by 10 then mark
0340   147B           01504                 bsf gbl_dataConfig, 0
                      01505 
                      01506         ;Next byte/bit is Trigger Source Channel
0341   01E4           01507         clrf b0_triggerChannel
0342   1D85           01508         btfss TRGSRCPORT, TRGCH                         ;If Trigger Source is Channel 2 then mark
0343   1464           01509                 bsf     b0_triggerChannel, 0
                      01510 
                      01511         ;Next byte is Trigger Level
0344   1089           01512         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0345   1506           01513         bsf ADC_PORT, ADDR1
0346   1186           01514         bcf ADC_PORT, ADDR2
0347   1086           01515         bcf ADC_PORT, CS                                        ;Select maxim ADC
0348   1009           01516         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
0349   0000           01517         nop                                                                     ;Wait 5
034A   0000           01518         nop
034B   0000           01519         nop
034C   0000           01520         nop
034D   0000           01521         nop
034E   0808           01522         movf ADC_DATAPORT, W                            ;Save trigger level
034F   1409           01523         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0350   1486           01524         bsf ADC_PORT, CS                                        ;unselect maxim ADC
0351   1089           01525         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
0352   1106           01526         bcf ADC_PORT, ADDR1
0353   1186           01527         bcf ADC_PORT, ADDR2
0354   00E5           01528         movwf b0_triggerLevel
0355   0008           01529         return
                      01530 
                      01531 
                      01532 ;=============================================================================
                      01533 ;*****************************************************************************
                      01534 ;=============================================================================
                      01535 
                      01536 
                      01537 ;Sample Delayed
                      01538 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01539 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01540 ;-----------------------------------------------------------------------------
0356                  01541 SampleDelayed
0356   1009           01542         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01543         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
0357   303F               M     movlw BUFFERSIZE-1
0358   00F6               M     movwf gbl_cntrc
                      01544         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0359   3020               M     movlw BUFFERMIN
035A   0084               M     movwf FSR
                      01545         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
035B   0873               M     movf gbl_sampleRate2, w
035C   00F4               M     movwf gbl_cntra
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01546         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
035D   0872               M     movf gbl_sampleRate1, w
035E   00F5               M     movwf gbl_cntrb
035F   0000           01547         nop
0360   212F           01548         call Delay
0361                  01549 SampleDelayedLoopA
0361   0808           01550         movf ADC_DATAPORT, W                            ;Sample
0362   1409           01551         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0363   1009           01552         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0364   0080           01553         movwf INDF                                                      ;Save to QUEUE
0365   0A84           01554         incf FSR, F                                                     ;Increment QUEUE pointer
0366                  01555 StSampleDelayedLoopA
                      01556         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0366   0873               M     movf gbl_sampleRate2, w
0367   00F4               M     movwf gbl_cntra
                      01557         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0368   0872               M     movf gbl_sampleRate1, w
0369   00F5               M     movwf gbl_cntrb
036A   212F           01558         call Delay
036B   0BF6           01559         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
036C   2B61           01560                 goto SampleDelayedLoopA
036D   0000           01561         nop
036E   0808           01562         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
036F   1409           01563         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0370   1009           01564         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0371   0080           01565         movwf INDF                                                      ;Save to QUEUE
0372   1784           01566         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01567         MOVLF BUFFERSIZE-1, gbl_cntrc
0373   303F               M     movlw BUFFERSIZE-1
0374   00F6               M     movwf gbl_cntrc
                      01568         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0375   0873               M     movf gbl_sampleRate2, w
0376   00F4               M     movwf gbl_cntra
                      01569         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0377   0872               M     movf gbl_sampleRate1, w
0378   00F5               M     movwf gbl_cntrb
0379   212F           01570         call Delay
037A   0000           01571         nop
037B                  01572 SampleDelayedLoopB
037B   0808           01573         movf ADC_DATAPORT, W                            ;Sample
037C   1409           01574         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037D   1009           01575         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
037E   0080           01576         movwf INDF                                                      ;Save to QUEUE
037F   0384           01577         decf FSR, F                                                     ;Increment QUEUE pointer
                      01578         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0380   0873               M     movf gbl_sampleRate2, w
0381   00F4               M     movwf gbl_cntra
                      01579         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0382   0872               M     movf gbl_sampleRate1, w
0383   00F5               M     movwf gbl_cntrb
0384   212F           01580         call Delay
0385   0BF6           01581         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0386   2B7B           01582                 goto SampleDelayedLoopB
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0387   0000           01583         nop
0388   0808           01584         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
0389   1409           01585         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
038A   1009           01586         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
038B   0080           01587         movwf INDF                                                      ;Save to QUEUE
038C   1783           01588         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01589         MOVLF BUFFERSIZE-1, gbl_cntrc
038D   303F               M     movlw BUFFERSIZE-1
038E   00F6               M     movwf gbl_cntrc
                      01590         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
038F   0873               M     movf gbl_sampleRate2, w
0390   00F4               M     movwf gbl_cntra
                      01591         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0391   0872               M     movf gbl_sampleRate1, w
0392   00F5               M     movwf gbl_cntrb
0393   212F           01592         call Delay
0394   0000           01593         nop
0395                  01594 SampleDelayedLoopC
0395   0808           01595         movf ADC_DATAPORT, W                            ;Sample
0396   1409           01596         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0397   1009           01597         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0398   0080           01598         movwf INDF                                                      ;Save to QUEUE
0399   0A84           01599         incf FSR, F                                                     ;Increment QUEUE pointer
                      01600         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
039A   0873               M     movf gbl_sampleRate2, w
039B   00F4               M     movwf gbl_cntra
                      01601         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
039C   0872               M     movf gbl_sampleRate1, w
039D   00F5               M     movwf gbl_cntrb
039E   212F           01602         call Delay
039F   0BF6           01603         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03A0   2B95           01604                 goto SampleDelayedLoopC
03A1   0000           01605         nop
03A2   0808           01606         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
03A3   1409           01607         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A4   1009           01608         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03A5   0080           01609         movwf INDF                                                      ;Save to QUEUE
03A6   1384           01610         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01611         MOVLF BUFFERSIZE-1, gbl_cntrc
03A7   303F               M     movlw BUFFERSIZE-1
03A8   00F6               M     movwf gbl_cntrc
                      01612         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03A9   0873               M     movf gbl_sampleRate2, w
03AA   00F4               M     movwf gbl_cntra
                      01613         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03AB   0872               M     movf gbl_sampleRate1, w
03AC   00F5               M     movwf gbl_cntrb
03AD   212F           01614         call Delay
03AE   0000           01615         nop
03AF                  01616 SampleDelayedLoopD
03AF   0808           01617         movf ADC_DATAPORT, W                            ;Sample
03B0   1409           01618         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03B1   1009           01619         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B2   0080           01620         movwf INDF                                                      ;Save to QUEUE
03B3   0384           01621         decf FSR, F                                                     ;Increment QUEUE pointer
                      01622         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03B4   0873               M     movf gbl_sampleRate2, w
03B5   00F4               M     movwf gbl_cntra
                      01623         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03B6   0872               M     movf gbl_sampleRate1, w
03B7   00F5               M     movwf gbl_cntrb
03B8   212F           01624         call Delay
03B9   0BF6           01625         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03BA   2BAF           01626                 goto SampleDelayedLoopD
03BB   0000           01627         nop
03BC   0808           01628         movf ADC_DATAPORT, W                            ;Last sample
03BD   1409           01629         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03BE   118A           01630         bcf PCLATH, 3                                           ;insure correct program memory page
03BF   120A           01631         bcf PCLATH, 4
03C0   293A           01632         goto ADCShutdown
                      01633 
                      01634 ;SampleXYDelayed
                      01635 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01636 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01637 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01638 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01639 ;-----------------------------------------------------------------------------
03C1                  01640 SampleXYDelayed
03C1   1009           01641         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
03C2   1489           01642         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01643         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03C3   3020               M     movlw BUFFERMIN
03C4   0084               M     movwf FSR
03C5   0808           01644         movf ADC_DATAPORT, W                            ;Sample X
03C6   1409           01645         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03C7   1009           01646         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03C8   1089           01647         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03C9   0080           01648         movwf INDF                                                      ;Save to QUEUE
03CA   0A84           01649         incf FSR, F                                                     ;Increment QUEUE pointer
                      01650         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
03CB   301F               M     movlw BUFFERSIZE/2-1
03CC   00F6               M     movwf gbl_cntrc
                      01651         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03CD   0873               M     movf gbl_sampleRate2, w
03CE   00F4               M     movwf gbl_cntra
                      01652         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03CF   0872               M     movf gbl_sampleRate1, w
03D0   00F5               M     movwf gbl_cntrb
03D1   212F           01653         call Delay
03D2   0000           01654         nop
03D3                  01655 SampleXYDelayedLA
03D3   0808           01656         movf ADC_DATAPORT, W                            ;Sample Y
03D4   1409           01657         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03D5   1009           01658         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D6   1489           01659         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03D7   0080           01660         movwf INDF                                                      ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D8   0A84           01661         incf FSR, F                                                     ;Increment QUEUE pointer
03D9   0808           01662         movf ADC_DATAPORT, W                            ;Sample X
03DA   1409           01663         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03DB   1009           01664         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03DC   1089           01665         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03DD   0080           01666         movwf INDF                                                      ;Save to QUEUE
03DE   0A84           01667         incf FSR, F                                                     ;Increment QUEUE pointer
                      01668         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03DF   0873               M     movf gbl_sampleRate2, w
03E0   00F4               M     movwf gbl_cntra
                      01669         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03E1   0872               M     movf gbl_sampleRate1, w
03E2   00F5               M     movwf gbl_cntrb
03E3   212F           01670         call Delay
03E4   0BF6           01671         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
03E5   2BD3           01672                 goto SampleXYDelayedLA
03E6   0000           01673         nop
03E7   0808           01674         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
03E8   1409           01675         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E9   1009           01676         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03EA   1489           01677         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03EB   0080           01678         movwf INDF                                                      ;Save to QUEUE
03EC   1784           01679         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
03ED   0808           01680         movf ADC_DATAPORT, W                            ;Sample X
03EE   1409           01681         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03EF   1009           01682         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F0   1089           01683         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
03F1   0080           01684         movwf INDF                                                      ;Save to QUEUE
03F2   0384           01685         decf FSR, f                                                     ;Increment QUEUE pointer
                      01686         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
03F3   301F               M     movlw BUFFERSIZE/2-1
03F4   00F6               M     movwf gbl_cntrc
                      01687         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
03F5   0873               M     movf gbl_sampleRate2, w
03F6   00F4               M     movwf gbl_cntra
                      01688         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
03F7   0872               M     movf gbl_sampleRate1, w
03F8   00F5               M     movwf gbl_cntrb
03F9   212F           01689         call Delay
03FA   0000           01690         nop
03FB                  01691 SampleXYDelayedLB
03FB   0808           01692         movf ADC_DATAPORT, W                            ;Sample Y
03FC   1409           01693         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FD   1009           01694         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03FE   1489           01695         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
03FF   0080           01696         movwf INDF                                                      ;Save to QUEUE
0400   0384           01697         decf FSR, F                                                     ;Increment QUEUE pointer
0401   0808           01698         movf ADC_DATAPORT, W                            ;Sample X
0402   1409           01699         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0403   1009           01700         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0404   1089           01701         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0405   0080           01702         movwf INDF                                                      ;Save to QUEUE
0406   0384           01703         decf FSR, F                                                     ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01704         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0407   0873               M     movf gbl_sampleRate2, w
0408   00F4               M     movwf gbl_cntra
                      01705         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0409   0872               M     movf gbl_sampleRate1, w
040A   00F5               M     movwf gbl_cntrb
040B   212F           01706         call Delay
040C   0BF6           01707         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
040D   2BFB           01708                 goto SampleXYDelayedLB
040E   0000           01709         nop
040F   0808           01710         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0410   1409           01711         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0411   1009           01712         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0412   1489           01713         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0413   0080           01714         movwf INDF                                                      ;Save to QUEUE
0414   1783           01715         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0415   0808           01716         movf ADC_DATAPORT, W                            ;Sample X
0416   1409           01717         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0417   1009           01718         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0418   1089           01719         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0419   0080           01720         movwf INDF                                                      ;Save to QUEUE
041A   0A84           01721         incf FSR, f                                                     ;Increment QUEUE pointer
                      01722         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
041B   301F               M     movlw BUFFERSIZE/2-1
041C   00F6               M     movwf gbl_cntrc
                      01723         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
041D   0873               M     movf gbl_sampleRate2, w
041E   00F4               M     movwf gbl_cntra
                      01724         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
041F   0872               M     movf gbl_sampleRate1, w
0420   00F5               M     movwf gbl_cntrb
0421   212F           01725         call Delay
0422   0000           01726         nop
0423                  01727 SampleXYDelayedLC
0423   0808           01728         movf ADC_DATAPORT, W                            ;Sample Y
0424   1409           01729         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0425   1009           01730         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0426   1489           01731         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0427   0080           01732         movwf INDF                                                      ;Save to QUEUE
0428   0A84           01733         incf FSR, F                                                     ;Increment QUEUE pointer
0429   0808           01734         movf ADC_DATAPORT, W                            ;Sample X
042A   1409           01735         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
042B   1009           01736         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
042C   1089           01737         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
042D   0080           01738         movwf INDF                                                      ;Save to QUEUE
042E   0A84           01739         incf FSR, F                                                     ;Increment QUEUE pointer
                      01740         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
042F   0873               M     movf gbl_sampleRate2, w
0430   00F4               M     movwf gbl_cntra
                      01741         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0431   0872               M     movf gbl_sampleRate1, w
0432   00F5               M     movwf gbl_cntrb
0433   212F           01742         call Delay
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0434   0BF6           01743         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0435   2C23           01744                 goto SampleXYDelayedLC
0436   0000           01745         nop
0437   0808           01746         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0438   1409           01747         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0439   1009           01748         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043A   1489           01749         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
043B   0080           01750         movwf INDF                                                      ;Save to QUEUE
043C   1384           01751         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
043D   0808           01752         movf ADC_DATAPORT, W                            ;Sample X
043E   1409           01753         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043F   1009           01754         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0440   1089           01755         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0441   0080           01756         movwf INDF                                                      ;Save to QUEUE
0442   0384           01757         decf FSR, f                                                     ;Increment QUEUE pointer
                      01758         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0443   301F               M     movlw BUFFERSIZE/2-1
0444   00F6               M     movwf gbl_cntrc
                      01759         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0445   0873               M     movf gbl_sampleRate2, w
0446   00F4               M     movwf gbl_cntra
                      01760         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0447   0872               M     movf gbl_sampleRate1, w
0448   00F5               M     movwf gbl_cntrb
0449   212F           01761         call Delay
044A   0000           01762         nop
044B                  01763 SampleXYDelayedLD
044B   0808           01764         movf ADC_DATAPORT, W                            ;Sample Y
044C   1409           01765         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
044D   1009           01766         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
044E   1489           01767         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
044F   0080           01768         movwf INDF                                                      ;Save to QUEUE
0450   0384           01769         decf FSR, F                                                     ;Increment QUEUE pointer
0451   0808           01770         movf ADC_DATAPORT, W                            ;Sample X
0452   1409           01771         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0453   1009           01772         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0454   1089           01773         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0455   0080           01774         movwf INDF                                                      ;Save to QUEUE
0456   0384           01775         decf FSR, F                                                     ;Increment QUEUE pointer
                      01776         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0457   0873               M     movf gbl_sampleRate2, w
0458   00F4               M     movwf gbl_cntra
                      01777         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0459   0872               M     movf gbl_sampleRate1, w
045A   00F5               M     movwf gbl_cntrb
045B   212F           01778         call Delay
045C   0BF6           01779         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
045D   2C4B           01780                 goto SampleXYDelayedLD
045E   0000           01781         nop
045F   0808           01782         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0460   1409           01783         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0461   118A           01784         bcf PCLATH, 3                                           ;insure correct program memory page
0462   120A           01785         bcf PCLATH, 4
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0463   293A           01786         goto ADCShutdown
                      01787 
                      01788 ;Fast sample
                      01789 ;Sampling rate = 625 kHz with 20 MHz clock
                      01790 ;Sampling rate = 125 kHz with 4 MHz clock
                      01791 ;-----------------------------------------------------------------------------
0464                  01792 Sample625k
0464   1009           01793         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01794         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
0465   303F               M     movlw BUFFERSIZE-1
0466   00F4               M     movwf gbl_cntra
                      01795         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0467   3020               M     movlw BUFFERMIN
0468   0084               M     movwf FSR
0469   0000           01796         nop
046A                  01797 Sample625kLoopA
046A   0808           01798         movf ADC_DATAPORT, W                            ;Sample
046B   1409           01799         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
046C   1009           01800         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
046D   0080           01801         movwf INDF                                                      ;Save to QUEUE
046E   0A84           01802         incf FSR, F                                                     ;Increment QUEUE pointer
046F   0BF4           01803         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0470   2C6A           01804                 goto Sample625kLoopA
0471   0000           01805         nop
0472   0808           01806         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
0473   1409           01807         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0474   1009           01808         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0475   0080           01809         movwf INDF                                                      ;Save to QUEUE
0476   1784           01810         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01811         MOVLF BUFFERSIZE-1, gbl_cntra
0477   303F               M     movlw BUFFERSIZE-1
0478   00F4               M     movwf gbl_cntra
0479   0000           01812         nop
047A                  01813 Sample625kLoopB
047A   0808           01814         movf ADC_DATAPORT, W                            ;Sample
047B   1409           01815         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
047C   1009           01816         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
047D   0080           01817         movwf INDF                                                      ;Save to QUEUE
047E   0384           01818         decf FSR, F                                                     ;Increment QUEUE pointer
047F   0BF4           01819         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0480   2C7A           01820                 goto Sample625kLoopB
0481   0000           01821         nop
0482   0808           01822         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
0483   1409           01823         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0484   1009           01824         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0485   0080           01825         movwf INDF                                                      ;Save to QUEUE
0486   1783           01826         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01827         MOVLF BUFFERSIZE-1, gbl_cntra
0487   303F               M     movlw BUFFERSIZE-1
0488   00F4               M     movwf gbl_cntra
0489   0000           01828         nop
048A                  01829 Sample625kLoopC
048A   0808           01830         movf ADC_DATAPORT, W                            ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

048B   1409           01831         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
048C   1009           01832         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
048D   0080           01833         movwf INDF                                                      ;Save to QUEUE
048E   0A84           01834         incf FSR, F                                                     ;Increment QUEUE pointer
048F   0BF4           01835         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0490   2C8A           01836                 goto Sample625kLoopC
0491   0000           01837         nop
0492   0808           01838         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
0493   1409           01839         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0494   1009           01840         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0495   0080           01841         movwf INDF                                                      ;Save to QUEUE
0496   1384           01842         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01843         MOVLF BUFFERSIZE-1, gbl_cntra
0497   303F               M     movlw BUFFERSIZE-1
0498   00F4               M     movwf gbl_cntra
0499   0000           01844         nop
049A                  01845 Sample625kLoopD
049A   0808           01846         movf ADC_DATAPORT, W                            ;Sample
049B   1409           01847         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
049C   1009           01848         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
049D   0080           01849         movwf INDF                                                      ;Save to QUEUE
049E   0384           01850         decf FSR, F                                                     ;Increment QUEUE pointer
049F   0BF4           01851         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04A0   2C9A           01852                 goto Sample625kLoopD
04A1   0000           01853         nop
04A2   0808           01854         movf ADC_DATAPORT, W                            ;Last sample
04A3   1409           01855         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A4   118A           01856         bcf PCLATH, 3                                           ;insure correct program memory page
04A5   120A           01857         bcf PCLATH, 4
04A6   293A           01858         goto ADCShutdown
                      01859 
                      01860 ;Fast sample
                      01861 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01862 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01863 ;or
                      01864 ;Sampling rate = 250 kHz with 20 MHz clock
                      01865 ;Sampling rate =  50 kHz with 4 MHz clock
                      01866 ;-----------------------------------------------------------------------------
04A7                  01867 Sample417k250k
04A7   1009           01868         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01869         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
04A8   303F               M     movlw BUFFERSIZE - 1
04A9   00F4               M     movwf gbl_cntra
                      01870         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04AA   3020               M     movlw BUFFERMIN
04AB   0084               M     movwf FSR
04AC   2CAD           01871         goto $ + 1                                                      ;Delay 3
04AD   1D70           01872         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
04AE   2CB0           01873                 goto Sample417kLoopA
04AF   2506           01874         call DelaySeven                                         ;Delay 9 cycles
04B0                  01875 Sample417kLoopA
04B0   0808           01876         movf ADC_DATAPORT, W                            ;Sample
04B1   1409           01877         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B2   1009           01878         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04B3   0080           01879         movwf INDF                                                      ;Save to QUEUE
04B4   0A84           01880         incf FSR, F                                                     ;Increment QUEUE pointer
04B5   1D70           01881         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04B6   2CB8           01882                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
04B7                  01883 Sample250kA
04B7   2506           01884         call DelaySeven                                         ;Delay 9 cycles
04B8                  01885 Sample417kA
04B8   0000           01886         nop
04B9   0BF4           01887         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04BA   2CB0           01888                 goto Sample417kLoopA
04BB   0000           01889         nop
04BC   0808           01890         movf ADC_DATAPORT, W                            ;Last sample bank 1
04BD   1409           01891         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04BE   1009           01892         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04BF   0080           01893         movwf INDF                                                      ;Save to QUEUE
04C0   1784           01894         bsf FSR, 7                                                      ;Goto bank 2
                      01895         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04C1   303F               M     movlw BUFFERSIZE - 1
04C2   00F4               M     movwf gbl_cntra
04C3   2CC4           01896         goto $ + 1
04C4   1D70           01897         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
04C5   2CC7           01898                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
04C6   2506           01899         call DelaySeven                                         ;Delay 9 cycles
04C7                  01900 Sample417kLoopB
04C7   0808           01901         movf ADC_DATAPORT, W                            ;Sample
04C8   1409           01902         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04C9   1009           01903         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04CA   0080           01904         movwf INDF                                                      ;Save to QUEUE
04CB   0384           01905         decf FSR, F                                                     ;Increment QUEUE pointer
04CC                  01906 StSample417kLoopB
04CC   1D70           01907         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04CD   2CCF           01908                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
04CE                  01909 Sample250kB
04CE   2506           01910         call DelaySeven                                         ;Delay 9 cycles
04CF                  01911 Sample417kB
04CF   0000           01912         nop
04D0   0BF4           01913         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04D1   2CC7           01914                 goto Sample417kLoopB
04D2   0000           01915         nop
04D3   0808           01916         movf ADC_DATAPORT, W                            ;Last sample bank 2
04D4   1409           01917         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04D5   1009           01918         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04D6   0080           01919         movwf INDF                                                      ;Save to QUEUE
04D7   1783           01920         bsf STATUS, IRP                                         ;Goto bank 4
                      01921         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04D8   303F               M     movlw BUFFERSIZE - 1
04D9   00F4               M     movwf gbl_cntra
04DA   2CDB           01922         goto $ + 1
04DB   1D70           01923         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             on mode
04DC   2CDE           01924                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
04DD   2506           01925         call DelaySeven                                         ;Delay 9 cycles
04DE                  01926 Sample417kLoopC
04DE   0808           01927         movf ADC_DATAPORT, W                            ;Sample
04DF   1409           01928         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04E0   1009           01929         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04E1   0080           01930         movwf INDF                                                      ;Save to QUEUE
04E2   0A84           01931         incf FSR, F                                                     ;Increment QUEUE pointer
04E3                  01932 StSample417kLoopC
04E3   1D70           01933         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04E4   2CE6           01934                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
04E5                  01935 Sample250kC
04E5   2506           01936         call DelaySeven                                         ;Delay 9 cycles
04E6                  01937 Sample417kC
04E6   0000           01938         nop
04E7   0BF4           01939         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04E8   2CDE           01940                 goto Sample417kLoopC
04E9   0000           01941         nop
04EA   0808           01942         movf ADC_DATAPORT, W                            ;Last sample bank 4
04EB   1409           01943         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04EC   1009           01944         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04ED   0080           01945         movwf INDF                                                      ;Save to QUEUE
04EE   1384           01946         bcf FSR, 7                                                      ;Goto bank 3
                      01947         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
04EF   303F               M     movlw BUFFERSIZE - 1
04F0   00F4               M     movwf gbl_cntra
04F1   2CF2           01948         goto $ + 1
04F2   1D70           01949         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
04F3   2CF5           01950                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
04F4   2506           01951         call DelaySeven                                         ;Delay 9 cycles
04F5                  01952 Sample417kLoopD
04F5   0808           01953         movf ADC_DATAPORT, W                            ;Sample
04F6   1409           01954         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04F7   1009           01955         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04F8   0080           01956         movwf INDF                                                      ;Save to QUEUE
04F9   0384           01957         decf FSR, F                                                     ;Increment QUEUE pointer
04FA                  01958 StSample417kLoopD
04FA   1D70           01959         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
04FB   2CFD           01960                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
04FC                  01961 Sample250kD
04FC   2506           01962         call DelaySeven                                         ;Delay 9 cycles
04FD                  01963 Sample417kD
04FD   0000           01964         nop
04FE   0BF4           01965         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
04FF   2CF5           01966                 goto Sample417kLoopD
0500   0000           01967         nop
0501   0808           01968         movf ADC_DATAPORT, W                            ;Last sample
0502   1409           01969         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0503   118A           01970         bcf PCLATH, 3                                           ;insure correct program memory page
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0504   120A           01971         bcf PCLATH, 4
0505   293A           01972         goto ADCShutdown
                      01973 
                      01974 ;Delay Seven Cycles, helper to Sample417k250k
0506                  01975 DelaySeven
0506   2D07           01976         goto $ + 1                                                      ;7
                      01977 ;Delay Five Cycles, helper to SampleXY250k192k
0507                  01978 DelayFive
0507   0000           01979         nop                                                                     ;5
0508   2D09           01980         goto $ + 1                                              
                      01981 ;Delay Two Cycles, helper to SampleXY250k192k
0509                  01982 DelayTwo
0509   0008           01983         return                                                          ;2
                      01984 
                      01985 
                      01986 ;Fast sample XY
                      01987 ;Sampling rate = 250 kHz with 20 MHz clock
050A                  01988 SampleXY250k192k
050A   1009           01989         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
050B   1489           01990         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01991         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
050C   3020               M     movlw BUFFERMIN
050D   0084               M     movwf FSR
050E   0808           01992         movf ADC_DATAPORT, W                            ;Sample X
050F   1409           01993         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0510   1009           01994         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0511   1089           01995         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0512   0080           01996         movwf INDF                                                      ;Save to QUEUE
0513   0A84           01997         incf FSR, F                                                     ;Increment QUEUE pointer
                      01998         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0514   301F               M     movlw BUFFERSIZE/2-1
0515   00F6               M     movwf gbl_cntrc
0516   1C70           01999         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0517   2507           02000                 call DelayFive                                  ;192k
0518   2509           02001         call DelayTwo
0519                  02002 SampleXY250kLA
0519   0808           02003         movf ADC_DATAPORT, W                            ;Sample Y
051A   1409           02004         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
051B   1009           02005         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
051C   1489           02006         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
051D   0080           02007         movwf INDF                                                      ;Save to QUEUE
051E   0A84           02008         incf FSR, F                                                     ;Increment QUEUE pointer
051F   0808           02009         movf ADC_DATAPORT, W                            ;Sample X
0520   1409           02010         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0521   1009           02011         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0522   1089           02012         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0523   0080           02013         movwf INDF                                                      ;Save to QUEUE
0524   0A84           02014         incf FSR, F                                                     ;Increment QUEUE pointer
0525   1C70           02015         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0526   2507           02016                 call DelayFive                                  ;192k
0527   2D28           02017         goto $ + 1
0528   0000           02018         nop
0529   0BF6           02019         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

052A   2D19           02020                 goto SampleXY250kLA
052B   0000           02021         nop
052C   0808           02022         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
052D   1409           02023         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
052E   1009           02024         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
052F   1489           02025         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0530   0080           02026         movwf INDF                                                      ;Save to QUEUE
0531   1784           02027         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0532   0808           02028         movf ADC_DATAPORT, W                            ;Sample X
0533   1409           02029         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0534   1009           02030         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0535   1089           02031         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0536   0080           02032         movwf INDF                                                      ;Save to QUEUE
0537   0384           02033         decf FSR, f                                                     ;Increment QUEUE pointer
                      02034         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0538   301F               M     movlw BUFFERSIZE/2-1
0539   00F6               M     movwf gbl_cntrc
053A   1C70           02035         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
053B   2507           02036                 call DelayFive                                  ;192k
053C   2509           02037         call DelayTwo
053D                  02038 SampleXY250kLB
053D   0808           02039         movf ADC_DATAPORT, W                            ;Sample Y
053E   1409           02040         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
053F   1009           02041         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0540   1489           02042         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0541   0080           02043         movwf INDF                                                      ;Save to QUEUE
0542   0384           02044         decf FSR, F                                                     ;Increment QUEUE pointer
0543   0808           02045         movf ADC_DATAPORT, W                            ;Sample X
0544   1409           02046         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0545   1009           02047         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0546   1089           02048         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0547   0080           02049         movwf INDF                                                      ;Save to QUEUE
0548   0384           02050         decf FSR, F                                                     ;Increment QUEUE pointer
0549   1C70           02051         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
054A   2507           02052                 call DelayFive                                  ;192k
054B   2D4C           02053         goto $ + 1
054C   0000           02054         nop
054D   0BF6           02055         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
054E   2D3D           02056                 goto SampleXY250kLB
054F   0000           02057         nop
0550   0808           02058         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0551   1409           02059         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0552   1009           02060         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0553   1489           02061         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0554   0080           02062         movwf INDF                                                      ;Save to QUEUE
0555   1783           02063         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0556   0808           02064         movf ADC_DATAPORT, W                            ;Sample X
0557   1409           02065         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0558   1009           02066         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0559   1089           02067         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
055A   0080           02068         movwf INDF                                                      ;Save to QUEUE
055B   0A84           02069         incf FSR, f                                                     ;Increment QUEUE pointer
                      02070         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

055C   301F               M     movlw BUFFERSIZE/2-1
055D   00F6               M     movwf gbl_cntrc
055E   1C70           02071         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
055F   2507           02072                 call DelayFive                                  ;192k
0560   2509           02073         call DelayTwo
0561                  02074 SampleXY250kLC
0561   0808           02075         movf ADC_DATAPORT, W                            ;Sample Y
0562   1409           02076         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0563   1009           02077         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0564   1489           02078         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0565   0080           02079         movwf INDF                                                      ;Save to QUEUE
0566   0A84           02080         incf FSR, F                                                     ;Increment QUEUE pointer
0567   0808           02081         movf ADC_DATAPORT, W                            ;Sample X
0568   1409           02082         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0569   1009           02083         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
056A   1089           02084         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
056B   0080           02085         movwf INDF                                                      ;Save to QUEUE
056C   0A84           02086         incf FSR, F                                                     ;Increment QUEUE pointer
056D   1C70           02087         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
056E   2507           02088                 call DelayFive                                  ;192k
056F   2D70           02089         goto $ + 1
0570   0000           02090         nop
0571   0BF6           02091         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0572   2D61           02092                 goto SampleXY250kLC
0573   0000           02093         nop
0574   0808           02094         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0575   1409           02095         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0576   1009           02096         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0577   1489           02097         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0578   0080           02098         movwf INDF                                                      ;Save to QUEUE
0579   1384           02099         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
057A   0808           02100         movf ADC_DATAPORT, W                            ;Sample X
057B   1409           02101         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
057C   1009           02102         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
057D   1089           02103         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
057E   0080           02104         movwf INDF                                                      ;Save to QUEUE
057F   0384           02105         decf FSR, f                                                     ;Increment QUEUE pointer
                      02106         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0580   301F               M     movlw BUFFERSIZE/2-1
0581   00F6               M     movwf gbl_cntrc
0582   1C70           02107         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0583   2507           02108                 call DelayFive                                  ;192k
0584   2509           02109         call DelayTwo
0585                  02110 SampleXY250kLD
0585   0808           02111         movf ADC_DATAPORT, W                            ;Sample Y
0586   1409           02112         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0587   1009           02113         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0588   1489           02114         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0589   0080           02115         movwf INDF                                                      ;Save to QUEUE
058A   0384           02116         decf FSR, F                                                     ;Increment QUEUE pointer
058B   0808           02117         movf ADC_DATAPORT, W                            ;Sample X
058C   1409           02118         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
058D   1009           02119         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

058E   1089           02120         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
058F   0080           02121         movwf INDF                                                      ;Save to QUEUE
0590   0384           02122         decf FSR, F                                                     ;Increment QUEUE pointer
0591   1C70           02123         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0592   2507           02124                 call DelayFive                                  ;192k
0593   2D94           02125         goto $ + 1
0594   0000           02126         nop
0595   0BF6           02127         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0596   2D85           02128                 goto SampleXY250kLD
0597   0000           02129         nop
0598   0808           02130         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0599   1409           02131         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
059A   118A           02132         bcf PCLATH, 3                                           ;insure correct program memory page
059B   120A           02133         bcf PCLATH, 4
059C   293A           02134         goto ADCShutdown
                      02135 
                      02136 ;Fastest sample
                      02137 ;Sampling rate = 1 MHz with 20 MHz clock
                      02138 ;Sampling rate = 200 kHz with 4 MHz clock
                      02139 ;-----------------------------------------------------------------------------
059D                  02140 Sample1M
059D   1009           02141         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02142         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
059E   3020               M     movlw BUFFERMIN
059F   0084               M     movwf FSR
05A0   0000           02143         nop
  0000                02144         local count
  00000001            02145         count = 1
                      02146         while count < BUFFERSIZE
05A1   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A2   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A3   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05A4   0080           02150                 movwf INDF                                              ;Save to QUEUE
05A5   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02152                 count = count + 1
05A6   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A7   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A8   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05A9   0080           02150                 movwf INDF                                              ;Save to QUEUE
05AA   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02152                 count = count + 1
05AB   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AC   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AD   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05AE   0080           02150                 movwf INDF                                              ;Save to QUEUE
05AF   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02152                 count = count + 1
05B0   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B1   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B2   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05B3   0080           02150                 movwf INDF                                              ;Save to QUEUE
05B4   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02152                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05B5   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B6   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B7   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05B8   0080           02150                 movwf INDF                                              ;Save to QUEUE
05B9   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02152                 count = count + 1
05BA   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BB   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BC   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05BD   0080           02150                 movwf INDF                                              ;Save to QUEUE
05BE   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02152                 count = count + 1
05BF   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C0   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C1   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05C2   0080           02150                 movwf INDF                                              ;Save to QUEUE
05C3   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02152                 count = count + 1
05C4   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C5   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C6   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05C7   0080           02150                 movwf INDF                                              ;Save to QUEUE
05C8   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02152                 count = count + 1
05C9   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CA   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CB   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05CC   0080           02150                 movwf INDF                                              ;Save to QUEUE
05CD   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02152                 count = count + 1
05CE   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CF   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D0   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05D1   0080           02150                 movwf INDF                                              ;Save to QUEUE
05D2   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02152                 count = count + 1
05D3   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D4   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D5   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05D6   0080           02150                 movwf INDF                                              ;Save to QUEUE
05D7   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02152                 count = count + 1
05D8   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D9   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DA   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05DB   0080           02150                 movwf INDF                                              ;Save to QUEUE
05DC   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02152                 count = count + 1
05DD   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DE   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DF   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05E0   0080           02150                 movwf INDF                                              ;Save to QUEUE
05E1   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            02152                 count = count + 1
05E2   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E3   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E4   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05E5   0080           02150                 movwf INDF                                              ;Save to QUEUE
05E6   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02152                 count = count + 1
05E7   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E8   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E9   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05EA   0080           02150                 movwf INDF                                              ;Save to QUEUE
05EB   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02152                 count = count + 1
05EC   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05ED   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EE   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05EF   0080           02150                 movwf INDF                                              ;Save to QUEUE
05F0   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02152                 count = count + 1
05F1   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F2   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F3   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05F4   0080           02150                 movwf INDF                                              ;Save to QUEUE
05F5   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02152                 count = count + 1
05F6   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F7   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F8   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05F9   0080           02150                 movwf INDF                                              ;Save to QUEUE
05FA   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02152                 count = count + 1
05FB   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05FC   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05FD   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
05FE   0080           02150                 movwf INDF                                              ;Save to QUEUE
05FF   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02152                 count = count + 1
0600   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0601   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0602   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0603   0080           02150                 movwf INDF                                              ;Save to QUEUE
0604   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02152                 count = count + 1
0605   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0606   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0607   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0608   0080           02150                 movwf INDF                                              ;Save to QUEUE
0609   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02152                 count = count + 1
060A   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
060B   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
060C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
060D   0080           02150                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

060E   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02152                 count = count + 1
060F   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0610   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0611   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0612   0080           02150                 movwf INDF                                              ;Save to QUEUE
0613   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02152                 count = count + 1
0614   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0615   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0616   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0617   0080           02150                 movwf INDF                                              ;Save to QUEUE
0618   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02152                 count = count + 1
0619   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
061A   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
061B   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
061C   0080           02150                 movwf INDF                                              ;Save to QUEUE
061D   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02152                 count = count + 1
061E   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
061F   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0620   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0621   0080           02150                 movwf INDF                                              ;Save to QUEUE
0622   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02152                 count = count + 1
0623   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0624   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0625   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0626   0080           02150                 movwf INDF                                              ;Save to QUEUE
0627   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02152                 count = count + 1
0628   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0629   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
062A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
062B   0080           02150                 movwf INDF                                              ;Save to QUEUE
062C   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02152                 count = count + 1
062D   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
062E   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
062F   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0630   0080           02150                 movwf INDF                                              ;Save to QUEUE
0631   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02152                 count = count + 1
0632   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0633   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0634   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0635   0080           02150                 movwf INDF                                              ;Save to QUEUE
0636   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02152                 count = count + 1
0637   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0638   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0639   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

063A   0080           02150                 movwf INDF                                              ;Save to QUEUE
063B   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02152                 count = count + 1
063C   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
063D   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
063E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
063F   0080           02150                 movwf INDF                                              ;Save to QUEUE
0640   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02152                 count = count + 1
0641   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0642   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0643   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0644   0080           02150                 movwf INDF                                              ;Save to QUEUE
0645   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02152                 count = count + 1
0646   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0647   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0648   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0649   0080           02150                 movwf INDF                                              ;Save to QUEUE
064A   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02152                 count = count + 1
064B   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
064C   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
064D   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
064E   0080           02150                 movwf INDF                                              ;Save to QUEUE
064F   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02152                 count = count + 1
0650   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0651   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0652   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0653   0080           02150                 movwf INDF                                              ;Save to QUEUE
0654   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02152                 count = count + 1
0655   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0656   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0657   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0658   0080           02150                 movwf INDF                                              ;Save to QUEUE
0659   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02152                 count = count + 1
065A   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
065B   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
065C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
065D   0080           02150                 movwf INDF                                              ;Save to QUEUE
065E   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02152                 count = count + 1
065F   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0660   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0661   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0662   0080           02150                 movwf INDF                                              ;Save to QUEUE
0663   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02152                 count = count + 1
0664   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0665   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0666   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0667   0080           02150                 movwf INDF                                              ;Save to QUEUE
0668   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02152                 count = count + 1
0669   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
066A   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
066B   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
066C   0080           02150                 movwf INDF                                              ;Save to QUEUE
066D   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02152                 count = count + 1
066E   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
066F   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0670   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0671   0080           02150                 movwf INDF                                              ;Save to QUEUE
0672   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02152                 count = count + 1
0673   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0674   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0675   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0676   0080           02150                 movwf INDF                                              ;Save to QUEUE
0677   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02152                 count = count + 1
0678   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0679   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
067A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
067B   0080           02150                 movwf INDF                                              ;Save to QUEUE
067C   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02152                 count = count + 1
067D   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
067E   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
067F   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0680   0080           02150                 movwf INDF                                              ;Save to QUEUE
0681   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02152                 count = count + 1
0682   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0683   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0684   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0685   0080           02150                 movwf INDF                                              ;Save to QUEUE
0686   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02152                 count = count + 1
0687   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0688   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0689   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
068A   0080           02150                 movwf INDF                                              ;Save to QUEUE
068B   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02152                 count = count + 1
068C   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
068D   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
068E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
068F   0080           02150                 movwf INDF                                              ;Save to QUEUE
0690   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02152                 count = count + 1
0691   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0692   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0693   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0694   0080           02150                 movwf INDF                                              ;Save to QUEUE
0695   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02152                 count = count + 1
0696   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0697   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0698   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
0699   0080           02150                 movwf INDF                                              ;Save to QUEUE
069A   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02152                 count = count + 1
069B   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
069C   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
069D   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
069E   0080           02150                 movwf INDF                                              ;Save to QUEUE
069F   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02152                 count = count + 1
06A0   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06A1   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06A2   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06A3   0080           02150                 movwf INDF                                              ;Save to QUEUE
06A4   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            02152                 count = count + 1
06A5   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06A6   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06A7   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06A8   0080           02150                 movwf INDF                                              ;Save to QUEUE
06A9   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            02152                 count = count + 1
06AA   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06AB   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06AC   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06AD   0080           02150                 movwf INDF                                              ;Save to QUEUE
06AE   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            02152                 count = count + 1
06AF   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06B0   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06B1   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06B2   0080           02150                 movwf INDF                                              ;Save to QUEUE
06B3   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            02152                 count = count + 1
06B4   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06B5   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06B6   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06B7   0080           02150                 movwf INDF                                              ;Save to QUEUE
06B8   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            02152                 count = count + 1
06B9   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06BA   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06BB   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06BC   0080           02150                 movwf INDF                                              ;Save to QUEUE
06BD   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02152                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06BE   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06BF   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06C0   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06C1   0080           02150                 movwf INDF                                              ;Save to QUEUE
06C2   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02152                 count = count + 1
06C3   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06C4   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06C5   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06C6   0080           02150                 movwf INDF                                              ;Save to QUEUE
06C7   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02152                 count = count + 1
06C8   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06C9   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06CA   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06CB   0080           02150                 movwf INDF                                              ;Save to QUEUE
06CC   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02152                 count = count + 1
06CD   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06CE   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06CF   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06D0   0080           02150                 movwf INDF                                              ;Save to QUEUE
06D1   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02152                 count = count + 1
06D2   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06D3   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06D4   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06D5   0080           02150                 movwf INDF                                              ;Save to QUEUE
06D6   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02152                 count = count + 1
06D7   1409           02147                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
06D8   1009           02148                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
06D9   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
06DA   0080           02150                 movwf INDF                                              ;Save to QUEUE
06DB   0A84           02151                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            02152                 count = count + 1
                      02153         endw
06DC   1409           02154         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
06DD   1009           02155         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
06DE   0808           02156         movf ADC_DATAPORT, W
06DF   0080           02157         movwf INDF
06E0   1784           02158         bsf FSR, 7                                                      ;goto bank 2
  00000001            02159         count = 1
                      02160         while count < BUFFERSIZE
06E1   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E2   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E3   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
06E4   0080           02164                 movwf INDF                                              ;Save to QUEUE
06E5   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02166                 count = count + 1
06E6   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E7   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E8   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06E9   0080           02164                 movwf INDF                                              ;Save to QUEUE
06EA   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02166                 count = count + 1
06EB   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EC   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06ED   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
06EE   0080           02164                 movwf INDF                                              ;Save to QUEUE
06EF   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02166                 count = count + 1
06F0   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F1   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F2   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
06F3   0080           02164                 movwf INDF                                              ;Save to QUEUE
06F4   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02166                 count = count + 1
06F5   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F6   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F7   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
06F8   0080           02164                 movwf INDF                                              ;Save to QUEUE
06F9   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02166                 count = count + 1
06FA   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FB   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FC   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
06FD   0080           02164                 movwf INDF                                              ;Save to QUEUE
06FE   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02166                 count = count + 1
06FF   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0700   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0701   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0702   0080           02164                 movwf INDF                                              ;Save to QUEUE
0703   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02166                 count = count + 1
0704   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0705   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0706   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0707   0080           02164                 movwf INDF                                              ;Save to QUEUE
0708   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02166                 count = count + 1
0709   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070A   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070B   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
070C   0080           02164                 movwf INDF                                              ;Save to QUEUE
070D   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02166                 count = count + 1
070E   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070F   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0710   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0711   0080           02164                 movwf INDF                                              ;Save to QUEUE
0712   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02166                 count = count + 1
0713   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0714   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0715   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0716   0080           02164                 movwf INDF                                              ;Save to QUEUE
0717   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02166                 count = count + 1
0718   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0719   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071A   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
071B   0080           02164                 movwf INDF                                              ;Save to QUEUE
071C   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02166                 count = count + 1
071D   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071E   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071F   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0720   0080           02164                 movwf INDF                                              ;Save to QUEUE
0721   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02166                 count = count + 1
0722   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0723   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0724   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0725   0080           02164                 movwf INDF                                              ;Save to QUEUE
0726   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02166                 count = count + 1
0727   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0728   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0729   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
072A   0080           02164                 movwf INDF                                              ;Save to QUEUE
072B   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02166                 count = count + 1
072C   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072D   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072E   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
072F   0080           02164                 movwf INDF                                              ;Save to QUEUE
0730   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02166                 count = count + 1
0731   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0732   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0733   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0734   0080           02164                 movwf INDF                                              ;Save to QUEUE
0735   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02166                 count = count + 1
0736   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0737   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0738   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0739   0080           02164                 movwf INDF                                              ;Save to QUEUE
073A   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02166                 count = count + 1
073B   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073C   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073D   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
073E   0080           02164                 movwf INDF                                              ;Save to QUEUE
073F   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02166                 count = count + 1
0740   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0741   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0742   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0743   0080           02164                 movwf INDF                                              ;Save to QUEUE
0744   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02166                 count = count + 1
0745   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0746   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0747   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0748   0080           02164                 movwf INDF                                              ;Save to QUEUE
0749   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02166                 count = count + 1
074A   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074B   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074C   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
074D   0080           02164                 movwf INDF                                              ;Save to QUEUE
074E   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02166                 count = count + 1
074F   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0750   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0751   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0752   0080           02164                 movwf INDF                                              ;Save to QUEUE
0753   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02166                 count = count + 1
0754   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0755   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0756   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0757   0080           02164                 movwf INDF                                              ;Save to QUEUE
0758   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02166                 count = count + 1
0759   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075A   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075B   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
075C   0080           02164                 movwf INDF                                              ;Save to QUEUE
075D   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02166                 count = count + 1
075E   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075F   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0760   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0761   0080           02164                 movwf INDF                                              ;Save to QUEUE
0762   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02166                 count = count + 1
0763   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0764   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0765   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0766   0080           02164                 movwf INDF                                              ;Save to QUEUE
0767   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02166                 count = count + 1
0768   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0769   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076A   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
076B   0080           02164                 movwf INDF                                              ;Save to QUEUE
076C   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02166                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

076D   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076E   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076F   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0770   0080           02164                 movwf INDF                                              ;Save to QUEUE
0771   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02166                 count = count + 1
0772   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0773   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0774   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0775   0080           02164                 movwf INDF                                              ;Save to QUEUE
0776   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02166                 count = count + 1
0777   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0778   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0779   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
077A   0080           02164                 movwf INDF                                              ;Save to QUEUE
077B   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02166                 count = count + 1
077C   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077D   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077E   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
077F   0080           02164                 movwf INDF                                              ;Save to QUEUE
0780   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02166                 count = count + 1
0781   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0782   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0783   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0784   0080           02164                 movwf INDF                                              ;Save to QUEUE
0785   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02166                 count = count + 1
0786   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0787   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0788   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0789   0080           02164                 movwf INDF                                              ;Save to QUEUE
078A   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02166                 count = count + 1
078B   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078C   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078D   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
078E   0080           02164                 movwf INDF                                              ;Save to QUEUE
078F   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02166                 count = count + 1
0790   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0791   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0792   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0793   0080           02164                 movwf INDF                                              ;Save to QUEUE
0794   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02166                 count = count + 1
0795   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0796   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0797   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0798   0080           02164                 movwf INDF                                              ;Save to QUEUE
0799   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            02166                 count = count + 1
079A   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079B   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079C   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
079D   0080           02164                 movwf INDF                                              ;Save to QUEUE
079E   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02166                 count = count + 1
079F   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A0   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A1   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07A2   0080           02164                 movwf INDF                                              ;Save to QUEUE
07A3   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            02166                 count = count + 1
07A4   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A5   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A6   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07A7   0080           02164                 movwf INDF                                              ;Save to QUEUE
07A8   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            02166                 count = count + 1
07A9   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AA   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AB   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07AC   0080           02164                 movwf INDF                                              ;Save to QUEUE
07AD   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02166                 count = count + 1
07AE   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AF   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B0   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07B1   0080           02164                 movwf INDF                                              ;Save to QUEUE
07B2   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02166                 count = count + 1
07B3   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B4   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B5   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07B6   0080           02164                 movwf INDF                                              ;Save to QUEUE
07B7   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02166                 count = count + 1
07B8   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B9   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BA   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07BB   0080           02164                 movwf INDF                                              ;Save to QUEUE
07BC   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02166                 count = count + 1
07BD   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BE   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BF   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07C0   0080           02164                 movwf INDF                                              ;Save to QUEUE
07C1   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02166                 count = count + 1
07C2   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C3   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C4   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07C5   0080           02164                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07C6   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02166                 count = count + 1
07C7   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C8   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C9   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07CA   0080           02164                 movwf INDF                                              ;Save to QUEUE
07CB   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            02166                 count = count + 1
07CC   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CD   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CE   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07CF   0080           02164                 movwf INDF                                              ;Save to QUEUE
07D0   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            02166                 count = count + 1
07D1   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D2   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D3   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07D4   0080           02164                 movwf INDF                                              ;Save to QUEUE
07D5   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            02166                 count = count + 1
07D6   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D7   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D8   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07D9   0080           02164                 movwf INDF                                              ;Save to QUEUE
07DA   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            02166                 count = count + 1
07DB   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DC   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DD   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07DE   0080           02164                 movwf INDF                                              ;Save to QUEUE
07DF   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            02166                 count = count + 1
07E0   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E1   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E2   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07E3   0080           02164                 movwf INDF                                              ;Save to QUEUE
07E4   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            02166                 count = count + 1
07E5   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E6   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E7   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07E8   0080           02164                 movwf INDF                                              ;Save to QUEUE
07E9   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            02166                 count = count + 1
07EA   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EB   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EC   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07ED   0080           02164                 movwf INDF                                              ;Save to QUEUE
07EE   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            02166                 count = count + 1
07EF   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F0   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F1   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07F2   0080           02164                 movwf INDF                                              ;Save to QUEUE
07F3   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            02166                 count = count + 1
07F4   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F5   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F6   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07F7   0080           02164                 movwf INDF                                              ;Save to QUEUE
07F8   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            02166                 count = count + 1
07F9   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FA   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FB   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
07FC   0080           02164                 movwf INDF                                              ;Save to QUEUE
07FD   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02166                 count = count + 1
07FE   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FF   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0800   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0801   0080           02164                 movwf INDF                                              ;Save to QUEUE
0802   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02166                 count = count + 1
0803   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0804   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0805   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0806   0080           02164                 movwf INDF                                              ;Save to QUEUE
0807   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02166                 count = count + 1
0808   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0809   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080A   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
080B   0080           02164                 movwf INDF                                              ;Save to QUEUE
080C   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02166                 count = count + 1
080D   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080E   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080F   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0810   0080           02164                 movwf INDF                                              ;Save to QUEUE
0811   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02166                 count = count + 1
0812   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0813   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0814   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
0815   0080           02164                 movwf INDF                                              ;Save to QUEUE
0816   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02166                 count = count + 1
0817   1409           02161                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0818   1009           02162                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0819   0808           02163                 movf ADC_DATAPORT, W                    ;Sample
081A   0080           02164                 movwf INDF                                              ;Save to QUEUE
081B   0384           02165                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            02166                 count = count + 1
                      02167         endw
081C   1409           02168         bsf ADC_CONTROLPORT, RDD
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

081D   1009           02169         bcf ADC_CONTROLPORT, RDD
081E   0808           02170         movf ADC_DATAPORT, W
081F   0080           02171         movwf INDF
0820   1783           02172         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02173         count = 1
                      02174         while count < BUFFERSIZE
0821   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0822   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0823   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0824   0080           02178                 movwf INDF                                              ;Save to QUEUE
0825   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02180                 count = count + 1
0826   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0827   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0828   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0829   0080           02178                 movwf INDF                                              ;Save to QUEUE
082A   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02180                 count = count + 1
082B   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082C   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082D   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
082E   0080           02178                 movwf INDF                                              ;Save to QUEUE
082F   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02180                 count = count + 1
0830   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0831   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0832   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0833   0080           02178                 movwf INDF                                              ;Save to QUEUE
0834   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02180                 count = count + 1
0835   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0836   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0837   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0838   0080           02178                 movwf INDF                                              ;Save to QUEUE
0839   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02180                 count = count + 1
083A   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083B   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083C   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
083D   0080           02178                 movwf INDF                                              ;Save to QUEUE
083E   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02180                 count = count + 1
083F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0840   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0841   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0842   0080           02178                 movwf INDF                                              ;Save to QUEUE
0843   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02180                 count = count + 1
0844   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0845   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0846   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0847   0080           02178                 movwf INDF                                              ;Save to QUEUE
0848   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            02180                 count = count + 1
0849   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084B   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
084C   0080           02178                 movwf INDF                                              ;Save to QUEUE
084D   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02180                 count = count + 1
084E   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084F   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0850   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0851   0080           02178                 movwf INDF                                              ;Save to QUEUE
0852   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02180                 count = count + 1
0853   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0854   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0855   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0856   0080           02178                 movwf INDF                                              ;Save to QUEUE
0857   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02180                 count = count + 1
0858   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0859   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085A   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
085B   0080           02178                 movwf INDF                                              ;Save to QUEUE
085C   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02180                 count = count + 1
085D   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085E   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085F   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0860   0080           02178                 movwf INDF                                              ;Save to QUEUE
0861   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02180                 count = count + 1
0862   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0863   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0864   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0865   0080           02178                 movwf INDF                                              ;Save to QUEUE
0866   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02180                 count = count + 1
0867   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0868   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0869   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
086A   0080           02178                 movwf INDF                                              ;Save to QUEUE
086B   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02180                 count = count + 1
086C   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086D   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086E   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
086F   0080           02178                 movwf INDF                                              ;Save to QUEUE
0870   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02180                 count = count + 1
0871   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0872   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0873   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0874   0080           02178                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0875   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02180                 count = count + 1
0876   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0877   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0878   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0879   0080           02178                 movwf INDF                                              ;Save to QUEUE
087A   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02180                 count = count + 1
087B   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087C   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087D   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
087E   0080           02178                 movwf INDF                                              ;Save to QUEUE
087F   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02180                 count = count + 1
0880   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0881   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0882   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0883   0080           02178                 movwf INDF                                              ;Save to QUEUE
0884   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02180                 count = count + 1
0885   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0886   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0887   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0888   0080           02178                 movwf INDF                                              ;Save to QUEUE
0889   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02180                 count = count + 1
088A   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088B   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088C   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
088D   0080           02178                 movwf INDF                                              ;Save to QUEUE
088E   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02180                 count = count + 1
088F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0890   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0891   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0892   0080           02178                 movwf INDF                                              ;Save to QUEUE
0893   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02180                 count = count + 1
0894   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0895   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0896   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0897   0080           02178                 movwf INDF                                              ;Save to QUEUE
0898   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02180                 count = count + 1
0899   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089B   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
089C   0080           02178                 movwf INDF                                              ;Save to QUEUE
089D   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02180                 count = count + 1
089E   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089F   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A0   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08A1   0080           02178                 movwf INDF                                              ;Save to QUEUE
08A2   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02180                 count = count + 1
08A3   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A4   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A5   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08A6   0080           02178                 movwf INDF                                              ;Save to QUEUE
08A7   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02180                 count = count + 1
08A8   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A9   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AA   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08AB   0080           02178                 movwf INDF                                              ;Save to QUEUE
08AC   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02180                 count = count + 1
08AD   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AE   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AF   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08B0   0080           02178                 movwf INDF                                              ;Save to QUEUE
08B1   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02180                 count = count + 1
08B2   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B3   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B4   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08B5   0080           02178                 movwf INDF                                              ;Save to QUEUE
08B6   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02180                 count = count + 1
08B7   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B8   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B9   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08BA   0080           02178                 movwf INDF                                              ;Save to QUEUE
08BB   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02180                 count = count + 1
08BC   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BD   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BE   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08BF   0080           02178                 movwf INDF                                              ;Save to QUEUE
08C0   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02180                 count = count + 1
08C1   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C2   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C3   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08C4   0080           02178                 movwf INDF                                              ;Save to QUEUE
08C5   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02180                 count = count + 1
08C6   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C7   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C8   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08C9   0080           02178                 movwf INDF                                              ;Save to QUEUE
08CA   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02180                 count = count + 1
08CB   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CC   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08CD   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08CE   0080           02178                 movwf INDF                                              ;Save to QUEUE
08CF   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02180                 count = count + 1
08D0   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D1   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D2   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08D3   0080           02178                 movwf INDF                                              ;Save to QUEUE
08D4   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02180                 count = count + 1
08D5   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D6   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D7   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08D8   0080           02178                 movwf INDF                                              ;Save to QUEUE
08D9   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02180                 count = count + 1
08DA   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DB   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DC   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08DD   0080           02178                 movwf INDF                                              ;Save to QUEUE
08DE   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02180                 count = count + 1
08DF   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E0   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E1   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08E2   0080           02178                 movwf INDF                                              ;Save to QUEUE
08E3   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02180                 count = count + 1
08E4   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E5   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E6   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08E7   0080           02178                 movwf INDF                                              ;Save to QUEUE
08E8   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02180                 count = count + 1
08E9   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EA   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EB   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08EC   0080           02178                 movwf INDF                                              ;Save to QUEUE
08ED   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02180                 count = count + 1
08EE   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EF   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F0   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08F1   0080           02178                 movwf INDF                                              ;Save to QUEUE
08F2   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02180                 count = count + 1
08F3   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F4   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F5   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08F6   0080           02178                 movwf INDF                                              ;Save to QUEUE
08F7   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02180                 count = count + 1
08F8   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08F9   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FA   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
08FB   0080           02178                 movwf INDF                                              ;Save to QUEUE
08FC   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02180                 count = count + 1
08FD   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FE   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FF   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0900   0080           02178                 movwf INDF                                              ;Save to QUEUE
0901   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02180                 count = count + 1
0902   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0903   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0904   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0905   0080           02178                 movwf INDF                                              ;Save to QUEUE
0906   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02180                 count = count + 1
0907   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0908   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0909   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
090A   0080           02178                 movwf INDF                                              ;Save to QUEUE
090B   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02180                 count = count + 1
090C   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090D   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090E   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
090F   0080           02178                 movwf INDF                                              ;Save to QUEUE
0910   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02180                 count = count + 1
0911   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0912   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0913   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0914   0080           02178                 movwf INDF                                              ;Save to QUEUE
0915   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02180                 count = count + 1
0916   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0917   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0918   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0919   0080           02178                 movwf INDF                                              ;Save to QUEUE
091A   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02180                 count = count + 1
091B   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091C   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091D   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
091E   0080           02178                 movwf INDF                                              ;Save to QUEUE
091F   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02180                 count = count + 1
0920   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0921   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0922   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0923   0080           02178                 movwf INDF                                              ;Save to QUEUE
0924   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            02180                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0925   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0926   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0927   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0928   0080           02178                 movwf INDF                                              ;Save to QUEUE
0929   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            02180                 count = count + 1
092A   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092B   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092C   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
092D   0080           02178                 movwf INDF                                              ;Save to QUEUE
092E   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            02180                 count = count + 1
092F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0930   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0931   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0932   0080           02178                 movwf INDF                                              ;Save to QUEUE
0933   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            02180                 count = count + 1
0934   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0935   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0936   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0937   0080           02178                 movwf INDF                                              ;Save to QUEUE
0938   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            02180                 count = count + 1
0939   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093B   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
093C   0080           02178                 movwf INDF                                              ;Save to QUEUE
093D   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02180                 count = count + 1
093E   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093F   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0940   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0941   0080           02178                 movwf INDF                                              ;Save to QUEUE
0942   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            02180                 count = count + 1
0943   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0944   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0945   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0946   0080           02178                 movwf INDF                                              ;Save to QUEUE
0947   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02180                 count = count + 1
0948   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0949   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094A   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
094B   0080           02178                 movwf INDF                                              ;Save to QUEUE
094C   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02180                 count = count + 1
094D   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094E   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094F   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0950   0080           02178                 movwf INDF                                              ;Save to QUEUE
0951   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003E            02180                 count = count + 1
0952   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0953   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0954   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
0955   0080           02178                 movwf INDF                                              ;Save to QUEUE
0956   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02180                 count = count + 1
0957   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0958   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0959   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
095A   0080           02178                 movwf INDF                                              ;Save to QUEUE
095B   0A84           02179                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            02180                 count = count + 1
                      02181         endw
095C   1409           02182         bsf ADC_CONTROLPORT, RDD
095D   1009           02183         bcf ADC_CONTROLPORT, RDD
095E   0808           02184         movf ADC_DATAPORT, W                            ;Sample
095F   0080           02185         movwf INDF
0960   1384           02186         bcf FSR, 7                                                      ;goto bank 3
  00000001            02187         count = 1
                      02188         while count < D'14'
0961   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0962   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0963   0808           02191                 movf ADC_DATAPORT, W
0964   0080           02192                 movwf INDF                                              ;Save to QUEUE
0965   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02194                 count = count + 1
0966   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0967   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0968   0808           02191                 movf ADC_DATAPORT, W
0969   0080           02192                 movwf INDF                                              ;Save to QUEUE
096A   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02194                 count = count + 1
096B   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096C   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096D   0808           02191                 movf ADC_DATAPORT, W
096E   0080           02192                 movwf INDF                                              ;Save to QUEUE
096F   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02194                 count = count + 1
0970   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0971   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0972   0808           02191                 movf ADC_DATAPORT, W
0973   0080           02192                 movwf INDF                                              ;Save to QUEUE
0974   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02194                 count = count + 1
0975   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0976   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0977   0808           02191                 movf ADC_DATAPORT, W
0978   0080           02192                 movwf INDF                                              ;Save to QUEUE
0979   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02194                 count = count + 1
097A   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097B   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

097C   0808           02191                 movf ADC_DATAPORT, W
097D   0080           02192                 movwf INDF                                              ;Save to QUEUE
097E   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02194                 count = count + 1
097F   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0980   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0981   0808           02191                 movf ADC_DATAPORT, W
0982   0080           02192                 movwf INDF                                              ;Save to QUEUE
0983   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02194                 count = count + 1
0984   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0985   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0986   0808           02191                 movf ADC_DATAPORT, W
0987   0080           02192                 movwf INDF                                              ;Save to QUEUE
0988   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02194                 count = count + 1
0989   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098A   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098B   0808           02191                 movf ADC_DATAPORT, W
098C   0080           02192                 movwf INDF                                              ;Save to QUEUE
098D   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02194                 count = count + 1
098E   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098F   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0990   0808           02191                 movf ADC_DATAPORT, W
0991   0080           02192                 movwf INDF                                              ;Save to QUEUE
0992   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02194                 count = count + 1
0993   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0994   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0995   0808           02191                 movf ADC_DATAPORT, W
0996   0080           02192                 movwf INDF                                              ;Save to QUEUE
0997   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02194                 count = count + 1
0998   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0999   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099A   0808           02191                 movf ADC_DATAPORT, W
099B   0080           02192                 movwf INDF                                              ;Save to QUEUE
099C   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02194                 count = count + 1
099D   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099E   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099F   0808           02191                 movf ADC_DATAPORT, W
09A0   0080           02192                 movwf INDF                                              ;Save to QUEUE
09A1   0384           02193                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02194                 count = count + 1
                      02195         endw
09A2                  02196 Sample1MhzEnd
                      02197         while count < BUFFERSIZE
09A2   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A3   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A4   0808           02200                 movf ADC_DATAPORT, W
09A5   0080           02201                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09A6   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02203                 count = count + 1
09A7   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A8   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A9   0808           02200                 movf ADC_DATAPORT, W
09AA   0080           02201                 movwf INDF                                              ;Save to QUEUE
09AB   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02203                 count = count + 1
09AC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AE   0808           02200                 movf ADC_DATAPORT, W
09AF   0080           02201                 movwf INDF                                              ;Save to QUEUE
09B0   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02203                 count = count + 1
09B1   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B2   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B3   0808           02200                 movf ADC_DATAPORT, W
09B4   0080           02201                 movwf INDF                                              ;Save to QUEUE
09B5   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02203                 count = count + 1
09B6   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B7   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B8   0808           02200                 movf ADC_DATAPORT, W
09B9   0080           02201                 movwf INDF                                              ;Save to QUEUE
09BA   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02203                 count = count + 1
09BB   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09BC   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09BD   0808           02200                 movf ADC_DATAPORT, W
09BE   0080           02201                 movwf INDF                                              ;Save to QUEUE
09BF   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02203                 count = count + 1
09C0   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C1   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C2   0808           02200                 movf ADC_DATAPORT, W
09C3   0080           02201                 movwf INDF                                              ;Save to QUEUE
09C4   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02203                 count = count + 1
09C5   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C6   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C7   0808           02200                 movf ADC_DATAPORT, W
09C8   0080           02201                 movwf INDF                                              ;Save to QUEUE
09C9   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02203                 count = count + 1
09CA   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CB   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CC   0808           02200                 movf ADC_DATAPORT, W
09CD   0080           02201                 movwf INDF                                              ;Save to QUEUE
09CE   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02203                 count = count + 1
09CF   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D0   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D1   0808           02200                 movf ADC_DATAPORT, W
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09D2   0080           02201                 movwf INDF                                              ;Save to QUEUE
09D3   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02203                 count = count + 1
09D4   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D5   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D6   0808           02200                 movf ADC_DATAPORT, W
09D7   0080           02201                 movwf INDF                                              ;Save to QUEUE
09D8   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02203                 count = count + 1
09D9   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DA   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DB   0808           02200                 movf ADC_DATAPORT, W
09DC   0080           02201                 movwf INDF                                              ;Save to QUEUE
09DD   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02203                 count = count + 1
09DE   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DF   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E0   0808           02200                 movf ADC_DATAPORT, W
09E1   0080           02201                 movwf INDF                                              ;Save to QUEUE
09E2   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02203                 count = count + 1
09E3   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E4   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E5   0808           02200                 movf ADC_DATAPORT, W
09E6   0080           02201                 movwf INDF                                              ;Save to QUEUE
09E7   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02203                 count = count + 1
09E8   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E9   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EA   0808           02200                 movf ADC_DATAPORT, W
09EB   0080           02201                 movwf INDF                                              ;Save to QUEUE
09EC   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02203                 count = count + 1
09ED   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EE   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EF   0808           02200                 movf ADC_DATAPORT, W
09F0   0080           02201                 movwf INDF                                              ;Save to QUEUE
09F1   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02203                 count = count + 1
09F2   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F3   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F4   0808           02200                 movf ADC_DATAPORT, W
09F5   0080           02201                 movwf INDF                                              ;Save to QUEUE
09F6   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02203                 count = count + 1
09F7   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F8   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F9   0808           02200                 movf ADC_DATAPORT, W
09FA   0080           02201                 movwf INDF                                              ;Save to QUEUE
09FB   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02203                 count = count + 1
09FC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09FE   0808           02200                 movf ADC_DATAPORT, W
09FF   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A00   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02203                 count = count + 1
0A01   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A02   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A03   0808           02200                 movf ADC_DATAPORT, W
0A04   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A05   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02203                 count = count + 1
0A06   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A07   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A08   0808           02200                 movf ADC_DATAPORT, W
0A09   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A0A   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02203                 count = count + 1
0A0B   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0C   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0D   0808           02200                 movf ADC_DATAPORT, W
0A0E   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A0F   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02203                 count = count + 1
0A10   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A11   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A12   0808           02200                 movf ADC_DATAPORT, W
0A13   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A14   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02203                 count = count + 1
0A15   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A16   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A17   0808           02200                 movf ADC_DATAPORT, W
0A18   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A19   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02203                 count = count + 1
0A1A   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1B   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1C   0808           02200                 movf ADC_DATAPORT, W
0A1D   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A1E   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02203                 count = count + 1
0A1F   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A20   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A21   0808           02200                 movf ADC_DATAPORT, W
0A22   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A23   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            02203                 count = count + 1
0A24   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A25   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A26   0808           02200                 movf ADC_DATAPORT, W
0A27   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A28   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            02203                 count = count + 1
0A29   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A2A   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2B   0808           02200                 movf ADC_DATAPORT, W
0A2C   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A2D   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02203                 count = count + 1
0A2E   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2F   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A30   0808           02200                 movf ADC_DATAPORT, W
0A31   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A32   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02203                 count = count + 1
0A33   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A34   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A35   0808           02200                 movf ADC_DATAPORT, W
0A36   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A37   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02203                 count = count + 1
0A38   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A39   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3A   0808           02200                 movf ADC_DATAPORT, W
0A3B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A3C   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02203                 count = count + 1
0A3D   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3E   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3F   0808           02200                 movf ADC_DATAPORT, W
0A40   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A41   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02203                 count = count + 1
0A42   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A43   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A44   0808           02200                 movf ADC_DATAPORT, W
0A45   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A46   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02203                 count = count + 1
0A47   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A48   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A49   0808           02200                 movf ADC_DATAPORT, W
0A4A   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A4B   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            02203                 count = count + 1
0A4C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4E   0808           02200                 movf ADC_DATAPORT, W
0A4F   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A50   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            02203                 count = count + 1
0A51   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A52   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A53   0808           02200                 movf ADC_DATAPORT, W
0A54   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A55   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            02203                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A56   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A57   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A58   0808           02200                 movf ADC_DATAPORT, W
0A59   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A5A   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            02203                 count = count + 1
0A5B   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5C   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5D   0808           02200                 movf ADC_DATAPORT, W
0A5E   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A5F   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            02203                 count = count + 1
0A60   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A61   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A62   0808           02200                 movf ADC_DATAPORT, W
0A63   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A64   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            02203                 count = count + 1
0A65   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A66   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A67   0808           02200                 movf ADC_DATAPORT, W
0A68   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A69   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            02203                 count = count + 1
0A6A   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6B   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6C   0808           02200                 movf ADC_DATAPORT, W
0A6D   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A6E   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            02203                 count = count + 1
0A6F   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A70   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A71   0808           02200                 movf ADC_DATAPORT, W
0A72   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A73   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            02203                 count = count + 1
0A74   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A75   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A76   0808           02200                 movf ADC_DATAPORT, W
0A77   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A78   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            02203                 count = count + 1
0A79   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7A   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7B   0808           02200                 movf ADC_DATAPORT, W
0A7C   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A7D   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            02203                 count = count + 1
0A7E   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7F   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A80   0808           02200                 movf ADC_DATAPORT, W
0A81   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A82   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003B            02203                 count = count + 1
0A83   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A84   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A85   0808           02200                 movf ADC_DATAPORT, W
0A86   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A87   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            02203                 count = count + 1
0A88   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A89   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8A   0808           02200                 movf ADC_DATAPORT, W
0A8B   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A8C   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            02203                 count = count + 1
0A8D   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8E   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8F   0808           02200                 movf ADC_DATAPORT, W
0A90   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A91   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            02203                 count = count + 1
0A92   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A93   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A94   0808           02200                 movf ADC_DATAPORT, W
0A95   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A96   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            02203                 count = count + 1
0A97   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A98   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A99   0808           02200                 movf ADC_DATAPORT, W
0A9A   0080           02201                 movwf INDF                                              ;Save to QUEUE
0A9B   0384           02202                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            02203                 count = count + 1
                      02204         endw
0A9C   1409           02205         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0A9D   0808           02206         movf ADC_DATAPORT, W                            ;Sample
0A9E   118A           02207         bcf PCLATH, 3                                           ;insure correct program memory page
0A9F   120A           02208         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0AA0   293A           02209         goto ADCShutdown
                      02210 
                      02211 ;Fastest XY sample
                      02212 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      02213 ;Sampling rate =  83.333 kHz with 4 MHz clock
0AA1                  02214 SampleXY417k
0AA1   1009           02215         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0AA2   1489           02216         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      02217         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0AA3   3020               M     movlw BUFFERMIN
0AA4   0084               M     movwf FSR
0AA5   0808           02218         movf ADC_DATAPORT, W                            ;Sample X
0AA6   1409           02219         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0AA7   1009           02220         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0AA8   1089           02221         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0AA9   0080           02222         movwf INDF                                                      ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AAA   0A84           02223         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            02224         count = 1
                      02225         while count < BUFFERSIZE / 2
0AAB   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AAC   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAD   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAE   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AAF   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AB0   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AB1   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0AB2   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB3   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB4   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB5   0080           02236                 movwf INDF                                              ;Save to QUEUE
0AB6   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02238                 count = count + 1
0AB7   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AB8   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB9   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABA   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABB   0080           02230                 movwf INDF                                              ;Save to QUEUE
0ABC   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0ABD   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0ABE   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABF   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC0   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC1   0080           02236                 movwf INDF                                              ;Save to QUEUE
0AC2   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02238                 count = count + 1
0AC3   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AC4   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC5   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC6   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC7   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AC8   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AC9   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0ACA   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACB   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACC   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ACD   0080           02236                 movwf INDF                                              ;Save to QUEUE
0ACE   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02238                 count = count + 1
0ACF   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AD0   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD1   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD2   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD3   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AD4   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AD5   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0AD6   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD7   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD8   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD9   0080           02236                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0ADA   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02238                 count = count + 1
0ADB   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0ADC   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADD   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADE   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ADF   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AE0   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AE1   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0AE2   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE3   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE4   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE5   0080           02236                 movwf INDF                                              ;Save to QUEUE
0AE6   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02238                 count = count + 1
0AE7   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AE8   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE9   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AEA   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AEB   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AEC   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AED   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0AEE   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEF   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF0   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF1   0080           02236                 movwf INDF                                              ;Save to QUEUE
0AF2   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02238                 count = count + 1
0AF3   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0AF4   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF5   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF6   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF7   0080           02230                 movwf INDF                                              ;Save to QUEUE
0AF8   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0AF9   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0AFA   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFB   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFC   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AFD   0080           02236                 movwf INDF                                              ;Save to QUEUE
0AFE   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02238                 count = count + 1
0AFF   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B00   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B01   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B02   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B03   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B04   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B05   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B06   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B07   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B08   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B09   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B0A   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            02238                 count = count + 1
0B0B   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B0C   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0D   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0E   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B0F   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B10   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B11   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B12   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B13   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B14   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B15   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B16   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02238                 count = count + 1
0B17   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B18   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B19   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1A   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1B   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B1C   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B1D   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B1E   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1F   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B20   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B21   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B22   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02238                 count = count + 1
0B23   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B24   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B25   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B26   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B27   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B28   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B29   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B2A   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2B   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2C   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B2D   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B2E   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02238                 count = count + 1
0B2F   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B30   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B31   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B32   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B33   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B34   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B35   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B36   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B37   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B38   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B39   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B3A   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02238                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B3B   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B3C   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B3D   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B3E   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B3F   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B40   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B41   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B42   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B43   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B44   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B45   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B46   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02238                 count = count + 1
0B47   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B48   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B49   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4A   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B4B   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B4C   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B4D   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B4E   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4F   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B50   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B51   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B52   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02238                 count = count + 1
0B53   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B54   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B55   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B56   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B57   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B58   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B59   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B5A   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5B   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5C   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B5D   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B5E   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02238                 count = count + 1
0B5F   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B60   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B61   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B62   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B63   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B64   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B65   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B66   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B67   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B68   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B69   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B6A   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02238                 count = count + 1
0B6B   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B6C   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6D   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6E   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B6F   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B70   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B71   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B72   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B73   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B74   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B75   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B76   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02238                 count = count + 1
0B77   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B78   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B79   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7A   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7B   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B7C   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B7D   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B7E   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7F   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B80   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B81   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B82   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02238                 count = count + 1
0B83   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B84   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B85   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B86   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B87   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B88   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B89   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B8A   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8B   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8C   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B8D   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B8E   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02238                 count = count + 1
0B8F   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B90   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B91   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B92   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B93   0080           02230                 movwf INDF                                              ;Save to QUEUE
0B94   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0B95   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0B96   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B97   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B98   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B99   0080           02236                 movwf INDF                                              ;Save to QUEUE
0B9A   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02238                 count = count + 1
0B9B   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0B9C   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B9D   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9E   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B9F   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BA0   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BA1   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BA2   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA3   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA4   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA5   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BA6   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02238                 count = count + 1
0BA7   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BA8   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA9   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAA   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAB   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BAC   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BAD   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BAE   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAF   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB0   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB1   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BB2   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02238                 count = count + 1
0BB3   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BB4   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB5   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB6   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BB7   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BB8   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BB9   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BBA   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBB   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBC   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BBD   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BBE   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02238                 count = count + 1
0BBF   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BC0   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC1   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC2   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC3   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BC4   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BC5   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BC6   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC7   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC8   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BC9   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BCA   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02238                 count = count + 1
0BCB   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BCC   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCD   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BCE   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BCF   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BD0   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BD1   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BD2   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD3   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD4   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD5   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BD6   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02238                 count = count + 1
0BD7   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BD8   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD9   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDA   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDB   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BDC   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BDD   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BDE   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDF   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE0   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE1   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BE2   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02238                 count = count + 1
0BE3   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BE4   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE5   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE6   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE7   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BE8   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BE9   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BEA   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEB   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEC   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BED   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BEE   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02238                 count = count + 1
0BEF   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BF0   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF1   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF2   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF3   0080           02230                 movwf INDF                                              ;Save to QUEUE
0BF4   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0BF5   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0BF6   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF7   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF8   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BF9   0080           02236                 movwf INDF                                              ;Save to QUEUE
0BFA   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02238                 count = count + 1
0BFB   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0BFC   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFD   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFE   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BFF   0080           02230                 movwf INDF                                              ;Save to QUEUE
0C00   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0C01   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0C02   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C03   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C04   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C05   0080           02236                 movwf INDF                                              ;Save to QUEUE
0C06   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02238                 count = count + 1
0C07   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0C08   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C09   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0A   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0B   0080           02230                 movwf INDF                                              ;Save to QUEUE
0C0C   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0C0D   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0C0E   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0F   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C10   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C11   0080           02236                 movwf INDF                                              ;Save to QUEUE
0C12   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02238                 count = count + 1
0C13   0808           02226                 movf ADC_DATAPORT, W                    ;Sample Y
0C14   1409           02227                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C15   1009           02228                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C16   1489           02229                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C17   0080           02230                 movwf INDF                                              ;Save to QUEUE
0C18   0A84           02231                 incf FSR, F                                             ;Increment QUEUE pointer
0C19   0808           02232                 movf ADC_DATAPORT, W                    ;Sample X
0C1A   1409           02233                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1B   1009           02234                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1C   1089           02235                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C1D   0080           02236                 movwf INDF                                              ;Save to QUEUE
0C1E   0A84           02237                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02238                 count = count + 1
                      02239         endw
0C1F   0808           02240         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0C20   1409           02241         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0C21   1009           02242         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0C22   1489           02243         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0C23   0080           02244         movwf INDF                                                      ;Save to QUEUE
0C24   1784           02245         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0C25   0808           02246         movf ADC_DATAPORT, W                            ;Sample X
0C26   1409           02247         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0C27   1009           02248         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0C28   1089           02249         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0C29   0080           02250         movwf INDF                                                      ;Save to QUEUE
0C2A   0384           02251         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02252         count = 1
                      02253         while count < BUFFERSIZE / 2
0C2B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C2C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C2E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C2F   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C30   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C31   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C32   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C33   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C34   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C35   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C36   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02266                 count = count + 1
0C37   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C38   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C39   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C3C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C3D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C3E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C40   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C41   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C42   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02266                 count = count + 1
0C43   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C44   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C45   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C46   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C47   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C48   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C49   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C4A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C4D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C4E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02266                 count = count + 1
0C4F   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C50   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C51   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C52   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C53   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C54   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C55   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C56   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C57   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C58   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C59   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C5A   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02266                 count = count + 1
0C5B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C5C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C5F   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C60   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C61   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C62   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C63   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C64   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C65   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C66   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02266                 count = count + 1
0C67   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C68   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C69   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C6C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C6D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C6E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C70   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C71   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C72   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02266                 count = count + 1
0C73   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C74   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C75   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C76   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C77   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C78   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C79   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C7A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C7D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C7E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02266                 count = count + 1
0C7F   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C80   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C81   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C82   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C83   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C84   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C85   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C86   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C87   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C88   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C89   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C8A   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02266                 count = count + 1
0C8B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C8C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C8F   0080           02258                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C90   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C91   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C92   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C93   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C94   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C95   0080           02264                 movwf INDF                                              ;Save to QUEUE
0C96   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02266                 count = count + 1
0C97   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0C98   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C99   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0C9C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0C9D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0C9E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA0   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA1   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CA2   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02266                 count = count + 1
0CA3   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CA4   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA5   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA6   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA7   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CA8   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CA9   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CAA   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAB   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAC   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CAD   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CAE   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02266                 count = count + 1
0CAF   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CB0   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB1   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB2   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB3   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CB4   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CB5   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CB6   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB7   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB8   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB9   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CBA   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02266                 count = count + 1
0CBB   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CBC   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CBD   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CBE   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CBF   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CC0   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CC1   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CC2   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC3   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC4   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC5   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CC6   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02266                 count = count + 1
0CC7   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CC8   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC9   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCA   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CCB   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CCC   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CCD   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CCE   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCF   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD0   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD1   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CD2   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02266                 count = count + 1
0CD3   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CD4   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD5   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD6   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD7   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CD8   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CD9   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CDA   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDB   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDC   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CDD   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CDE   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02266                 count = count + 1
0CDF   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CE0   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE1   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE2   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE3   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CE4   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CE5   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CE6   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE7   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE8   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE9   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CEA   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02266                 count = count + 1
0CEB   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CEC   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CED   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CEE   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CEF   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CF0   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CF1   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CF2   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF3   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF4   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF5   0080           02264                 movwf INDF                                              ;Save to QUEUE
0CF6   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02266                 count = count + 1
0CF7   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0CF8   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF9   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFA   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFB   0080           02258                 movwf INDF                                              ;Save to QUEUE
0CFC   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0CFD   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0CFE   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFF   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D00   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D01   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D02   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02266                 count = count + 1
0D03   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D04   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D05   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D06   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D07   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D08   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D09   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D0A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D0D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D0E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02266                 count = count + 1
0D0F   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D10   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D11   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D12   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D13   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D14   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D15   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D16   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D17   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D18   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D19   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D1A   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02266                 count = count + 1
0D1B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D1C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D1F   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D20   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D21   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D22   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D23   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D24   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D25   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D26   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02266                 count = count + 1
0D27   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D28   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D29   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D2C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D2D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D2E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D30   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D31   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D32   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02266                 count = count + 1
0D33   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D34   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D35   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D36   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D37   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D38   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D39   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D3A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D3D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D3E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02266                 count = count + 1
0D3F   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D40   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D41   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D42   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D43   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D44   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D45   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D46   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D47   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D48   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D49   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D4A   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02266                 count = count + 1
0D4B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D4C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D4F   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D50   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D51   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D52   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D53   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D54   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D55   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D56   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02266                 count = count + 1
0D57   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D58   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D59   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D5C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D5D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D5E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D60   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D61   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D62   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02266                 count = count + 1
0D63   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D64   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D65   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D66   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D67   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D68   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D69   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D6A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D6D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D6E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02266                 count = count + 1
0D6F   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D70   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D71   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D72   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D73   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D74   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D75   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D76   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D77   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D78   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D79   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D7A   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02266                 count = count + 1
0D7B   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D7C   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7D   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7E   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D7F   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D80   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D81   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D82   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D83   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D84   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D85   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D86   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02266                 count = count + 1
0D87   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D88   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D89   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8A   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8B   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D8C   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D8D   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D8E   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8F   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D90   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D91   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D92   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02266                 count = count + 1
0D93   0808           02254                 movf ADC_DATAPORT, W                    ;Sample Y
0D94   1409           02255                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D95   1009           02256                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D96   1489           02257                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D97   0080           02258                 movwf INDF                                              ;Save to QUEUE
0D98   0384           02259                 decf FSR, F                                             ;Increment QUEUE pointer
0D99   0808           02260                 movf ADC_DATAPORT, W                    ;Sample X
0D9A   1409           02261                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9B   1009           02262                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9C   1089           02263                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D9D   0080           02264                 movwf INDF                                              ;Save to QUEUE
0D9E   0384           02265                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02266                 count = count + 1
                      02267         endw
0D9F   0808           02268         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0DA0   1409           02269         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0DA1   1009           02270         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0DA2   1489           02271         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0DA3   0080           02272         movwf INDF                                                      ;Save to QUEUE
0DA4   1783           02273         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0DA5   0808           02274         movf ADC_DATAPORT, W                            ;Sample X
0DA6   1409           02275         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0DA7   1009           02276         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0DA8   1089           02277         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0DA9   0080           02278         movwf INDF                                                      ;Save to QUEUE
0DAA   0A84           02279         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02280         count = 1
                      02281         while count < BUFFERSIZE / 2
0DAB   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DAC   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAD   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAE   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DAF   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DB0   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DB1   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DB2   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB3   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DB4   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB5   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DB6   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02294                 count = count + 1
0DB7   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DB8   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB9   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBA   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBB   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DBC   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DBD   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DBE   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBF   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC0   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC1   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DC2   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02294                 count = count + 1
0DC3   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DC4   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC5   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC6   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC7   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DC8   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DC9   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DCA   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCB   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCC   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DCD   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DCE   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02294                 count = count + 1
0DCF   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DD0   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD1   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD2   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD3   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DD4   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DD5   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DD6   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD7   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD8   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD9   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DDA   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02294                 count = count + 1
0DDB   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DDC   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDD   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDE   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DDF   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DE0   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DE1   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DE2   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE3   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE4   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DE5   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DE6   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02294                 count = count + 1
0DE7   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DE8   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE9   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DEA   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DEB   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DEC   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DED   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DEE   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEF   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF0   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF1   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DF2   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02294                 count = count + 1
0DF3   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0DF4   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF5   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF6   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF7   0080           02286                 movwf INDF                                              ;Save to QUEUE
0DF8   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0DF9   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0DFA   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFB   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFC   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DFD   0080           02292                 movwf INDF                                              ;Save to QUEUE
0DFE   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02294                 count = count + 1
0DFF   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E00   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E01   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E02   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E03   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E04   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E05   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E06   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E07   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E08   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E09   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E0A   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02294                 count = count + 1
0E0B   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E0C   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0D   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0E   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E0F   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E10   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E11   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E12   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E13   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E14   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E15   0080           02292                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E16   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02294                 count = count + 1
0E17   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E18   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E19   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1A   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1B   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E1C   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E1D   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E1E   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1F   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E20   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E21   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E22   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02294                 count = count + 1
0E23   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E24   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E25   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E26   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E27   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E28   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E29   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E2A   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2B   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2C   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E2D   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E2E   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02294                 count = count + 1
0E2F   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E30   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E31   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E32   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E33   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E34   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E35   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E36   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E37   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E38   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E39   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E3A   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02294                 count = count + 1
0E3B   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E3C   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E3D   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E3E   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E3F   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E40   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E41   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E42   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E43   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E44   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E45   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E46   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            02294                 count = count + 1
0E47   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E48   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E49   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4A   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E4B   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E4C   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E4D   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E4E   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4F   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E50   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E51   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E52   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02294                 count = count + 1
0E53   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E54   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E55   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E56   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E57   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E58   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E59   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E5A   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5B   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5C   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E5D   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E5E   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02294                 count = count + 1
0E5F   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E60   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E61   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E62   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E63   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E64   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E65   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E66   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E67   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E68   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E69   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E6A   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02294                 count = count + 1
0E6B   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E6C   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6D   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6E   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E6F   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E70   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E71   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E72   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E73   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E74   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E75   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E76   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02294                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E77   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E78   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E79   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7A   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7B   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E7C   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E7D   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E7E   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7F   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E80   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E81   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E82   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02294                 count = count + 1
0E83   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E84   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E85   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E86   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E87   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E88   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E89   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E8A   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8B   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8C   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E8D   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E8E   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02294                 count = count + 1
0E8F   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E90   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E91   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E92   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E93   0080           02286                 movwf INDF                                              ;Save to QUEUE
0E94   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0E95   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0E96   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E97   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E98   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E99   0080           02292                 movwf INDF                                              ;Save to QUEUE
0E9A   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02294                 count = count + 1
0E9B   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0E9C   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9D   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9E   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E9F   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EA0   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EA1   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EA2   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA3   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA4   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA5   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EA6   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02294                 count = count + 1
0EA7   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EA8   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA9   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAA   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAB   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EAC   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EAD   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EAE   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAF   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB0   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB1   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EB2   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02294                 count = count + 1
0EB3   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0EB4   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB5   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB6   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EB7   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EB8   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EB9   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EBA   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBB   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBC   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EBD   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EBE   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02294                 count = count + 1
0EBF   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0EC0   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC1   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC2   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EC3   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EC4   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EC5   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EC6   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC7   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC8   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EC9   0080           02292                 movwf INDF                                              ;Save to QUEUE
0ECA   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02294                 count = count + 1
0ECB   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0ECC   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECD   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECE   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ECF   0080           02286                 movwf INDF                                              ;Save to QUEUE
0ED0   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0ED1   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0ED2   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED3   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED4   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED5   0080           02292                 movwf INDF                                              ;Save to QUEUE
0ED6   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02294                 count = count + 1
0ED7   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0ED8   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0ED9   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDA   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDB   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EDC   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EDD   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EDE   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDF   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE0   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE1   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EE2   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02294                 count = count + 1
0EE3   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0EE4   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE5   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE6   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EE7   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EE8   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EE9   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EEA   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEB   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEC   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EED   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EEE   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02294                 count = count + 1
0EEF   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0EF0   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF1   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF2   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF3   0080           02286                 movwf INDF                                              ;Save to QUEUE
0EF4   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0EF5   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0EF6   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF7   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF8   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EF9   0080           02292                 movwf INDF                                              ;Save to QUEUE
0EFA   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02294                 count = count + 1
0EFB   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0EFC   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFD   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFE   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EFF   0080           02286                 movwf INDF                                              ;Save to QUEUE
0F00   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0F01   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0F02   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F03   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F04   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F05   0080           02292                 movwf INDF                                              ;Save to QUEUE
0F06   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02294                 count = count + 1
0F07   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0F08   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F09   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F0A   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0B   0080           02286                 movwf INDF                                              ;Save to QUEUE
0F0C   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0F0D   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0F0E   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0F   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F10   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F11   0080           02292                 movwf INDF                                              ;Save to QUEUE
0F12   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02294                 count = count + 1
0F13   0808           02282                 movf ADC_DATAPORT, W                    ;Sample Y
0F14   1409           02283                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F15   1009           02284                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F16   1489           02285                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F17   0080           02286                 movwf INDF                                              ;Save to QUEUE
0F18   0A84           02287                 incf FSR, F                                             ;Increment QUEUE pointer
0F19   0808           02288                 movf ADC_DATAPORT, W                    ;Sample X
0F1A   1409           02289                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1B   1009           02290                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1C   1089           02291                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F1D   0080           02292                 movwf INDF                                              ;Save to QUEUE
0F1E   0A84           02293                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02294                 count = count + 1
                      02295         endw
0F1F   0808           02296         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0F20   1409           02297         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0F21   1009           02298         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0F22   1489           02299         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0F23   0080           02300         movwf INDF                                                      ;Save to QUEUE
0F24   1384           02301         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0F25   0808           02302         movf ADC_DATAPORT, W                            ;Sample X
0F26   1409           02303         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0F27   1009           02304         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0F28   1089           02305         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0F29   0080           02306         movwf INDF                                                      ;Save to QUEUE
0F2A   0384           02307         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            02308         count = 1
                      02309         while count < BUFFERSIZE / 2
0F2B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F2C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F2F   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F30   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F31   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F32   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F33   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F34   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F35   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F36   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02322                 count = count + 1
0F37   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F38   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F39   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3B   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F3C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F3D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F3E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F40   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F41   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F42   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02322                 count = count + 1
0F43   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F44   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F45   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F46   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F47   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F48   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F49   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F4A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F4D   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F4E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02322                 count = count + 1
0F4F   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F50   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F51   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F52   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F53   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F54   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F55   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F56   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F57   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F58   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F59   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F5A   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02322                 count = count + 1
0F5B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F5C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F5F   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F60   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F61   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F62   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F63   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F64   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F65   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F66   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02322                 count = count + 1
0F67   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F68   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F69   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F6A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6B   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F6C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F6D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F6E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F70   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F71   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F72   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02322                 count = count + 1
0F73   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F74   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F75   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F76   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F77   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F78   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F79   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F7A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F7D   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F7E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02322                 count = count + 1
0F7F   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F80   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F81   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F82   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F83   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F84   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F85   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F86   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F87   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F88   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F89   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F8A   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02322                 count = count + 1
0F8B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F8C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F8F   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F90   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F91   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F92   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F93   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F94   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F95   0080           02320                 movwf INDF                                              ;Save to QUEUE
0F96   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02322                 count = count + 1
0F97   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0F98   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F99   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F9B   0080           02314                 movwf INDF                                              ;Save to QUEUE
0F9C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0F9D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0F9E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA0   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA1   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FA2   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02322                 count = count + 1
0FA3   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FA4   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA5   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA6   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FA7   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FA8   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FA9   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FAA   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAB   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAC   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FAD   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FAE   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02322                 count = count + 1
0FAF   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FB0   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB1   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB2   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FB3   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FB4   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FB5   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FB6   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB7   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB8   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FB9   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FBA   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02322                 count = count + 1
0FBB   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FBC   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBD   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FBE   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FBF   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FC0   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FC1   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FC2   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC3   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC4   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FC5   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FC6   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02322                 count = count + 1
0FC7   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FC8   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC9   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCA   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FCB   0080           02314                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FCC   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FCD   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FCE   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCF   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD0   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FD1   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FD2   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02322                 count = count + 1
0FD3   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FD4   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD5   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD6   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FD7   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FD8   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FD9   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FDA   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDB   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDC   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FDD   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FDE   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02322                 count = count + 1
0FDF   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FE0   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE1   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE2   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FE3   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FE4   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FE5   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FE6   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE7   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE8   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FE9   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FEA   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02322                 count = count + 1
0FEB   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FEC   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FED   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEE   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FEF   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FF0   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
0FF1   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FF2   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF3   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF4   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FF5   0080           02320                 movwf INDF                                              ;Save to QUEUE
0FF6   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02322                 count = count + 1
0FF7   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
0FF8   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF9   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFA   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FFB   0080           02314                 movwf INDF                                              ;Save to QUEUE
0FFC   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FFD   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
0FFE   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFF   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1000   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1001   0080           02320                 movwf INDF                                              ;Save to QUEUE
1002   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02322                 count = count + 1
1003   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1004   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1005   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1006   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1007   0080           02314                 movwf INDF                                              ;Save to QUEUE
1008   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1009   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
100A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
100D   0080           02320                 movwf INDF                                              ;Save to QUEUE
100E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02322                 count = count + 1
100F   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1010   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1011   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1012   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1013   0080           02314                 movwf INDF                                              ;Save to QUEUE
1014   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1015   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1016   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1017   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1018   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1019   0080           02320                 movwf INDF                                              ;Save to QUEUE
101A   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02322                 count = count + 1
101B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
101C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
101F   0080           02314                 movwf INDF                                              ;Save to QUEUE
1020   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1021   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1022   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1023   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1024   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1025   0080           02320                 movwf INDF                                              ;Save to QUEUE
1026   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02322                 count = count + 1
1027   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1028   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1029   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
102B   0080           02314                 movwf INDF                                              ;Save to QUEUE
102C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
102D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

102E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1030   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1031   0080           02320                 movwf INDF                                              ;Save to QUEUE
1032   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02322                 count = count + 1
1033   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1034   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1035   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1036   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1037   0080           02314                 movwf INDF                                              ;Save to QUEUE
1038   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1039   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
103A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
103D   0080           02320                 movwf INDF                                              ;Save to QUEUE
103E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02322                 count = count + 1
103F   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1040   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1041   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1042   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1043   0080           02314                 movwf INDF                                              ;Save to QUEUE
1044   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1045   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1046   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1047   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1048   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1049   0080           02320                 movwf INDF                                              ;Save to QUEUE
104A   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02322                 count = count + 1
104B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
104C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
104F   0080           02314                 movwf INDF                                              ;Save to QUEUE
1050   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1051   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1052   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1053   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1054   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1055   0080           02320                 movwf INDF                                              ;Save to QUEUE
1056   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02322                 count = count + 1
1057   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1058   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1059   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
105B   0080           02314                 movwf INDF                                              ;Save to QUEUE
105C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
105D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
105E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

105F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1060   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1061   0080           02320                 movwf INDF                                              ;Save to QUEUE
1062   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02322                 count = count + 1
1063   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1064   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1065   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1066   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1067   0080           02314                 movwf INDF                                              ;Save to QUEUE
1068   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1069   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
106A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
106D   0080           02320                 movwf INDF                                              ;Save to QUEUE
106E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02322                 count = count + 1
106F   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1070   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1071   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1072   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1073   0080           02314                 movwf INDF                                              ;Save to QUEUE
1074   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1075   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1076   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1077   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1078   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1079   0080           02320                 movwf INDF                                              ;Save to QUEUE
107A   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02322                 count = count + 1
107B   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
107C   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107D   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107E   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
107F   0080           02314                 movwf INDF                                              ;Save to QUEUE
1080   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1081   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
1082   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1083   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1084   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1085   0080           02320                 movwf INDF                                              ;Save to QUEUE
1086   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02322                 count = count + 1
1087   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1088   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1089   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108A   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
108B   0080           02314                 movwf INDF                                              ;Save to QUEUE
108C   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
108D   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
108E   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108F   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1090   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
1091   0080           02320                 movwf INDF                                              ;Save to QUEUE
1092   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02322                 count = count + 1
1093   0808           02310                 movf ADC_DATAPORT, W                    ;Sample Y
1094   1409           02311                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1095   1009           02312                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1096   1489           02313                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
1097   0080           02314                 movwf INDF                                              ;Save to QUEUE
1098   0384           02315                 decf FSR, F                                             ;Increment QUEUE pointer
1099   0808           02316                 movf ADC_DATAPORT, W                    ;Sample X
109A   1409           02317                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109B   1009           02318                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109C   1089           02319                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
109D   0080           02320                 movwf INDF                                              ;Save to QUEUE
109E   0384           02321                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02322                 count = count + 1
                      02323         endw
109F   0808           02324         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
10A0   1409           02325         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
10A1   118A           02326         bcf PCLATH, 3                                           ;insure correct program memory page
10A2   120A           02327         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
10A3   293A           02328         goto ADCShutdown
                      02329         
                      02330 ;Fast sample
                      02331 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      02332 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      02333 ;-----------------------------------------------------------------------------
10A4                  02334 Sample833k
10A4   1009           02335         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02336         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
10A5   3020               M     movlw BUFFERMIN
10A6   0084               M     movwf FSR
10A7   0000           02337         nop
  0000                02338         local count
  00000001            02339         count = 1
                      02340         while count < BUFFERSIZE
10A8   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10A9   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AA   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AB   0080           02344                 movwf INDF                                              ;Save to QUEUE
10AC   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10AD   0000           02346                 nop                                                             ;Wait a cycle
  00000002            02347                 count = count + 1
10AE   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10AF   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B0   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B1   0080           02344                 movwf INDF                                              ;Save to QUEUE
10B2   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10B3   0000           02346                 nop                                                             ;Wait a cycle
  00000003            02347                 count = count + 1
10B4   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10B5   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B6   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B7   0080           02344                 movwf INDF                                              ;Save to QUEUE
10B8   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10B9   0000           02346                 nop                                                             ;Wait a cycle
  00000004            02347                 count = count + 1
10BA   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10BB   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BC   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BD   0080           02344                 movwf INDF                                              ;Save to QUEUE
10BE   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10BF   0000           02346                 nop                                                             ;Wait a cycle
  00000005            02347                 count = count + 1
10C0   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10C1   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C2   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C3   0080           02344                 movwf INDF                                              ;Save to QUEUE
10C4   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10C5   0000           02346                 nop                                                             ;Wait a cycle
  00000006            02347                 count = count + 1
10C6   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10C7   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C8   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C9   0080           02344                 movwf INDF                                              ;Save to QUEUE
10CA   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10CB   0000           02346                 nop                                                             ;Wait a cycle
  00000007            02347                 count = count + 1
10CC   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10CD   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CE   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CF   0080           02344                 movwf INDF                                              ;Save to QUEUE
10D0   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10D1   0000           02346                 nop                                                             ;Wait a cycle
  00000008            02347                 count = count + 1
10D2   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10D3   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D4   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D5   0080           02344                 movwf INDF                                              ;Save to QUEUE
10D6   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10D7   0000           02346                 nop                                                             ;Wait a cycle
  00000009            02347                 count = count + 1
10D8   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10D9   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DA   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DB   0080           02344                 movwf INDF                                              ;Save to QUEUE
10DC   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10DD   0000           02346                 nop                                                             ;Wait a cycle
  0000000A            02347                 count = count + 1
10DE   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10DF   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E0   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E1   0080           02344                 movwf INDF                                              ;Save to QUEUE
10E2   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10E3   0000           02346                 nop                                                             ;Wait a cycle
  0000000B            02347                 count = count + 1
10E4   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10E5   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E6   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E7   0080           02344                 movwf INDF                                              ;Save to QUEUE
10E8   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10E9   0000           02346                 nop                                                             ;Wait a cycle
  0000000C            02347                 count = count + 1
10EA   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10EB   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EC   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10ED   0080           02344                 movwf INDF                                              ;Save to QUEUE
10EE   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10EF   0000           02346                 nop                                                             ;Wait a cycle
  0000000D            02347                 count = count + 1
10F0   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10F1   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F2   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F3   0080           02344                 movwf INDF                                              ;Save to QUEUE
10F4   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10F5   0000           02346                 nop                                                             ;Wait a cycle
  0000000E            02347                 count = count + 1
10F6   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10F7   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F8   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F9   0080           02344                 movwf INDF                                              ;Save to QUEUE
10FA   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
10FB   0000           02346                 nop                                                             ;Wait a cycle
  0000000F            02347                 count = count + 1
10FC   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
10FD   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FE   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FF   0080           02344                 movwf INDF                                              ;Save to QUEUE
1100   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1101   0000           02346                 nop                                                             ;Wait a cycle
  00000010            02347                 count = count + 1
1102   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1103   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1104   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1105   0080           02344                 movwf INDF                                              ;Save to QUEUE
1106   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1107   0000           02346                 nop                                                             ;Wait a cycle
  00000011            02347                 count = count + 1
1108   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1109   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110A   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110B   0080           02344                 movwf INDF                                              ;Save to QUEUE
110C   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
110D   0000           02346                 nop                                                             ;Wait a cycle
  00000012            02347                 count = count + 1
110E   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
110F   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1110   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1111   0080           02344                 movwf INDF                                              ;Save to QUEUE
1112   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1113   0000           02346                 nop                                                             ;Wait a cycle
  00000013            02347                 count = count + 1
1114   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1115   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1116   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1117   0080           02344                 movwf INDF                                              ;Save to QUEUE
1118   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1119   0000           02346                 nop                                                             ;Wait a cycle
  00000014            02347                 count = count + 1
111A   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
111B   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111C   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111D   0080           02344                 movwf INDF                                              ;Save to QUEUE
111E   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
111F   0000           02346                 nop                                                             ;Wait a cycle
  00000015            02347                 count = count + 1
1120   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1121   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1122   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1123   0080           02344                 movwf INDF                                              ;Save to QUEUE
1124   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1125   0000           02346                 nop                                                             ;Wait a cycle
  00000016            02347                 count = count + 1
1126   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1127   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1128   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1129   0080           02344                 movwf INDF                                              ;Save to QUEUE
112A   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
112B   0000           02346                 nop                                                             ;Wait a cycle
  00000017            02347                 count = count + 1
112C   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
112D   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112E   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112F   0080           02344                 movwf INDF                                              ;Save to QUEUE
1130   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1131   0000           02346                 nop                                                             ;Wait a cycle
  00000018            02347                 count = count + 1
1132   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1133   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1134   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1135   0080           02344                 movwf INDF                                              ;Save to QUEUE
1136   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1137   0000           02346                 nop                                                             ;Wait a cycle
  00000019            02347                 count = count + 1
1138   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1139   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113A   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113B   0080           02344                 movwf INDF                                              ;Save to QUEUE
113C   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
113D   0000           02346                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001A            02347                 count = count + 1
113E   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
113F   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1140   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1141   0080           02344                 movwf INDF                                              ;Save to QUEUE
1142   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1143   0000           02346                 nop                                                             ;Wait a cycle
  0000001B            02347                 count = count + 1
1144   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1145   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1146   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1147   0080           02344                 movwf INDF                                              ;Save to QUEUE
1148   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1149   0000           02346                 nop                                                             ;Wait a cycle
  0000001C            02347                 count = count + 1
114A   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
114B   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114C   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114D   0080           02344                 movwf INDF                                              ;Save to QUEUE
114E   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
114F   0000           02346                 nop                                                             ;Wait a cycle
  0000001D            02347                 count = count + 1
1150   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1151   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1152   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1153   0080           02344                 movwf INDF                                              ;Save to QUEUE
1154   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1155   0000           02346                 nop                                                             ;Wait a cycle
  0000001E            02347                 count = count + 1
1156   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1157   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1158   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1159   0080           02344                 movwf INDF                                              ;Save to QUEUE
115A   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
115B   0000           02346                 nop                                                             ;Wait a cycle
  0000001F            02347                 count = count + 1
115C   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
115D   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115E   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115F   0080           02344                 movwf INDF                                              ;Save to QUEUE
1160   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1161   0000           02346                 nop                                                             ;Wait a cycle
  00000020            02347                 count = count + 1
1162   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1163   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1164   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1165   0080           02344                 movwf INDF                                              ;Save to QUEUE
1166   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1167   0000           02346                 nop                                                             ;Wait a cycle
  00000021            02347                 count = count + 1
1168   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1169   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116A   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

116B   0080           02344                 movwf INDF                                              ;Save to QUEUE
116C   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
116D   0000           02346                 nop                                                             ;Wait a cycle
  00000022            02347                 count = count + 1
116E   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
116F   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1170   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1171   0080           02344                 movwf INDF                                              ;Save to QUEUE
1172   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1173   0000           02346                 nop                                                             ;Wait a cycle
  00000023            02347                 count = count + 1
1174   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1175   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1176   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1177   0080           02344                 movwf INDF                                              ;Save to QUEUE
1178   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1179   0000           02346                 nop                                                             ;Wait a cycle
  00000024            02347                 count = count + 1
117A   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
117B   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117C   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117D   0080           02344                 movwf INDF                                              ;Save to QUEUE
117E   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
117F   0000           02346                 nop                                                             ;Wait a cycle
  00000025            02347                 count = count + 1
1180   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1181   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1182   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1183   0080           02344                 movwf INDF                                              ;Save to QUEUE
1184   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1185   0000           02346                 nop                                                             ;Wait a cycle
  00000026            02347                 count = count + 1
1186   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1187   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1188   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1189   0080           02344                 movwf INDF                                              ;Save to QUEUE
118A   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
118B   0000           02346                 nop                                                             ;Wait a cycle
  00000027            02347                 count = count + 1
118C   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
118D   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118E   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118F   0080           02344                 movwf INDF                                              ;Save to QUEUE
1190   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1191   0000           02346                 nop                                                             ;Wait a cycle
  00000028            02347                 count = count + 1
1192   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1193   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1194   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1195   0080           02344                 movwf INDF                                              ;Save to QUEUE
1196   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1197   0000           02346                 nop                                                             ;Wait a cycle
  00000029            02347                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1198   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1199   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119A   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119B   0080           02344                 movwf INDF                                              ;Save to QUEUE
119C   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
119D   0000           02346                 nop                                                             ;Wait a cycle
  0000002A            02347                 count = count + 1
119E   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
119F   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A0   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A1   0080           02344                 movwf INDF                                              ;Save to QUEUE
11A2   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11A3   0000           02346                 nop                                                             ;Wait a cycle
  0000002B            02347                 count = count + 1
11A4   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11A5   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A6   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A7   0080           02344                 movwf INDF                                              ;Save to QUEUE
11A8   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11A9   0000           02346                 nop                                                             ;Wait a cycle
  0000002C            02347                 count = count + 1
11AA   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11AB   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AC   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AD   0080           02344                 movwf INDF                                              ;Save to QUEUE
11AE   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11AF   0000           02346                 nop                                                             ;Wait a cycle
  0000002D            02347                 count = count + 1
11B0   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11B1   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B2   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B3   0080           02344                 movwf INDF                                              ;Save to QUEUE
11B4   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11B5   0000           02346                 nop                                                             ;Wait a cycle
  0000002E            02347                 count = count + 1
11B6   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11B7   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B8   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B9   0080           02344                 movwf INDF                                              ;Save to QUEUE
11BA   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11BB   0000           02346                 nop                                                             ;Wait a cycle
  0000002F            02347                 count = count + 1
11BC   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11BD   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BE   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BF   0080           02344                 movwf INDF                                              ;Save to QUEUE
11C0   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11C1   0000           02346                 nop                                                             ;Wait a cycle
  00000030            02347                 count = count + 1
11C2   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11C3   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C4   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C5   0080           02344                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11C6   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11C7   0000           02346                 nop                                                             ;Wait a cycle
  00000031            02347                 count = count + 1
11C8   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11C9   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CA   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CB   0080           02344                 movwf INDF                                              ;Save to QUEUE
11CC   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11CD   0000           02346                 nop                                                             ;Wait a cycle
  00000032            02347                 count = count + 1
11CE   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11CF   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D0   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D1   0080           02344                 movwf INDF                                              ;Save to QUEUE
11D2   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11D3   0000           02346                 nop                                                             ;Wait a cycle
  00000033            02347                 count = count + 1
11D4   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11D5   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D6   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D7   0080           02344                 movwf INDF                                              ;Save to QUEUE
11D8   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11D9   0000           02346                 nop                                                             ;Wait a cycle
  00000034            02347                 count = count + 1
11DA   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11DB   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DC   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DD   0080           02344                 movwf INDF                                              ;Save to QUEUE
11DE   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11DF   0000           02346                 nop                                                             ;Wait a cycle
  00000035            02347                 count = count + 1
11E0   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11E1   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E2   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E3   0080           02344                 movwf INDF                                              ;Save to QUEUE
11E4   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11E5   0000           02346                 nop                                                             ;Wait a cycle
  00000036            02347                 count = count + 1
11E6   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11E7   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E8   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E9   0080           02344                 movwf INDF                                              ;Save to QUEUE
11EA   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11EB   0000           02346                 nop                                                             ;Wait a cycle
  00000037            02347                 count = count + 1
11EC   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11ED   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EE   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EF   0080           02344                 movwf INDF                                              ;Save to QUEUE
11F0   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11F1   0000           02346                 nop                                                             ;Wait a cycle
  00000038            02347                 count = count + 1
11F2   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11F3   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F4   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F5   0080           02344                 movwf INDF                                              ;Save to QUEUE
11F6   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11F7   0000           02346                 nop                                                             ;Wait a cycle
  00000039            02347                 count = count + 1
11F8   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11F9   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FA   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FB   0080           02344                 movwf INDF                                              ;Save to QUEUE
11FC   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
11FD   0000           02346                 nop                                                             ;Wait a cycle
  0000003A            02347                 count = count + 1
11FE   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
11FF   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1200   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1201   0080           02344                 movwf INDF                                              ;Save to QUEUE
1202   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1203   0000           02346                 nop                                                             ;Wait a cycle
  0000003B            02347                 count = count + 1
1204   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1205   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1206   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1207   0080           02344                 movwf INDF                                              ;Save to QUEUE
1208   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1209   0000           02346                 nop                                                             ;Wait a cycle
  0000003C            02347                 count = count + 1
120A   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
120B   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120C   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120D   0080           02344                 movwf INDF                                              ;Save to QUEUE
120E   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
120F   0000           02346                 nop                                                             ;Wait a cycle
  0000003D            02347                 count = count + 1
1210   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1211   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1212   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1213   0080           02344                 movwf INDF                                              ;Save to QUEUE
1214   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
1215   0000           02346                 nop                                                             ;Wait a cycle
  0000003E            02347                 count = count + 1
1216   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
1217   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1218   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1219   0080           02344                 movwf INDF                                              ;Save to QUEUE
121A   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
121B   0000           02346                 nop                                                             ;Wait a cycle
  0000003F            02347                 count = count + 1
121C   0808           02341                 movf ADC_DATAPORT, W                    ;Sample
121D   1409           02342                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121E   1009           02343                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121F   0080           02344                 movwf INDF                                              ;Save to QUEUE
1220   0A84           02345                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1221   0000           02346                 nop                                                             ;Wait a cycle
  00000040            02347                 count = count + 1
                      02348         endw
1222   0808           02349         movf ADC_DATAPORT, W
1223   1409           02350         bsf ADC_CONTROLPORT, RDD
1224   1009           02351         bcf ADC_CONTROLPORT, RDD
1225   0080           02352         movwf INDF
1226   1784           02353         bsf FSR, 7                                                      ;goto bank 2
1227   0000           02354         nop                                                                     ;Wait a cycle
  00000001            02355         count = 1
                      02356         while count < BUFFERSIZE
1228   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1229   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122B   0080           02360                 movwf INDF                                              ;Save to QUEUE
122C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
122D   0000           02362                 nop                                                             ;Wait a cycle
  00000002            02363                 count = count + 1
122E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
122F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1230   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1231   0080           02360                 movwf INDF                                              ;Save to QUEUE
1232   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1233   0000           02362                 nop                                                             ;Wait a cycle
  00000003            02363                 count = count + 1
1234   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1235   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1236   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1237   0080           02360                 movwf INDF                                              ;Save to QUEUE
1238   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1239   0000           02362                 nop                                                             ;Wait a cycle
  00000004            02363                 count = count + 1
123A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
123B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123D   0080           02360                 movwf INDF                                              ;Save to QUEUE
123E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
123F   0000           02362                 nop                                                             ;Wait a cycle
  00000005            02363                 count = count + 1
1240   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1241   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1242   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1243   0080           02360                 movwf INDF                                              ;Save to QUEUE
1244   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1245   0000           02362                 nop                                                             ;Wait a cycle
  00000006            02363                 count = count + 1
1246   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1247   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1248   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1249   0080           02360                 movwf INDF                                              ;Save to QUEUE
124A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
124B   0000           02362                 nop                                                             ;Wait a cycle
  00000007            02363                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

124C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
124D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124F   0080           02360                 movwf INDF                                              ;Save to QUEUE
1250   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1251   0000           02362                 nop                                                             ;Wait a cycle
  00000008            02363                 count = count + 1
1252   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1253   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1254   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1255   0080           02360                 movwf INDF                                              ;Save to QUEUE
1256   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1257   0000           02362                 nop                                                             ;Wait a cycle
  00000009            02363                 count = count + 1
1258   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1259   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125B   0080           02360                 movwf INDF                                              ;Save to QUEUE
125C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
125D   0000           02362                 nop                                                             ;Wait a cycle
  0000000A            02363                 count = count + 1
125E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
125F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1260   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1261   0080           02360                 movwf INDF                                              ;Save to QUEUE
1262   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1263   0000           02362                 nop                                                             ;Wait a cycle
  0000000B            02363                 count = count + 1
1264   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1265   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1266   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1267   0080           02360                 movwf INDF                                              ;Save to QUEUE
1268   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1269   0000           02362                 nop                                                             ;Wait a cycle
  0000000C            02363                 count = count + 1
126A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
126B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126D   0080           02360                 movwf INDF                                              ;Save to QUEUE
126E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
126F   0000           02362                 nop                                                             ;Wait a cycle
  0000000D            02363                 count = count + 1
1270   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1271   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1272   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1273   0080           02360                 movwf INDF                                              ;Save to QUEUE
1274   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1275   0000           02362                 nop                                                             ;Wait a cycle
  0000000E            02363                 count = count + 1
1276   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1277   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1278   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1279   0080           02360                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

127A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
127B   0000           02362                 nop                                                             ;Wait a cycle
  0000000F            02363                 count = count + 1
127C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
127D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127F   0080           02360                 movwf INDF                                              ;Save to QUEUE
1280   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1281   0000           02362                 nop                                                             ;Wait a cycle
  00000010            02363                 count = count + 1
1282   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1283   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1284   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1285   0080           02360                 movwf INDF                                              ;Save to QUEUE
1286   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1287   0000           02362                 nop                                                             ;Wait a cycle
  00000011            02363                 count = count + 1
1288   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1289   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128B   0080           02360                 movwf INDF                                              ;Save to QUEUE
128C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
128D   0000           02362                 nop                                                             ;Wait a cycle
  00000012            02363                 count = count + 1
128E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
128F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1290   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1291   0080           02360                 movwf INDF                                              ;Save to QUEUE
1292   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1293   0000           02362                 nop                                                             ;Wait a cycle
  00000013            02363                 count = count + 1
1294   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1295   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1296   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1297   0080           02360                 movwf INDF                                              ;Save to QUEUE
1298   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1299   0000           02362                 nop                                                             ;Wait a cycle
  00000014            02363                 count = count + 1
129A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
129B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129D   0080           02360                 movwf INDF                                              ;Save to QUEUE
129E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
129F   0000           02362                 nop                                                             ;Wait a cycle
  00000015            02363                 count = count + 1
12A0   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12A1   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A2   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A3   0080           02360                 movwf INDF                                              ;Save to QUEUE
12A4   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12A5   0000           02362                 nop                                                             ;Wait a cycle
  00000016            02363                 count = count + 1
12A6   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12A7   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A8   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A9   0080           02360                 movwf INDF                                              ;Save to QUEUE
12AA   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12AB   0000           02362                 nop                                                             ;Wait a cycle
  00000017            02363                 count = count + 1
12AC   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12AD   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AE   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AF   0080           02360                 movwf INDF                                              ;Save to QUEUE
12B0   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12B1   0000           02362                 nop                                                             ;Wait a cycle
  00000018            02363                 count = count + 1
12B2   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12B3   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B4   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B5   0080           02360                 movwf INDF                                              ;Save to QUEUE
12B6   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12B7   0000           02362                 nop                                                             ;Wait a cycle
  00000019            02363                 count = count + 1
12B8   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12B9   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BA   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BB   0080           02360                 movwf INDF                                              ;Save to QUEUE
12BC   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12BD   0000           02362                 nop                                                             ;Wait a cycle
  0000001A            02363                 count = count + 1
12BE   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12BF   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C0   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C1   0080           02360                 movwf INDF                                              ;Save to QUEUE
12C2   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12C3   0000           02362                 nop                                                             ;Wait a cycle
  0000001B            02363                 count = count + 1
12C4   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12C5   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C6   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C7   0080           02360                 movwf INDF                                              ;Save to QUEUE
12C8   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12C9   0000           02362                 nop                                                             ;Wait a cycle
  0000001C            02363                 count = count + 1
12CA   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12CB   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CC   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CD   0080           02360                 movwf INDF                                              ;Save to QUEUE
12CE   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12CF   0000           02362                 nop                                                             ;Wait a cycle
  0000001D            02363                 count = count + 1
12D0   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12D1   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D2   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D3   0080           02360                 movwf INDF                                              ;Save to QUEUE
12D4   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12D5   0000           02362                 nop                                                             ;Wait a cycle
  0000001E            02363                 count = count + 1
12D6   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12D7   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D8   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D9   0080           02360                 movwf INDF                                              ;Save to QUEUE
12DA   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12DB   0000           02362                 nop                                                             ;Wait a cycle
  0000001F            02363                 count = count + 1
12DC   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12DD   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DE   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DF   0080           02360                 movwf INDF                                              ;Save to QUEUE
12E0   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12E1   0000           02362                 nop                                                             ;Wait a cycle
  00000020            02363                 count = count + 1
12E2   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12E3   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E4   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E5   0080           02360                 movwf INDF                                              ;Save to QUEUE
12E6   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12E7   0000           02362                 nop                                                             ;Wait a cycle
  00000021            02363                 count = count + 1
12E8   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12E9   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12EA   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12EB   0080           02360                 movwf INDF                                              ;Save to QUEUE
12EC   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12ED   0000           02362                 nop                                                             ;Wait a cycle
  00000022            02363                 count = count + 1
12EE   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12EF   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F0   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F1   0080           02360                 movwf INDF                                              ;Save to QUEUE
12F2   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12F3   0000           02362                 nop                                                             ;Wait a cycle
  00000023            02363                 count = count + 1
12F4   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12F5   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F6   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F7   0080           02360                 movwf INDF                                              ;Save to QUEUE
12F8   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12F9   0000           02362                 nop                                                             ;Wait a cycle
  00000024            02363                 count = count + 1
12FA   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
12FB   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FC   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FD   0080           02360                 movwf INDF                                              ;Save to QUEUE
12FE   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
12FF   0000           02362                 nop                                                             ;Wait a cycle
  00000025            02363                 count = count + 1
1300   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1301   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1302   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1303   0080           02360                 movwf INDF                                              ;Save to QUEUE
1304   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1305   0000           02362                 nop                                                             ;Wait a cycle
  00000026            02363                 count = count + 1
1306   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1307   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1308   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1309   0080           02360                 movwf INDF                                              ;Save to QUEUE
130A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
130B   0000           02362                 nop                                                             ;Wait a cycle
  00000027            02363                 count = count + 1
130C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
130D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130F   0080           02360                 movwf INDF                                              ;Save to QUEUE
1310   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1311   0000           02362                 nop                                                             ;Wait a cycle
  00000028            02363                 count = count + 1
1312   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1313   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1314   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1315   0080           02360                 movwf INDF                                              ;Save to QUEUE
1316   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1317   0000           02362                 nop                                                             ;Wait a cycle
  00000029            02363                 count = count + 1
1318   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1319   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131B   0080           02360                 movwf INDF                                              ;Save to QUEUE
131C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
131D   0000           02362                 nop                                                             ;Wait a cycle
  0000002A            02363                 count = count + 1
131E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
131F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1320   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1321   0080           02360                 movwf INDF                                              ;Save to QUEUE
1322   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1323   0000           02362                 nop                                                             ;Wait a cycle
  0000002B            02363                 count = count + 1
1324   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1325   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1326   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1327   0080           02360                 movwf INDF                                              ;Save to QUEUE
1328   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1329   0000           02362                 nop                                                             ;Wait a cycle
  0000002C            02363                 count = count + 1
132A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
132B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132D   0080           02360                 movwf INDF                                              ;Save to QUEUE
132E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
132F   0000           02362                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002D            02363                 count = count + 1
1330   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1331   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1332   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1333   0080           02360                 movwf INDF                                              ;Save to QUEUE
1334   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1335   0000           02362                 nop                                                             ;Wait a cycle
  0000002E            02363                 count = count + 1
1336   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1337   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1338   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1339   0080           02360                 movwf INDF                                              ;Save to QUEUE
133A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
133B   0000           02362                 nop                                                             ;Wait a cycle
  0000002F            02363                 count = count + 1
133C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
133D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133F   0080           02360                 movwf INDF                                              ;Save to QUEUE
1340   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1341   0000           02362                 nop                                                             ;Wait a cycle
  00000030            02363                 count = count + 1
1342   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1343   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1344   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1345   0080           02360                 movwf INDF                                              ;Save to QUEUE
1346   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1347   0000           02362                 nop                                                             ;Wait a cycle
  00000031            02363                 count = count + 1
1348   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1349   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134B   0080           02360                 movwf INDF                                              ;Save to QUEUE
134C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
134D   0000           02362                 nop                                                             ;Wait a cycle
  00000032            02363                 count = count + 1
134E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
134F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1350   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1351   0080           02360                 movwf INDF                                              ;Save to QUEUE
1352   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1353   0000           02362                 nop                                                             ;Wait a cycle
  00000033            02363                 count = count + 1
1354   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1355   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1356   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1357   0080           02360                 movwf INDF                                              ;Save to QUEUE
1358   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1359   0000           02362                 nop                                                             ;Wait a cycle
  00000034            02363                 count = count + 1
135A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
135B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

135D   0080           02360                 movwf INDF                                              ;Save to QUEUE
135E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
135F   0000           02362                 nop                                                             ;Wait a cycle
  00000035            02363                 count = count + 1
1360   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1361   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1362   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1363   0080           02360                 movwf INDF                                              ;Save to QUEUE
1364   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1365   0000           02362                 nop                                                             ;Wait a cycle
  00000036            02363                 count = count + 1
1366   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1367   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1368   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1369   0080           02360                 movwf INDF                                              ;Save to QUEUE
136A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
136B   0000           02362                 nop                                                             ;Wait a cycle
  00000037            02363                 count = count + 1
136C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
136D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136F   0080           02360                 movwf INDF                                              ;Save to QUEUE
1370   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1371   0000           02362                 nop                                                             ;Wait a cycle
  00000038            02363                 count = count + 1
1372   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1373   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1374   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1375   0080           02360                 movwf INDF                                              ;Save to QUEUE
1376   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1377   0000           02362                 nop                                                             ;Wait a cycle
  00000039            02363                 count = count + 1
1378   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1379   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137A   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137B   0080           02360                 movwf INDF                                              ;Save to QUEUE
137C   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
137D   0000           02362                 nop                                                             ;Wait a cycle
  0000003A            02363                 count = count + 1
137E   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
137F   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1380   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1381   0080           02360                 movwf INDF                                              ;Save to QUEUE
1382   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1383   0000           02362                 nop                                                             ;Wait a cycle
  0000003B            02363                 count = count + 1
1384   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1385   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1386   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1387   0080           02360                 movwf INDF                                              ;Save to QUEUE
1388   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1389   0000           02362                 nop                                                             ;Wait a cycle
  0000003C            02363                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

138A   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
138B   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138C   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138D   0080           02360                 movwf INDF                                              ;Save to QUEUE
138E   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
138F   0000           02362                 nop                                                             ;Wait a cycle
  0000003D            02363                 count = count + 1
1390   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1391   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1392   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1393   0080           02360                 movwf INDF                                              ;Save to QUEUE
1394   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
1395   0000           02362                 nop                                                             ;Wait a cycle
  0000003E            02363                 count = count + 1
1396   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
1397   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1398   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1399   0080           02360                 movwf INDF                                              ;Save to QUEUE
139A   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
139B   0000           02362                 nop                                                             ;Wait a cycle
  0000003F            02363                 count = count + 1
139C   0808           02357                 movf ADC_DATAPORT, W                    ;Sample
139D   1409           02358                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139E   1009           02359                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139F   0080           02360                 movwf INDF                                              ;Save to QUEUE
13A0   0384           02361                 decf FSR, F                                             ;Increment QUEUE pointer
13A1   0000           02362                 nop                                                             ;Wait a cycle
  00000040            02363                 count = count + 1
                      02364         endw
13A2   0808           02365         movf ADC_DATAPORT, W
13A3   1409           02366         bsf ADC_CONTROLPORT, RDD
13A4   1009           02367         bcf ADC_CONTROLPORT, RDD
13A5   0080           02368         movwf INDF
13A6   1783           02369         bsf STATUS, IRP                                         ;goto bank 4
13A7   0000           02370         nop                                                                     ;Wait a cycle
  00000001            02371         count = 1
                      02372         while count < D'44'
13A8   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13A9   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AA   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AB   0080           02376                 movwf INDF                                              ;Save to QUEUE
13AC   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13AD   0000           02378                 nop                                                             ;Wait a cycle
  00000002            02379                 count = count + 1
13AE   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13AF   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B0   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B1   0080           02376                 movwf INDF                                              ;Save to QUEUE
13B2   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13B3   0000           02378                 nop                                                             ;Wait a cycle
  00000003            02379                 count = count + 1
13B4   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13B5   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13B6   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B7   0080           02376                 movwf INDF                                              ;Save to QUEUE
13B8   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13B9   0000           02378                 nop                                                             ;Wait a cycle
  00000004            02379                 count = count + 1
13BA   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13BB   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BC   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BD   0080           02376                 movwf INDF                                              ;Save to QUEUE
13BE   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13BF   0000           02378                 nop                                                             ;Wait a cycle
  00000005            02379                 count = count + 1
13C0   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13C1   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C2   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C3   0080           02376                 movwf INDF                                              ;Save to QUEUE
13C4   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13C5   0000           02378                 nop                                                             ;Wait a cycle
  00000006            02379                 count = count + 1
13C6   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13C7   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C8   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C9   0080           02376                 movwf INDF                                              ;Save to QUEUE
13CA   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13CB   0000           02378                 nop                                                             ;Wait a cycle
  00000007            02379                 count = count + 1
13CC   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13CD   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CE   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CF   0080           02376                 movwf INDF                                              ;Save to QUEUE
13D0   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13D1   0000           02378                 nop                                                             ;Wait a cycle
  00000008            02379                 count = count + 1
13D2   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13D3   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D4   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D5   0080           02376                 movwf INDF                                              ;Save to QUEUE
13D6   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13D7   0000           02378                 nop                                                             ;Wait a cycle
  00000009            02379                 count = count + 1
13D8   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13D9   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DA   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DB   0080           02376                 movwf INDF                                              ;Save to QUEUE
13DC   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13DD   0000           02378                 nop                                                             ;Wait a cycle
  0000000A            02379                 count = count + 1
13DE   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13DF   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E0   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E1   0080           02376                 movwf INDF                                              ;Save to QUEUE
13E2   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13E3   0000           02378                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            02379                 count = count + 1
13E4   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13E5   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E6   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E7   0080           02376                 movwf INDF                                              ;Save to QUEUE
13E8   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13E9   0000           02378                 nop                                                             ;Wait a cycle
  0000000C            02379                 count = count + 1
13EA   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13EB   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EC   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13ED   0080           02376                 movwf INDF                                              ;Save to QUEUE
13EE   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13EF   0000           02378                 nop                                                             ;Wait a cycle
  0000000D            02379                 count = count + 1
13F0   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13F1   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F2   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F3   0080           02376                 movwf INDF                                              ;Save to QUEUE
13F4   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13F5   0000           02378                 nop                                                             ;Wait a cycle
  0000000E            02379                 count = count + 1
13F6   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13F7   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F8   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F9   0080           02376                 movwf INDF                                              ;Save to QUEUE
13FA   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
13FB   0000           02378                 nop                                                             ;Wait a cycle
  0000000F            02379                 count = count + 1
13FC   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
13FD   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FE   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FF   0080           02376                 movwf INDF                                              ;Save to QUEUE
1400   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1401   0000           02378                 nop                                                             ;Wait a cycle
  00000010            02379                 count = count + 1
1402   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1403   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1404   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1405   0080           02376                 movwf INDF                                              ;Save to QUEUE
1406   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1407   0000           02378                 nop                                                             ;Wait a cycle
  00000011            02379                 count = count + 1
1408   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1409   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140A   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140B   0080           02376                 movwf INDF                                              ;Save to QUEUE
140C   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
140D   0000           02378                 nop                                                             ;Wait a cycle
  00000012            02379                 count = count + 1
140E   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
140F   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1410   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1411   0080           02376                 movwf INDF                                              ;Save to QUEUE
1412   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1413   0000           02378                 nop                                                             ;Wait a cycle
  00000013            02379                 count = count + 1
1414   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1415   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1416   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1417   0080           02376                 movwf INDF                                              ;Save to QUEUE
1418   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1419   0000           02378                 nop                                                             ;Wait a cycle
  00000014            02379                 count = count + 1
141A   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
141B   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141C   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141D   0080           02376                 movwf INDF                                              ;Save to QUEUE
141E   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
141F   0000           02378                 nop                                                             ;Wait a cycle
  00000015            02379                 count = count + 1
1420   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1421   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1422   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1423   0080           02376                 movwf INDF                                              ;Save to QUEUE
1424   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1425   0000           02378                 nop                                                             ;Wait a cycle
  00000016            02379                 count = count + 1
1426   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1427   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1428   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1429   0080           02376                 movwf INDF                                              ;Save to QUEUE
142A   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
142B   0000           02378                 nop                                                             ;Wait a cycle
  00000017            02379                 count = count + 1
142C   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
142D   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142E   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142F   0080           02376                 movwf INDF                                              ;Save to QUEUE
1430   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1431   0000           02378                 nop                                                             ;Wait a cycle
  00000018            02379                 count = count + 1
1432   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1433   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1434   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1435   0080           02376                 movwf INDF                                              ;Save to QUEUE
1436   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1437   0000           02378                 nop                                                             ;Wait a cycle
  00000019            02379                 count = count + 1
1438   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1439   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143A   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143B   0080           02376                 movwf INDF                                              ;Save to QUEUE
143C   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
143D   0000           02378                 nop                                                             ;Wait a cycle
  0000001A            02379                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

143E   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
143F   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1440   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1441   0080           02376                 movwf INDF                                              ;Save to QUEUE
1442   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1443   0000           02378                 nop                                                             ;Wait a cycle
  0000001B            02379                 count = count + 1
1444   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1445   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1446   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1447   0080           02376                 movwf INDF                                              ;Save to QUEUE
1448   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1449   0000           02378                 nop                                                             ;Wait a cycle
  0000001C            02379                 count = count + 1
144A   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
144B   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144C   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144D   0080           02376                 movwf INDF                                              ;Save to QUEUE
144E   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
144F   0000           02378                 nop                                                             ;Wait a cycle
  0000001D            02379                 count = count + 1
1450   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1451   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1452   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1453   0080           02376                 movwf INDF                                              ;Save to QUEUE
1454   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1455   0000           02378                 nop                                                             ;Wait a cycle
  0000001E            02379                 count = count + 1
1456   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1457   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1458   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1459   0080           02376                 movwf INDF                                              ;Save to QUEUE
145A   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
145B   0000           02378                 nop                                                             ;Wait a cycle
  0000001F            02379                 count = count + 1
145C   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
145D   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145E   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145F   0080           02376                 movwf INDF                                              ;Save to QUEUE
1460   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1461   0000           02378                 nop                                                             ;Wait a cycle
  00000020            02379                 count = count + 1
1462   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1463   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1464   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1465   0080           02376                 movwf INDF                                              ;Save to QUEUE
1466   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1467   0000           02378                 nop                                                             ;Wait a cycle
  00000021            02379                 count = count + 1
1468   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1469   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146A   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146B   0080           02376                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

146C   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
146D   0000           02378                 nop                                                             ;Wait a cycle
  00000022            02379                 count = count + 1
146E   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
146F   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1470   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1471   0080           02376                 movwf INDF                                              ;Save to QUEUE
1472   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1473   0000           02378                 nop                                                             ;Wait a cycle
  00000023            02379                 count = count + 1
1474   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1475   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1476   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1477   0080           02376                 movwf INDF                                              ;Save to QUEUE
1478   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1479   0000           02378                 nop                                                             ;Wait a cycle
  00000024            02379                 count = count + 1
147A   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
147B   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147C   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147D   0080           02376                 movwf INDF                                              ;Save to QUEUE
147E   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
147F   0000           02378                 nop                                                             ;Wait a cycle
  00000025            02379                 count = count + 1
1480   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1481   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1482   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1483   0080           02376                 movwf INDF                                              ;Save to QUEUE
1484   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1485   0000           02378                 nop                                                             ;Wait a cycle
  00000026            02379                 count = count + 1
1486   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1487   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1488   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1489   0080           02376                 movwf INDF                                              ;Save to QUEUE
148A   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
148B   0000           02378                 nop                                                             ;Wait a cycle
  00000027            02379                 count = count + 1
148C   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
148D   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148E   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148F   0080           02376                 movwf INDF                                              ;Save to QUEUE
1490   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1491   0000           02378                 nop                                                             ;Wait a cycle
  00000028            02379                 count = count + 1
1492   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
1493   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1494   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1495   0080           02376                 movwf INDF                                              ;Save to QUEUE
1496   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
1497   0000           02378                 nop                                                             ;Wait a cycle
  00000029            02379                 count = count + 1
1498   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1499   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149A   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149B   0080           02376                 movwf INDF                                              ;Save to QUEUE
149C   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
149D   0000           02378                 nop                                                             ;Wait a cycle
  0000002A            02379                 count = count + 1
149E   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
149F   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A0   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A1   0080           02376                 movwf INDF                                              ;Save to QUEUE
14A2   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
14A3   0000           02378                 nop                                                             ;Wait a cycle
  0000002B            02379                 count = count + 1
14A4   0808           02373                 movf ADC_DATAPORT, W                    ;Sample
14A5   1409           02374                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A6   1009           02375                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A7   0080           02376                 movwf INDF                                              ;Save to QUEUE
14A8   0A84           02377                 incf FSR, F                                             ;Increment QUEUE pointer
14A9   0000           02378                 nop                                                             ;Wait a cycle
  0000002C            02379                 count = count + 1
                      02380         endw
14AA                  02381 Sample833kEnd
                      02382         while count < BUFFERSIZE
14AA   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14AB   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AC   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AD   0080           02386                 movwf INDF                                              ;Save to QUEUE
14AE   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14AF   0000           02388                 nop                                                             ;Wait a cycle
  0000002D            02389                 count = count + 1
14B0   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14B1   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B2   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B3   0080           02386                 movwf INDF                                              ;Save to QUEUE
14B4   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14B5   0000           02388                 nop                                                             ;Wait a cycle
  0000002E            02389                 count = count + 1
14B6   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14B7   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B8   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B9   0080           02386                 movwf INDF                                              ;Save to QUEUE
14BA   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14BB   0000           02388                 nop                                                             ;Wait a cycle
  0000002F            02389                 count = count + 1
14BC   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14BD   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BE   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BF   0080           02386                 movwf INDF                                              ;Save to QUEUE
14C0   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14C1   0000           02388                 nop                                                             ;Wait a cycle
  00000030            02389                 count = count + 1
14C2   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14C3   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14C4   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C5   0080           02386                 movwf INDF                                              ;Save to QUEUE
14C6   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14C7   0000           02388                 nop                                                             ;Wait a cycle
  00000031            02389                 count = count + 1
14C8   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14C9   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CA   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CB   0080           02386                 movwf INDF                                              ;Save to QUEUE
14CC   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14CD   0000           02388                 nop                                                             ;Wait a cycle
  00000032            02389                 count = count + 1
14CE   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14CF   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D0   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D1   0080           02386                 movwf INDF                                              ;Save to QUEUE
14D2   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14D3   0000           02388                 nop                                                             ;Wait a cycle
  00000033            02389                 count = count + 1
14D4   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14D5   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D6   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D7   0080           02386                 movwf INDF                                              ;Save to QUEUE
14D8   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14D9   0000           02388                 nop                                                             ;Wait a cycle
  00000034            02389                 count = count + 1
14DA   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14DB   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DC   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DD   0080           02386                 movwf INDF                                              ;Save to QUEUE
14DE   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14DF   0000           02388                 nop                                                             ;Wait a cycle
  00000035            02389                 count = count + 1
14E0   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14E1   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E2   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E3   0080           02386                 movwf INDF                                              ;Save to QUEUE
14E4   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14E5   0000           02388                 nop                                                             ;Wait a cycle
  00000036            02389                 count = count + 1
14E6   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14E7   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E8   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E9   0080           02386                 movwf INDF                                              ;Save to QUEUE
14EA   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14EB   0000           02388                 nop                                                             ;Wait a cycle
  00000037            02389                 count = count + 1
14EC   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14ED   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EE   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EF   0080           02386                 movwf INDF                                              ;Save to QUEUE
14F0   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14F1   0000           02388                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000038            02389                 count = count + 1
14F2   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14F3   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F4   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F5   0080           02386                 movwf INDF                                              ;Save to QUEUE
14F6   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14F7   0000           02388                 nop                                                             ;Wait a cycle
  00000039            02389                 count = count + 1
14F8   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14F9   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FA   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FB   0080           02386                 movwf INDF                                              ;Save to QUEUE
14FC   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
14FD   0000           02388                 nop                                                             ;Wait a cycle
  0000003A            02389                 count = count + 1
14FE   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
14FF   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1500   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1501   0080           02386                 movwf INDF                                              ;Save to QUEUE
1502   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
1503   0000           02388                 nop                                                             ;Wait a cycle
  0000003B            02389                 count = count + 1
1504   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
1505   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1506   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1507   0080           02386                 movwf INDF                                              ;Save to QUEUE
1508   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
1509   0000           02388                 nop                                                             ;Wait a cycle
  0000003C            02389                 count = count + 1
150A   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
150B   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150C   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150D   0080           02386                 movwf INDF                                              ;Save to QUEUE
150E   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
150F   0000           02388                 nop                                                             ;Wait a cycle
  0000003D            02389                 count = count + 1
1510   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
1511   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1512   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1513   0080           02386                 movwf INDF                                              ;Save to QUEUE
1514   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
1515   0000           02388                 nop                                                             ;Wait a cycle
  0000003E            02389                 count = count + 1
1516   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
1517   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1518   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1519   0080           02386                 movwf INDF                                              ;Save to QUEUE
151A   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
151B   0000           02388                 nop                                                             ;Wait a cycle
  0000003F            02389                 count = count + 1
151C   0808           02383                 movf ADC_DATAPORT, W                    ;Sample
151D   1409           02384                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151E   1009           02385                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

151F   0080           02386                 movwf INDF                                              ;Save to QUEUE
1520   0A84           02387                 incf FSR, F                                             ;Increment QUEUE pointer
1521   0000           02388                 nop                                                             ;Wait a cycle
  00000040            02389                 count = count + 1
                      02390         endw
1522   0808           02391         movf ADC_DATAPORT, W
1523   1409           02392         bsf ADC_CONTROLPORT, RDD
1524   1009           02393         bcf ADC_CONTROLPORT, RDD
1525   0080           02394         movwf INDF
1526   1384           02395         bcf FSR, 7                                                      ;goto bank 3
1527   0000           02396         nop                                                                     ;Wait a cycle
  00000001            02397         count = 1
                      02398         while count < BUFFERSIZE
1528   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1529   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152B   0080           02402                 movwf INDF                                              ;Save to QUEUE
152C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
152D   0000           02404                 nop                                                             ;Wait a cycle
  00000002            02405                 count = count + 1
152E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
152F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1530   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1531   0080           02402                 movwf INDF                                              ;Save to QUEUE
1532   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1533   0000           02404                 nop                                                             ;Wait a cycle
  00000003            02405                 count = count + 1
1534   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1535   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1536   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1537   0080           02402                 movwf INDF                                              ;Save to QUEUE
1538   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1539   0000           02404                 nop                                                             ;Wait a cycle
  00000004            02405                 count = count + 1
153A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
153B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153D   0080           02402                 movwf INDF                                              ;Save to QUEUE
153E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
153F   0000           02404                 nop                                                             ;Wait a cycle
  00000005            02405                 count = count + 1
1540   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1541   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1542   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1543   0080           02402                 movwf INDF                                              ;Save to QUEUE
1544   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1545   0000           02404                 nop                                                             ;Wait a cycle
  00000006            02405                 count = count + 1
1546   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1547   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1548   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1549   0080           02402                 movwf INDF                                              ;Save to QUEUE
154A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

154B   0000           02404                 nop                                                             ;Wait a cycle
  00000007            02405                 count = count + 1
154C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
154D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154F   0080           02402                 movwf INDF                                              ;Save to QUEUE
1550   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1551   0000           02404                 nop                                                             ;Wait a cycle
  00000008            02405                 count = count + 1
1552   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1553   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1554   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1555   0080           02402                 movwf INDF                                              ;Save to QUEUE
1556   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1557   0000           02404                 nop                                                             ;Wait a cycle
  00000009            02405                 count = count + 1
1558   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1559   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155B   0080           02402                 movwf INDF                                              ;Save to QUEUE
155C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
155D   0000           02404                 nop                                                             ;Wait a cycle
  0000000A            02405                 count = count + 1
155E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
155F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1560   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1561   0080           02402                 movwf INDF                                              ;Save to QUEUE
1562   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1563   0000           02404                 nop                                                             ;Wait a cycle
  0000000B            02405                 count = count + 1
1564   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1565   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1566   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1567   0080           02402                 movwf INDF                                              ;Save to QUEUE
1568   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1569   0000           02404                 nop                                                             ;Wait a cycle
  0000000C            02405                 count = count + 1
156A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
156B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156D   0080           02402                 movwf INDF                                              ;Save to QUEUE
156E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
156F   0000           02404                 nop                                                             ;Wait a cycle
  0000000D            02405                 count = count + 1
1570   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1571   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1572   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1573   0080           02402                 movwf INDF                                              ;Save to QUEUE
1574   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1575   0000           02404                 nop                                                             ;Wait a cycle
  0000000E            02405                 count = count + 1
1576   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1577   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1578   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1579   0080           02402                 movwf INDF                                              ;Save to QUEUE
157A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
157B   0000           02404                 nop                                                             ;Wait a cycle
  0000000F            02405                 count = count + 1
157C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
157D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157F   0080           02402                 movwf INDF                                              ;Save to QUEUE
1580   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1581   0000           02404                 nop                                                             ;Wait a cycle
  00000010            02405                 count = count + 1
1582   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1583   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1584   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1585   0080           02402                 movwf INDF                                              ;Save to QUEUE
1586   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1587   0000           02404                 nop                                                             ;Wait a cycle
  00000011            02405                 count = count + 1
1588   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1589   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158B   0080           02402                 movwf INDF                                              ;Save to QUEUE
158C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
158D   0000           02404                 nop                                                             ;Wait a cycle
  00000012            02405                 count = count + 1
158E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
158F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1590   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1591   0080           02402                 movwf INDF                                              ;Save to QUEUE
1592   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1593   0000           02404                 nop                                                             ;Wait a cycle
  00000013            02405                 count = count + 1
1594   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1595   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1596   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1597   0080           02402                 movwf INDF                                              ;Save to QUEUE
1598   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1599   0000           02404                 nop                                                             ;Wait a cycle
  00000014            02405                 count = count + 1
159A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
159B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159D   0080           02402                 movwf INDF                                              ;Save to QUEUE
159E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
159F   0000           02404                 nop                                                             ;Wait a cycle
  00000015            02405                 count = count + 1
15A0   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15A1   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A2   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A3   0080           02402                 movwf INDF                                              ;Save to QUEUE
15A4   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15A5   0000           02404                 nop                                                             ;Wait a cycle
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            02405                 count = count + 1
15A6   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15A7   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A8   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A9   0080           02402                 movwf INDF                                              ;Save to QUEUE
15AA   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15AB   0000           02404                 nop                                                             ;Wait a cycle
  00000017            02405                 count = count + 1
15AC   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15AD   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AE   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AF   0080           02402                 movwf INDF                                              ;Save to QUEUE
15B0   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15B1   0000           02404                 nop                                                             ;Wait a cycle
  00000018            02405                 count = count + 1
15B2   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15B3   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B4   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B5   0080           02402                 movwf INDF                                              ;Save to QUEUE
15B6   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15B7   0000           02404                 nop                                                             ;Wait a cycle
  00000019            02405                 count = count + 1
15B8   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15B9   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15BA   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BB   0080           02402                 movwf INDF                                              ;Save to QUEUE
15BC   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15BD   0000           02404                 nop                                                             ;Wait a cycle
  0000001A            02405                 count = count + 1
15BE   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15BF   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C0   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C1   0080           02402                 movwf INDF                                              ;Save to QUEUE
15C2   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15C3   0000           02404                 nop                                                             ;Wait a cycle
  0000001B            02405                 count = count + 1
15C4   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15C5   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C6   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C7   0080           02402                 movwf INDF                                              ;Save to QUEUE
15C8   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15C9   0000           02404                 nop                                                             ;Wait a cycle
  0000001C            02405                 count = count + 1
15CA   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15CB   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15CC   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15CD   0080           02402                 movwf INDF                                              ;Save to QUEUE
15CE   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15CF   0000           02404                 nop                                                             ;Wait a cycle
  0000001D            02405                 count = count + 1
15D0   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15D1   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15D2   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15D3   0080           02402                 movwf INDF                                              ;Save to QUEUE
15D4   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15D5   0000           02404                 nop                                                             ;Wait a cycle
  0000001E            02405                 count = count + 1
15D6   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15D7   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15D8   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15D9   0080           02402                 movwf INDF                                              ;Save to QUEUE
15DA   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15DB   0000           02404                 nop                                                             ;Wait a cycle
  0000001F            02405                 count = count + 1
15DC   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15DD   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15DE   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15DF   0080           02402                 movwf INDF                                              ;Save to QUEUE
15E0   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15E1   0000           02404                 nop                                                             ;Wait a cycle
  00000020            02405                 count = count + 1
15E2   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15E3   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15E4   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15E5   0080           02402                 movwf INDF                                              ;Save to QUEUE
15E6   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15E7   0000           02404                 nop                                                             ;Wait a cycle
  00000021            02405                 count = count + 1
15E8   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15E9   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15EA   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15EB   0080           02402                 movwf INDF                                              ;Save to QUEUE
15EC   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15ED   0000           02404                 nop                                                             ;Wait a cycle
  00000022            02405                 count = count + 1
15EE   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15EF   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15F0   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15F1   0080           02402                 movwf INDF                                              ;Save to QUEUE
15F2   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15F3   0000           02404                 nop                                                             ;Wait a cycle
  00000023            02405                 count = count + 1
15F4   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15F5   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15F6   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15F7   0080           02402                 movwf INDF                                              ;Save to QUEUE
15F8   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15F9   0000           02404                 nop                                                             ;Wait a cycle
  00000024            02405                 count = count + 1
15FA   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
15FB   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15FC   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15FD   0080           02402                 movwf INDF                                              ;Save to QUEUE
15FE   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
15FF   0000           02404                 nop                                                             ;Wait a cycle
  00000025            02405                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1600   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1601   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1602   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1603   0080           02402                 movwf INDF                                              ;Save to QUEUE
1604   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1605   0000           02404                 nop                                                             ;Wait a cycle
  00000026            02405                 count = count + 1
1606   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1607   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1608   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1609   0080           02402                 movwf INDF                                              ;Save to QUEUE
160A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
160B   0000           02404                 nop                                                             ;Wait a cycle
  00000027            02405                 count = count + 1
160C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
160D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
160E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
160F   0080           02402                 movwf INDF                                              ;Save to QUEUE
1610   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1611   0000           02404                 nop                                                             ;Wait a cycle
  00000028            02405                 count = count + 1
1612   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1613   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1614   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1615   0080           02402                 movwf INDF                                              ;Save to QUEUE
1616   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1617   0000           02404                 nop                                                             ;Wait a cycle
  00000029            02405                 count = count + 1
1618   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1619   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
161A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
161B   0080           02402                 movwf INDF                                              ;Save to QUEUE
161C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
161D   0000           02404                 nop                                                             ;Wait a cycle
  0000002A            02405                 count = count + 1
161E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
161F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1620   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1621   0080           02402                 movwf INDF                                              ;Save to QUEUE
1622   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1623   0000           02404                 nop                                                             ;Wait a cycle
  0000002B            02405                 count = count + 1
1624   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1625   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1626   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1627   0080           02402                 movwf INDF                                              ;Save to QUEUE
1628   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1629   0000           02404                 nop                                                             ;Wait a cycle
  0000002C            02405                 count = count + 1
162A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
162B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
162C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
162D   0080           02402                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

162E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
162F   0000           02404                 nop                                                             ;Wait a cycle
  0000002D            02405                 count = count + 1
1630   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1631   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1632   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1633   0080           02402                 movwf INDF                                              ;Save to QUEUE
1634   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1635   0000           02404                 nop                                                             ;Wait a cycle
  0000002E            02405                 count = count + 1
1636   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1637   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1638   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1639   0080           02402                 movwf INDF                                              ;Save to QUEUE
163A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
163B   0000           02404                 nop                                                             ;Wait a cycle
  0000002F            02405                 count = count + 1
163C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
163D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
163E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
163F   0080           02402                 movwf INDF                                              ;Save to QUEUE
1640   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1641   0000           02404                 nop                                                             ;Wait a cycle
  00000030            02405                 count = count + 1
1642   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1643   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1644   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1645   0080           02402                 movwf INDF                                              ;Save to QUEUE
1646   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1647   0000           02404                 nop                                                             ;Wait a cycle
  00000031            02405                 count = count + 1
1648   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1649   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
164A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
164B   0080           02402                 movwf INDF                                              ;Save to QUEUE
164C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
164D   0000           02404                 nop                                                             ;Wait a cycle
  00000032            02405                 count = count + 1
164E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
164F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1650   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1651   0080           02402                 movwf INDF                                              ;Save to QUEUE
1652   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1653   0000           02404                 nop                                                             ;Wait a cycle
  00000033            02405                 count = count + 1
1654   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1655   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1656   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1657   0080           02402                 movwf INDF                                              ;Save to QUEUE
1658   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1659   0000           02404                 nop                                                             ;Wait a cycle
  00000034            02405                 count = count + 1
165A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

165B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
165C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
165D   0080           02402                 movwf INDF                                              ;Save to QUEUE
165E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
165F   0000           02404                 nop                                                             ;Wait a cycle
  00000035            02405                 count = count + 1
1660   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1661   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1662   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1663   0080           02402                 movwf INDF                                              ;Save to QUEUE
1664   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1665   0000           02404                 nop                                                             ;Wait a cycle
  00000036            02405                 count = count + 1
1666   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1667   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1668   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1669   0080           02402                 movwf INDF                                              ;Save to QUEUE
166A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
166B   0000           02404                 nop                                                             ;Wait a cycle
  00000037            02405                 count = count + 1
166C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
166D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
166E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
166F   0080           02402                 movwf INDF                                              ;Save to QUEUE
1670   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1671   0000           02404                 nop                                                             ;Wait a cycle
  00000038            02405                 count = count + 1
1672   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1673   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1674   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1675   0080           02402                 movwf INDF                                              ;Save to QUEUE
1676   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1677   0000           02404                 nop                                                             ;Wait a cycle
  00000039            02405                 count = count + 1
1678   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1679   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
167A   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
167B   0080           02402                 movwf INDF                                              ;Save to QUEUE
167C   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
167D   0000           02404                 nop                                                             ;Wait a cycle
  0000003A            02405                 count = count + 1
167E   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
167F   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1680   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1681   0080           02402                 movwf INDF                                              ;Save to QUEUE
1682   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1683   0000           02404                 nop                                                             ;Wait a cycle
  0000003B            02405                 count = count + 1
1684   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1685   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1686   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1687   0080           02402                 movwf INDF                                              ;Save to QUEUE
1688   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1689   0000           02404                 nop                                                             ;Wait a cycle
  0000003C            02405                 count = count + 1
168A   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
168B   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
168C   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
168D   0080           02402                 movwf INDF                                              ;Save to QUEUE
168E   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
168F   0000           02404                 nop                                                             ;Wait a cycle
  0000003D            02405                 count = count + 1
1690   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1691   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1692   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1693   0080           02402                 movwf INDF                                              ;Save to QUEUE
1694   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
1695   0000           02404                 nop                                                             ;Wait a cycle
  0000003E            02405                 count = count + 1
1696   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
1697   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1698   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1699   0080           02402                 movwf INDF                                              ;Save to QUEUE
169A   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
169B   0000           02404                 nop                                                             ;Wait a cycle
  0000003F            02405                 count = count + 1
169C   0808           02399                 movf ADC_DATAPORT, W                    ;Sample
169D   1409           02400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
169E   1009           02401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
169F   0080           02402                 movwf INDF                                              ;Save to QUEUE
16A0   0384           02403                 decf FSR, F                                             ;Increment QUEUE pointer
16A1   0000           02404                 nop                                                             ;Wait a cycle
  00000040            02405                 count = count + 1
                      02406         endw
16A2   0808           02407         movf ADC_DATAPORT, W                            ;Last sample
16A3   1409           02408         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16A4   118A           02409         bcf PCLATH, 3                                           ;insure correct program memory page
16A5   120A           02410         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
16A6   293A           02411         goto ADCShutdown
                      02412 
                      02413 ;Repetitive sample
                      02414 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      02415 ;-----------------------------------------------------------------------------
16A7                  02416 SampleRep5M
16A7   3016           02417         movlw high SampleRep5MPickSt
16A8   008A           02418         movwf PCLATH
16A9   0879           02419         movf gbl_modetempb, w
16AA   0782           02420         addwf PCL, f
16AB                  02421 SampleRep5MPickSt
                      02422         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
16AB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16AC   118A               M                 bcf PCLATH, 3
                          M         endif
16AD   2EBA               M         goto SampleRep5MStep1
                      02423         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
16AE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16AF   118A               M                 bcf PCLATH, 3
                          M         endif
16B0   2FCA               M         goto SampleRep5MStep2
                      02424         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
16B1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
16B2   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16B3   28CD               M         goto SampleRep5MStep3
                      02425         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
16B4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
16B5   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16B6   29D0               M         goto SampleRep5MStep4
                      02426         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
16B7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
16B8   158A               M                 bsf PCLATH, 3
                          M         else
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16B9   2AD4               M         goto SampleRep5MStep5
16BA                  02427 SampleRep5MPickEn
16BA                  02428 SampleRep5MStep1
16BA   1009           02429         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02430         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
16BB   3020               M     movlw BUFFERMIN
16BC   0084               M     movwf FSR
16BD   0000           02431         nop
  0000                02432         local count
  00000001            02433         count = 1
                      02434         while count < D'52'
16BE   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BF   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C0   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16C1   0080           02438                 movwf INDF                                              ;Save to QUEUE
16C2   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02440                 count = count + 1
16C3   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C4   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C5   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16C6   0080           02438                 movwf INDF                                              ;Save to QUEUE
16C7   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02440                 count = count + 1
16C8   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C9   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CA   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16CB   0080           02438                 movwf INDF                                              ;Save to QUEUE
16CC   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02440                 count = count + 1
16CD   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CE   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CF   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16D0   0080           02438                 movwf INDF                                              ;Save to QUEUE
16D1   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02440                 count = count + 1
16D2   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D3   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D4   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16D5   0080           02438                 movwf INDF                                              ;Save to QUEUE
16D6   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02440                 count = count + 1
16D7   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D8   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D9   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16DA   0080           02438                 movwf INDF                                              ;Save to QUEUE
16DB   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02440                 count = count + 1
16DC   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16DD   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DE   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16DF   0080           02438                 movwf INDF                                              ;Save to QUEUE
16E0   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02440                 count = count + 1
16E1   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E2   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E3   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16E4   0080           02438                 movwf INDF                                              ;Save to QUEUE
16E5   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02440                 count = count + 1
16E6   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E7   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E8   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16E9   0080           02438                 movwf INDF                                              ;Save to QUEUE
16EA   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02440                 count = count + 1
16EB   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16EC   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16ED   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16EE   0080           02438                 movwf INDF                                              ;Save to QUEUE
16EF   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02440                 count = count + 1
16F0   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F1   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F2   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16F3   0080           02438                 movwf INDF                                              ;Save to QUEUE
16F4   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02440                 count = count + 1
16F5   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F6   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F7   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16F8   0080           02438                 movwf INDF                                              ;Save to QUEUE
16F9   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02440                 count = count + 1
16FA   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FB   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FC   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
16FD   0080           02438                 movwf INDF                                              ;Save to QUEUE
16FE   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02440                 count = count + 1
16FF   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1700   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1701   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1702   0080           02438                 movwf INDF                                              ;Save to QUEUE
1703   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02440                 count = count + 1
1704   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1705   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1706   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1707   0080           02438                 movwf INDF                                              ;Save to QUEUE
1708   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02440                 count = count + 1
1709   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170A   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

170B   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
170C   0080           02438                 movwf INDF                                              ;Save to QUEUE
170D   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02440                 count = count + 1
170E   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170F   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1710   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1711   0080           02438                 movwf INDF                                              ;Save to QUEUE
1712   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02440                 count = count + 1
1713   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1714   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1715   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1716   0080           02438                 movwf INDF                                              ;Save to QUEUE
1717   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02440                 count = count + 1
1718   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1719   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171A   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
171B   0080           02438                 movwf INDF                                              ;Save to QUEUE
171C   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02440                 count = count + 1
171D   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171E   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171F   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1720   0080           02438                 movwf INDF                                              ;Save to QUEUE
1721   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02440                 count = count + 1
1722   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1723   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1724   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1725   0080           02438                 movwf INDF                                              ;Save to QUEUE
1726   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02440                 count = count + 1
1727   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1728   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1729   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
172A   0080           02438                 movwf INDF                                              ;Save to QUEUE
172B   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02440                 count = count + 1
172C   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
172D   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
172E   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
172F   0080           02438                 movwf INDF                                              ;Save to QUEUE
1730   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02440                 count = count + 1
1731   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1732   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1733   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1734   0080           02438                 movwf INDF                                              ;Save to QUEUE
1735   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02440                 count = count + 1
1736   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1737   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1738   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1739   0080           02438                 movwf INDF                                              ;Save to QUEUE
173A   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02440                 count = count + 1
173B   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
173C   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
173D   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
173E   0080           02438                 movwf INDF                                              ;Save to QUEUE
173F   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02440                 count = count + 1
1740   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1741   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1742   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1743   0080           02438                 movwf INDF                                              ;Save to QUEUE
1744   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02440                 count = count + 1
1745   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1746   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1747   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1748   0080           02438                 movwf INDF                                              ;Save to QUEUE
1749   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02440                 count = count + 1
174A   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
174B   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
174C   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
174D   0080           02438                 movwf INDF                                              ;Save to QUEUE
174E   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02440                 count = count + 1
174F   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1750   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1751   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1752   0080           02438                 movwf INDF                                              ;Save to QUEUE
1753   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02440                 count = count + 1
1754   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1755   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1756   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1757   0080           02438                 movwf INDF                                              ;Save to QUEUE
1758   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02440                 count = count + 1
1759   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
175A   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
175B   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
175C   0080           02438                 movwf INDF                                              ;Save to QUEUE
175D   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02440                 count = count + 1
175E   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
175F   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1760   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1761   0080           02438                 movwf INDF                                              ;Save to QUEUE
1762   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02440                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1763   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1764   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1765   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1766   0080           02438                 movwf INDF                                              ;Save to QUEUE
1767   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02440                 count = count + 1
1768   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1769   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
176A   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
176B   0080           02438                 movwf INDF                                              ;Save to QUEUE
176C   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02440                 count = count + 1
176D   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
176E   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
176F   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1770   0080           02438                 movwf INDF                                              ;Save to QUEUE
1771   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02440                 count = count + 1
1772   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1773   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1774   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1775   0080           02438                 movwf INDF                                              ;Save to QUEUE
1776   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02440                 count = count + 1
1777   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1778   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1779   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
177A   0080           02438                 movwf INDF                                              ;Save to QUEUE
177B   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02440                 count = count + 1
177C   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
177D   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
177E   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
177F   0080           02438                 movwf INDF                                              ;Save to QUEUE
1780   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02440                 count = count + 1
1781   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1782   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1783   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1784   0080           02438                 movwf INDF                                              ;Save to QUEUE
1785   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02440                 count = count + 1
1786   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1787   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1788   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1789   0080           02438                 movwf INDF                                              ;Save to QUEUE
178A   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02440                 count = count + 1
178B   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
178C   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
178D   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
178E   0080           02438                 movwf INDF                                              ;Save to QUEUE
178F   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002B            02440                 count = count + 1
1790   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1791   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1792   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1793   0080           02438                 movwf INDF                                              ;Save to QUEUE
1794   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02440                 count = count + 1
1795   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1796   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1797   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
1798   0080           02438                 movwf INDF                                              ;Save to QUEUE
1799   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02440                 count = count + 1
179A   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
179B   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
179C   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
179D   0080           02438                 movwf INDF                                              ;Save to QUEUE
179E   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02440                 count = count + 1
179F   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17A0   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17A1   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17A2   0080           02438                 movwf INDF                                              ;Save to QUEUE
17A3   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02440                 count = count + 1
17A4   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17A5   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17A6   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17A7   0080           02438                 movwf INDF                                              ;Save to QUEUE
17A8   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02440                 count = count + 1
17A9   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17AA   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17AB   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17AC   0080           02438                 movwf INDF                                              ;Save to QUEUE
17AD   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02440                 count = count + 1
17AE   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17AF   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17B0   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17B1   0080           02438                 movwf INDF                                              ;Save to QUEUE
17B2   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02440                 count = count + 1
17B3   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17B4   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17B5   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17B6   0080           02438                 movwf INDF                                              ;Save to QUEUE
17B7   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02440                 count = count + 1
17B8   1409           02435                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17B9   1009           02436                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17BA   0808           02437                 movf ADC_DATAPORT, W                    ;Save Sample
17BB   0080           02438                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17BC   0A84           02439                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02440                 count = count + 1
                      02441         endw
17BD   1409           02442         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17BE   0808           02443         movf ADC_DATAPORT, W                            ;Sample
17BF                  02444 SampleRep5MEndA
17BF   0080           02445         movwf INDF
17C0   0A84           02446         incf FSR, F
17C1   2FC4           02447         goto SampleRep5MEndB
17C2                  02448 SampleRep5MEndC
17C2   0080           02449         movwf INDF
17C3   0384           02450         decf FSR, F
17C4                  02451 SampleRep5MEndB
                      02452         ADDLF D'3', gbl_modetempb, f
17C4   3003               M     movlw D'3'
17C5   07F9               M     addwf gbl_modetempb, f
17C6   1486           02453         bsf ADC_PORT, CS
                      02454         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
17C7   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17C8   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
17C9   288C               M         goto MainB
                      02455         
17CA                  02456 SampleRep5MStep2
17CA   0000           02457         nop
17CB   1009           02458         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17CC   2FCD           02459         goto $ + 1
17CD   0000           02460         nop
  0000                02461         local count
  00000001            02462         count = 1
                      02463         while count < D'12'
17CE   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17CF   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17D0   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17D1   0080           02467                 movwf INDF                                              ;Save to QUEUE
17D2   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02469                 count = count + 1
17D3   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17D4   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17D5   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17D6   0080           02467                 movwf INDF                                              ;Save to QUEUE
17D7   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02469                 count = count + 1
17D8   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17D9   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17DA   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17DB   0080           02467                 movwf INDF                                              ;Save to QUEUE
17DC   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02469                 count = count + 1
17DD   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17DE   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17DF   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17E0   0080           02467                 movwf INDF                                              ;Save to QUEUE
17E1   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02469                 count = count + 1
17E2   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17E3   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17E4   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17E5   0080           02467                 movwf INDF                                              ;Save to QUEUE
17E6   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02469                 count = count + 1
17E7   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17E8   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17E9   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17EA   0080           02467                 movwf INDF                                              ;Save to QUEUE
17EB   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02469                 count = count + 1
17EC   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17ED   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17EE   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17EF   0080           02467                 movwf INDF                                              ;Save to QUEUE
17F0   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02469                 count = count + 1
17F1   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17F2   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17F3   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17F4   0080           02467                 movwf INDF                                              ;Save to QUEUE
17F5   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02469                 count = count + 1
17F6   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17F7   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17F8   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17F9   0080           02467                 movwf INDF                                              ;Save to QUEUE
17FA   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02469                 count = count + 1
17FB   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
17FC   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
17FD   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
17FE   0080           02467                 movwf INDF                                              ;Save to QUEUE
17FF   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02469                 count = count + 1
1800   1409           02464                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1801   1009           02465                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1802   0808           02466                 movf ADC_DATAPORT, W                    ;Save Sample
1803   0080           02467                 movwf INDF                                              ;Save to QUEUE
1804   0A84           02468                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02469                 count = count + 1
                      02470         endw
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1805   1409           02471         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1806   1009           02472         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1807   0808           02473         movf ADC_DATAPORT, W                            ;Sample
1808   0080           02474         movwf INDF
1809   1784           02475         bsf FSR, 7                                                      ;goto bank 2
  00000001            02476         count = 1
                      02477         while count < D'39'
180A   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180B   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180C   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
180D   0080           02481                 movwf INDF                                              ;Save to QUEUE
180E   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02483                 count = count + 1
180F   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1810   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1811   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1812   0080           02481                 movwf INDF                                              ;Save to QUEUE
1813   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02483                 count = count + 1
1814   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1815   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1816   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1817   0080           02481                 movwf INDF                                              ;Save to QUEUE
1818   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02483                 count = count + 1
1819   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181A   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181B   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
181C   0080           02481                 movwf INDF                                              ;Save to QUEUE
181D   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02483                 count = count + 1
181E   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181F   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1820   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1821   0080           02481                 movwf INDF                                              ;Save to QUEUE
1822   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02483                 count = count + 1
1823   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1824   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1825   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1826   0080           02481                 movwf INDF                                              ;Save to QUEUE
1827   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02483                 count = count + 1
1828   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1829   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182A   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
182B   0080           02481                 movwf INDF                                              ;Save to QUEUE
182C   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02483                 count = count + 1
182D   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182E   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182F   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1830   0080           02481                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1831   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02483                 count = count + 1
1832   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1833   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1834   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1835   0080           02481                 movwf INDF                                              ;Save to QUEUE
1836   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02483                 count = count + 1
1837   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1838   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1839   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
183A   0080           02481                 movwf INDF                                              ;Save to QUEUE
183B   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02483                 count = count + 1
183C   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183D   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183E   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
183F   0080           02481                 movwf INDF                                              ;Save to QUEUE
1840   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02483                 count = count + 1
1841   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1842   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1843   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1844   0080           02481                 movwf INDF                                              ;Save to QUEUE
1845   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02483                 count = count + 1
1846   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1847   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1848   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1849   0080           02481                 movwf INDF                                              ;Save to QUEUE
184A   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02483                 count = count + 1
184B   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184C   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184D   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
184E   0080           02481                 movwf INDF                                              ;Save to QUEUE
184F   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02483                 count = count + 1
1850   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1851   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1852   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1853   0080           02481                 movwf INDF                                              ;Save to QUEUE
1854   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02483                 count = count + 1
1855   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1856   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1857   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1858   0080           02481                 movwf INDF                                              ;Save to QUEUE
1859   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02483                 count = count + 1
185A   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185B   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185C   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

185D   0080           02481                 movwf INDF                                              ;Save to QUEUE
185E   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02483                 count = count + 1
185F   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1860   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1861   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1862   0080           02481                 movwf INDF                                              ;Save to QUEUE
1863   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02483                 count = count + 1
1864   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1865   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1866   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1867   0080           02481                 movwf INDF                                              ;Save to QUEUE
1868   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02483                 count = count + 1
1869   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186A   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186B   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
186C   0080           02481                 movwf INDF                                              ;Save to QUEUE
186D   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02483                 count = count + 1
186E   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186F   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1870   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1871   0080           02481                 movwf INDF                                              ;Save to QUEUE
1872   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02483                 count = count + 1
1873   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1874   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1875   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1876   0080           02481                 movwf INDF                                              ;Save to QUEUE
1877   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02483                 count = count + 1
1878   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1879   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187A   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
187B   0080           02481                 movwf INDF                                              ;Save to QUEUE
187C   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02483                 count = count + 1
187D   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187E   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187F   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1880   0080           02481                 movwf INDF                                              ;Save to QUEUE
1881   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02483                 count = count + 1
1882   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1883   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1884   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1885   0080           02481                 movwf INDF                                              ;Save to QUEUE
1886   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02483                 count = count + 1
1887   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1888   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1889   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
188A   0080           02481                 movwf INDF                                              ;Save to QUEUE
188B   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02483                 count = count + 1
188C   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188D   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188E   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
188F   0080           02481                 movwf INDF                                              ;Save to QUEUE
1890   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02483                 count = count + 1
1891   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1892   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1893   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1894   0080           02481                 movwf INDF                                              ;Save to QUEUE
1895   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02483                 count = count + 1
1896   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1897   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1898   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
1899   0080           02481                 movwf INDF                                              ;Save to QUEUE
189A   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02483                 count = count + 1
189B   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189C   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189D   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
189E   0080           02481                 movwf INDF                                              ;Save to QUEUE
189F   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02483                 count = count + 1
18A0   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A1   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A2   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18A3   0080           02481                 movwf INDF                                              ;Save to QUEUE
18A4   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02483                 count = count + 1
18A5   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A6   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A7   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18A8   0080           02481                 movwf INDF                                              ;Save to QUEUE
18A9   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02483                 count = count + 1
18AA   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AB   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AC   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18AD   0080           02481                 movwf INDF                                              ;Save to QUEUE
18AE   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02483                 count = count + 1
18AF   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B0   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B1   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18B2   0080           02481                 movwf INDF                                              ;Save to QUEUE
18B3   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02483                 count = count + 1
18B4   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18B5   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B6   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18B7   0080           02481                 movwf INDF                                              ;Save to QUEUE
18B8   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02483                 count = count + 1
18B9   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BA   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BB   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18BC   0080           02481                 movwf INDF                                              ;Save to QUEUE
18BD   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02483                 count = count + 1
18BE   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BF   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C0   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18C1   0080           02481                 movwf INDF                                              ;Save to QUEUE
18C2   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02483                 count = count + 1
18C3   1409           02478                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C4   1009           02479                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C5   0808           02480                 movf ADC_DATAPORT, W                    ;Sample
18C6   0080           02481                 movwf INDF                                              ;Save to QUEUE
18C7   0384           02482                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02483                 count = count + 1
                      02484         endw
18C8   1409           02485         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
18C9   0808           02486         movf ADC_DATAPORT, W                            ;Sample
                      02487         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
18CA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18CB   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18CC   2FC2               M         goto SampleRep5MEndC
                      02488         
18CD                  02489 SampleRep5MStep3
18CD   28CE           02490         goto $ + 1
18CE   1009           02491         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18CF   28D0           02492         goto $ + 1
18D0   0000           02493         nop
  0000                02494         local count
  00000001            02495         count = 1
                      02496         while count < D'25'
18D1   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D2   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D3   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18D4   0080           02500                 movwf INDF                                              ;Save to QUEUE
18D5   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            02502                 count = count + 1
18D6   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D7   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D8   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18D9   0080           02500                 movwf INDF                                              ;Save to QUEUE
18DA   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02502                 count = count + 1
18DB   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DC   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DD   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18DE   0080           02500                 movwf INDF                                              ;Save to QUEUE
18DF   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02502                 count = count + 1
18E0   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E1   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E2   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18E3   0080           02500                 movwf INDF                                              ;Save to QUEUE
18E4   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02502                 count = count + 1
18E5   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E6   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E7   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18E8   0080           02500                 movwf INDF                                              ;Save to QUEUE
18E9   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02502                 count = count + 1
18EA   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18EB   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18EC   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18ED   0080           02500                 movwf INDF                                              ;Save to QUEUE
18EE   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02502                 count = count + 1
18EF   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F0   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F1   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18F2   0080           02500                 movwf INDF                                              ;Save to QUEUE
18F3   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02502                 count = count + 1
18F4   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F5   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F6   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18F7   0080           02500                 movwf INDF                                              ;Save to QUEUE
18F8   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02502                 count = count + 1
18F9   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FA   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FB   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
18FC   0080           02500                 movwf INDF                                              ;Save to QUEUE
18FD   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02502                 count = count + 1
18FE   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FF   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1900   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1901   0080           02500                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1902   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02502                 count = count + 1
1903   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1904   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1905   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1906   0080           02500                 movwf INDF                                              ;Save to QUEUE
1907   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02502                 count = count + 1
1908   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1909   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190A   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
190B   0080           02500                 movwf INDF                                              ;Save to QUEUE
190C   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02502                 count = count + 1
190D   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190E   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190F   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1910   0080           02500                 movwf INDF                                              ;Save to QUEUE
1911   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02502                 count = count + 1
1912   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1913   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1914   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1915   0080           02500                 movwf INDF                                              ;Save to QUEUE
1916   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02502                 count = count + 1
1917   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1918   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1919   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
191A   0080           02500                 movwf INDF                                              ;Save to QUEUE
191B   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02502                 count = count + 1
191C   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191D   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191E   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
191F   0080           02500                 movwf INDF                                              ;Save to QUEUE
1920   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02502                 count = count + 1
1921   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1922   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1923   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1924   0080           02500                 movwf INDF                                              ;Save to QUEUE
1925   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02502                 count = count + 1
1926   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1927   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1928   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1929   0080           02500                 movwf INDF                                              ;Save to QUEUE
192A   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02502                 count = count + 1
192B   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192C   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192D   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

192E   0080           02500                 movwf INDF                                              ;Save to QUEUE
192F   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02502                 count = count + 1
1930   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1931   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1932   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1933   0080           02500                 movwf INDF                                              ;Save to QUEUE
1934   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02502                 count = count + 1
1935   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1936   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1937   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1938   0080           02500                 movwf INDF                                              ;Save to QUEUE
1939   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02502                 count = count + 1
193A   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193B   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193C   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
193D   0080           02500                 movwf INDF                                              ;Save to QUEUE
193E   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02502                 count = count + 1
193F   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1940   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1941   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1942   0080           02500                 movwf INDF                                              ;Save to QUEUE
1943   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02502                 count = count + 1
1944   1409           02497                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1945   1009           02498                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1946   0808           02499                 movf ADC_DATAPORT, W                    ;Sample
1947   0080           02500                 movwf INDF                                              ;Save to QUEUE
1948   0384           02501                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02502                 count = count + 1
                      02503         endw
1949   1409           02504         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
194A   1009           02505         bcf ADC_CONTROLPORT, RDD
194B   0808           02506         movf ADC_DATAPORT, W                            ;Sample
194C   0080           02507         movwf INDF
194D   1783           02508         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02509         count = 1
                      02510         while count < D'26'
194E   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194F   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1950   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1951   0080           02514                 movwf INDF                                              ;Save to QUEUE
1952   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02516                 count = count + 1
1953   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1954   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1955   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1956   0080           02514                 movwf INDF                                              ;Save to QUEUE
1957   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02516                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1958   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1959   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195A   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
195B   0080           02514                 movwf INDF                                              ;Save to QUEUE
195C   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02516                 count = count + 1
195D   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195E   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195F   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1960   0080           02514                 movwf INDF                                              ;Save to QUEUE
1961   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02516                 count = count + 1
1962   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1963   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1964   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1965   0080           02514                 movwf INDF                                              ;Save to QUEUE
1966   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02516                 count = count + 1
1967   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1968   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1969   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
196A   0080           02514                 movwf INDF                                              ;Save to QUEUE
196B   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02516                 count = count + 1
196C   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196D   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196E   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
196F   0080           02514                 movwf INDF                                              ;Save to QUEUE
1970   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02516                 count = count + 1
1971   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1972   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1973   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1974   0080           02514                 movwf INDF                                              ;Save to QUEUE
1975   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02516                 count = count + 1
1976   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1977   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1978   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1979   0080           02514                 movwf INDF                                              ;Save to QUEUE
197A   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02516                 count = count + 1
197B   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197C   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197D   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
197E   0080           02514                 movwf INDF                                              ;Save to QUEUE
197F   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02516                 count = count + 1
1980   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1981   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1982   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1983   0080           02514                 movwf INDF                                              ;Save to QUEUE
1984   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000C            02516                 count = count + 1
1985   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1986   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1987   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1988   0080           02514                 movwf INDF                                              ;Save to QUEUE
1989   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02516                 count = count + 1
198A   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198B   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198C   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
198D   0080           02514                 movwf INDF                                              ;Save to QUEUE
198E   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02516                 count = count + 1
198F   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1990   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1991   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1992   0080           02514                 movwf INDF                                              ;Save to QUEUE
1993   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02516                 count = count + 1
1994   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1995   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1996   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
1997   0080           02514                 movwf INDF                                              ;Save to QUEUE
1998   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02516                 count = count + 1
1999   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199A   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199B   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
199C   0080           02514                 movwf INDF                                              ;Save to QUEUE
199D   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02516                 count = count + 1
199E   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199F   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A0   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19A1   0080           02514                 movwf INDF                                              ;Save to QUEUE
19A2   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02516                 count = count + 1
19A3   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A4   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A5   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19A6   0080           02514                 movwf INDF                                              ;Save to QUEUE
19A7   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02516                 count = count + 1
19A8   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A9   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19AA   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19AB   0080           02514                 movwf INDF                                              ;Save to QUEUE
19AC   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02516                 count = count + 1
19AD   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AE   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19AF   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19B0   0080           02514                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19B1   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02516                 count = count + 1
19B2   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B3   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B4   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19B5   0080           02514                 movwf INDF                                              ;Save to QUEUE
19B6   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02516                 count = count + 1
19B7   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B8   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B9   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19BA   0080           02514                 movwf INDF                                              ;Save to QUEUE
19BB   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02516                 count = count + 1
19BC   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BD   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BE   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19BF   0080           02514                 movwf INDF                                              ;Save to QUEUE
19C0   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02516                 count = count + 1
19C1   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C2   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C3   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19C4   0080           02514                 movwf INDF                                              ;Save to QUEUE
19C5   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02516                 count = count + 1
19C6   1409           02511                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C7   1009           02512                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C8   0808           02513                 movf ADC_DATAPORT, W                    ;Sample
19C9   0080           02514                 movwf INDF                                              ;Save to QUEUE
19CA   0A84           02515                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02516                 count = count + 1
                      02517         endw
19CB   1409           02518         bsf ADC_CONTROLPORT, RDD
19CC   0808           02519         movf ADC_DATAPORT, W                            ;Sample
                      02520         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
19CD   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19CE   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19CF   2FBF               M         goto SampleRep5MEndA
                      02521         
19D0                  02522 SampleRep5MStep4
19D0   29D1           02523         goto $ + 1
19D1   0000           02524         nop
19D2   1009           02525         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19D3   29D4           02526         goto $ + 1
19D4   0000           02527         nop
  0000                02528         local count
  00000001            02529         count = 1
                      02530         while count < D'38'
19D5   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D6   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D7   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19D8   0080           02534                 movwf INDF                                              ;Save to QUEUE
19D9   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02536                 count = count + 1
19DA   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DB   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DC   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19DD   0080           02534                 movwf INDF                                              ;Save to QUEUE
19DE   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02536                 count = count + 1
19DF   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E0   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E1   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19E2   0080           02534                 movwf INDF                                              ;Save to QUEUE
19E3   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02536                 count = count + 1
19E4   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E5   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E6   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19E7   0080           02534                 movwf INDF                                              ;Save to QUEUE
19E8   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02536                 count = count + 1
19E9   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19EA   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19EB   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19EC   0080           02534                 movwf INDF                                              ;Save to QUEUE
19ED   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02536                 count = count + 1
19EE   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19EF   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F0   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19F1   0080           02534                 movwf INDF                                              ;Save to QUEUE
19F2   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02536                 count = count + 1
19F3   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F4   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F5   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19F6   0080           02534                 movwf INDF                                              ;Save to QUEUE
19F7   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02536                 count = count + 1
19F8   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F9   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19FA   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
19FB   0080           02534                 movwf INDF                                              ;Save to QUEUE
19FC   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02536                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19FD   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19FE   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19FF   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A00   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A01   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02536                 count = count + 1
1A02   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A03   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A04   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A05   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A06   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02536                 count = count + 1
1A07   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A08   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A09   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A0A   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A0B   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02536                 count = count + 1
1A0C   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A0D   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A0E   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A0F   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A10   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02536                 count = count + 1
1A11   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A12   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A13   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A14   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A15   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02536                 count = count + 1
1A16   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A17   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A18   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A19   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A1A   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02536                 count = count + 1
1A1B   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A1C   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A1D   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A1E   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A1F   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02536                 count = count + 1
1A20   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A21   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A22   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A23   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A24   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02536                 count = count + 1
1A25   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A26   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A27   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A28   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A29   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000012            02536                 count = count + 1
1A2A   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A2B   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A2C   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A2D   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A2E   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02536                 count = count + 1
1A2F   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A30   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A31   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A32   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A33   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02536                 count = count + 1
1A34   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A35   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A36   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A37   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A38   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02536                 count = count + 1
1A39   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A3A   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A3B   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A3C   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A3D   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02536                 count = count + 1
1A3E   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A3F   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A40   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A41   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A42   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02536                 count = count + 1
1A43   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A44   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A45   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A46   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A47   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02536                 count = count + 1
1A48   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A49   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A4A   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A4B   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A4C   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02536                 count = count + 1
1A4D   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A4E   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A4F   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A50   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A51   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02536                 count = count + 1
1A52   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A53   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A54   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A55   0080           02534                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A56   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02536                 count = count + 1
1A57   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A58   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A59   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A5A   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A5B   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02536                 count = count + 1
1A5C   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A5D   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A5E   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A5F   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A60   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02536                 count = count + 1
1A61   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A62   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A63   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A64   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A65   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02536                 count = count + 1
1A66   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A67   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A68   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A69   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A6A   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02536                 count = count + 1
1A6B   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A6C   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A6D   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A6E   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A6F   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02536                 count = count + 1
1A70   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A71   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A72   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A73   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A74   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02536                 count = count + 1
1A75   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A76   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A77   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A78   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A79   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02536                 count = count + 1
1A7A   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A7B   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A7C   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A7D   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A7E   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02536                 count = count + 1
1A7F   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A80   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A81   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A82   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A83   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02536                 count = count + 1
1A84   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A85   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A86   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A87   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A88   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02536                 count = count + 1
1A89   1409           02531                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A8A   1009           02532                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A8B   0808           02533                 movf ADC_DATAPORT, W                    ;Sample
1A8C   0080           02534                 movwf INDF                                              ;Save to QUEUE
1A8D   0A84           02535                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02536                 count = count + 1
                      02537         endw
1A8E   1409           02538         bsf ADC_CONTROLPORT, RDD
1A8F   1009           02539         bcf ADC_CONTROLPORT, RDD
1A90   0808           02540         movf ADC_DATAPORT, W                            ;Sample
1A91   0080           02541         movwf INDF
1A92   1384           02542         bcf FSR, 7                                                      ;goto bank 3
  00000001            02543         count = 1
                      02544         while count < D'13'
1A93   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A94   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A95   0808           02547                 movf ADC_DATAPORT, W
1A96   0080           02548                 movwf INDF                                              ;Save to QUEUE
1A97   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02550                 count = count + 1
1A98   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A99   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A9A   0808           02547                 movf ADC_DATAPORT, W
1A9B   0080           02548                 movwf INDF                                              ;Save to QUEUE
1A9C   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02550                 count = count + 1
1A9D   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A9E   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A9F   0808           02547                 movf ADC_DATAPORT, W
1AA0   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AA1   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02550                 count = count + 1
1AA2   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA3   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA4   0808           02547                 movf ADC_DATAPORT, W
1AA5   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AA6   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02550                 count = count + 1
1AA7   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA8   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA9   0808           02547                 movf ADC_DATAPORT, W
1AAA   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AAB   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02550                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AAC   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AAD   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AAE   0808           02547                 movf ADC_DATAPORT, W
1AAF   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AB0   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02550                 count = count + 1
1AB1   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AB2   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AB3   0808           02547                 movf ADC_DATAPORT, W
1AB4   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AB5   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02550                 count = count + 1
1AB6   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AB7   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AB8   0808           02547                 movf ADC_DATAPORT, W
1AB9   0080           02548                 movwf INDF                                              ;Save to QUEUE
1ABA   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02550                 count = count + 1
1ABB   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ABC   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ABD   0808           02547                 movf ADC_DATAPORT, W
1ABE   0080           02548                 movwf INDF                                              ;Save to QUEUE
1ABF   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02550                 count = count + 1
1AC0   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC1   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC2   0808           02547                 movf ADC_DATAPORT, W
1AC3   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AC4   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02550                 count = count + 1
1AC5   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC6   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC7   0808           02547                 movf ADC_DATAPORT, W
1AC8   0080           02548                 movwf INDF                                              ;Save to QUEUE
1AC9   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02550                 count = count + 1
1ACA   1409           02545                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ACB   1009           02546                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ACC   0808           02547                 movf ADC_DATAPORT, W
1ACD   0080           02548                 movwf INDF                                              ;Save to QUEUE
1ACE   0384           02549                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02550                 count = count + 1
                      02551         endw
1ACF   1409           02552         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1AD0   0808           02553         movf ADC_DATAPORT, W                            ;Sample
                      02554         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1AD1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
1AD2   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1AD3   2FC2               M         goto SampleRep5MEndC
                      02555 
1AD4                  02556 SampleRep5MStep5
1AD4   2AD5           02557         goto $ + 1
                      02558         if (Sample1MhzEnd & (0x1000))
                      02559                 bsf PCLATH, 4
                      02560         else
1AD5   120A           02561                 bcf PCLATH, 4
                      02562         endif
                      02563         if (Sample1MhzEnd & (0x800))
1AD6   158A           02564                 bsf PCLATH, 3
                      02565         else
                      02566                 bcf PCLATH, 3
                      02567         endif
1AD7   1009           02568         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1AD8   0000           02569         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1AD9   29A2           02570         goto Sample1MhzEnd
                      02571         
                      02572 ;Repetitive sample
                      02573 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02574 ;-----------------------------------------------------------------------------
1ADA                  02575 SampleRep2M
1ADA   301A           02576         movlw high SampleRep2MPickSt
1ADB   008A           02577         movwf PCLATH
1ADC   0879           02578         movf gbl_modetempb, w
1ADD   0782           02579         addwf PCL, f
1ADE                  02580 SampleRep2MPickSt
                      02581         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
1ADE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
1ADF   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1AE0   2AE7               M         goto SampleRep2MStep1
                      02582         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
1AE1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
1AE2   158A               M                 bsf PCLATH, 3
                          M         else
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 3
                          M         endif
1AE3   2CEE               M         goto SampleRep2MStep2
                      02583         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
1AE4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1AE5   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1AE6   2EEF               M         goto SampleRep2MStep3
1AE7                  02584 SampleRep2MPickEn
1AE7                  02585 SampleRep2MStep1
1AE7   1009           02586         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02587         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1AE8   3020               M     movlw BUFFERMIN
1AE9   0084               M     movwf FSR
1AEA   0000           02588         nop
  0000                02589         local count
  00000001            02590         count = 1
                      02591         while count < BUFFERSIZE
1AEB   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1AEC   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AED   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AEE   0080           02595                 movwf INDF                                              ;Save to QUEUE
1AEF   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1AF0   0000           02597                 nop
  00000002            02598                 count = count + 1
1AF1   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1AF2   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF3   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF4   0080           02595                 movwf INDF                                              ;Save to QUEUE
1AF5   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1AF6   0000           02597                 nop
  00000003            02598                 count = count + 1
1AF7   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1AF8   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF9   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFA   0080           02595                 movwf INDF                                              ;Save to QUEUE
1AFB   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1AFC   0000           02597                 nop
  00000004            02598                 count = count + 1
1AFD   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1AFE   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFF   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B00   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B01   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B02   0000           02597                 nop
  00000005            02598                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B03   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B04   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B05   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B06   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B07   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B08   0000           02597                 nop
  00000006            02598                 count = count + 1
1B09   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B0A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B0D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B0E   0000           02597                 nop
  00000007            02598                 count = count + 1
1B0F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B10   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B11   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B12   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B13   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B14   0000           02597                 nop
  00000008            02598                 count = count + 1
1B15   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B16   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B17   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B18   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B19   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B1A   0000           02597                 nop
  00000009            02598                 count = count + 1
1B1B   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B1C   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1D   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1E   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B1F   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B20   0000           02597                 nop
  0000000A            02598                 count = count + 1
1B21   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B22   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B23   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B24   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B25   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B26   0000           02597                 nop
  0000000B            02598                 count = count + 1
1B27   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B28   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B29   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2A   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B2B   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B2C   0000           02597                 nop
  0000000C            02598                 count = count + 1
1B2D   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B2E   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2F   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B30   0080           02595                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B31   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B32   0000           02597                 nop
  0000000D            02598                 count = count + 1
1B33   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B34   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B35   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B36   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B37   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B38   0000           02597                 nop
  0000000E            02598                 count = count + 1
1B39   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B3A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B3D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B3E   0000           02597                 nop
  0000000F            02598                 count = count + 1
1B3F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B40   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B41   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B42   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B43   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B44   0000           02597                 nop
  00000010            02598                 count = count + 1
1B45   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B46   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B47   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B48   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B49   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B4A   0000           02597                 nop
  00000011            02598                 count = count + 1
1B4B   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B4C   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4D   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4E   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B4F   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B50   0000           02597                 nop
  00000012            02598                 count = count + 1
1B51   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B52   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B53   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B54   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B55   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B56   0000           02597                 nop
  00000013            02598                 count = count + 1
1B57   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B58   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B59   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5A   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B5B   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B5C   0000           02597                 nop
  00000014            02598                 count = count + 1
1B5D   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B5E   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5F   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B60   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B61   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B62   0000           02597                 nop
  00000015            02598                 count = count + 1
1B63   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B64   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B65   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B66   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B67   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B68   0000           02597                 nop
  00000016            02598                 count = count + 1
1B69   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B6A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B6D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B6E   0000           02597                 nop
  00000017            02598                 count = count + 1
1B6F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B70   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B71   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B72   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B73   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B74   0000           02597                 nop
  00000018            02598                 count = count + 1
1B75   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B76   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B77   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B78   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B79   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B7A   0000           02597                 nop
  00000019            02598                 count = count + 1
1B7B   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B7C   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7D   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7E   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B7F   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B80   0000           02597                 nop
  0000001A            02598                 count = count + 1
1B81   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B82   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B83   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B84   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B85   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B86   0000           02597                 nop
  0000001B            02598                 count = count + 1
1B87   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B88   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B89   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B8A   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B8B   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B8C   0000           02597                 nop
  0000001C            02598                 count = count + 1
1B8D   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B8E   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B8F   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B90   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B91   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B92   0000           02597                 nop
  0000001D            02598                 count = count + 1
1B93   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B94   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B95   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B96   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B97   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B98   0000           02597                 nop
  0000001E            02598                 count = count + 1
1B99   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1B9A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B9B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B9C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1B9D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1B9E   0000           02597                 nop
  0000001F            02598                 count = count + 1
1B9F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BA0   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BA1   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BA2   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BA3   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BA4   0000           02597                 nop
  00000020            02598                 count = count + 1
1BA5   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BA6   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BA7   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BA8   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BA9   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BAA   0000           02597                 nop
  00000021            02598                 count = count + 1
1BAB   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BAC   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BAD   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BAE   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BAF   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BB0   0000           02597                 nop
  00000022            02598                 count = count + 1
1BB1   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BB2   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BB3   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BB4   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BB5   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BB6   0000           02597                 nop
  00000023            02598                 count = count + 1
1BB7   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BB8   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BB9   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BBA   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BBB   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BBC   0000           02597                 nop
  00000024            02598                 count = count + 1
1BBD   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BBE   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BBF   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BC0   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BC1   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BC2   0000           02597                 nop
  00000025            02598                 count = count + 1
1BC3   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BC4   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BC5   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BC6   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BC7   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BC8   0000           02597                 nop
  00000026            02598                 count = count + 1
1BC9   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BCA   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BCB   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BCC   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BCD   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BCE   0000           02597                 nop
  00000027            02598                 count = count + 1
1BCF   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BD0   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BD1   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BD2   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BD3   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BD4   0000           02597                 nop
  00000028            02598                 count = count + 1
1BD5   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BD6   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BD7   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BD8   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BD9   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BDA   0000           02597                 nop
  00000029            02598                 count = count + 1
1BDB   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BDC   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BDD   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BDE   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BDF   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BE0   0000           02597                 nop
  0000002A            02598                 count = count + 1
1BE1   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BE2   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BE3   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BE4   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BE5   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BE6   0000           02597                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002B            02598                 count = count + 1
1BE7   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BE8   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BE9   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BEA   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BEB   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BEC   0000           02597                 nop
  0000002C            02598                 count = count + 1
1BED   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BEE   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BEF   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BF0   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BF1   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BF2   0000           02597                 nop
  0000002D            02598                 count = count + 1
1BF3   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BF4   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BF5   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BF6   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BF7   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BF8   0000           02597                 nop
  0000002E            02598                 count = count + 1
1BF9   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1BFA   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1BFB   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1BFC   0080           02595                 movwf INDF                                              ;Save to QUEUE
1BFD   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1BFE   0000           02597                 nop
  0000002F            02598                 count = count + 1
1BFF   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C00   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C01   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C02   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C03   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C04   0000           02597                 nop
  00000030            02598                 count = count + 1
1C05   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C06   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C07   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C08   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C09   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C0A   0000           02597                 nop
  00000031            02598                 count = count + 1
1C0B   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C0C   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C0D   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C0E   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C0F   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C10   0000           02597                 nop
  00000032            02598                 count = count + 1
1C11   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C12   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C13   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C14   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C15   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C16   0000           02597                 nop
  00000033            02598                 count = count + 1
1C17   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C18   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C19   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C1A   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C1B   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C1C   0000           02597                 nop
  00000034            02598                 count = count + 1
1C1D   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C1E   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C1F   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C20   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C21   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C22   0000           02597                 nop
  00000035            02598                 count = count + 1
1C23   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C24   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C25   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C26   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C27   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C28   0000           02597                 nop
  00000036            02598                 count = count + 1
1C29   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C2A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C2B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C2C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C2D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C2E   0000           02597                 nop
  00000037            02598                 count = count + 1
1C2F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C30   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C31   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C32   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C33   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C34   0000           02597                 nop
  00000038            02598                 count = count + 1
1C35   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C36   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C37   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C38   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C39   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C3A   0000           02597                 nop
  00000039            02598                 count = count + 1
1C3B   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C3C   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C3D   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C3E   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C3F   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C40   0000           02597                 nop
  0000003A            02598                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C41   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C42   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C43   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C44   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C45   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C46   0000           02597                 nop
  0000003B            02598                 count = count + 1
1C47   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C48   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C49   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C4A   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C4B   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C4C   0000           02597                 nop
  0000003C            02598                 count = count + 1
1C4D   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C4E   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C4F   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C50   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C51   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C52   0000           02597                 nop
  0000003D            02598                 count = count + 1
1C53   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C54   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C55   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C56   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C57   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C58   0000           02597                 nop
  0000003E            02598                 count = count + 1
1C59   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C5A   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C5B   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C5C   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C5D   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C5E   0000           02597                 nop
  0000003F            02598                 count = count + 1
1C5F   0808           02592                 movf ADC_DATAPORT, W                    ;Save Sample
1C60   1409           02593                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1C61   1009           02594                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1C62   0080           02595                 movwf INDF                                              ;Save to QUEUE
1C63   0A84           02596                 incf FSR, F                                             ;Increment QUEUE pointer
1C64   0000           02597                 nop
  00000040            02598                 count = count + 1
                      02599         endw
1C65   0808           02600         movf ADC_DATAPORT, W
1C66   1409           02601         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1C67   1009           02602         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1C68   0080           02603         movwf INDF
1C69   1784           02604         bsf FSR, 7                                                      ;goto bank 2
1C6A   0000           02605         nop
  00000001            02606         count = 1
                      02607         while count < D'22'
1C6B   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C6C   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C6D   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6E   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C6F   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C70   0000           02613                 nop
  00000002            02614                 count = count + 1
1C71   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C72   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C73   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C74   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C75   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C76   0000           02613                 nop
  00000003            02614                 count = count + 1
1C77   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C78   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C79   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7A   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C7B   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C7C   0000           02613                 nop
  00000004            02614                 count = count + 1
1C7D   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C7E   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7F   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C80   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C81   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C82   0000           02613                 nop
  00000005            02614                 count = count + 1
1C83   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C84   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C85   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C86   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C87   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C88   0000           02613                 nop
  00000006            02614                 count = count + 1
1C89   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C8A   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8B   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8C   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C8D   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C8E   0000           02613                 nop
  00000007            02614                 count = count + 1
1C8F   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C90   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C91   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C92   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C93   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C94   0000           02613                 nop
  00000008            02614                 count = count + 1
1C95   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C96   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C97   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C98   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C99   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1C9A   0000           02613                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            02614                 count = count + 1
1C9B   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1C9C   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9D   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9E   0080           02611                 movwf INDF                                              ;Save to QUEUE
1C9F   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CA0   0000           02613                 nop
  0000000A            02614                 count = count + 1
1CA1   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CA2   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA3   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA4   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CA5   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CA6   0000           02613                 nop
  0000000B            02614                 count = count + 1
1CA7   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CA8   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA9   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAA   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CAB   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CAC   0000           02613                 nop
  0000000C            02614                 count = count + 1
1CAD   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CAE   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAF   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB0   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CB1   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CB2   0000           02613                 nop
  0000000D            02614                 count = count + 1
1CB3   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CB4   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB5   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB6   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CB7   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CB8   0000           02613                 nop
  0000000E            02614                 count = count + 1
1CB9   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CBA   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBB   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBC   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CBD   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CBE   0000           02613                 nop
  0000000F            02614                 count = count + 1
1CBF   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CC0   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC1   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC2   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CC3   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CC4   0000           02613                 nop
  00000010            02614                 count = count + 1
1CC5   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CC6   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC7   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CC8   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CC9   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CCA   0000           02613                 nop
  00000011            02614                 count = count + 1
1CCB   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CCC   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCD   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCE   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CCF   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CD0   0000           02613                 nop
  00000012            02614                 count = count + 1
1CD1   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CD2   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD3   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD4   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CD5   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CD6   0000           02613                 nop
  00000013            02614                 count = count + 1
1CD7   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CD8   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD9   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDA   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CDB   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CDC   0000           02613                 nop
  00000014            02614                 count = count + 1
1CDD   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CDE   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDF   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE0   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CE1   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CE2   0000           02613                 nop
  00000015            02614                 count = count + 1
1CE3   0808           02608                 movf ADC_DATAPORT, W                    ;Sample
1CE4   1409           02609                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE5   1009           02610                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE6   0080           02611                 movwf INDF                                              ;Save to QUEUE
1CE7   0384           02612                 decf FSR, F                                             ;Increment QUEUE pointer
1CE8   0000           02613                 nop
  00000016            02614                 count = count + 1
                      02615         endw
1CE9   0808           02616         movf ADC_DATAPORT, W                            ;Sample
1CEA   1409           02617         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02618         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1CEB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1CEC   118A               M                 bcf PCLATH, 3
                          M         endif
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
1CED   2FC2               M         goto SampleRep5MEndC
                      02619 
1CEE                  02620 SampleRep2MStep2
1CEE   2CEF           02621         goto $ + 1                                                      ;Delay 2
1CEF   1009           02622         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1CF0   2CF1           02623         goto $ + 1                                                      ;Wait three cycles
1CF1   0000           02624         nop
  0000                02625         local count
  00000001            02626         count = 1
                      02627         while count < D'42'
1CF2   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1CF3   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF4   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF5   0080           02631                 movwf INDF                                              ;Save to QUEUE
1CF6   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1CF7   0000           02633                 nop
  00000002            02634                 count = count + 1
1CF8   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1CF9   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFA   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CFB   0080           02631                 movwf INDF                                              ;Save to QUEUE
1CFC   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1CFD   0000           02633                 nop
  00000003            02634                 count = count + 1
1CFE   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1CFF   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D00   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D01   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D02   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D03   0000           02633                 nop
  00000004            02634                 count = count + 1
1D04   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D05   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D06   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D07   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D08   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D09   0000           02633                 nop
  00000005            02634                 count = count + 1
1D0A   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D0B   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0C   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0D   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D0E   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D0F   0000           02633                 nop
  00000006            02634                 count = count + 1
1D10   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D11   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D12   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D13   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D14   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D15   0000           02633                 nop
  00000007            02634                 count = count + 1
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D16   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D17   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D18   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D19   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D1A   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D1B   0000           02633                 nop
  00000008            02634                 count = count + 1
1D1C   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D1D   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1E   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1F   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D20   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D21   0000           02633                 nop
  00000009            02634                 count = count + 1
1D22   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D23   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D24   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D25   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D26   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D27   0000           02633                 nop
  0000000A            02634                 count = count + 1
1D28   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D29   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2A   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2B   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D2C   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D2D   0000           02633                 nop
  0000000B            02634                 count = count + 1
1D2E   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D2F   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D30   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D31   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D32   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D33   0000           02633                 nop
  0000000C            02634                 count = count + 1
1D34   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D35   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D36   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D37   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D38   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D39   0000           02633                 nop
  0000000D            02634                 count = count + 1
1D3A   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D3B   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3C   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3D   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D3E   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D3F   0000           02633                 nop
  0000000E            02634                 count = count + 1
1D40   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D41   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D42   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D43   0080           02631                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D44   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D45   0000           02633                 nop
  0000000F            02634                 count = count + 1
1D46   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D47   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D48   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D49   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D4A   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D4B   0000           02633                 nop
  00000010            02634                 count = count + 1
1D4C   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D4D   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4E   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4F   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D50   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D51   0000           02633                 nop
  00000011            02634                 count = count + 1
1D52   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D53   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D54   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D55   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D56   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D57   0000           02633                 nop
  00000012            02634                 count = count + 1
1D58   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D59   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5A   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5B   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D5C   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D5D   0000           02633                 nop
  00000013            02634                 count = count + 1
1D5E   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D5F   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D60   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D61   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D62   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D63   0000           02633                 nop
  00000014            02634                 count = count + 1
1D64   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D65   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D66   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D67   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D68   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D69   0000           02633                 nop
  00000015            02634                 count = count + 1
1D6A   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D6B   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6C   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6D   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D6E   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D6F   0000           02633                 nop
  00000016            02634                 count = count + 1
1D70   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D71   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D72   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D73   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D74   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D75   0000           02633                 nop
  00000017            02634                 count = count + 1
1D76   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D77   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D78   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D79   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D7A   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D7B   0000           02633                 nop
  00000018            02634                 count = count + 1
1D7C   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D7D   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7E   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7F   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D80   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D81   0000           02633                 nop
  00000019            02634                 count = count + 1
1D82   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D83   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D84   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D85   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D86   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D87   0000           02633                 nop
  0000001A            02634                 count = count + 1
1D88   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D89   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8A   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8B   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D8C   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D8D   0000           02633                 nop
  0000001B            02634                 count = count + 1
1D8E   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D8F   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D90   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D91   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D92   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D93   0000           02633                 nop
  0000001C            02634                 count = count + 1
1D94   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D95   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D96   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D97   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D98   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1D99   0000           02633                 nop
  0000001D            02634                 count = count + 1
1D9A   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1D9B   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9C   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9D   0080           02631                 movwf INDF                                              ;Save to QUEUE
1D9E   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D9F   0000           02633                 nop
  0000001E            02634                 count = count + 1
1DA0   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DA1   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA2   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA3   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DA4   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DA5   0000           02633                 nop
  0000001F            02634                 count = count + 1
1DA6   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DA7   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA8   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA9   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DAA   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DAB   0000           02633                 nop
  00000020            02634                 count = count + 1
1DAC   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DAD   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAE   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAF   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DB0   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DB1   0000           02633                 nop
  00000021            02634                 count = count + 1
1DB2   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DB3   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB4   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB5   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DB6   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DB7   0000           02633                 nop
  00000022            02634                 count = count + 1
1DB8   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DB9   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBA   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBB   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DBC   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DBD   0000           02633                 nop
  00000023            02634                 count = count + 1
1DBE   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DBF   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC0   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC1   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DC2   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DC3   0000           02633                 nop
  00000024            02634                 count = count + 1
1DC4   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DC5   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC6   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC7   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DC8   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DC9   0000           02633                 nop
  00000025            02634                 count = count + 1
1DCA   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DCB   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 206


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DCC   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCD   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DCE   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DCF   0000           02633                 nop
  00000026            02634                 count = count + 1
1DD0   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DD1   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD2   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD3   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DD4   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DD5   0000           02633                 nop
  00000027            02634                 count = count + 1
1DD6   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DD7   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD8   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD9   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DDA   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DDB   0000           02633                 nop
  00000028            02634                 count = count + 1
1DDC   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DDD   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDE   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDF   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DE0   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DE1   0000           02633                 nop
  00000029            02634                 count = count + 1
1DE2   0808           02628                 movf ADC_DATAPORT, W                    ;Sample
1DE3   1409           02629                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE4   1009           02630                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE5   0080           02631                 movwf INDF                                              ;Save to QUEUE
1DE6   0384           02632                 decf FSR, F                                             ;Increment QUEUE pointer
1DE7   0000           02633                 nop
  0000002A            02634                 count = count + 1
                      02635         endw
1DE8   0808           02636         movf ADC_DATAPORT, W
1DE9   1409           02637         bsf ADC_CONTROLPORT, RDD
1DEA   1009           02638         bcf ADC_CONTROLPORT, RDD
1DEB   0080           02639         movwf INDF
1DEC   1783           02640         bsf STATUS, IRP                                         ;goto bank 4
1DED   0000           02641         nop
  00000001            02642         count = 1
                      02643         while count < D'43'
1DEE   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1DEF   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF0   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF1   0080           02647                 movwf INDF                                              ;Save to QUEUE
1DF2   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1DF3   0000           02649                 nop
  00000002            02650                 count = count + 1
1DF4   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1DF5   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF6   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF7   0080           02647                 movwf INDF                                              ;Save to QUEUE
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 207


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DF8   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1DF9   0000           02649                 nop
  00000003            02650                 count = count + 1
1DFA   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1DFB   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFC   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFD   0080           02647                 movwf INDF                                              ;Save to QUEUE
1DFE   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1DFF   0000           02649                 nop
  00000004            02650                 count = count + 1
1E00   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E01   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E02   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E03   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E04   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E05   0000           02649                 nop
  00000005            02650                 count = count + 1
1E06   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E07   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E08   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E09   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E0A   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E0B   0000           02649                 nop
  00000006            02650                 count = count + 1
1E0C   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E0D   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E0E   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E0F   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E10   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E11   0000           02649                 nop
  00000007            02650                 count = count + 1
1E12   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E13   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E14   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E15   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E16   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E17   0000           02649                 nop
  00000008            02650                 count = count + 1
1E18   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E19   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E1A   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E1B   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E1C   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E1D   0000           02649                 nop
  00000009            02650                 count = count + 1
1E1E   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E1F   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E20   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E21   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E22   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E23   0000           02649                 nop
  0000000A            02650                 count = count + 1
1E24   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 208


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E25   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E26   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E27   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E28   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E29   0000           02649                 nop
  0000000B            02650                 count = count + 1
1E2A   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E2B   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E2C   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E2D   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E2E   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E2F   0000           02649                 nop
  0000000C            02650                 count = count + 1
1E30   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E31   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E32   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E33   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E34   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E35   0000           02649                 nop
  0000000D            02650                 count = count + 1
1E36   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E37   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E38   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E39   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E3A   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E3B   0000           02649                 nop
  0000000E            02650                 count = count + 1
1E3C   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E3D   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E3E   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E3F   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E40   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E41   0000           02649                 nop
  0000000F            02650                 count = count + 1
1E42   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E43   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E44   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E45   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E46   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E47   0000           02649                 nop
  00000010            02650                 count = count + 1
1E48   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E49   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E4A   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E4B   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E4C   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E4D   0000           02649                 nop
  00000011            02650                 count = count + 1
1E4E   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E4F   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E50   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E51   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E52   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 209


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E53   0000           02649                 nop
  00000012            02650                 count = count + 1
1E54   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E55   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E56   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E57   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E58   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E59   0000           02649                 nop
  00000013            02650                 count = count + 1
1E5A   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E5B   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E5C   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E5D   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E5E   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E5F   0000           02649                 nop
  00000014            02650                 count = count + 1
1E60   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E61   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E62   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E63   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E64   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E65   0000           02649                 nop
  00000015            02650                 count = count + 1
1E66   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E67   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E68   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E69   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E6A   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E6B   0000           02649                 nop
  00000016            02650                 count = count + 1
1E6C   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E6D   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E6E   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E6F   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E70   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E71   0000           02649                 nop
  00000017            02650                 count = count + 1
1E72   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E73   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E74   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E75   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E76   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E77   0000           02649                 nop
  00000018            02650                 count = count + 1
1E78   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E79   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E7A   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E7B   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E7C   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E7D   0000           02649                 nop
  00000019            02650                 count = count + 1
1E7E   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E7F   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 210


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E80   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E81   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E82   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E83   0000           02649                 nop
  0000001A            02650                 count = count + 1
1E84   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E85   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E86   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E87   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E88   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E89   0000           02649                 nop
  0000001B            02650                 count = count + 1
1E8A   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E8B   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E8C   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E8D   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E8E   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E8F   0000           02649                 nop
  0000001C            02650                 count = count + 1
1E90   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E91   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E92   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E93   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E94   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E95   0000           02649                 nop
  0000001D            02650                 count = count + 1
1E96   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E97   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E98   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E99   0080           02647                 movwf INDF                                              ;Save to QUEUE
1E9A   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1E9B   0000           02649                 nop
  0000001E            02650                 count = count + 1
1E9C   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1E9D   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E9E   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E9F   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EA0   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EA1   0000           02649                 nop
  0000001F            02650                 count = count + 1
1EA2   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EA3   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EA4   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EA5   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EA6   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EA7   0000           02649                 nop
  00000020            02650                 count = count + 1
1EA8   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EA9   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EAA   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EAB   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EAC   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EAD   0000           02649                 nop
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 211


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000021            02650                 count = count + 1
1EAE   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EAF   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EB0   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EB1   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EB2   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EB3   0000           02649                 nop
  00000022            02650                 count = count + 1
1EB4   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EB5   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EB6   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EB7   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EB8   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EB9   0000           02649                 nop
  00000023            02650                 count = count + 1
1EBA   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EBB   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EBC   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EBD   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EBE   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EBF   0000           02649                 nop
  00000024            02650                 count = count + 1
1EC0   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EC1   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EC2   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EC3   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EC4   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EC5   0000           02649                 nop
  00000025            02650                 count = count + 1
1EC6   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EC7   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EC8   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EC9   0080           02647                 movwf INDF                                              ;Save to QUEUE
1ECA   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1ECB   0000           02649                 nop
  00000026            02650                 count = count + 1
1ECC   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1ECD   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ECE   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ECF   0080           02647                 movwf INDF                                              ;Save to QUEUE
1ED0   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1ED1   0000           02649                 nop
  00000027            02650                 count = count + 1
1ED2   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1ED3   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ED4   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ED5   0080           02647                 movwf INDF                                              ;Save to QUEUE
1ED6   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1ED7   0000           02649                 nop
  00000028            02650                 count = count + 1
1ED8   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1ED9   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EDA   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 212


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1EDB   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EDC   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EDD   0000           02649                 nop
  00000029            02650                 count = count + 1
1EDE   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EDF   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EE0   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EE1   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EE2   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EE3   0000           02649                 nop
  0000002A            02650                 count = count + 1
1EE4   0808           02644                 movf ADC_DATAPORT, W                    ;Sample
1EE5   1409           02645                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1EE6   1009           02646                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1EE7   0080           02647                 movwf INDF                                              ;Save to QUEUE
1EE8   0A84           02648                 incf FSR, F                                             ;Increment QUEUE pointer
1EE9   0000           02649                 nop
  0000002B            02650                 count = count + 1
                      02651         endw
1EEA   0808           02652         movf ADC_DATAPORT, W                            ;Sample
1EEB   1409           02653         bsf ADC_CONTROLPORT, RDD
                      02654         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1EEC   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1EED   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1EEE   2FBF               M         goto SampleRep5MEndA
                      02655 
1EEF                  02656 SampleRep2MStep3
1EEF   2EF0           02657         goto $ + 1                                                      ;Delay 4
                      02658         if (Sample833kEnd & (0x1000))
1EF0   160A           02659                 bsf PCLATH, 4
                      02660         else
                      02661                 bcf PCLATH, 4
                      02662         endif
                      02663         if (Sample833kEnd & (0x800))
                      02664                 bsf PCLATH, 3
                      02665         else
1EF1   118A           02666                 bcf PCLATH, 3
                      02667         endif
1EF2   1009           02668         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1EF3   0000           02669         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1EF4   2CAA           02670         goto Sample833kEnd
                      02671 
                      02672 ;=============================================================================
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 213


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02673 end             ;end of program
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       0000013A
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
ATTNPORT                          00000006
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

BANK0                             00000000
BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1ATTN                           00000006
CH1SEL                            00000001
CH1SELG                           00000004
CH2ATTN                           00000007
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   00000303
ChannelConfStore                  00000312
ConfReceive                       000002B6
ConfReceiveRateOnly               000002D3
ConfSend                          000002E2
D                                 00000005
DATAREADYBIT                      00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             0000012F
DelayFive                         00000507
DelayLoop                         00000130
DelaySeven                        00000506
DelayTwo                          00000509
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLESTRIPCHART              0000000D
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           00000119
GetByteB                          0000011B
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

GetByteC                          0000011F
GetByteD                          00000123
GetByteE                          00000127
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           0000005D
IntHandler                        00000004
IrqServiceTimer1                  0000013F
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000089
MainB                             0000008C
MainSelect                        00000017
MainWTrigB                        000000B8
MainWTrigB_1                      000000BB
MainWaitTrig                      00000099
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PTMEMNEW                          00000004
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           0000012A
PutByteSerial                     0000012A
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RUNNINGBIT                        00000007
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
RotateSampleMemLeft               00000254
RotateSampleMemRight              00000279
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 221


SYMBOL TABLE
  LABEL                             VALUE 

SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          0000059D
Sample1MhzEnd                     000009A2
Sample250kA                       000004B7
Sample250kB                       000004CE
Sample250kC                       000004E5
Sample250kD                       000004FC
Sample417k250k                    000004A7
Sample417kA                       000004B8
Sample417kB                       000004CF
Sample417kC                       000004E6
Sample417kD                       000004FD
Sample417kLoopA                   000004B0
Sample417kLoopB                   000004C7
Sample417kLoopC                   000004DE
Sample417kLoopD                   000004F5
Sample625k                        00000464
Sample625kLoopA                   0000046A
Sample625kLoopB                   0000047A
Sample625kLoopC                   0000048A
Sample625kLoopD                   0000049A
Sample833k                        000010A4
Sample833kEnd                     000014AA
SampleDelayed                     00000356
SampleDelayedLoopA                00000361
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 222


SYMBOL TABLE
  LABEL                             VALUE 

SampleDelayedLoopB                0000037B
SampleDelayedLoopC                00000395
SampleDelayedLoopD                000003AF
SampleIntDrvn                     000001CB
SampleRep2M                       00001ADA
SampleRep2MPickEn                 00001AE7
SampleRep2MPickSt                 00001ADE
SampleRep2MStep1                  00001AE7
SampleRep2MStep2                  00001CEE
SampleRep2MStep3                  00001EEF
SampleRep5M                       000016A7
SampleRep5MEndA                   000017BF
SampleRep5MEndB                   000017C4
SampleRep5MEndC                   000017C2
SampleRep5MPickEn                 000016BA
SampleRep5MPickSt                 000016AB
SampleRep5MStep1                  000016BA
SampleRep5MStep2                  000017CA
SampleRep5MStep3                  000018CD
SampleRep5MStep4                  000019D0
SampleRep5MStep5                  00001AD4
SampleXY250k192k                  0000050A
SampleXY250kLA                    00000519
SampleXY250kLB                    0000053D
SampleXY250kLC                    00000561
SampleXY250kLD                    00000585
SampleXY417k                      00000AA1
SampleXYDelayed                   000003C1
SampleXYDelayedLA                 000003D3
SampleXYDelayedLB                 000003FB
SampleXYDelayedLC                 00000423
SampleXYDelayedLD                 0000044B
StSample417kLoopB                 000004CC
StSample417kLoopC                 000004E3
StSample417kLoopD                 000004FA
StSampleDelayedLoopA              00000366
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEWS                              00000003
TMR0                              00000001
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 223


SYMBOL TABLE
  LABEL                             VALUE 

TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRGCH                             00000003
TRGSRCPORT                        00000005
TRIGGER                           00000000
TRIGGEREDBIT                      00000006
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 224


SYMBOL TABLE
  LABEL                             VALUE 

VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000C6
WaitComm_Break                    00000111
WaitComm_Conf                     000000FA
WaitComm_Data                     000000C7
WaitComm_Rec                      00000103
WaitComm_SendDataA                000000D3
WaitComm_SendDataB                000000DD
WaitComm_SendDataC                000000E7
WaitComm_SendDataD                000000F1
WaitComm_SendDataExit             000000F7
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 225


SYMBOL TABLE
  LABEL                             VALUE 

_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000068
b0_ptFsrTemp                      0000006E
b0_ptPlaceTriggerHere             0000006C
b0_ptPtSampleCntr                 00000069
b0_ptRotationCntr                 0000006D
b0_ptTemp0                        0000006F
b0_ptTriggerAddr                  0000006A
b0_ptTriggerBank                  0000006B
b0_sampleAddr                     00000066
b0_sampleBank                     00000067
b0_triggerChannel                 00000064
b0_triggerDelay0                  00000060
b0_triggerDelay1                  00000061
b0_triggerDelay2                  00000062
b0_triggerDelay3                  00000063
b0_triggerLevel                   00000065
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 226


SYMBOL TABLE
  LABEL                             VALUE 

b1_ptFlushCntr                    000000E0
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
b1_unusedD                        000000E2
b1_unusedE                        000000E1
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused10                       0000011F
b2_unused11                       0000011E
b2_unused12                       0000011D
b2_unused13                       0000011C
b2_unused14                       0000011B
b2_unused15                       0000011A
b2_unused16                       00000119
b2_unused17                       00000118
b2_unused18                       00000117
b2_unused19                       00000116
b2_unused1A                       00000115
b2_unused1B                       00000114
b2_unused1C                       00000113
b2_unused1D                       00000112
b2_unused1E                       00000111
b2_unused1F                       00000110
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused10                       0000019F
b3_unused11                       0000019E
b3_unused12                       0000019D
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 227


SYMBOL TABLE
  LABEL                             VALUE 

b3_unused13                       0000019C
b3_unused14                       0000019B
b3_unused15                       0000019A
b3_unused16                       00000199
b3_unused17                       00000198
b3_unused18                       00000197
b3_unused19                       00000196
b3_unused1A                       00000195
b3_unused1B                       00000194
b3_unused1C                       00000193
b3_unused1D                       00000192
b3_unused1E                       00000191
b3_unused1F                       00000190
b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000074
gbl_cntrb                         00000075
gbl_cntrc                         00000076
gbl_cntrd                         00000077
gbl_configLoc1                    00000070
gbl_dataConfig                    0000007B
gbl_modetemp                      00000078
gbl_modetempb                     00000079
gbl_ptStatus                      0000007F
gbl_sampleCntr                    0000007E
gbl_sampleRate0                   00000071
gbl_sampleRate1                   00000072
gbl_sampleRate2                   00000073
gbl_spdata                        0000007A
gbl_status_temp                   0000007D
gbl_w_temp                        0000007C
ih_1                              0000000E
ih_2                              0000004F
ih_3                              00000058
ih_pt                             00000048
irqst1_0                          00000161
irqst1_1                          00000183
irqst1_2                          00000185
irqst1_3                          0000018D
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 228


SYMBOL TABLE
  LABEL                             VALUE 

irqst1_3_1                        000001BE
irqst1_3_2                        000001BF
irqst1_3_a                        0000019F
irqst1_4                          000001C0
irqst1_5                          000001C6
rsmL_1                            00000258
rsmR_1                            0000027D
rsm_exit                          0000029D
rsm_slide_higher                  000002AB
rsm_slide_lower                   000002A0
sid_Exit                          00000249
sid_GetByte                       000001E2
sid_GetByteB                      000001EA
sid_GetByteC                      000001EE
sid_GetByteD                      000001F2
sid_GetByteE                      000001F6
sid_WaitComm_Break                00000241
sid_WaitComm_Conf                 0000022F
sid_WaitComm_Data                 000001FC
sid_WaitComm_Rec                  00000238
sid_WaitComm_SendDataA            00000208
sid_WaitComm_SendDataB            00000212
sid_WaitComm_SendDataC            0000021C
sid_WaitComm_SendDataD            00000226
sid_WaitComm_SendDataExit         0000022C
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 229


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 230


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.47                   DSOSCOPEA03.ASM   9-11-2013  7:28:55         PAGE 231


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXX-----------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7925
Program Memory Words Free:   267


Errors   :     0
Warnings :     0 reported,  1144 suppressed
Messages :    18 reported,    31 suppressed

