MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;
                      00071 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00072 ;
                      00073 ;
                      00074 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00075 ;
                      00076 ;This program is free software; you can redistribute it and/or modify it under
                      00077 ;the terms of the GNU General Public License as published by the Free Software
                      00078 ;Foundation; either version 2 of the License, or (at your option) any later
                      00079 ;version.
                      00080 ;
                      00081 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00082 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00083 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00084 ;details.
                      00085 ;
                      00086 ;You should have received a copy of the GNU General Public License along with
                      00087 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00088 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00089 ;
                      00090 ;==============================================================================
                      00091 
                      00092 ;=============================================================================
                      00093 ; C O N F I G U R A T I O N
                      00094 ;=============================================================================
                      00095 
                      00096         LIST P=16F887
                      00097 
                      00098         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00099 
                      00100 
                      00101 ;*****************************************************
                      00102 ;       === Configuration Word Definitions ===
                      00103 ;*****************************************************
                      00104 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00105 
                      00106 ; '__CONFIG' directive is used to embed configuration data within .asm file.
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; The labels following the directive are located in the respective .inc file.
                      00108 ; See respective data sheet for additional information on configuration word.
                      00109 
2007   20F2           00110         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00111         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00112 
                      00113 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00114 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00115 
2000   0001 0002 0003 00116         __idlocs        0x1234
       0004 
                      00117 
  00000020            00118         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00119 
                      00120 ;=============================================================================
                      00121 ; C O N S T A N T S
                      00122 ;=============================================================================
                      00123 
  00000000            00124 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00125 BANK1                   equ     0x0080
  00000100            00126 BANK2                   equ     0x0100
  00000180            00127 BANK3                   equ     0x0180
                      00128 
  00000020            00129 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00130 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00131                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00132                                                         ;the data points alternate between channel 1 and
                      00133                                                         ;channel 2
  0000005F            00134 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00135 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00136 
                      00137 ;I/O Pin maps
                      00138 ;-----------------------------------------------------------------------------
  00000007            00139         SERIALPORT      set     PORTC
  00000007            00140                 RX              equ     0x07
  00000006            00141                 TX              equ     0x06
                      00142 
  00000009            00143         ADC_CONTROLPORT set     PORTE
  00000000            00144                 RDD             equ     0x00
  00000001            00145                 ADDR0   equ     0x01
                      00146 
  00000006            00147         TRIGGERPORT     set     PORTB
  00000000            00148                 TRIGGER equ     0x00
                      00149 
  00000006            00150         ADC_PORT        set     PORTB
  00000003            00151                 ADDR2   equ     0x03
  00000002            00152                 ADDR1   equ     0x02
  00000001            00153                 CS              equ     0x01
                      00154 
  00000008            00155         ADC_DATAPORT    set     PORTD
                      00156 
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00157         ANALOG_SEL      set     PORTC
  00000001            00158                 CH1SEL  equ     0x01
  00000002            00159                 CH2SEL  equ     0x02
                      00160 
  00000005            00161         ANALOG_GAIN     set     PORTA
  00000000            00162                 GAIN1   equ     0x00
  00000001            00163                 GAIN5   equ     0x01
  00000004            00164                 CH1SELG equ     0x04
  00000005            00165                 CH2SELG equ     0x05
                      00166 
  00000007            00167         ANALOG_ACDC     set     PORTC
  00000000            00168                 ACDCMODE        equ     0x00
                      00169 
                      00170 ;Configuration memory map
                      00171 ;-----------------------------------------------------------------------------
                      00172 ;Bit map for gbl_configLoc1
  00000007            00173         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00174         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00175         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00176         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00177         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00178         FREQMODEBIT2            equ     0x02
  00000001            00179         FREQMODEBIT1            equ     0x01
  00000000            00180         FREQMODEBIT0            equ     0x00
                      00181 
                      00182 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00183         SAMPLEBANK3                     equ     0x02
  00000003            00184         SAMPLEBANK2                     equ     0x03
  00000001            00185         SAMPLEBANK1                     equ     0x01
  00000000            00186         SAMPLEBANK0                     equ     0x00
                      00187 
                      00188 
                      00189 ;Table of frequency modes, 0 to 15
  00000000            00190         FREQSAMPLE1M            equ     D'0'
  00000001            00191         FREQSAMPLE833K          equ     D'1'
  00000002            00192         FREQSAMPLE625K          equ     D'2'
  00000003            00193         FREQSAMPLE417K          equ     D'3'
  00000004            00194         FREQSAMPLE250K          equ     D'4'
  00000005            00195         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00196         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00197         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00198         FREQSAMPLEXY417K        equ     D'8'
  00000009            00199         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00200         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00201         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00202         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
                      00203 
                      00204 
                      00205 ;=============================================================================
                      00206 ; V A R I A B L E S
                      00207 ;=============================================================================
                      00208 
                      00209 CBLOCK  0x70            ;Global General Purpose Registers, accessible anywhere
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000070            00210         gbl_configLoc1                  ;Configuration mode
  00000071            00211         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000072            00212         gbl_sampleRate2
  00000073            00213         gbl_cntra                               ;general use counter
  00000074            00214         gbl_cntrb                               ;second counter
  00000075            00215         gbl_cntrc                               ;third counter
  00000076            00216         gbl_modetemp                    ;temporary mode variable
  00000077            00217         gbl_modetempb                   ;temporary mode for repetitive sampling
  00000078            00218         gbl_spdata                              ;data to/from serial port
  00000079            00219         gbl_dataConfig                  ;the data configuration
  0000007A            00220         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007B            00221         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007C            00222         gbl_pclath_temp                 ;temp storage for pclath register during interrupt handling
  0000007D            00223         gbl_unused2
  0000007E            00224         gbl_unused1
  0000007F            00225         gbl_unused0
                      00226 ENDC
                      00227 
                      00228 CBLOCK  0x60            ;Bank0 General Purpose Registers
  00000060            00229         b0_triggerDelay1                ;trigger delay (3 bytes)
  00000061            00230         b0_triggerDelay2
  00000062            00231         b0_triggerDelay3
  00000063            00232         b0_triggerLevel                 ;the trigger level
  00000064            00233         b0_sampleAddr                   ;address to store ADC sampled value
  00000065            00234         b0_sampleBank                   ;bank to store ADC sampled value
  00000066            00235         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000067            00236         b0_unused8
  00000068            00237         b0_unused7
  00000069            00238         b0_unused6
  0000006A            00239         b0_unused5
  0000006B            00240         b0_unused4
  0000006C            00241         b0_unused3
  0000006D            00242         b0_unused2
  0000006E            00243         b0_unused1
  0000006F            00244         b0_unused0
                      00245 ENDC
                      00246 
                      00247 CBLOCK  0xE0            ;Bank1 General Purpose Registers
  000000E0            00248         b1_unusedF
  000000E1            00249         b1_unusedE
  000000E2            00250         b1_unusedD
  000000E3            00251         b1_unusedC
  000000E4            00252         b1_unusedB
  000000E5            00253         b1_unusedA
  000000E6            00254         b1_unused9
  000000E7            00255         b1_unused8
  000000E8            00256         b1_unused7
  000000E9            00257         b1_unused6
  000000EA            00258         b1_unused5
  000000EB            00259         b1_unused4
  000000EC            00260         b1_unused3
  000000ED            00261         b1_unused2
  000000EE            00262         b1_unused1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000EF            00263         b1_unused0
                      00264 ENDC
                      00265 
                      00266 CBLOCK  0x160           ;Bank2 General Purpose Registers
  00000160            00267         b2_unusedF
  00000161            00268         b2_unusedE
  00000162            00269         b2_unusedD
  00000163            00270         b2_unusedC
  00000164            00271         b2_unusedB
  00000165            00272         b2_unusedA
  00000166            00273         b2_unused9
  00000167            00274         b2_unused8
  00000168            00275         b2_unused7
  00000169            00276         b2_unused6
  0000016A            00277         b2_unused5
  0000016B            00278         b2_unused4
  0000016C            00279         b2_unused3
  0000016D            00280         b2_unused2
  0000016E            00281         b2_unused1
  0000016F            00282         b2_unused0
                      00283 ENDC
                      00284 
                      00285 CBLOCK  0x1E0           ;Bank3 General Purpose Registers
  000001E0            00286         b3_unusedF
  000001E1            00287         b3_unusedE
  000001E2            00288         b3_unusedD
  000001E3            00289         b3_unusedC
  000001E4            00290         b3_unusedB
  000001E5            00291         b3_unusedA
  000001E6            00292         b3_unused9
  000001E7            00293         b3_unused8
  000001E8            00294         b3_unused7
  000001E9            00295         b3_unused6
  000001EA            00296         b3_unused5
  000001EB            00297         b3_unused4
  000001EC            00298         b3_unused3
  000001ED            00299         b3_unused2
  000001EE            00300         b3_unused1
  000001EF            00301         b3_unused0
                      00302 ENDC
                      00303 
                      00304 ;=============================================================================
                      00305 ; I N C L U D E S
                      00306 ;=============================================================================
                      00307         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00308         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00309         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00310 
                      00311 
                      00312 ;=============================================================================
                      00313 ; M A C R O S
                      00314 ;=============================================================================
                      00315 
                      00316 MGOTO macro address
                      00317         if (address & (0x1000))
                      00318                 bsf PCLATH, 4
                      00319         else
                      00320                 bcf PCLATH, 4
                      00321         endif
                      00322         if (address & (0x800))
                      00323                 bsf PCLATH, 3
                      00324         else
                      00325                 bcf PCLATH, 3
                      00326         endif
                      00327         goto address
                      00328         endm
                      00329 
                      00330 
                      00331 
                      00332 
                      00333 ;=============================================================================
                      00334 ; I N T E R R U P T S
                      00335 ;=============================================================================
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00336 
0000                  00337 org 0x0000      ;Reset Vector
                      00338 ;First three lines of initialization included here to save on memory.
                      00339         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00340         clrf ADC_DATAPORT
0003   2850           00341         goto Initial
                      00342 
0004                  00343 org 0x0004      ;Interrupt Vector
0004                  00344 IntHandler
                      00345         ;Save the current state
0004   00FA           00346     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00347         swapf   STATUS,W                                        ;Move status register into W register
0006   00FB           00348         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00349 
                      00350         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00351         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00352         ; the interrupt is truly enabled before acting on the flag state.
                      00353 ;       comf    INTCON, W                                       ;Check for trigger interrupt and its ena
                            ble bit
                      00354 ;       andlw   (1<<INTF)|(1<<INTE)
                      00355 ;       btfss   STATUS, Z
                      00356 ;               goto ih_2
                      00357 
                      00358         ;HOWEVER, we can shorten/speed up this interrupt check!  Since we only enable the trigger
                      00359         ; interrupt when we are actually looking for it, and since we only enter this routine if
                      00360         ; we have an interrupt, we can shorten the trigger interrupt check to just look at the
                      00361         ; enable being active:
0007   1E0B           00362         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   2842           00363                 goto    ih_2
0009   120B           00364         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00365                                                                                 ; for the duration of th
                            e acquisition
000A                  00366 ih_1
000A   0BF3           00367         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0xfff imp
                            lies minimum delay
000B   280A           00368                 goto ih_1
000C   0BF4           00369         decfsz gbl_cntrb, f
000D   280A           00370                 goto ih_1
000E   0BF5           00371         decfsz gbl_cntrc, f
000F   280A           00372                 goto ih_1
0010   0876           00373         movf gbl_modetemp, w
                      00374 
0011                  00375 MainSelect
0011   0782           00376         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00377         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0013   118A               M                 bcf PCLATH, 3
                          M         endif
0014   2CB8               M         goto Sample1M
                      00378         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0015   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0016   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0017   2FBF               M         goto Sample833k
                      00379         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2B7F               M         goto Sample625k
                      00380         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001B   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
001D   2BC2               M         goto Sample417k250k
                      00381         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2BC2               M         goto Sample417k250k
                      00382         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2A71               M         goto SampleDelayed
                      00383         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0024   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0026   2DC2               M         goto SampleRep5M
                      00384         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0027   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
0028   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0029   29F5               M         goto SampleRep2M
                      00385         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
002B   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
002C   29BC               M         goto SampleXY417k
                      00386         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002E   118A               M                 bcf PCLATH, 3
                          M         endif
002F   2C25               M         goto SampleXY250k192k
                      00387         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0031   118A               M                 bcf PCLATH, 3
                          M         endif
0032   2C25               M         goto SampleXY250k192k
                      00388         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2ADC               M         goto SampleXYDelayed
                      00389         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   296D               M         goto SampleIntDrvn
                      00390         MGOTO SampleRealTime                            ;FreqMode = 13
                          M         if (SampleRealTime & (0x1000))
                          M                 bsf PCLATH, 4
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRealTime & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   29EA               M         goto SampleRealTime
                      00391         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   2875               M         goto Main
                      00392         MGOTO Main                                                      ;Invalid FreqMode = 15
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2875               M         goto Main
                      00393 
                      00394 
0042                  00395 ih_2
0042   1283 1303      00396         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0044   1C0C           00397         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0045   284B           00398                 goto    ih_3                                    ;It wasn't, so restore registers and the
                            n return from interrupt
0046   1683 1303      00399         banksel BANK1
0048   1C0C           00400         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0049   284B           00401                 goto    ih_3
004A   211C           00402         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00403 
004B                  00404 ih_3
                      00405         ;restore previous state 
004B   0E7B           00406     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
004C   0083           00407     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   0EFA           00408     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
004E   0E7A           00409     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
004F   0009           00410     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00411 
                      00412 
                      00413 ;=============================================================================
                      00414 ; M A I N
                      00415 ;=============================================================================
                      00416 ;Initalize for the program
                      00417 ;-----------------------------------------------------------------------------
0050                  00418 Initial
0050   0185           00419         clrf PORTA
0051   1683 1303      00420         banksel TRISA
                      00421         MOVLF B'00010111', TRISA                        ;Configure PORTA
0053   3017               M     movlw B'00010111'
0054   0085               M     movwf TRISA
                      00422         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0055   30C0               M     movlw B'11000000'
0056   0081               M     movwf OPTION_REG
                      00423         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0057   3010               M     movlw B'00010000'
0058   008B               M     movwf INTCON
                      00424         MOVLF B'00110001', TRISB
0059   3031               M     movlw B'00110001'
005A   0086               M     movwf TRISB
                      00425         MOVLF B'11111111', TRISD
005B   30FF               M     movlw B'11111111'
005C   0088               M     movwf TRISD
                      00426         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
005D   3004               M     movlw B'00000100'
005E   0089               M     movwf TRISE
                      00427         MOVLF B'10111001', TRISC                        ;Configure PORTC
005F   30B9               M     movlw B'10111001'
0060   0087               M     movwf TRISC
                      00428 
0061   1683 1703      00429         banksel ANSEL                   ;Access bank 3
0063   0188           00430         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0064   0189           00431         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00432 
                      00433         ;Initialize Serial Port
                      00434 
0065   3008           00435         movlw   0x08                    ;Set the Serial Port baud rate generators
0066   0087           00436         movwf   BAUDCTL
0067   1683 1303      00437         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0069   3056           00438         movlw   0x56                    ; for 57.6K baud
006A   0099           00439         movwf   SPBRG
006B   3000           00440         movlw   0x00
006C   009A           00441         movwf   SPBRGH
006D   3024           00442         movlw   0x24                    ;Set the Serial Port Transmitter configuration
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   0098           00443         movwf   TXSTA
006F   1283 1303      00444         banksel RCSTA                   ;Access bank 0
0071   3090           00445         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0072   0098           00446         movwf   RCSTA
                      00447 
0073   1383           00448         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
0074   019F           00449         clrf    ADCON0                  ;Make sure PIC's ADC is off
                      00450         
0075                  00451 Main
                      00452         MOVLF 0x01, gbl_sampleRate1
0075   3001               M     movlw 0x01
0076   00F1               M     movwf gbl_sampleRate1
0077   00F2           00453         movwf gbl_sampleRate2
                      00454         MOVLF 0xFF, gbl_cntra
0078   30FF               M     movlw 0xFF
0079   00F3               M     movwf gbl_cntra
007A   00F4           00455         movwf gbl_cntrb
007B   00F5           00456         movwf gbl_cntrc
007C   216D           00457         call SampleIntDrvn
                      00458 
                      00459 
                      00460 
007D   20A8           00461         call    WaitComm                ;Call WaitComm and stay there until we have
                      00462                                                         ; received a Configuration Information Field
                      00463 
007E   01F7           00464         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00465         
007F                  00466 MainB
007F   1089           00467         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
0080   1A70           00468         btfsc   gbl_configLoc1, CHANNELBIT
0081   1489           00469                 bsf             ADC_CONTROLPORT, ADDR0
                      00470         if (high MainSelect)
                      00471                 movlw   high MainSelect                 ;Prepare for jump
                      00472                 movwf   PCLATH
                      00473         else
0082   018A           00474                 clrf PCLATH
                      00475         endif
0083   0870           00476         movf    gbl_configLoc1, w                       ;Put configuration in WREG
0084   390F           00477         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
0085   00F6           00478         movwf   gbl_modetemp                            ;Multiply by 3
0086   1003           00479         bcf             STATUS, C
0087   0DF6           00480         rlf             gbl_modetemp, f
0088   0776           00481         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0089   1086           00482         bcf             ADC_PORT, CS                            ;Select MAX118
008A   1F70           00483         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
008B   2811           00484                 goto    MainSelect
008C                  00485 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
008C   00F6           00486         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
008D   0A62           00487         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
008E   00F3           00488         movwf   gbl_cntra
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008F   0A61           00489         incf    b0_triggerDelay2, w     
0090   00F4           00490         movwf   gbl_cntrb
0091   0A60           00491         incf    b0_triggerDelay1, w
0092   00F5           00492         movwf   gbl_cntrc
0093   1683 1303      00493         banksel OPTION_REG                                      ;Access bank 1
0095   1301           00494         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
0096   1BF0           00495         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
0097   1701           00496                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
0098   1283 1303      00497         banksel BANK0                                           ;Access bank 0
009A   108B           00498         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
009B   160B           00499         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
009C   178B           00500         bsf             INTCON, GIE                                     ;Enable interrupts
                      00501 
009D                  00502 MainWTrigB
009D   20F6           00503         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00504         skipEqLF B'11110011', gbl_spdata        ;message is received
009E   0878               M         movf gbl_spdata, w
009F   3AF3               M         xorlw B'11110011'
00A0   1D03               M         btfss STATUS, Z
00A1   289D           00505                 goto    MainWTrigB
                      00506         MOVLF B'11011100', gbl_spdata           ;Respond
00A2   30DC               M     movlw B'11011100'
00A3   00F8               M     movwf gbl_spdata
00A4   2107           00507         call    PutByte
00A5   120B           00508         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
00A6   138B           00509         bcf             INTCON, GIE                                     ;Disable interrupts
00A7   2875           00510         goto    Main                                            ;Abort
                      00511 
                      00512                                                                                 ;Note that the jitter on
                             the interrupt is
                      00513                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00514                                                                                 ;on the PIC running at 2
                            0 MHz
                      00515 
                      00516 ;=============================================================================
                      00517 ; S U B R O U T I N E S
                      00518 ;=============================================================================
                      00519 
                      00520 ;Wait for command from computer and respond accordingly
                      00521 
                      00522         ; Received Commands are:
                      00523         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00524         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00525         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00526         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00527 
                      00528 ;-----------------------------------------------------------------------------
00A8                  00529 WaitComm
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A8   20F6           00530         call GetByte                                            ;Wait for receive
                      00531 
00A9                  00532 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00533         skipEqLF B'11111000', gbl_spdata
00A9   0878               M         movf gbl_spdata, w
00AA   3AF8               M         xorlw B'11111000'
00AB   1D03               M         btfss STATUS, Z
00AC   28DC           00534                 goto WaitComm_Conf
                      00535         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00AD   30DC               M     movlw B'11011100'
00AE   00F8               M     movwf gbl_spdata
00AF   2107           00536         call PutByte
                      00537         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue
00B0   3020               M     movlw BUFFERMIN
00B1   0084               M     movwf FSR
                      00538         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00B2   3040               M     movlw BUFFERSIZE
00B3   00F4               M     movwf gbl_cntrb
00B4                  00539 WaitComm_SendDataA
                      00540         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00B4   0800               M     movf INDF, w
00B5   00F8               M     movwf gbl_spdata
00B6   0A84           00541         incf FSR, F                                                     ;Increment pointer
00B7   2107           00542         call PutByte                                            ;Send data
00B8   0BF4           00543         decfsz gbl_cntrb, f
00B9   28B4           00544                 goto WaitComm_SendDataA
                      00545         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00BA   3040               M     movlw BUFFERSIZE
00BB   00F4               M     movwf gbl_cntrb
00BC   1784           00546         bsf FSR, 7                                                      ;Bank 1
00BD   0384           00547         decf FSR, f
00BE                  00548 WaitComm_SendDataB
                      00549         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00BE   0800               M     movf INDF, w
00BF   00F8               M     movwf gbl_spdata
00C0   0384           00550         decf FSR, F                                                     ;Increment pointer
00C1   2107           00551         call PutByte                                            ;Send data
00C2   0BF4           00552         decfsz gbl_cntrb, f
00C3   28BE           00553                 goto WaitComm_SendDataB
                      00554         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00C4   3040               M     movlw BUFFERSIZE
00C5   00F4               M     movwf gbl_cntrb
00C6   1783           00555         bsf STATUS, IRP                                         ;Bank 3
00C7   0A84           00556         incf FSR, f
00C8                  00557 WaitComm_SendDataC
                      00558         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00C8   0800               M     movf INDF, w
00C9   00F8               M     movwf gbl_spdata
00CA   0A84           00559         incf FSR, F                                                     ;Increment pointer
00CB   2107           00560         call PutByte                                            ;Send data
00CC   0BF4           00561         decfsz gbl_cntrb, f
00CD   28C8           00562                 goto WaitComm_SendDataC
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00563         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00CE   3040               M     movlw BUFFERSIZE
00CF   00F4               M     movwf gbl_cntrb
00D0   1384           00564         bcf FSR, 7                                                      ;Bank 2
00D1   0384           00565         decf FSR, f
00D2                  00566 WaitComm_SendDataD
                      00567         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00D2   0800               M     movf INDF, w
00D3   00F8               M     movwf gbl_spdata
00D4   0384           00568         decf FSR, F                                                     ;Increment pointer
00D5   2107           00569         call PutByte                                            ;Send data
00D6   0BF4           00570         decfsz gbl_cntrb, f
00D7   28D2           00571                 goto WaitComm_SendDataD
00D8                  00572 WaitComm_SendDataExit
00D8   1384           00573         bcf FSR, 7                                                      ;Set indirection back to Bank 0
00D9   1383           00574         bcf STATUS, IRP
00DA   2228           00575         call    ChannelConfSend
00DB   28A8           00576         goto    WaitComm
                      00577 
00DC                  00578 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00579         skipEqLF B'11111001', gbl_spdata
00DC   0878               M         movf gbl_spdata, w
00DD   3AF9               M         xorlw B'11111001'
00DE   1D03               M         btfss STATUS, Z
00DF   28E5           00580                 goto WaitComm_Rec
                      00581         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00E0   30DD               M     movlw B'11011101'
00E1   00F8               M     movwf gbl_spdata
00E2   2107           00582         call    PutByte
00E3   220D           00583         call    ConfSend
00E4   28A8           00584         goto    WaitComm
                      00585 
00E5                  00586 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00587         skipEqLF B'11111010', gbl_spdata
00E5   0878               M         movf gbl_spdata, w
00E6   3AFA               M         xorlw B'11111010'
00E7   1D03               M         btfss STATUS, Z
00E8   28EE           00588                 goto WaitComm_Break
                      00589         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
00E9   30DE               M     movlw B'11011110'
00EA   00F8               M     movwf gbl_spdata
00EB   2107           00590         call    PutByte
00EC   21EB           00591         call    ConfReceive
00ED   0008           00592         return
                      00593 
00EE                  00594 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00595         skipEqLF B'11110011', gbl_spdata
00EE   0878               M         movf gbl_spdata, w
00EF   3AF3               M         xorlw B'11110011'
00F0   1D03               M         btfss STATUS, Z
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F1   28A8           00596                 goto WaitComm                                   ;No valid message sent
                      00597         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
00F2   30DC               M     movlw B'11011100'
00F3   00F8               M     movwf gbl_spdata
00F4   2107           00598         call    PutByte
00F5   28A8           00599         goto    WaitComm
                      00600 
                      00601 
                      00602 
                      00603 ;GetByte is used to receive a byte on the serial port
                      00604 ;------------------------------------------------------------------------------
00F6                  00605 GetByte
00F6   1E8C           00606         btfss PIR1, RCIF                        
00F7   28F6           00607                 goto GetByte
00F8                  00608 GetByteB
00F8   1D18           00609         btfss RCSTA, FERR                                       ;Handle the frame error
00F9   28FC           00610                 goto GetByteC
00FA   081A           00611         movf RCREG, w                                           ;Throw away data with errors
00FB   28F6           00612         goto GetByte
00FC                  00613 GetByteC
00FC   1C98           00614         btfss RCSTA, OERR                                       ;Handle the over run error
00FD   2904           00615                 goto GetByteE
00FE   1218           00616         bcf RCSTA, CREN                                         ;Reset the receive logic
00FF   1618           00617         bsf RCSTA, CREN
0100                  00618 GetByteD
0100   081A           00619         movf RCREG, w                                           ;Throw away data with errors
0101   1A8C           00620         btfsc PIR1, RCIF
0102   2900           00621                 goto GetByteD
0103   28F6           00622         goto GetByte
0104                  00623 GetByteE                                                                ;No errors if we got here       
                      00624         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0104   081A               M     movf RCREG, w
0105   00F8               M     movwf gbl_spdata
0106   3400           00625         retlw 0
                      00626         
                      00627 ;PutByte is used to put a byte on the serial port
                      00628 ;------------------------------------------------------------------------------
0107                  00629 PutByte
0107                  00630 PutByteSerial
0107   1E0C           00631         btfss PIR1, TXIF
0108   2907           00632                 goto PutByteSerial
                      00633         MOVFF gbl_spdata, TXREG
0109   0878               M     movf gbl_spdata, w
010A   0099               M     movwf TXREG
010B   3400           00634         retlw 0
                      00635 
                      00636 ;Delay used to adjust sample rate
                      00637 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00638 ;statement)
                      00639 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00640 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00641 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00642 ;-----------------------------------------------------------------------------
010C                  00643 Delay
010C   3001           00644         movlw 0x01
010D                  00645 DelayLoop
010D   02F3           00646         subwf gbl_cntra, F
010E   1C03           00647         btfss STATUS, C
010F   02F4           00648                 subwf gbl_cntrb, F
0110   08F3           00649         movf gbl_cntra, F
                      00650         skipZero
0111   1D03               M         btfss STATUS, Z
0112   290D           00651                 goto DelayLoop
0113   08F4           00652         movf gbl_cntrb, F
                      00653         skipZero
0114   1D03               M         btfss STATUS, Z
0115   290D           00654                 goto DelayLoop
0116   0008           00655         return
                      00656 
                      00657 ;ADCShutdown, shutsdown the MAX118
                      00658 ;-----------------------------------------------------------------------------
0117                  00659 ADCShutdown
0117   0080           00660         movwf   INDF                                            ;Save to QUEUE
0118   1486           00661         bsf             ADC_PORT, CS                            ;Unselect MAX118
0119   1383           00662         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
011A   2234           00663         call    ChannelConfStore
011B   2875           00664         goto Main
                      00665 
                      00666 ;=============================================================================
                      00667 ;*****************************************************************************
                      00668 ;=============================================================================
                      00669 
                      00670 ;Interrupt Driven Sampling with Command Responder
                      00671 ;This code section consists of two routines:
                      00672 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00673 ; (2) A looping routine that responds to PC commands while we are waiting for sampling interrupts
                      00674 
                      00675 ;Sampling rate ~= 5000000/8/(SAMPLERATE1:SAMPLERATE2) with 20 MHz clock
                      00676 ;Note!  There is an xx instruction count between the actual Timer 1 interrupt
                      00677 ; being "detected/vectored to" and the Timer 1 counter being reloaded.
                      00678 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00679 ; when it rolls over to 0x0000, the interrupt is generated.
                      00680 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00681 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00682 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00683 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00684 ;-----------------------------------------------------------------------------
                      00685 
011C                  00686 IrqServiceTimer1
                      00687         ;reload timer for next interrupt and clear the interrupt flag
                      00688         ;sample ADC and store into appropriate location
                      00689         ;increment location and maybe the bank to store into for next time around
                      00690         ;turn off interrupt if done acquiring
                      00691         ;return from call
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011C   1283 1303      00692         banksel BANK0
011E   1010           00693         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
011F   0971           00694         comf    gbl_sampleRate1, W                      ;MSB of sampling rate
0120   008F           00695         movwf   TMR1H
0121   0972           00696         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
0122   008E           00697         movwf   TMR1L
0123   100C           00698         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0124   1410           00699         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
0125   0804           00700         movf    FSR, W                                          ;Save the current FSR
0126   00E6           00701         movwf   b0_fsr_temp
                      00702 
                      00703                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
                      00704                                                         ;Note!: This is a bit strange, as the other samp
                            ling methods use an
                      00705                                                         ; acquisition memory loading technique of inc-de
                            c-inc-dec for
                      00706                                                         ; bank0-bank1-bank3-bank2 ... so, we have to acc
                            omodate!
0127   0864           00707         movf    b0_sampleAddr, W                                ;Get the acquisition memory address poin
                            ter
0128   18E5           00708         btfsc   b0_sampleBank, SAMPLEBANK1              ;Check for it being the "decrementing bank1"
0129   3A7F           00709                 xorlw   0x7f                                            ;Its the "decrementing bank 1", 
                            so invert the address pointer
012A   19E5           00710         btfsc   b0_sampleBank, SAMPLEBANK2              ;Check for it being the "decrementing bank2"
012B   3A7F           00711                 xorlw   0x7f                                            ;Its the "decrementing bank2", s
                            o invert the address pointer
                      00712 
012C   0084           00713         movwf   FSR                                                     ;Put the acquisition memory poin
                            ter into the indirection register
                      00714 
                      00715                                                         ;Setup the indirection bank bits IRP and FSR7
012D   1C65           00716         btfss   b0_sampleBank, SAMPLEBANK0      ;Instruction cycle count for balancing act starts here
012E   2932           00717                 goto $+4                                                ;
012F   1384           00718         bcf             FSR, 7                                          ;
0130   1383           00719         bcf             STATUS, IRP                                     ;
0131   2941           00720         goto    irqst1_1                                        ;takes 4 to get here +2 to jump
0132   1CE5           00721         btfss   b0_sampleBank, SAMPLEBANK1      ;
0133   2937           00722                 goto $+4                                                ;
0134   1784           00723         bsf             FSR, 7                                          ;
0135   1383           00724         bcf             STATUS, IRP                                     ;
0136   2943           00725         goto    irqst1_2                                        ;takes 7 to get here +2 to jump
0137   1D65           00726         btfss   b0_sampleBank, SAMPLEBANK3      ;
0138   293C           00727                 goto $+4                                                ;
0139   1784           00728         bsf             FSR, 7                                          ;
013A   1783           00729         bsf             STATUS, IRP                                     ;
013B   2945           00730         goto    irqst1_3                                        ;takes 10 to get here + 2 to jump
013C   1DE5           00731         btfss   b0_sampleBank, SAMPLEBANK2      ;
013D   2941           00732                 goto $+4                                                ;
013E   1384           00733         bcf             FSR, 7                                          ;
013F   1783           00734         bsf             STATUS, IRP                                     ;
0140   2947           00735         goto    irqst1_4                                        ;takes 13 to get here + 2 to jump
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00736 
                      00737                                                         ;Instruction time balancer for above indirection
                             bank bit setting/clearing
0141                  00738 irqst1_1
0141   2942           00739         goto    $+1
0142   0000           00740         nop
0143                  00741 irqst1_2
0143   2944           00742         goto    $+1
0144   0000           00743         nop
0145                  00744 irqst1_3
0145   2946           00745         goto    $+1
0146   0000           00746         nop
0147                  00747 irqst1_4
                      00748 
0147   1089           00749         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
0148   1009           00750         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
0149   294A           00751         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
014A   294B           00752         goto    $+1
014B   0000           00753         nop
014C   0808           00754         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
014D   1409           00755         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
014E   1489           00756         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
014F   1009           00757         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
0150   0080           00758         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
0151   0A84           00759         incf    FSR, F                                          ;Increment acquistion memory pointer
0152   2953           00760         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
0153   0000           00761         nop
0154   0808           00762         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
                      00763                                                                                 ;After this point, no ne
                            ed for instruction cycle balancing
0155   1409           00764         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0156   0080           00765         movwf   INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00766 
                      00767 
0157   0AE4           00768         incf    b0_sampleAddr, F                        ;Increment acquisition memory pointer...
0158   0AE4           00769         incf    b0_sampleAddr, F                        ; ...2 times for 2 samples taken
0159   3060           00770         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
015A   0664           00771         xorwf   b0_sampleAddr, W
015B   1D03           00772         btfss   STATUS, Z
015C   2968           00773                 goto    irqst1_5                                ;Jump, we are not done filling the curre
                            nt bank
015D   3020           00774         movlw   BUFFERMIN                                       ;Reset the acquistion memory pointer to 
                            its start
015E   00E4           00775         movwf   b0_sampleAddr
015F   1003           00776         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0160   0DE5           00777         rlf     b0_sampleBank, F
0161   1E65           00778         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            pling
0162   2968           00779                 goto    irqst1_5                                ;Not done, so keep going...
0163   1010           00780         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
0164   1683 1303      00781         banksel BANK1
0166   100C           00782         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
0167   130B           00783         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
0168                  00784 irqst1_5
0168   1283 1303      00785         banksel BANK0
016A   0866           00786         movf    b0_fsr_temp, W                          ;Restore FSR register
016B   0084           00787         movwf   FSR
016C   0008           00788         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      00789                                                                                 ; state and does the ret
                            fie
                      00790 
                      00791 
                      00792 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
016D                  00793 SampleIntDrvn
                      00794         ;Setup the sample write location and sample bank variables
                      00795         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      00796         ;Turn on Timer 1
                      00797         ;Enable the Timer 1 interrupt
016D   1283 1303      00798         banksel BANK0
016F   3020           00799         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
0170   00E4           00800         movwf   b0_sampleAddr
0171   3001           00801         movlw   0x01                                            ;Initialize sample bank pointer
0172   00E5           00802         movwf   b0_sampleBank
0173   1010           00803         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0174   1690           00804         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
0175   1610           00805         bsf             T1CON, T1CKPS0
0176   30FF           00806         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
0177   008F           00807         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
0178   008E           00808         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
0179   100C           00809         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
017A   1683 1303      00810         banksel BANK1
017C   140C           00811         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
017D   170B           00812         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
017E   178B           00813         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
017F   1283 1303      00814         banksel BANK0
0181   1410           00815         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
                      00816 
                      00817         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      00818         ; Received Commands are:
                      00819         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00820         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00821         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00822         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00823         ;
                      00824         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      00825         ; routine after the sample memory buffer has been fully filled), leave this
                      00826         ; routine and go back to Main
                      00827 
0182                  00828 sid_GetByte
0182   1683 1303      00829         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
0184   1C0C           00830         btfss   PIE1, TMR1IE
0185   29E4           00831                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
0186   1283 1303      00832         banksel BANK0
0188   1E8C           00833         btfss   PIR1, RCIF                      
0189   2982           00834                 goto sid_GetByte
018A                  00835 sid_GetByteB
018A   1D18           00836         btfss   RCSTA, FERR                                     ;Handle the frame error
018B   298E           00837                 goto sid_GetByteC
018C   081A           00838         movf    RCREG, w                                        ;Throw away data with errors
018D   2982           00839         goto    sid_GetByte
018E                  00840 sid_GetByteC
018E   1C98           00841         btfss   RCSTA, OERR                                     ;Handle the over run error
018F   2996           00842                 goto sid_GetByteE
0190   1218           00843         bcf             RCSTA, CREN                                     ;Reset the receive logic
0191   1618           00844         bsf             RCSTA, CREN
0192                  00845 sid_GetByteD
0192   081A           00846         movf    RCREG, w                                        ;Throw away data with errors
0193   1A8C           00847         btfsc   PIR1, RCIF
0194   2992           00848                 goto sid_GetByteD
0195   2982           00849         goto    sid_GetByte
0196                  00850 sid_GetByteE                                                    ;No errors if we got here       
                      00851         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
0196   081A               M     movf RCREG, w
0197   00F8               M     movwf gbl_spdata
                      00852 
                      00853 
0198                  00854 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00855         skipEqLF B'11111000', gbl_spdata
0198   0878               M         movf gbl_spdata, w
0199   3AF8               M         xorlw B'11111000'
019A   1D03               M         btfss STATUS, Z
019B   29CA           00856                 goto sid_WaitComm_Conf
                      00857         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
019C   30DC               M     movlw B'11011100'
019D   00F8               M     movwf gbl_spdata
019E   2107           00858         call    PutByte
                      00859         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
019F   3020               M     movlw BUFFERMIN
01A0   0084               M     movwf FSR
                      00860         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A1   3040               M     movlw BUFFERSIZE
01A2   00F4               M     movwf gbl_cntrb
01A3   1383           00861         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
01A4                  00862 sid_WaitComm_SendDataA                                  ;In Bank 0
                      00863         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01A4   0800               M     movf INDF, w
01A5   00F8               M     movwf gbl_spdata
01A6   0A84           00864         incf    FSR, F                                          ;Increment pointer
01A7   2107           00865         call    PutByte                                         ;Send data
01A8   0BF4           00866         decfsz  gbl_cntrb, f
01A9   29A4           00867                 goto sid_WaitComm_SendDataA
                      00868         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01AA   3040               M     movlw BUFFERSIZE
01AB   00F4               M     movwf gbl_cntrb
01AC   1784           00869         bsf             FSR, 7                                          ;Set Bank 1
01AD   0384           00870         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 1 
01AE                  00871 sid_WaitComm_SendDataB
                      00872         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01AE   0800               M     movf INDF, w
01AF   00F8               M     movwf gbl_spdata
01B0   0384           00873         decf    FSR, F                                          ;Increment pointer
01B1   2107           00874         call    PutByte                                         ;Send data
01B2   0BF4           00875         decfsz  gbl_cntrb, f
01B3   29AE           00876                 goto sid_WaitComm_SendDataB
                      00877         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01B4   3040               M     movlw BUFFERSIZE
01B5   00F4               M     movwf gbl_cntrb
01B6   1783           00878         bsf             STATUS, IRP                                     ;Set Bank 3
01B7   0A84           00879         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
01B8                  00880 sid_WaitComm_SendDataC
                      00881         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01B8   0800               M     movf INDF, w
01B9   00F8               M     movwf gbl_spdata
01BA   0A84           00882         incf    FSR, F                                          ;Increment pointer
01BB   2107           00883         call    PutByte                                         ;Send data
01BC   0BF4           00884         decfsz  gbl_cntrb, f
01BD   29B8           00885                 goto sid_WaitComm_SendDataC
                      00886         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01BE   3040               M     movlw BUFFERSIZE
01BF   00F4               M     movwf gbl_cntrb
01C0   1384           00887         bcf             FSR, 7                                          ;Bank 2
01C1   0384           00888         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 2
01C2                  00889 sid_WaitComm_SendDataD
                      00890         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01C2   0800               M     movf INDF, w
01C3   00F8               M     movwf gbl_spdata
01C4   0384           00891         decf    FSR, F                                          ;Increment pointer
01C5   2107           00892         call    PutByte                                         ;Send data
01C6   0BF4           00893         decfsz  gbl_cntrb, f
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C7   29C2           00894                 goto sid_WaitComm_SendDataD
01C8                  00895 sid_WaitComm_SendDataExit
01C8   2228           00896         call    ChannelConfSend
01C9   2982           00897         goto    sid_GetByte
                      00898 
01CA                  00899 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00900         skipEqLF B'11111001', gbl_spdata
01CA   0878               M         movf gbl_spdata, w
01CB   3AF9               M         xorlw B'11111001'
01CC   1D03               M         btfss STATUS, Z
01CD   29D3           00901                 goto sid_WaitComm_Rec
                      00902         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
01CE   30DD               M     movlw B'11011101'
01CF   00F8               M     movwf gbl_spdata
01D0   2107           00903         call    PutByte
01D1   220D           00904         call    ConfSend
01D2   2982           00905         goto    sid_GetByte
                      00906 
01D3                  00907 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00908         skipEqLF B'11111010', gbl_spdata
01D3   0878               M         movf gbl_spdata, w
01D4   3AFA               M         xorlw B'11111010'
01D5   1D03               M         btfss STATUS, Z
01D6   29DC           00909                 goto sid_WaitComm_Break
                      00910         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
01D7   30DE               M     movlw B'11011110'
01D8   00F8               M     movwf gbl_spdata
01D9   2107           00911         call    PutByte
01DA   2202           00912         call    ConfReceiveRateOnly
01DB   2982           00913         goto    sid_GetByte
                      00914 
01DC                  00915 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00916         skipEqLF B'11110011', gbl_spdata
01DC   0878               M         movf gbl_spdata, w
01DD   3AF3               M         xorlw B'11110011'
01DE   1D03               M         btfss STATUS, Z
01DF   2982           00917                 goto sid_GetByte                                ;No valid message sent
                      00918         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
01E0   30DC               M     movlw B'11011100'
01E1   00F8               M     movwf gbl_spdata
01E2   2107           00919         call    PutByte
01E3   2982           00920         goto    sid_GetByte
                      00921 
                      00922 
01E4                  00923 sid_Exit
01E4   1283 1303      00924         banksel BANK0
01E6   1486           00925         bsf ADC_PORT, CS                                        ;Unselect MAX118
01E7   1383           00926         bcf STATUS, IRP                                         ;Set indirection to bank 0 and/or bank 1
01E8   2234           00927         call    ChannelConfStore                        ;Update state of front panel switches/knobs
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E9   2875           00928         goto    Main
                      00929 
                      00930 
                      00931 
                      00932 
                      00933 ;SampleRealTime is used to send a continuous stream of ADC samples to the PC app.
                      00934 ;The sample pairs for channel 0 and channel 1 are sent as acquired at the rate
                      00935 ; determined by the Timer 1 interrupt.  The sampling rate can not be higher than
                      00936 ; the interface character rate divide by 2, or samples will be lost!  Be sure to keep
                      00937 ; the interrupt rate, determined by sampleRate1:sampleRate2, below the effective
                      00938 ; character rate divided by 2 on the interface.  57.6K baud would support a maximum sample
                      00939 ; rate of approximately 2000Hz, or a 500uSec interrupt period.  Remember, there are
                      00940 ; two data characters for each interrupt, channel 0's ADC byte and channel 1's ADC byte.
                      00941 ;-----------------------------------------------------------------------------
01EA                  00942 SampleRealTime
01EA   2875           00943         goto    Main                                            ;Not implemented yet
                      00944 
                      00945 
                      00946 
                      00947 ;Receive and store the user settings from the PC application
                      00948 ;-----------------------------------------------------------------------------
01EB                  00949 ConfReceive
01EB   20F6           00950         call GetByte                                            ;Receive ConfigLoc1
01EC   0878           00951         movf gbl_spdata, w
01ED   39DF           00952         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      00953         if clockFreq == 20                                      ;if necessary
01EE   3820           00954                 iorlw 1 << CLOCKFREQBIT
                      00955         endif
01EF   00F0           00956         movwf gbl_configLoc1
01F0   1283 1303      00957         banksel BANK0
01F2   20F6           00958         call GetByte                                            ;Receive trigger delay
                      00959         MOVFF gbl_spdata, b0_triggerDelay1
01F3   0878               M     movf gbl_spdata, w
01F4   00E0               M     movwf b0_triggerDelay1
01F5   20F6           00960         call GetByte
                      00961         MOVFF gbl_spdata, b0_triggerDelay2
01F6   0878               M     movf gbl_spdata, w
01F7   00E1               M     movwf b0_triggerDelay2
01F8   20F6           00962         call GetByte
                      00963         MOVFF gbl_spdata, b0_triggerDelay3
01F9   0878               M     movf gbl_spdata, w
01FA   00E2               M     movwf b0_triggerDelay3
01FB   20F6           00964         call GetByte                                            ;Receive sample rate
                      00965         MOVFF gbl_spdata, gbl_sampleRate1
01FC   0878               M     movf gbl_spdata, w
01FD   00F1               M     movwf gbl_sampleRate1
01FE   20F6           00966         call GetByte
                      00967         MOVFF gbl_spdata, gbl_sampleRate2
01FF   0878               M     movf gbl_spdata, w
0200   00F2               M     movwf gbl_sampleRate2
0201   0008           00968         return
                      00969 
                      00970 ;Receive user settings from the PC application. BUT, throw most of them away!
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00971 ;This is used during the SampleIntDrvn routine to prevent changing
                      00972 ;of state during an interrupt driven acquisition that is in progress.
                      00973 ;However, allow the sampleRate1:2 variable to be changed.  This allows
                      00974 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      00975 ;the user might have to wait a long time before the sampling completed and
                      00976 ;the user would again get control.
                      00977 ;-----------------------------------------------------------------------------
0202                  00978 ConfReceiveRateOnly
0202   20F6           00979         call GetByte                                            ;Receive ConfigLoc1
0203   20F6           00980         call GetByte                                            ;Receive trigger delay
0204   20F6           00981         call GetByte
0205   20F6           00982         call GetByte
0206   20F6           00983         call GetByte                                            ;Receive sample rate
                      00984         MOVFF gbl_spdata, gbl_sampleRate1
0207   0878               M     movf gbl_spdata, w
0208   00F1               M     movwf gbl_sampleRate1
0209   20F6           00985         call GetByte
                      00986         MOVFF gbl_spdata, gbl_sampleRate2
020A   0878               M     movf gbl_spdata, w
020B   00F2               M     movwf gbl_sampleRate2
020C   0008           00987         return
                      00988 
                      00989 ;Send the current DSOscope configuration to the PC application
                      00990 ;-----------------------------------------------------------------------------
020D                  00991 ConfSend
                      00992         ;Send number of datapoints (2 bytes)
                      00993         MOVLF high TOTALBUFFERSIZE, gbl_spdata
020D   3001               M     movlw high TOTALBUFFERSIZE
020E   00F8               M     movwf gbl_spdata
020F   2107           00994         call PutByte
                      00995         MOVLF low TOTALBUFFERSIZE, gbl_spdata
0210   3000               M     movlw low TOTALBUFFERSIZE
0211   00F8               M     movwf gbl_spdata
0212   2107           00996         call PutByte
                      00997         ;Send clock frequency configuration
                      00998         MOVFF gbl_configLoc1, gbl_spdata
0213   0870               M     movf gbl_configLoc1, w
0214   00F8               M     movwf gbl_spdata
0215   2107           00999         call PutByte
0216   1283 1303      01000         banksel BANK0
                      01001         MOVFF b0_triggerDelay1, gbl_spdata
0218   0860               M     movf b0_triggerDelay1, w
0219   00F8               M     movwf gbl_spdata
021A   2107           01002         call PutByte
                      01003         MOVFF b0_triggerDelay2, gbl_spdata
021B   0861               M     movf b0_triggerDelay2, w
021C   00F8               M     movwf gbl_spdata
021D   2107           01004         call PutByte
                      01005         MOVFF b0_triggerDelay3, gbl_spdata
021E   0862               M     movf b0_triggerDelay3, w
021F   00F8               M     movwf gbl_spdata
0220   2107           01006         call PutByte
                      01007         MOVFF gbl_sampleRate1, gbl_spdata
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0221   0871               M     movf gbl_sampleRate1, w
0222   00F8               M     movwf gbl_spdata
0223   2107           01008         call PutByte
                      01009         MOVFF gbl_sampleRate2, gbl_spdata
0224   0872               M     movf gbl_sampleRate2, w
0225   00F8               M     movwf gbl_spdata
0226   2107           01010         call PutByte
0227   0008           01011         return
                      01012 
                      01013 ;Send the current DSOscope channel settings to the PC application
                      01014 ;-----------------------------------------------------------------------------
0228                  01015 ChannelConfSend
                      01016         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
0228   0879               M     movf gbl_dataConfig, w
0229   00F8               M     movwf gbl_spdata
022A   2107           01017         call PutByte
022B   01F8           01018         clrf gbl_spdata
022C   2107           01019         call PutByte                                            ;Channel 1 offset
022D   2107           01020         call PutByte                                            ;Channel 2 offset
022E   1283 1303      01021         banksel BANK0
                      01022         MOVFF b0_triggerLevel, gbl_spdata
0230   0863               M     movf b0_triggerLevel, w
0231   00F8               M     movwf gbl_spdata
0232   2107           01023         call PutByte                                            ;Triggerlevel
0233   0008           01024         return
                      01025 
                      01026 
                      01027 ;Read and store the current front panel settings of the DSOscope
                      01028 ;-----------------------------------------------------------------------------
0234                  01029 ChannelConfStore
                      01030         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                      01031         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                      01032         ;                                                                               Channel 2 Scale 
                            (2) bits
                      01033         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                      01034         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                      01035         ;                                                                               Two least signif
                            icant bits = 0
0234   01F9           01036         clrf gbl_dataConfig
0235   1683 1303      01037         banksel TRISC                                   ;Access Bank1
0237   1507           01038         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0238   1087           01039         bcf TRISC, CH1SEL                                       ;Ch1Sel output
0239   1685           01040         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
023A   1205           01041         bcf TRISA, CH1SELG                                      ;Ch1Sel output
023B   1283 1303      01042         banksel ANALOG_SEL                              ;Access Bank0
023D   1087           01043         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
023E   1205           01044         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
023F   1779           01045         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
0240   1C05           01046         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0241   1379           01047                 bcf gbl_dataConfig, 6
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0242   1C85           01048         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0243   1379           01049                 bcf gbl_dataConfig, 6
0244   1C85           01050         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0245   17F9           01051                 bsf gbl_dataConfig, 7
0246   1807           01052         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0247   15F9           01053                 bsf gbl_dataConfig, 3
0248   1487           01054         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0249   1605           01055         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01056 
024A   1683 1303      01057         banksel TRISC                                   ;Access Bank1
024C   1487           01058         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
024D   1107           01059         bcf TRISC, CH2SEL                                       ;Ch2Sel output
024E   1605           01060         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
024F   1285           01061         bcf TRISA, CH2SELG                                      ;Ch2Sel output
0250   1283 1303      01062         banksel ANALOG_SEL                              ;Access Bank0
0252   1107           01063         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
0253   1285           01064         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
0254   1679           01065         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
0255   1C05           01066         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0256   1279           01067                 bcf gbl_dataConfig, 4
0257   1C85           01068         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0258   1279           01069                 bcf gbl_dataConfig, 4
0259   1C85           01070         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
025A   16F9           01071                 bsf gbl_dataConfig, 5
025B   1807           01072         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
025C   1579           01073                 bsf gbl_dataConfig, 2
025D   1507           01074         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
025E   1685           01075         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01076 
                      01077         ;Next byte is Trigger Level
025F   1089           01078         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0260   1506           01079         bsf ADC_PORT, ADDR1
0261   1186           01080         bcf ADC_PORT, ADDR2
0262   1086           01081         bcf ADC_PORT, CS                                        ;Select maxim ADC
0263   1009           01082         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
0264   0000           01083         nop                                                                     ;Wait 5
0265   0000           01084         nop
0266   0000           01085         nop
0267   0000           01086         nop
0268   0000           01087         nop
0269   0808           01088         movf ADC_DATAPORT, W                            ;Save trigger level
026A   1409           01089         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
026B   1486           01090         bsf ADC_PORT, CS                                        ;unselect maxim ADC
026C   1089           01091         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
026D   1106           01092         bcf ADC_PORT, ADDR1
026E   1186           01093         bcf ADC_PORT, ADDR2
026F   00E3           01094         movwf b0_triggerLevel
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0270   0008           01095         return
                      01096 
                      01097 
                      01098 ;=============================================================================
                      01099 ;*****************************************************************************
                      01100 ;=============================================================================
                      01101 
                      01102 
                      01103 ;Sample Delayed
                      01104 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01105 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01106 ;-----------------------------------------------------------------------------
0271                  01107 SampleDelayed
0271   1009           01108         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01109         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
0272   303F               M     movlw BUFFERSIZE-1
0273   00F5               M     movwf gbl_cntrc
                      01110         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0274   3020               M     movlw BUFFERMIN
0275   0084               M     movwf FSR
                      01111         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0276   0872               M     movf gbl_sampleRate2, w
0277   00F3               M     movwf gbl_cntra
                      01112         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0278   0871               M     movf gbl_sampleRate1, w
0279   00F4               M     movwf gbl_cntrb
027A   0000           01113         nop
027B   210C           01114         call Delay
027C                  01115 SampleDelayedLoopA
027C   0808           01116         movf ADC_DATAPORT, W                            ;Sample
027D   1409           01117         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
027E   1009           01118         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
027F   0080           01119         movwf INDF                                                      ;Save to QUEUE
0280   0A84           01120         incf FSR, F                                                     ;Increment QUEUE pointer
0281                  01121 StSampleDelayedLoopA
                      01122         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0281   0872               M     movf gbl_sampleRate2, w
0282   00F3               M     movwf gbl_cntra
                      01123         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0283   0871               M     movf gbl_sampleRate1, w
0284   00F4               M     movwf gbl_cntrb
0285   210C           01124         call Delay
0286   0BF5           01125         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0287   2A7C           01126                 goto SampleDelayedLoopA
0288   0000           01127         nop
0289   0808           01128         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
028A   1409           01129         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
028B   1009           01130         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
028C   0080           01131         movwf INDF                                                      ;Save to QUEUE
028D   1784           01132         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01133         MOVLF BUFFERSIZE-1, gbl_cntrc
028E   303F               M     movlw BUFFERSIZE-1
028F   00F5               M     movwf gbl_cntrc
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01134         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0290   0872               M     movf gbl_sampleRate2, w
0291   00F3               M     movwf gbl_cntra
                      01135         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0292   0871               M     movf gbl_sampleRate1, w
0293   00F4               M     movwf gbl_cntrb
0294   210C           01136         call Delay
0295   0000           01137         nop
0296                  01138 SampleDelayedLoopB
0296   0808           01139         movf ADC_DATAPORT, W                            ;Sample
0297   1409           01140         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0298   1009           01141         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0299   0080           01142         movwf INDF                                                      ;Save to QUEUE
029A   0384           01143         decf FSR, F                                                     ;Increment QUEUE pointer
                      01144         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
029B   0872               M     movf gbl_sampleRate2, w
029C   00F3               M     movwf gbl_cntra
                      01145         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
029D   0871               M     movf gbl_sampleRate1, w
029E   00F4               M     movwf gbl_cntrb
029F   210C           01146         call Delay
02A0   0BF5           01147         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02A1   2A96           01148                 goto SampleDelayedLoopB
02A2   0000           01149         nop
02A3   0808           01150         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
02A4   1409           01151         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02A5   1009           01152         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02A6   0080           01153         movwf INDF                                                      ;Save to QUEUE
02A7   1783           01154         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01155         MOVLF BUFFERSIZE-1, gbl_cntrc
02A8   303F               M     movlw BUFFERSIZE-1
02A9   00F5               M     movwf gbl_cntrc
                      01156         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02AA   0872               M     movf gbl_sampleRate2, w
02AB   00F3               M     movwf gbl_cntra
                      01157         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02AC   0871               M     movf gbl_sampleRate1, w
02AD   00F4               M     movwf gbl_cntrb
02AE   210C           01158         call Delay
02AF   0000           01159         nop
02B0                  01160 SampleDelayedLoopC
02B0   0808           01161         movf ADC_DATAPORT, W                            ;Sample
02B1   1409           01162         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02B2   1009           01163         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02B3   0080           01164         movwf INDF                                                      ;Save to QUEUE
02B4   0A84           01165         incf FSR, F                                                     ;Increment QUEUE pointer
                      01166         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02B5   0872               M     movf gbl_sampleRate2, w
02B6   00F3               M     movwf gbl_cntra
                      01167         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02B7   0871               M     movf gbl_sampleRate1, w
02B8   00F4               M     movwf gbl_cntrb
02B9   210C           01168         call Delay
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BA   0BF5           01169         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02BB   2AB0           01170                 goto SampleDelayedLoopC
02BC   0000           01171         nop
02BD   0808           01172         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
02BE   1409           01173         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02BF   1009           01174         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02C0   0080           01175         movwf INDF                                                      ;Save to QUEUE
02C1   1384           01176         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01177         MOVLF BUFFERSIZE-1, gbl_cntrc
02C2   303F               M     movlw BUFFERSIZE-1
02C3   00F5               M     movwf gbl_cntrc
                      01178         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02C4   0872               M     movf gbl_sampleRate2, w
02C5   00F3               M     movwf gbl_cntra
                      01179         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02C6   0871               M     movf gbl_sampleRate1, w
02C7   00F4               M     movwf gbl_cntrb
02C8   210C           01180         call Delay
02C9   0000           01181         nop
02CA                  01182 SampleDelayedLoopD
02CA   0808           01183         movf ADC_DATAPORT, W                            ;Sample
02CB   1409           01184         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02CC   1009           01185         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02CD   0080           01186         movwf INDF                                                      ;Save to QUEUE
02CE   0384           01187         decf FSR, F                                                     ;Increment QUEUE pointer
                      01188         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02CF   0872               M     movf gbl_sampleRate2, w
02D0   00F3               M     movwf gbl_cntra
                      01189         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02D1   0871               M     movf gbl_sampleRate1, w
02D2   00F4               M     movwf gbl_cntrb
02D3   210C           01190         call Delay
02D4   0BF5           01191         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02D5   2ACA           01192                 goto SampleDelayedLoopD
02D6   0000           01193         nop
02D7   0808           01194         movf ADC_DATAPORT, W                            ;Last sample
02D8   1409           01195         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02D9   118A           01196         bcf PCLATH, 3                                           ;insure correct program memory page
02DA   120A           01197         bcf PCLATH, 4
02DB   2917           01198         goto ADCShutdown
                      01199 
                      01200 ;SampleXYDelayed
                      01201 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01202 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01203 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01204 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01205 ;-----------------------------------------------------------------------------
02DC                  01206 SampleXYDelayed
02DC   1009           01207         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
02DD   1489           01208         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01209         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
02DE   3020               M     movlw BUFFERMIN
02DF   0084               M     movwf FSR
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E0   0808           01210         movf ADC_DATAPORT, W                            ;Sample X
02E1   1409           01211         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02E2   1009           01212         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02E3   1089           01213         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02E4   0080           01214         movwf INDF                                                      ;Save to QUEUE
02E5   0A84           01215         incf FSR, F                                                     ;Increment QUEUE pointer
                      01216         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
02E6   301F               M     movlw BUFFERSIZE/2-1
02E7   00F5               M     movwf gbl_cntrc
                      01217         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02E8   0872               M     movf gbl_sampleRate2, w
02E9   00F3               M     movwf gbl_cntra
                      01218         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02EA   0871               M     movf gbl_sampleRate1, w
02EB   00F4               M     movwf gbl_cntrb
02EC   210C           01219         call Delay
02ED   0000           01220         nop
02EE                  01221 SampleXYDelayedLA
02EE   0808           01222         movf ADC_DATAPORT, W                            ;Sample Y
02EF   1409           01223         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F0   1009           01224         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F1   1489           01225         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
02F2   0080           01226         movwf INDF                                                      ;Save to QUEUE
02F3   0A84           01227         incf FSR, F                                                     ;Increment QUEUE pointer
02F4   0808           01228         movf ADC_DATAPORT, W                            ;Sample X
02F5   1409           01229         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F6   1009           01230         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F7   1089           01231         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02F8   0080           01232         movwf INDF                                                      ;Save to QUEUE
02F9   0A84           01233         incf FSR, F                                                     ;Increment QUEUE pointer
                      01234         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02FA   0872               M     movf gbl_sampleRate2, w
02FB   00F3               M     movwf gbl_cntra
                      01235         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02FC   0871               M     movf gbl_sampleRate1, w
02FD   00F4               M     movwf gbl_cntrb
02FE   210C           01236         call Delay
02FF   0BF5           01237         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0300   2AEE           01238                 goto SampleXYDelayedLA
0301   0000           01239         nop
0302   0808           01240         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0303   1409           01241         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0304   1009           01242         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0305   1489           01243         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0306   0080           01244         movwf INDF                                                      ;Save to QUEUE
0307   1784           01245         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0308   0808           01246         movf ADC_DATAPORT, W                            ;Sample X
0309   1409           01247         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
030A   1009           01248         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
030B   1089           01249         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
030C   0080           01250         movwf INDF                                                      ;Save to QUEUE
030D   0384           01251         decf FSR, f                                                     ;Increment QUEUE pointer
                      01252         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030E   301F               M     movlw BUFFERSIZE/2-1
030F   00F5               M     movwf gbl_cntrc
                      01253         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0310   0872               M     movf gbl_sampleRate2, w
0311   00F3               M     movwf gbl_cntra
                      01254         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0312   0871               M     movf gbl_sampleRate1, w
0313   00F4               M     movwf gbl_cntrb
0314   210C           01255         call Delay
0315   0000           01256         nop
0316                  01257 SampleXYDelayedLB
0316   0808           01258         movf ADC_DATAPORT, W                            ;Sample Y
0317   1409           01259         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0318   1009           01260         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0319   1489           01261         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
031A   0080           01262         movwf INDF                                                      ;Save to QUEUE
031B   0384           01263         decf FSR, F                                                     ;Increment QUEUE pointer
031C   0808           01264         movf ADC_DATAPORT, W                            ;Sample X
031D   1409           01265         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
031E   1009           01266         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
031F   1089           01267         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0320   0080           01268         movwf INDF                                                      ;Save to QUEUE
0321   0384           01269         decf FSR, F                                                     ;Increment QUEUE pointer
                      01270         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0322   0872               M     movf gbl_sampleRate2, w
0323   00F3               M     movwf gbl_cntra
                      01271         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0324   0871               M     movf gbl_sampleRate1, w
0325   00F4               M     movwf gbl_cntrb
0326   210C           01272         call Delay
0327   0BF5           01273         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0328   2B16           01274                 goto SampleXYDelayedLB
0329   0000           01275         nop
032A   0808           01276         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
032B   1409           01277         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
032C   1009           01278         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
032D   1489           01279         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
032E   0080           01280         movwf INDF                                                      ;Save to QUEUE
032F   1783           01281         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0330   0808           01282         movf ADC_DATAPORT, W                            ;Sample X
0331   1409           01283         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0332   1009           01284         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0333   1089           01285         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0334   0080           01286         movwf INDF                                                      ;Save to QUEUE
0335   0A84           01287         incf FSR, f                                                     ;Increment QUEUE pointer
                      01288         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0336   301F               M     movlw BUFFERSIZE/2-1
0337   00F5               M     movwf gbl_cntrc
                      01289         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0338   0872               M     movf gbl_sampleRate2, w
0339   00F3               M     movwf gbl_cntra
                      01290         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
033A   0871               M     movf gbl_sampleRate1, w
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033B   00F4               M     movwf gbl_cntrb
033C   210C           01291         call Delay
033D   0000           01292         nop
033E                  01293 SampleXYDelayedLC
033E   0808           01294         movf ADC_DATAPORT, W                            ;Sample Y
033F   1409           01295         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0340   1009           01296         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0341   1489           01297         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0342   0080           01298         movwf INDF                                                      ;Save to QUEUE
0343   0A84           01299         incf FSR, F                                                     ;Increment QUEUE pointer
0344   0808           01300         movf ADC_DATAPORT, W                            ;Sample X
0345   1409           01301         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0346   1009           01302         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0347   1089           01303         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0348   0080           01304         movwf INDF                                                      ;Save to QUEUE
0349   0A84           01305         incf FSR, F                                                     ;Increment QUEUE pointer
                      01306         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
034A   0872               M     movf gbl_sampleRate2, w
034B   00F3               M     movwf gbl_cntra
                      01307         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
034C   0871               M     movf gbl_sampleRate1, w
034D   00F4               M     movwf gbl_cntrb
034E   210C           01308         call Delay
034F   0BF5           01309         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0350   2B3E           01310                 goto SampleXYDelayedLC
0351   0000           01311         nop
0352   0808           01312         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0353   1409           01313         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0354   1009           01314         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0355   1489           01315         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0356   0080           01316         movwf INDF                                                      ;Save to QUEUE
0357   1384           01317         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0358   0808           01318         movf ADC_DATAPORT, W                            ;Sample X
0359   1409           01319         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
035A   1009           01320         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
035B   1089           01321         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
035C   0080           01322         movwf INDF                                                      ;Save to QUEUE
035D   0384           01323         decf FSR, f                                                     ;Increment QUEUE pointer
                      01324         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
035E   301F               M     movlw BUFFERSIZE/2-1
035F   00F5               M     movwf gbl_cntrc
                      01325         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0360   0872               M     movf gbl_sampleRate2, w
0361   00F3               M     movwf gbl_cntra
                      01326         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0362   0871               M     movf gbl_sampleRate1, w
0363   00F4               M     movwf gbl_cntrb
0364   210C           01327         call Delay
0365   0000           01328         nop
0366                  01329 SampleXYDelayedLD
0366   0808           01330         movf ADC_DATAPORT, W                            ;Sample Y
0367   1409           01331         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0368   1009           01332         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0369   1489           01333         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
036A   0080           01334         movwf INDF                                                      ;Save to QUEUE
036B   0384           01335         decf FSR, F                                                     ;Increment QUEUE pointer
036C   0808           01336         movf ADC_DATAPORT, W                            ;Sample X
036D   1409           01337         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
036E   1009           01338         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
036F   1089           01339         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0370   0080           01340         movwf INDF                                                      ;Save to QUEUE
0371   0384           01341         decf FSR, F                                                     ;Increment QUEUE pointer
                      01342         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0372   0872               M     movf gbl_sampleRate2, w
0373   00F3               M     movwf gbl_cntra
                      01343         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0374   0871               M     movf gbl_sampleRate1, w
0375   00F4               M     movwf gbl_cntrb
0376   210C           01344         call Delay
0377   0BF5           01345         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0378   2B66           01346                 goto SampleXYDelayedLD
0379   0000           01347         nop
037A   0808           01348         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
037B   1409           01349         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037C   118A           01350         bcf PCLATH, 3                                           ;insure correct program memory page
037D   120A           01351         bcf PCLATH, 4
037E   2917           01352         goto ADCShutdown
                      01353 
                      01354 ;Fast sample
                      01355 ;Sampling rate = 625 kHz with 20 MHz clock
                      01356 ;Sampling rate = 125 kHz with 4 MHz clock
                      01357 ;-----------------------------------------------------------------------------
037F                  01358 Sample625k
037F   1009           01359         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01360         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
0380   303F               M     movlw BUFFERSIZE-1
0381   00F3               M     movwf gbl_cntra
                      01361         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0382   3020               M     movlw BUFFERMIN
0383   0084               M     movwf FSR
0384   0000           01362         nop
0385                  01363 Sample625kLoopA
0385   0808           01364         movf ADC_DATAPORT, W                            ;Sample
0386   1409           01365         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0387   1009           01366         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0388   0080           01367         movwf INDF                                                      ;Save to QUEUE
0389   0A84           01368         incf FSR, F                                                     ;Increment QUEUE pointer
038A   0BF3           01369         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
038B   2B85           01370                 goto Sample625kLoopA
038C   0000           01371         nop
038D   0808           01372         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
038E   1409           01373         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
038F   1009           01374         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0390   0080           01375         movwf INDF                                                      ;Save to QUEUE
0391   1784           01376         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01377         MOVLF BUFFERSIZE-1, gbl_cntra
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0392   303F               M     movlw BUFFERSIZE-1
0393   00F3               M     movwf gbl_cntra
0394   0000           01378         nop
0395                  01379 Sample625kLoopB
0395   0808           01380         movf ADC_DATAPORT, W                            ;Sample
0396   1409           01381         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0397   1009           01382         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0398   0080           01383         movwf INDF                                                      ;Save to QUEUE
0399   0384           01384         decf FSR, F                                                     ;Increment QUEUE pointer
039A   0BF3           01385         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
039B   2B95           01386                 goto Sample625kLoopB
039C   0000           01387         nop
039D   0808           01388         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
039E   1409           01389         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
039F   1009           01390         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03A0   0080           01391         movwf INDF                                                      ;Save to QUEUE
03A1   1783           01392         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01393         MOVLF BUFFERSIZE-1, gbl_cntra
03A2   303F               M     movlw BUFFERSIZE-1
03A3   00F3               M     movwf gbl_cntra
03A4   0000           01394         nop
03A5                  01395 Sample625kLoopC
03A5   0808           01396         movf ADC_DATAPORT, W                            ;Sample
03A6   1409           01397         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A7   1009           01398         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03A8   0080           01399         movwf INDF                                                      ;Save to QUEUE
03A9   0A84           01400         incf FSR, F                                                     ;Increment QUEUE pointer
03AA   0BF3           01401         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03AB   2BA5           01402                 goto Sample625kLoopC
03AC   0000           01403         nop
03AD   0808           01404         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
03AE   1409           01405         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03AF   1009           01406         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03B0   0080           01407         movwf INDF                                                      ;Save to QUEUE
03B1   1384           01408         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01409         MOVLF BUFFERSIZE-1, gbl_cntra
03B2   303F               M     movlw BUFFERSIZE-1
03B3   00F3               M     movwf gbl_cntra
03B4   0000           01410         nop
03B5                  01411 Sample625kLoopD
03B5   0808           01412         movf ADC_DATAPORT, W                            ;Sample
03B6   1409           01413         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03B7   1009           01414         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03B8   0080           01415         movwf INDF                                                      ;Save to QUEUE
03B9   0384           01416         decf FSR, F                                                     ;Increment QUEUE pointer
03BA   0BF3           01417         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03BB   2BB5           01418                 goto Sample625kLoopD
03BC   0000           01419         nop
03BD   0808           01420         movf ADC_DATAPORT, W                            ;Last sample
03BE   1409           01421         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03BF   118A           01422         bcf PCLATH, 3                                           ;insure correct program memory page
03C0   120A           01423         bcf PCLATH, 4
03C1   2917           01424         goto ADCShutdown
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01425 
                      01426 ;Fast sample
                      01427 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01428 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01429 ;or
                      01430 ;Sampling rate = 250 kHz with 20 MHz clock
                      01431 ;Sampling rate =  50 kHz with 4 MHz clock
                      01432 ;-----------------------------------------------------------------------------
03C2                  01433 Sample417k250k
03C2   1009           01434         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01435         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
03C3   303F               M     movlw BUFFERSIZE - 1
03C4   00F3               M     movwf gbl_cntra
                      01436         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03C5   3020               M     movlw BUFFERMIN
03C6   0084               M     movwf FSR
03C7   2BC8           01437         goto $ + 1                                                      ;Delay 3
03C8   1D70           01438         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
03C9   2BCB           01439                 goto Sample417kLoopA
03CA   2421           01440         call DelaySeven                                         ;Delay 9 cycles
03CB                  01441 Sample417kLoopA
03CB   0808           01442         movf ADC_DATAPORT, W                            ;Sample
03CC   1409           01443         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03CD   1009           01444         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03CE   0080           01445         movwf INDF                                                      ;Save to QUEUE
03CF   0A84           01446         incf FSR, F                                                     ;Increment QUEUE pointer
03D0   1D70           01447         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03D1   2BD3           01448                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
03D2                  01449 Sample250kA
03D2   2421           01450         call DelaySeven                                         ;Delay 9 cycles
03D3                  01451 Sample417kA
03D3   0000           01452         nop
03D4   0BF3           01453         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03D5   2BCB           01454                 goto Sample417kLoopA
03D6   0000           01455         nop
03D7   0808           01456         movf ADC_DATAPORT, W                            ;Last sample bank 1
03D8   1409           01457         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03D9   1009           01458         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03DA   0080           01459         movwf INDF                                                      ;Save to QUEUE
03DB   1784           01460         bsf FSR, 7                                                      ;Goto bank 2
                      01461         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03DC   303F               M     movlw BUFFERSIZE - 1
03DD   00F3               M     movwf gbl_cntra
03DE   2BDF           01462         goto $ + 1
03DF   1D70           01463         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03E0   2BE2           01464                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
03E1   2421           01465         call DelaySeven                                         ;Delay 9 cycles
03E2                  01466 Sample417kLoopB
03E2   0808           01467         movf ADC_DATAPORT, W                            ;Sample
03E3   1409           01468         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E4   1009           01469         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E5   0080           01470         movwf INDF                                                      ;Save to QUEUE
03E6   0384           01471         decf FSR, F                                                     ;Increment QUEUE pointer
03E7                  01472 StSample417kLoopB
03E7   1D70           01473         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03E8   2BEA           01474                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
03E9                  01475 Sample250kB
03E9   2421           01476         call DelaySeven                                         ;Delay 9 cycles
03EA                  01477 Sample417kB
03EA   0000           01478         nop
03EB   0BF3           01479         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03EC   2BE2           01480                 goto Sample417kLoopB
03ED   0000           01481         nop
03EE   0808           01482         movf ADC_DATAPORT, W                            ;Last sample bank 2
03EF   1409           01483         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F0   1009           01484         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F1   0080           01485         movwf INDF                                                      ;Save to QUEUE
03F2   1783           01486         bsf STATUS, IRP                                         ;Goto bank 4
                      01487         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03F3   303F               M     movlw BUFFERSIZE - 1
03F4   00F3               M     movwf gbl_cntra
03F5   2BF6           01488         goto $ + 1
03F6   1D70           01489         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03F7   2BF9           01490                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
03F8   2421           01491         call DelaySeven                                         ;Delay 9 cycles
03F9                  01492 Sample417kLoopC
03F9   0808           01493         movf ADC_DATAPORT, W                            ;Sample
03FA   1409           01494         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FB   1009           01495         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03FC   0080           01496         movwf INDF                                                      ;Save to QUEUE
03FD   0A84           01497         incf FSR, F                                                     ;Increment QUEUE pointer
03FE                  01498 StSample417kLoopC
03FE   1D70           01499         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03FF   2C01           01500                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
0400                  01501 Sample250kC
0400   2421           01502         call DelaySeven                                         ;Delay 9 cycles
0401                  01503 Sample417kC
0401   0000           01504         nop
0402   0BF3           01505         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0403   2BF9           01506                 goto Sample417kLoopC
0404   0000           01507         nop
0405   0808           01508         movf ADC_DATAPORT, W                            ;Last sample bank 4
0406   1409           01509         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0407   1009           01510         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0408   0080           01511         movwf INDF                                                      ;Save to QUEUE
0409   1384           01512         bcf FSR, 7                                                      ;Goto bank 3
                      01513         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
040A   303F               M     movlw BUFFERSIZE - 1
040B   00F3               M     movwf gbl_cntra
040C   2C0D           01514         goto $ + 1
040D   1D70           01515         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             on mode
040E   2C10           01516                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
040F   2421           01517         call DelaySeven                                         ;Delay 9 cycles
0410                  01518 Sample417kLoopD
0410   0808           01519         movf ADC_DATAPORT, W                            ;Sample
0411   1409           01520         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0412   1009           01521         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0413   0080           01522         movwf INDF                                                      ;Save to QUEUE
0414   0384           01523         decf FSR, F                                                     ;Increment QUEUE pointer
0415                  01524 StSample417kLoopD
0415   1D70           01525         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0416   2C18           01526                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
0417                  01527 Sample250kD
0417   2421           01528         call DelaySeven                                         ;Delay 9 cycles
0418                  01529 Sample417kD
0418   0000           01530         nop
0419   0BF3           01531         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
041A   2C10           01532                 goto Sample417kLoopD
041B   0000           01533         nop
041C   0808           01534         movf ADC_DATAPORT, W                            ;Last sample
041D   1409           01535         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
041E   118A           01536         bcf PCLATH, 3                                           ;insure correct program memory page
041F   120A           01537         bcf PCLATH, 4
0420   2917           01538         goto ADCShutdown
                      01539 
                      01540 ;Delay Seven Cycles, helper to Sample417k250k
0421                  01541 DelaySeven
0421   2C22           01542         goto $ + 1                                                      ;7
                      01543 ;Delay Five Cycles, helper to SampleXY250k192k
0422                  01544 DelayFive
0422   0000           01545         nop                                                                     ;5
0423   2C24           01546         goto $ + 1                                              
                      01547 ;Delay Two Cycles, helper to SampleXY250k192k
0424                  01548 DelayTwo
0424   0008           01549         return                                                          ;2
                      01550 
                      01551 
                      01552 ;Fast sample XY
                      01553 ;Sampling rate = 250 kHz with 20 MHz clock
0425                  01554 SampleXY250k192k
0425   1009           01555         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0426   1489           01556         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01557         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0427   3020               M     movlw BUFFERMIN
0428   0084               M     movwf FSR
0429   0808           01558         movf ADC_DATAPORT, W                            ;Sample X
042A   1409           01559         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
042B   1009           01560         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
042C   1089           01561         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
042D   0080           01562         movwf INDF                                                      ;Save to QUEUE
042E   0A84           01563         incf FSR, F                                                     ;Increment QUEUE pointer
                      01564         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042F   301F               M     movlw BUFFERSIZE/2-1
0430   00F5               M     movwf gbl_cntrc
0431   1C70           01565         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0432   2422           01566                 call DelayFive                                  ;192k
0433   2424           01567         call DelayTwo
0434                  01568 SampleXY250kLA
0434   0808           01569         movf ADC_DATAPORT, W                            ;Sample Y
0435   1409           01570         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0436   1009           01571         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0437   1489           01572         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0438   0080           01573         movwf INDF                                                      ;Save to QUEUE
0439   0A84           01574         incf FSR, F                                                     ;Increment QUEUE pointer
043A   0808           01575         movf ADC_DATAPORT, W                            ;Sample X
043B   1409           01576         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043C   1009           01577         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043D   1089           01578         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
043E   0080           01579         movwf INDF                                                      ;Save to QUEUE
043F   0A84           01580         incf FSR, F                                                     ;Increment QUEUE pointer
0440   1C70           01581         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0441   2422           01582                 call DelayFive                                  ;192k
0442   2C43           01583         goto $ + 1
0443   0000           01584         nop
0444   0BF5           01585         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0445   2C34           01586                 goto SampleXY250kLA
0446   0000           01587         nop
0447   0808           01588         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0448   1409           01589         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0449   1009           01590         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
044A   1489           01591         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
044B   0080           01592         movwf INDF                                                      ;Save to QUEUE
044C   1784           01593         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
044D   0808           01594         movf ADC_DATAPORT, W                            ;Sample X
044E   1409           01595         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
044F   1009           01596         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0450   1089           01597         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0451   0080           01598         movwf INDF                                                      ;Save to QUEUE
0452   0384           01599         decf FSR, f                                                     ;Increment QUEUE pointer
                      01600         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0453   301F               M     movlw BUFFERSIZE/2-1
0454   00F5               M     movwf gbl_cntrc
0455   1C70           01601         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0456   2422           01602                 call DelayFive                                  ;192k
0457   2424           01603         call DelayTwo
0458                  01604 SampleXY250kLB
0458   0808           01605         movf ADC_DATAPORT, W                            ;Sample Y
0459   1409           01606         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
045A   1009           01607         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
045B   1489           01608         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
045C   0080           01609         movwf INDF                                                      ;Save to QUEUE
045D   0384           01610         decf FSR, F                                                     ;Increment QUEUE pointer
045E   0808           01611         movf ADC_DATAPORT, W                            ;Sample X
045F   1409           01612         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0460   1009           01613         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0461   1089           01614         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0462   0080           01615         movwf INDF                                                      ;Save to QUEUE
0463   0384           01616         decf FSR, F                                                     ;Increment QUEUE pointer
0464   1C70           01617         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0465   2422           01618                 call DelayFive                                  ;192k
0466   2C67           01619         goto $ + 1
0467   0000           01620         nop
0468   0BF5           01621         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0469   2C58           01622                 goto SampleXY250kLB
046A   0000           01623         nop
046B   0808           01624         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
046C   1409           01625         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
046D   1009           01626         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
046E   1489           01627         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
046F   0080           01628         movwf INDF                                                      ;Save to QUEUE
0470   1783           01629         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0471   0808           01630         movf ADC_DATAPORT, W                            ;Sample X
0472   1409           01631         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0473   1009           01632         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0474   1089           01633         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0475   0080           01634         movwf INDF                                                      ;Save to QUEUE
0476   0A84           01635         incf FSR, f                                                     ;Increment QUEUE pointer
                      01636         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0477   301F               M     movlw BUFFERSIZE/2-1
0478   00F5               M     movwf gbl_cntrc
0479   1C70           01637         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
047A   2422           01638                 call DelayFive                                  ;192k
047B   2424           01639         call DelayTwo
047C                  01640 SampleXY250kLC
047C   0808           01641         movf ADC_DATAPORT, W                            ;Sample Y
047D   1409           01642         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
047E   1009           01643         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
047F   1489           01644         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0480   0080           01645         movwf INDF                                                      ;Save to QUEUE
0481   0A84           01646         incf FSR, F                                                     ;Increment QUEUE pointer
0482   0808           01647         movf ADC_DATAPORT, W                            ;Sample X
0483   1409           01648         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0484   1009           01649         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0485   1089           01650         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0486   0080           01651         movwf INDF                                                      ;Save to QUEUE
0487   0A84           01652         incf FSR, F                                                     ;Increment QUEUE pointer
0488   1C70           01653         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0489   2422           01654                 call DelayFive                                  ;192k
048A   2C8B           01655         goto $ + 1
048B   0000           01656         nop
048C   0BF5           01657         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
048D   2C7C           01658                 goto SampleXY250kLC
048E   0000           01659         nop
048F   0808           01660         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0490   1409           01661         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0491   1009           01662         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0492   1489           01663         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0493   0080           01664         movwf INDF                                                      ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0494   1384           01665         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0495   0808           01666         movf ADC_DATAPORT, W                            ;Sample X
0496   1409           01667         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0497   1009           01668         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0498   1089           01669         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0499   0080           01670         movwf INDF                                                      ;Save to QUEUE
049A   0384           01671         decf FSR, f                                                     ;Increment QUEUE pointer
                      01672         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
049B   301F               M     movlw BUFFERSIZE/2-1
049C   00F5               M     movwf gbl_cntrc
049D   1C70           01673         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
049E   2422           01674                 call DelayFive                                  ;192k
049F   2424           01675         call DelayTwo
04A0                  01676 SampleXY250kLD
04A0   0808           01677         movf ADC_DATAPORT, W                            ;Sample Y
04A1   1409           01678         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A2   1009           01679         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A3   1489           01680         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04A4   0080           01681         movwf INDF                                                      ;Save to QUEUE
04A5   0384           01682         decf FSR, F                                                     ;Increment QUEUE pointer
04A6   0808           01683         movf ADC_DATAPORT, W                            ;Sample X
04A7   1409           01684         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A8   1009           01685         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A9   1089           01686         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04AA   0080           01687         movwf INDF                                                      ;Save to QUEUE
04AB   0384           01688         decf FSR, F                                                     ;Increment QUEUE pointer
04AC   1C70           01689         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04AD   2422           01690                 call DelayFive                                  ;192k
04AE   2CAF           01691         goto $ + 1
04AF   0000           01692         nop
04B0   0BF5           01693         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04B1   2CA0           01694                 goto SampleXY250kLD
04B2   0000           01695         nop
04B3   0808           01696         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
04B4   1409           01697         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04B5   118A           01698         bcf PCLATH, 3                                           ;insure correct program memory page
04B6   120A           01699         bcf PCLATH, 4
04B7   2917           01700         goto ADCShutdown
                      01701 
                      01702 ;Fastest sample
                      01703 ;Sampling rate = 1 MHz with 20 MHz clock
                      01704 ;Sampling rate = 200 kHz with 4 MHz clock
                      01705 ;-----------------------------------------------------------------------------
04B8                  01706 Sample1M
04B8   1009           01707         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01708         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04B9   3020               M     movlw BUFFERMIN
04BA   0084               M     movwf FSR
04BB   0000           01709         nop
  0000                01710         local count
  00000001            01711         count = 1
                      01712         while count < BUFFERSIZE
04BC   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04BD   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04BE   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04BF   0080           01716                 movwf INDF                                              ;Save to QUEUE
04C0   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01718                 count = count + 1
04C1   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C2   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C3   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04C4   0080           01716                 movwf INDF                                              ;Save to QUEUE
04C5   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01718                 count = count + 1
04C6   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C7   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C8   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04C9   0080           01716                 movwf INDF                                              ;Save to QUEUE
04CA   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01718                 count = count + 1
04CB   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04CC   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CD   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04CE   0080           01716                 movwf INDF                                              ;Save to QUEUE
04CF   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01718                 count = count + 1
04D0   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D1   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D2   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04D3   0080           01716                 movwf INDF                                              ;Save to QUEUE
04D4   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01718                 count = count + 1
04D5   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D6   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D7   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04D8   0080           01716                 movwf INDF                                              ;Save to QUEUE
04D9   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01718                 count = count + 1
04DA   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04DB   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04DC   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04DD   0080           01716                 movwf INDF                                              ;Save to QUEUE
04DE   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01718                 count = count + 1
04DF   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E0   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E1   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04E2   0080           01716                 movwf INDF                                              ;Save to QUEUE
04E3   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01718                 count = count + 1
04E4   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E5   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E6   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04E7   0080           01716                 movwf INDF                                              ;Save to QUEUE
04E8   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01718                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E9   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EA   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04EB   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04EC   0080           01716                 movwf INDF                                              ;Save to QUEUE
04ED   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01718                 count = count + 1
04EE   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EF   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F0   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04F1   0080           01716                 movwf INDF                                              ;Save to QUEUE
04F2   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01718                 count = count + 1
04F3   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F4   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F5   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04F6   0080           01716                 movwf INDF                                              ;Save to QUEUE
04F7   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01718                 count = count + 1
04F8   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F9   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FA   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
04FB   0080           01716                 movwf INDF                                              ;Save to QUEUE
04FC   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01718                 count = count + 1
04FD   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04FE   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FF   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0500   0080           01716                 movwf INDF                                              ;Save to QUEUE
0501   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01718                 count = count + 1
0502   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0503   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0504   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0505   0080           01716                 movwf INDF                                              ;Save to QUEUE
0506   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01718                 count = count + 1
0507   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0508   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0509   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
050A   0080           01716                 movwf INDF                                              ;Save to QUEUE
050B   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01718                 count = count + 1
050C   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050D   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
050E   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
050F   0080           01716                 movwf INDF                                              ;Save to QUEUE
0510   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01718                 count = count + 1
0511   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0512   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0513   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0514   0080           01716                 movwf INDF                                              ;Save to QUEUE
0515   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            01718                 count = count + 1
0516   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0517   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0518   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0519   0080           01716                 movwf INDF                                              ;Save to QUEUE
051A   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01718                 count = count + 1
051B   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
051C   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051D   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
051E   0080           01716                 movwf INDF                                              ;Save to QUEUE
051F   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01718                 count = count + 1
0520   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0521   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0522   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0523   0080           01716                 movwf INDF                                              ;Save to QUEUE
0524   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01718                 count = count + 1
0525   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0526   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0527   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0528   0080           01716                 movwf INDF                                              ;Save to QUEUE
0529   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01718                 count = count + 1
052A   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
052B   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
052C   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
052D   0080           01716                 movwf INDF                                              ;Save to QUEUE
052E   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01718                 count = count + 1
052F   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0530   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0531   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0532   0080           01716                 movwf INDF                                              ;Save to QUEUE
0533   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01718                 count = count + 1
0534   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0535   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0536   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0537   0080           01716                 movwf INDF                                              ;Save to QUEUE
0538   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01718                 count = count + 1
0539   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053A   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
053B   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
053C   0080           01716                 movwf INDF                                              ;Save to QUEUE
053D   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01718                 count = count + 1
053E   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053F   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0540   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0541   0080           01716                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0542   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01718                 count = count + 1
0543   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0544   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0545   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0546   0080           01716                 movwf INDF                                              ;Save to QUEUE
0547   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01718                 count = count + 1
0548   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0549   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054A   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
054B   0080           01716                 movwf INDF                                              ;Save to QUEUE
054C   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01718                 count = count + 1
054D   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
054E   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054F   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0550   0080           01716                 movwf INDF                                              ;Save to QUEUE
0551   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01718                 count = count + 1
0552   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0553   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0554   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0555   0080           01716                 movwf INDF                                              ;Save to QUEUE
0556   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01718                 count = count + 1
0557   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0558   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0559   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
055A   0080           01716                 movwf INDF                                              ;Save to QUEUE
055B   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01718                 count = count + 1
055C   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055D   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
055E   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
055F   0080           01716                 movwf INDF                                              ;Save to QUEUE
0560   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01718                 count = count + 1
0561   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0562   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0563   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0564   0080           01716                 movwf INDF                                              ;Save to QUEUE
0565   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01718                 count = count + 1
0566   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0567   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0568   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0569   0080           01716                 movwf INDF                                              ;Save to QUEUE
056A   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01718                 count = count + 1
056B   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
056C   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056D   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

056E   0080           01716                 movwf INDF                                              ;Save to QUEUE
056F   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01718                 count = count + 1
0570   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0571   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0572   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0573   0080           01716                 movwf INDF                                              ;Save to QUEUE
0574   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01718                 count = count + 1
0575   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0576   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0577   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0578   0080           01716                 movwf INDF                                              ;Save to QUEUE
0579   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01718                 count = count + 1
057A   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
057B   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
057C   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
057D   0080           01716                 movwf INDF                                              ;Save to QUEUE
057E   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01718                 count = count + 1
057F   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0580   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0581   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0582   0080           01716                 movwf INDF                                              ;Save to QUEUE
0583   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01718                 count = count + 1
0584   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0585   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0586   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0587   0080           01716                 movwf INDF                                              ;Save to QUEUE
0588   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01718                 count = count + 1
0589   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058A   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
058B   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
058C   0080           01716                 movwf INDF                                              ;Save to QUEUE
058D   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01718                 count = count + 1
058E   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058F   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0590   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0591   0080           01716                 movwf INDF                                              ;Save to QUEUE
0592   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01718                 count = count + 1
0593   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0594   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0595   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
0596   0080           01716                 movwf INDF                                              ;Save to QUEUE
0597   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01718                 count = count + 1
0598   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0599   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

059A   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
059B   0080           01716                 movwf INDF                                              ;Save to QUEUE
059C   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01718                 count = count + 1
059D   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
059E   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059F   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05A0   0080           01716                 movwf INDF                                              ;Save to QUEUE
05A1   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01718                 count = count + 1
05A2   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A3   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A4   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05A5   0080           01716                 movwf INDF                                              ;Save to QUEUE
05A6   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01718                 count = count + 1
05A7   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A8   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A9   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05AA   0080           01716                 movwf INDF                                              ;Save to QUEUE
05AB   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01718                 count = count + 1
05AC   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AD   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AE   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05AF   0080           01716                 movwf INDF                                              ;Save to QUEUE
05B0   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01718                 count = count + 1
05B1   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B2   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B3   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05B4   0080           01716                 movwf INDF                                              ;Save to QUEUE
05B5   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01718                 count = count + 1
05B6   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B7   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B8   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05B9   0080           01716                 movwf INDF                                              ;Save to QUEUE
05BA   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01718                 count = count + 1
05BB   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BC   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BD   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05BE   0080           01716                 movwf INDF                                              ;Save to QUEUE
05BF   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01718                 count = count + 1
05C0   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C1   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C2   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05C3   0080           01716                 movwf INDF                                              ;Save to QUEUE
05C4   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01718                 count = count + 1
05C5   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C6   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C7   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05C8   0080           01716                 movwf INDF                                              ;Save to QUEUE
05C9   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01718                 count = count + 1
05CA   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CB   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CC   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05CD   0080           01716                 movwf INDF                                              ;Save to QUEUE
05CE   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01718                 count = count + 1
05CF   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D0   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D1   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05D2   0080           01716                 movwf INDF                                              ;Save to QUEUE
05D3   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01718                 count = count + 1
05D4   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D5   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D6   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05D7   0080           01716                 movwf INDF                                              ;Save to QUEUE
05D8   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01718                 count = count + 1
05D9   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DA   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DB   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05DC   0080           01716                 movwf INDF                                              ;Save to QUEUE
05DD   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01718                 count = count + 1
05DE   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DF   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E0   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05E1   0080           01716                 movwf INDF                                              ;Save to QUEUE
05E2   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01718                 count = count + 1
05E3   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E4   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E5   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05E6   0080           01716                 movwf INDF                                              ;Save to QUEUE
05E7   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01718                 count = count + 1
05E8   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E9   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EA   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05EB   0080           01716                 movwf INDF                                              ;Save to QUEUE
05EC   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01718                 count = count + 1
05ED   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EE   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EF   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05F0   0080           01716                 movwf INDF                                              ;Save to QUEUE
05F1   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01718                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05F2   1409           01713                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F3   1009           01714                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F4   0808           01715                 movf ADC_DATAPORT, W                    ;Save Sample
05F5   0080           01716                 movwf INDF                                              ;Save to QUEUE
05F6   0A84           01717                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01718                 count = count + 1
                      01719         endw
05F7   1409           01720         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
05F8   1009           01721         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
05F9   0808           01722         movf ADC_DATAPORT, W
05FA   0080           01723         movwf INDF
05FB   1784           01724         bsf FSR, 7                                                      ;goto bank 2
  00000001            01725         count = 1
                      01726         while count < BUFFERSIZE
05FC   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FD   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05FE   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
05FF   0080           01730                 movwf INDF                                              ;Save to QUEUE
0600   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01732                 count = count + 1
0601   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0602   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0603   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0604   0080           01730                 movwf INDF                                              ;Save to QUEUE
0605   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01732                 count = count + 1
0606   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0607   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0608   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0609   0080           01730                 movwf INDF                                              ;Save to QUEUE
060A   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01732                 count = count + 1
060B   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
060C   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060D   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
060E   0080           01730                 movwf INDF                                              ;Save to QUEUE
060F   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01732                 count = count + 1
0610   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0611   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0612   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0613   0080           01730                 movwf INDF                                              ;Save to QUEUE
0614   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01732                 count = count + 1
0615   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0616   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0617   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0618   0080           01730                 movwf INDF                                              ;Save to QUEUE
0619   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01732                 count = count + 1
061A   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
061B   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
061C   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

061D   0080           01730                 movwf INDF                                              ;Save to QUEUE
061E   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01732                 count = count + 1
061F   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0620   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0621   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0622   0080           01730                 movwf INDF                                              ;Save to QUEUE
0623   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01732                 count = count + 1
0624   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0625   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0626   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0627   0080           01730                 movwf INDF                                              ;Save to QUEUE
0628   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01732                 count = count + 1
0629   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062A   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
062B   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
062C   0080           01730                 movwf INDF                                              ;Save to QUEUE
062D   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01732                 count = count + 1
062E   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062F   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0630   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0631   0080           01730                 movwf INDF                                              ;Save to QUEUE
0632   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01732                 count = count + 1
0633   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0634   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0635   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0636   0080           01730                 movwf INDF                                              ;Save to QUEUE
0637   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01732                 count = count + 1
0638   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0639   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063A   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
063B   0080           01730                 movwf INDF                                              ;Save to QUEUE
063C   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01732                 count = count + 1
063D   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
063E   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063F   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0640   0080           01730                 movwf INDF                                              ;Save to QUEUE
0641   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01732                 count = count + 1
0642   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0643   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0644   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0645   0080           01730                 movwf INDF                                              ;Save to QUEUE
0646   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01732                 count = count + 1
0647   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0648   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0649   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
064A   0080           01730                 movwf INDF                                              ;Save to QUEUE
064B   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01732                 count = count + 1
064C   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064D   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064E   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
064F   0080           01730                 movwf INDF                                              ;Save to QUEUE
0650   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01732                 count = count + 1
0651   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0652   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0653   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0654   0080           01730                 movwf INDF                                              ;Save to QUEUE
0655   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01732                 count = count + 1
0656   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0657   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0658   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0659   0080           01730                 movwf INDF                                              ;Save to QUEUE
065A   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01732                 count = count + 1
065B   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065C   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065D   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
065E   0080           01730                 movwf INDF                                              ;Save to QUEUE
065F   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01732                 count = count + 1
0660   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0661   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0662   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0663   0080           01730                 movwf INDF                                              ;Save to QUEUE
0664   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01732                 count = count + 1
0665   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0666   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0667   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0668   0080           01730                 movwf INDF                                              ;Save to QUEUE
0669   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01732                 count = count + 1
066A   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
066B   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066C   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
066D   0080           01730                 movwf INDF                                              ;Save to QUEUE
066E   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01732                 count = count + 1
066F   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0670   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0671   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0672   0080           01730                 movwf INDF                                              ;Save to QUEUE
0673   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01732                 count = count + 1
0674   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0675   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0676   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0677   0080           01730                 movwf INDF                                              ;Save to QUEUE
0678   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01732                 count = count + 1
0679   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067A   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067B   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
067C   0080           01730                 movwf INDF                                              ;Save to QUEUE
067D   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01732                 count = count + 1
067E   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067F   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0680   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0681   0080           01730                 movwf INDF                                              ;Save to QUEUE
0682   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01732                 count = count + 1
0683   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0684   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0685   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0686   0080           01730                 movwf INDF                                              ;Save to QUEUE
0687   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01732                 count = count + 1
0688   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0689   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068A   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
068B   0080           01730                 movwf INDF                                              ;Save to QUEUE
068C   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01732                 count = count + 1
068D   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068E   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068F   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0690   0080           01730                 movwf INDF                                              ;Save to QUEUE
0691   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01732                 count = count + 1
0692   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0693   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0694   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0695   0080           01730                 movwf INDF                                              ;Save to QUEUE
0696   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01732                 count = count + 1
0697   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0698   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0699   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
069A   0080           01730                 movwf INDF                                              ;Save to QUEUE
069B   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01732                 count = count + 1
069C   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069D   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069E   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
069F   0080           01730                 movwf INDF                                              ;Save to QUEUE
06A0   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01732                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06A1   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A2   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A3   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06A4   0080           01730                 movwf INDF                                              ;Save to QUEUE
06A5   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01732                 count = count + 1
06A6   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A7   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A8   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06A9   0080           01730                 movwf INDF                                              ;Save to QUEUE
06AA   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01732                 count = count + 1
06AB   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AC   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AD   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06AE   0080           01730                 movwf INDF                                              ;Save to QUEUE
06AF   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01732                 count = count + 1
06B0   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B1   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B2   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06B3   0080           01730                 movwf INDF                                              ;Save to QUEUE
06B4   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01732                 count = count + 1
06B5   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B6   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B7   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06B8   0080           01730                 movwf INDF                                              ;Save to QUEUE
06B9   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01732                 count = count + 1
06BA   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BB   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BC   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06BD   0080           01730                 movwf INDF                                              ;Save to QUEUE
06BE   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01732                 count = count + 1
06BF   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C0   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C1   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06C2   0080           01730                 movwf INDF                                              ;Save to QUEUE
06C3   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01732                 count = count + 1
06C4   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C5   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C6   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06C7   0080           01730                 movwf INDF                                              ;Save to QUEUE
06C8   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01732                 count = count + 1
06C9   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CA   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CB   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06CC   0080           01730                 movwf INDF                                              ;Save to QUEUE
06CD   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002B            01732                 count = count + 1
06CE   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CF   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D0   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06D1   0080           01730                 movwf INDF                                              ;Save to QUEUE
06D2   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01732                 count = count + 1
06D3   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D4   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D5   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06D6   0080           01730                 movwf INDF                                              ;Save to QUEUE
06D7   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01732                 count = count + 1
06D8   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D9   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DA   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06DB   0080           01730                 movwf INDF                                              ;Save to QUEUE
06DC   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01732                 count = count + 1
06DD   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DE   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DF   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06E0   0080           01730                 movwf INDF                                              ;Save to QUEUE
06E1   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01732                 count = count + 1
06E2   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E3   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E4   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06E5   0080           01730                 movwf INDF                                              ;Save to QUEUE
06E6   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01732                 count = count + 1
06E7   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E8   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E9   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06EA   0080           01730                 movwf INDF                                              ;Save to QUEUE
06EB   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01732                 count = count + 1
06EC   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06ED   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EE   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06EF   0080           01730                 movwf INDF                                              ;Save to QUEUE
06F0   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01732                 count = count + 1
06F1   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F2   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F3   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06F4   0080           01730                 movwf INDF                                              ;Save to QUEUE
06F5   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01732                 count = count + 1
06F6   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F7   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F8   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06F9   0080           01730                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06FA   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01732                 count = count + 1
06FB   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FC   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FD   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
06FE   0080           01730                 movwf INDF                                              ;Save to QUEUE
06FF   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01732                 count = count + 1
0700   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0701   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0702   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0703   0080           01730                 movwf INDF                                              ;Save to QUEUE
0704   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01732                 count = count + 1
0705   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0706   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0707   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0708   0080           01730                 movwf INDF                                              ;Save to QUEUE
0709   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01732                 count = count + 1
070A   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070B   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070C   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
070D   0080           01730                 movwf INDF                                              ;Save to QUEUE
070E   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01732                 count = count + 1
070F   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0710   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0711   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0712   0080           01730                 movwf INDF                                              ;Save to QUEUE
0713   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01732                 count = count + 1
0714   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0715   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0716   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0717   0080           01730                 movwf INDF                                              ;Save to QUEUE
0718   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01732                 count = count + 1
0719   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071A   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071B   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
071C   0080           01730                 movwf INDF                                              ;Save to QUEUE
071D   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01732                 count = count + 1
071E   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071F   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0720   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0721   0080           01730                 movwf INDF                                              ;Save to QUEUE
0722   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01732                 count = count + 1
0723   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0724   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0725   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0726   0080           01730                 movwf INDF                                              ;Save to QUEUE
0727   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01732                 count = count + 1
0728   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0729   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072A   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
072B   0080           01730                 movwf INDF                                              ;Save to QUEUE
072C   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01732                 count = count + 1
072D   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072E   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072F   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0730   0080           01730                 movwf INDF                                              ;Save to QUEUE
0731   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01732                 count = count + 1
0732   1409           01727                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0733   1009           01728                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0734   0808           01729                 movf ADC_DATAPORT, W                    ;Sample
0735   0080           01730                 movwf INDF                                              ;Save to QUEUE
0736   0384           01731                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01732                 count = count + 1
                      01733         endw
0737   1409           01734         bsf ADC_CONTROLPORT, RDD
0738   1009           01735         bcf ADC_CONTROLPORT, RDD
0739   0808           01736         movf ADC_DATAPORT, W
073A   0080           01737         movwf INDF
073B   1783           01738         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01739         count = 1
                      01740         while count < BUFFERSIZE
073C   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073D   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073E   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
073F   0080           01744                 movwf INDF                                              ;Save to QUEUE
0740   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01746                 count = count + 1
0741   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0742   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0743   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0744   0080           01744                 movwf INDF                                              ;Save to QUEUE
0745   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01746                 count = count + 1
0746   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0747   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0748   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0749   0080           01744                 movwf INDF                                              ;Save to QUEUE
074A   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01746                 count = count + 1
074B   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074C   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074D   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
074E   0080           01744                 movwf INDF                                              ;Save to QUEUE
074F   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01746                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0750   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0751   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0752   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0753   0080           01744                 movwf INDF                                              ;Save to QUEUE
0754   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01746                 count = count + 1
0755   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0756   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0757   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0758   0080           01744                 movwf INDF                                              ;Save to QUEUE
0759   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01746                 count = count + 1
075A   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075B   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075C   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
075D   0080           01744                 movwf INDF                                              ;Save to QUEUE
075E   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01746                 count = count + 1
075F   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0760   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0761   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0762   0080           01744                 movwf INDF                                              ;Save to QUEUE
0763   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01746                 count = count + 1
0764   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0765   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0766   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0767   0080           01744                 movwf INDF                                              ;Save to QUEUE
0768   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01746                 count = count + 1
0769   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076A   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076B   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
076C   0080           01744                 movwf INDF                                              ;Save to QUEUE
076D   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01746                 count = count + 1
076E   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076F   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0770   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0771   0080           01744                 movwf INDF                                              ;Save to QUEUE
0772   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01746                 count = count + 1
0773   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0774   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0775   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0776   0080           01744                 movwf INDF                                              ;Save to QUEUE
0777   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01746                 count = count + 1
0778   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0779   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077A   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
077B   0080           01744                 movwf INDF                                              ;Save to QUEUE
077C   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            01746                 count = count + 1
077D   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077E   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077F   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0780   0080           01744                 movwf INDF                                              ;Save to QUEUE
0781   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01746                 count = count + 1
0782   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0783   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0784   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0785   0080           01744                 movwf INDF                                              ;Save to QUEUE
0786   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01746                 count = count + 1
0787   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0788   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0789   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
078A   0080           01744                 movwf INDF                                              ;Save to QUEUE
078B   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01746                 count = count + 1
078C   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078D   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078E   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
078F   0080           01744                 movwf INDF                                              ;Save to QUEUE
0790   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01746                 count = count + 1
0791   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0792   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0793   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0794   0080           01744                 movwf INDF                                              ;Save to QUEUE
0795   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01746                 count = count + 1
0796   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0797   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0798   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0799   0080           01744                 movwf INDF                                              ;Save to QUEUE
079A   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01746                 count = count + 1
079B   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079C   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079D   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
079E   0080           01744                 movwf INDF                                              ;Save to QUEUE
079F   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01746                 count = count + 1
07A0   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A1   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A2   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07A3   0080           01744                 movwf INDF                                              ;Save to QUEUE
07A4   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01746                 count = count + 1
07A5   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A6   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A7   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07A8   0080           01744                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07A9   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01746                 count = count + 1
07AA   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AB   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AC   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07AD   0080           01744                 movwf INDF                                              ;Save to QUEUE
07AE   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01746                 count = count + 1
07AF   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B0   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B1   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07B2   0080           01744                 movwf INDF                                              ;Save to QUEUE
07B3   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01746                 count = count + 1
07B4   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B5   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B6   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07B7   0080           01744                 movwf INDF                                              ;Save to QUEUE
07B8   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01746                 count = count + 1
07B9   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BA   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BB   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07BC   0080           01744                 movwf INDF                                              ;Save to QUEUE
07BD   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01746                 count = count + 1
07BE   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BF   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C0   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07C1   0080           01744                 movwf INDF                                              ;Save to QUEUE
07C2   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01746                 count = count + 1
07C3   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C4   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C5   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07C6   0080           01744                 movwf INDF                                              ;Save to QUEUE
07C7   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01746                 count = count + 1
07C8   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C9   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CA   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07CB   0080           01744                 movwf INDF                                              ;Save to QUEUE
07CC   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01746                 count = count + 1
07CD   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CE   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CF   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07D0   0080           01744                 movwf INDF                                              ;Save to QUEUE
07D1   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01746                 count = count + 1
07D2   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D3   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D4   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07D5   0080           01744                 movwf INDF                                              ;Save to QUEUE
07D6   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01746                 count = count + 1
07D7   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D8   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D9   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07DA   0080           01744                 movwf INDF                                              ;Save to QUEUE
07DB   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01746                 count = count + 1
07DC   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DD   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DE   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07DF   0080           01744                 movwf INDF                                              ;Save to QUEUE
07E0   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01746                 count = count + 1
07E1   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E2   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E3   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07E4   0080           01744                 movwf INDF                                              ;Save to QUEUE
07E5   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01746                 count = count + 1
07E6   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E7   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E8   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07E9   0080           01744                 movwf INDF                                              ;Save to QUEUE
07EA   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01746                 count = count + 1
07EB   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EC   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07ED   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07EE   0080           01744                 movwf INDF                                              ;Save to QUEUE
07EF   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01746                 count = count + 1
07F0   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F1   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F2   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07F3   0080           01744                 movwf INDF                                              ;Save to QUEUE
07F4   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01746                 count = count + 1
07F5   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F6   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F7   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07F8   0080           01744                 movwf INDF                                              ;Save to QUEUE
07F9   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01746                 count = count + 1
07FA   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FB   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FC   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
07FD   0080           01744                 movwf INDF                                              ;Save to QUEUE
07FE   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01746                 count = count + 1
07FF   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0800   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0801   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0802   0080           01744                 movwf INDF                                              ;Save to QUEUE
0803   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01746                 count = count + 1
0804   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0805   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0806   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0807   0080           01744                 movwf INDF                                              ;Save to QUEUE
0808   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01746                 count = count + 1
0809   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080A   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080B   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
080C   0080           01744                 movwf INDF                                              ;Save to QUEUE
080D   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01746                 count = count + 1
080E   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080F   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0810   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0811   0080           01744                 movwf INDF                                              ;Save to QUEUE
0812   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01746                 count = count + 1
0813   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0814   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0815   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0816   0080           01744                 movwf INDF                                              ;Save to QUEUE
0817   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01746                 count = count + 1
0818   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0819   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081A   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
081B   0080           01744                 movwf INDF                                              ;Save to QUEUE
081C   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01746                 count = count + 1
081D   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081E   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081F   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0820   0080           01744                 movwf INDF                                              ;Save to QUEUE
0821   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01746                 count = count + 1
0822   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0823   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0824   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0825   0080           01744                 movwf INDF                                              ;Save to QUEUE
0826   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01746                 count = count + 1
0827   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0828   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0829   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
082A   0080           01744                 movwf INDF                                              ;Save to QUEUE
082B   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01746                 count = count + 1
082C   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

082D   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082E   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
082F   0080           01744                 movwf INDF                                              ;Save to QUEUE
0830   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01746                 count = count + 1
0831   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0832   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0833   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0834   0080           01744                 movwf INDF                                              ;Save to QUEUE
0835   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01746                 count = count + 1
0836   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0837   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0838   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0839   0080           01744                 movwf INDF                                              ;Save to QUEUE
083A   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01746                 count = count + 1
083B   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083C   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083D   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
083E   0080           01744                 movwf INDF                                              ;Save to QUEUE
083F   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01746                 count = count + 1
0840   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0841   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0842   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0843   0080           01744                 movwf INDF                                              ;Save to QUEUE
0844   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01746                 count = count + 1
0845   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0846   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0847   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0848   0080           01744                 movwf INDF                                              ;Save to QUEUE
0849   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01746                 count = count + 1
084A   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084B   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084C   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
084D   0080           01744                 movwf INDF                                              ;Save to QUEUE
084E   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01746                 count = count + 1
084F   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0850   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0851   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0852   0080           01744                 movwf INDF                                              ;Save to QUEUE
0853   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01746                 count = count + 1
0854   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0855   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0856   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0857   0080           01744                 movwf INDF                                              ;Save to QUEUE
0858   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01746                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0859   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085A   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085B   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
085C   0080           01744                 movwf INDF                                              ;Save to QUEUE
085D   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01746                 count = count + 1
085E   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085F   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0860   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0861   0080           01744                 movwf INDF                                              ;Save to QUEUE
0862   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01746                 count = count + 1
0863   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0864   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0865   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0866   0080           01744                 movwf INDF                                              ;Save to QUEUE
0867   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01746                 count = count + 1
0868   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0869   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086A   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
086B   0080           01744                 movwf INDF                                              ;Save to QUEUE
086C   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01746                 count = count + 1
086D   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086E   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086F   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0870   0080           01744                 movwf INDF                                              ;Save to QUEUE
0871   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01746                 count = count + 1
0872   1409           01741                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0873   1009           01742                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0874   0808           01743                 movf ADC_DATAPORT, W                    ;Sample
0875   0080           01744                 movwf INDF                                              ;Save to QUEUE
0876   0A84           01745                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01746                 count = count + 1
                      01747         endw
0877   1409           01748         bsf ADC_CONTROLPORT, RDD
0878   1009           01749         bcf ADC_CONTROLPORT, RDD
0879   0808           01750         movf ADC_DATAPORT, W                            ;Sample
087A   0080           01751         movwf INDF
087B   1384           01752         bcf FSR, 7                                                      ;goto bank 3
  00000001            01753         count = 1
                      01754         while count < D'14'
087C   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087D   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087E   0808           01757                 movf ADC_DATAPORT, W
087F   0080           01758                 movwf INDF                                              ;Save to QUEUE
0880   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01760                 count = count + 1
0881   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0882   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0883   0808           01757                 movf ADC_DATAPORT, W
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0884   0080           01758                 movwf INDF                                              ;Save to QUEUE
0885   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01760                 count = count + 1
0886   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0887   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0888   0808           01757                 movf ADC_DATAPORT, W
0889   0080           01758                 movwf INDF                                              ;Save to QUEUE
088A   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01760                 count = count + 1
088B   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088C   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088D   0808           01757                 movf ADC_DATAPORT, W
088E   0080           01758                 movwf INDF                                              ;Save to QUEUE
088F   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01760                 count = count + 1
0890   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0891   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0892   0808           01757                 movf ADC_DATAPORT, W
0893   0080           01758                 movwf INDF                                              ;Save to QUEUE
0894   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01760                 count = count + 1
0895   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0896   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0897   0808           01757                 movf ADC_DATAPORT, W
0898   0080           01758                 movwf INDF                                              ;Save to QUEUE
0899   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01760                 count = count + 1
089A   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089B   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089C   0808           01757                 movf ADC_DATAPORT, W
089D   0080           01758                 movwf INDF                                              ;Save to QUEUE
089E   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01760                 count = count + 1
089F   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A0   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A1   0808           01757                 movf ADC_DATAPORT, W
08A2   0080           01758                 movwf INDF                                              ;Save to QUEUE
08A3   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01760                 count = count + 1
08A4   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A5   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A6   0808           01757                 movf ADC_DATAPORT, W
08A7   0080           01758                 movwf INDF                                              ;Save to QUEUE
08A8   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01760                 count = count + 1
08A9   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AA   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AB   0808           01757                 movf ADC_DATAPORT, W
08AC   0080           01758                 movwf INDF                                              ;Save to QUEUE
08AD   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01760                 count = count + 1
08AE   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AF   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08B0   0808           01757                 movf ADC_DATAPORT, W
08B1   0080           01758                 movwf INDF                                              ;Save to QUEUE
08B2   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01760                 count = count + 1
08B3   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B4   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B5   0808           01757                 movf ADC_DATAPORT, W
08B6   0080           01758                 movwf INDF                                              ;Save to QUEUE
08B7   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01760                 count = count + 1
08B8   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B9   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BA   0808           01757                 movf ADC_DATAPORT, W
08BB   0080           01758                 movwf INDF                                              ;Save to QUEUE
08BC   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01760                 count = count + 1
                      01761         endw
08BD                  01762 Sample1MhzEnd
                      01763         while count < BUFFERSIZE
08BD   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BE   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BF   0808           01766                 movf ADC_DATAPORT, W
08C0   0080           01767                 movwf INDF                                              ;Save to QUEUE
08C1   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01769                 count = count + 1
08C2   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C3   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C4   0808           01766                 movf ADC_DATAPORT, W
08C5   0080           01767                 movwf INDF                                              ;Save to QUEUE
08C6   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01769                 count = count + 1
08C7   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C8   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C9   0808           01766                 movf ADC_DATAPORT, W
08CA   0080           01767                 movwf INDF                                              ;Save to QUEUE
08CB   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01769                 count = count + 1
08CC   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CD   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CE   0808           01766                 movf ADC_DATAPORT, W
08CF   0080           01767                 movwf INDF                                              ;Save to QUEUE
08D0   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01769                 count = count + 1
08D1   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D2   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D3   0808           01766                 movf ADC_DATAPORT, W
08D4   0080           01767                 movwf INDF                                              ;Save to QUEUE
08D5   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01769                 count = count + 1
08D6   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D7   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D8   0808           01766                 movf ADC_DATAPORT, W
08D9   0080           01767                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08DA   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01769                 count = count + 1
08DB   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DC   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DD   0808           01766                 movf ADC_DATAPORT, W
08DE   0080           01767                 movwf INDF                                              ;Save to QUEUE
08DF   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01769                 count = count + 1
08E0   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E1   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E2   0808           01766                 movf ADC_DATAPORT, W
08E3   0080           01767                 movwf INDF                                              ;Save to QUEUE
08E4   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01769                 count = count + 1
08E5   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E6   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E7   0808           01766                 movf ADC_DATAPORT, W
08E8   0080           01767                 movwf INDF                                              ;Save to QUEUE
08E9   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01769                 count = count + 1
08EA   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EB   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EC   0808           01766                 movf ADC_DATAPORT, W
08ED   0080           01767                 movwf INDF                                              ;Save to QUEUE
08EE   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01769                 count = count + 1
08EF   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F0   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F1   0808           01766                 movf ADC_DATAPORT, W
08F2   0080           01767                 movwf INDF                                              ;Save to QUEUE
08F3   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01769                 count = count + 1
08F4   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F5   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F6   0808           01766                 movf ADC_DATAPORT, W
08F7   0080           01767                 movwf INDF                                              ;Save to QUEUE
08F8   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01769                 count = count + 1
08F9   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FA   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FB   0808           01766                 movf ADC_DATAPORT, W
08FC   0080           01767                 movwf INDF                                              ;Save to QUEUE
08FD   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01769                 count = count + 1
08FE   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FF   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0900   0808           01766                 movf ADC_DATAPORT, W
0901   0080           01767                 movwf INDF                                              ;Save to QUEUE
0902   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01769                 count = count + 1
0903   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0904   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0905   0808           01766                 movf ADC_DATAPORT, W
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0906   0080           01767                 movwf INDF                                              ;Save to QUEUE
0907   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01769                 count = count + 1
0908   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0909   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090A   0808           01766                 movf ADC_DATAPORT, W
090B   0080           01767                 movwf INDF                                              ;Save to QUEUE
090C   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01769                 count = count + 1
090D   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090E   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090F   0808           01766                 movf ADC_DATAPORT, W
0910   0080           01767                 movwf INDF                                              ;Save to QUEUE
0911   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01769                 count = count + 1
0912   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0913   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0914   0808           01766                 movf ADC_DATAPORT, W
0915   0080           01767                 movwf INDF                                              ;Save to QUEUE
0916   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01769                 count = count + 1
0917   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0918   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0919   0808           01766                 movf ADC_DATAPORT, W
091A   0080           01767                 movwf INDF                                              ;Save to QUEUE
091B   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01769                 count = count + 1
091C   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091D   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091E   0808           01766                 movf ADC_DATAPORT, W
091F   0080           01767                 movwf INDF                                              ;Save to QUEUE
0920   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01769                 count = count + 1
0921   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0922   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0923   0808           01766                 movf ADC_DATAPORT, W
0924   0080           01767                 movwf INDF                                              ;Save to QUEUE
0925   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01769                 count = count + 1
0926   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0927   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0928   0808           01766                 movf ADC_DATAPORT, W
0929   0080           01767                 movwf INDF                                              ;Save to QUEUE
092A   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01769                 count = count + 1
092B   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092C   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092D   0808           01766                 movf ADC_DATAPORT, W
092E   0080           01767                 movwf INDF                                              ;Save to QUEUE
092F   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01769                 count = count + 1
0930   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0931   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0932   0808           01766                 movf ADC_DATAPORT, W
0933   0080           01767                 movwf INDF                                              ;Save to QUEUE
0934   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01769                 count = count + 1
0935   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0936   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0937   0808           01766                 movf ADC_DATAPORT, W
0938   0080           01767                 movwf INDF                                              ;Save to QUEUE
0939   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01769                 count = count + 1
093A   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093B   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093C   0808           01766                 movf ADC_DATAPORT, W
093D   0080           01767                 movwf INDF                                              ;Save to QUEUE
093E   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01769                 count = count + 1
093F   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0940   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0941   0808           01766                 movf ADC_DATAPORT, W
0942   0080           01767                 movwf INDF                                              ;Save to QUEUE
0943   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01769                 count = count + 1
0944   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0945   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0946   0808           01766                 movf ADC_DATAPORT, W
0947   0080           01767                 movwf INDF                                              ;Save to QUEUE
0948   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01769                 count = count + 1
0949   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094A   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094B   0808           01766                 movf ADC_DATAPORT, W
094C   0080           01767                 movwf INDF                                              ;Save to QUEUE
094D   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01769                 count = count + 1
094E   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094F   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0950   0808           01766                 movf ADC_DATAPORT, W
0951   0080           01767                 movwf INDF                                              ;Save to QUEUE
0952   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01769                 count = count + 1
0953   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0954   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0955   0808           01766                 movf ADC_DATAPORT, W
0956   0080           01767                 movwf INDF                                              ;Save to QUEUE
0957   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01769                 count = count + 1
0958   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0959   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095A   0808           01766                 movf ADC_DATAPORT, W
095B   0080           01767                 movwf INDF                                              ;Save to QUEUE
095C   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01769                 count = count + 1
095D   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

095E   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095F   0808           01766                 movf ADC_DATAPORT, W
0960   0080           01767                 movwf INDF                                              ;Save to QUEUE
0961   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01769                 count = count + 1
0962   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0963   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0964   0808           01766                 movf ADC_DATAPORT, W
0965   0080           01767                 movwf INDF                                              ;Save to QUEUE
0966   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01769                 count = count + 1
0967   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0968   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0969   0808           01766                 movf ADC_DATAPORT, W
096A   0080           01767                 movwf INDF                                              ;Save to QUEUE
096B   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01769                 count = count + 1
096C   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096D   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096E   0808           01766                 movf ADC_DATAPORT, W
096F   0080           01767                 movwf INDF                                              ;Save to QUEUE
0970   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01769                 count = count + 1
0971   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0972   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0973   0808           01766                 movf ADC_DATAPORT, W
0974   0080           01767                 movwf INDF                                              ;Save to QUEUE
0975   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01769                 count = count + 1
0976   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0977   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0978   0808           01766                 movf ADC_DATAPORT, W
0979   0080           01767                 movwf INDF                                              ;Save to QUEUE
097A   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01769                 count = count + 1
097B   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097C   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097D   0808           01766                 movf ADC_DATAPORT, W
097E   0080           01767                 movwf INDF                                              ;Save to QUEUE
097F   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01769                 count = count + 1
0980   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0981   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0982   0808           01766                 movf ADC_DATAPORT, W
0983   0080           01767                 movwf INDF                                              ;Save to QUEUE
0984   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01769                 count = count + 1
0985   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0986   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0987   0808           01766                 movf ADC_DATAPORT, W
0988   0080           01767                 movwf INDF                                              ;Save to QUEUE
0989   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01769                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

098A   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098B   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098C   0808           01766                 movf ADC_DATAPORT, W
098D   0080           01767                 movwf INDF                                              ;Save to QUEUE
098E   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01769                 count = count + 1
098F   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0990   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0991   0808           01766                 movf ADC_DATAPORT, W
0992   0080           01767                 movwf INDF                                              ;Save to QUEUE
0993   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01769                 count = count + 1
0994   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0995   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0996   0808           01766                 movf ADC_DATAPORT, W
0997   0080           01767                 movwf INDF                                              ;Save to QUEUE
0998   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01769                 count = count + 1
0999   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099A   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099B   0808           01766                 movf ADC_DATAPORT, W
099C   0080           01767                 movwf INDF                                              ;Save to QUEUE
099D   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01769                 count = count + 1
099E   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099F   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A0   0808           01766                 movf ADC_DATAPORT, W
09A1   0080           01767                 movwf INDF                                              ;Save to QUEUE
09A2   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01769                 count = count + 1
09A3   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A4   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A5   0808           01766                 movf ADC_DATAPORT, W
09A6   0080           01767                 movwf INDF                                              ;Save to QUEUE
09A7   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01769                 count = count + 1
09A8   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A9   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AA   0808           01766                 movf ADC_DATAPORT, W
09AB   0080           01767                 movwf INDF                                              ;Save to QUEUE
09AC   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01769                 count = count + 1
09AD   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AE   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AF   0808           01766                 movf ADC_DATAPORT, W
09B0   0080           01767                 movwf INDF                                              ;Save to QUEUE
09B1   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01769                 count = count + 1
09B2   1409           01764                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B3   1009           01765                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B4   0808           01766                 movf ADC_DATAPORT, W
09B5   0080           01767                 movwf INDF                                              ;Save to QUEUE
09B6   0384           01768                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            01769                 count = count + 1
                      01770         endw
09B7   1409           01771         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09B8   0808           01772         movf ADC_DATAPORT, W                            ;Sample
09B9   118A           01773         bcf PCLATH, 3                                           ;insure correct program memory page
09BA   120A           01774         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
09BB   2917           01775         goto ADCShutdown
                      01776 
                      01777 ;Fastest XY sample
                      01778 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01779 ;Sampling rate =  83.333 kHz with 4 MHz clock
09BC                  01780 SampleXY417k
09BC   1009           01781         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
09BD   1489           01782         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01783         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
09BE   3020               M     movlw BUFFERMIN
09BF   0084               M     movwf FSR
09C0   0808           01784         movf ADC_DATAPORT, W                            ;Sample X
09C1   1409           01785         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09C2   1009           01786         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
09C3   1089           01787         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
09C4   0080           01788         movwf INDF                                                      ;Save to QUEUE
09C5   0A84           01789         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            01790         count = 1
                      01791         while count < BUFFERSIZE / 2
09C6   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
09C7   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C8   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C9   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09CA   0080           01796                 movwf INDF                                              ;Save to QUEUE
09CB   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
09CC   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
09CD   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CE   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CF   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09D0   0080           01802                 movwf INDF                                              ;Save to QUEUE
09D1   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01804                 count = count + 1
09D2   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
09D3   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D4   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D5   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09D6   0080           01796                 movwf INDF                                              ;Save to QUEUE
09D7   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
09D8   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
09D9   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DA   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DB   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09DC   0080           01802                 movwf INDF                                              ;Save to QUEUE
09DD   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01804                 count = count + 1
09DE   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09DF   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E0   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E1   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09E2   0080           01796                 movwf INDF                                              ;Save to QUEUE
09E3   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
09E4   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
09E5   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E6   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E7   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09E8   0080           01802                 movwf INDF                                              ;Save to QUEUE
09E9   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01804                 count = count + 1
09EA   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
09EB   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EC   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09ED   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09EE   0080           01796                 movwf INDF                                              ;Save to QUEUE
09EF   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
09F0   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
09F1   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F2   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F3   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F4   0080           01802                 movwf INDF                                              ;Save to QUEUE
09F5   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01804                 count = count + 1
09F6   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
09F7   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F8   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F9   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09FA   0080           01796                 movwf INDF                                              ;Save to QUEUE
09FB   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
09FC   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
09FD   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FE   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FF   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A00   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A01   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01804                 count = count + 1
0A02   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A03   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A04   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A05   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A06   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A07   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A08   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A09   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0A   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0B   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A0C   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A0D   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01804                 count = count + 1
0A0E   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A0F   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A10   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A11   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A12   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A13   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A14   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A15   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A16   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A17   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A18   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A19   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01804                 count = count + 1
0A1A   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A1B   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1C   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1D   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A1E   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A1F   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A20   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A21   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A22   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A23   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A24   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A25   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01804                 count = count + 1
0A26   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A27   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A28   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A29   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A2A   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A2B   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A2C   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A2D   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2E   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2F   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A30   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A31   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01804                 count = count + 1
0A32   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A33   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A34   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A35   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A36   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A37   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A38   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A39   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3A   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3B   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A3C   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A3D   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01804                 count = count + 1
0A3E   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A3F   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A40   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A41   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A42   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A43   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A44   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A45   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A46   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A47   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A48   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A49   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01804                 count = count + 1
0A4A   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A4B   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4C   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4D   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A4E   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A4F   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A50   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A51   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A52   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A53   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A54   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A55   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01804                 count = count + 1
0A56   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A57   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A58   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A59   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A5A   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A5B   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A5C   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A5D   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5E   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5F   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A60   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A61   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01804                 count = count + 1
0A62   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A63   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A64   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A65   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A66   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A67   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A68   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A69   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6A   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6B   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A6C   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A6D   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01804                 count = count + 1
0A6E   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A6F   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A70   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A71   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A72   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A73   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A74   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A75   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A76   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A77   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A78   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A79   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01804                 count = count + 1
0A7A   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A7B   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7C   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7D   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A7E   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A7F   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A80   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A81   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A82   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A83   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A84   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A85   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01804                 count = count + 1
0A86   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A87   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A88   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A89   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A8A   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A8B   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A8C   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A8D   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8E   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8F   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A90   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A91   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01804                 count = count + 1
0A92   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A93   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A94   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A95   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A96   0080           01796                 movwf INDF                                              ;Save to QUEUE
0A97   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0A98   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0A99   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9A   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9B   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A9C   0080           01802                 movwf INDF                                              ;Save to QUEUE
0A9D   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01804                 count = count + 1
0A9E   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0A9F   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA0   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA1   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AA2   0080           01796                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AA3   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AA4   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AA5   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA6   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA7   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AA8   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AA9   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01804                 count = count + 1
0AAA   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AAB   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAC   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAD   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AAE   0080           01796                 movwf INDF                                              ;Save to QUEUE
0AAF   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AB0   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AB1   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB2   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB3   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB4   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AB5   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01804                 count = count + 1
0AB6   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AB7   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB8   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB9   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABA   0080           01796                 movwf INDF                                              ;Save to QUEUE
0ABB   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0ABC   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0ABD   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABE   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABF   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC0   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AC1   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01804                 count = count + 1
0AC2   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AC3   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC4   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC5   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC6   0080           01796                 movwf INDF                                              ;Save to QUEUE
0AC7   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AC8   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AC9   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACA   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACB   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ACC   0080           01802                 movwf INDF                                              ;Save to QUEUE
0ACD   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01804                 count = count + 1
0ACE   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0ACF   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD0   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD1   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD2   0080           01796                 movwf INDF                                              ;Save to QUEUE
0AD3   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AD4   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AD5   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD6   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD7   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD8   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AD9   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01804                 count = count + 1
0ADA   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0ADB   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADC   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADD   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ADE   0080           01796                 movwf INDF                                              ;Save to QUEUE
0ADF   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AE0   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AE1   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE2   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE3   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE4   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AE5   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01804                 count = count + 1
0AE6   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AE7   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE8   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE9   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AEA   0080           01796                 movwf INDF                                              ;Save to QUEUE
0AEB   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AEC   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AED   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEE   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AEF   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF0   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AF1   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01804                 count = count + 1
0AF2   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AF3   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF4   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF5   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF6   0080           01796                 movwf INDF                                              ;Save to QUEUE
0AF7   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0AF8   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0AF9   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFA   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFB   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AFC   0080           01802                 movwf INDF                                              ;Save to QUEUE
0AFD   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01804                 count = count + 1
0AFE   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0AFF   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B00   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B01   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B02   0080           01796                 movwf INDF                                              ;Save to QUEUE
0B03   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0B04   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B05   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B06   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B07   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B08   0080           01802                 movwf INDF                                              ;Save to QUEUE
0B09   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01804                 count = count + 1
0B0A   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0B0B   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0C   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0D   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B0E   0080           01796                 movwf INDF                                              ;Save to QUEUE
0B0F   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0B10   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0B11   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B12   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B13   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B14   0080           01802                 movwf INDF                                              ;Save to QUEUE
0B15   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01804                 count = count + 1
0B16   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0B17   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B18   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B19   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1A   0080           01796                 movwf INDF                                              ;Save to QUEUE
0B1B   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0B1C   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0B1D   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1E   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1F   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B20   0080           01802                 movwf INDF                                              ;Save to QUEUE
0B21   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01804                 count = count + 1
0B22   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0B23   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B24   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B25   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B26   0080           01796                 movwf INDF                                              ;Save to QUEUE
0B27   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0B28   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0B29   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2A   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2B   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B2C   0080           01802                 movwf INDF                                              ;Save to QUEUE
0B2D   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01804                 count = count + 1
0B2E   0808           01792                 movf ADC_DATAPORT, W                    ;Sample Y
0B2F   1409           01793                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B30   1009           01794                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B31   1489           01795                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B32   0080           01796                 movwf INDF                                              ;Save to QUEUE
0B33   0A84           01797                 incf FSR, F                                             ;Increment QUEUE pointer
0B34   0808           01798                 movf ADC_DATAPORT, W                    ;Sample X
0B35   1409           01799                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B36   1009           01800                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B37   1089           01801                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B38   0080           01802                 movwf INDF                                              ;Save to QUEUE
0B39   0A84           01803                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01804                 count = count + 1
                      01805         endw
0B3A   0808           01806         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0B3B   1409           01807         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B3C   1009           01808         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B3D   1489           01809         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0B3E   0080           01810         movwf INDF                                                      ;Save to QUEUE
0B3F   1784           01811         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0B40   0808           01812         movf ADC_DATAPORT, W                            ;Sample X
0B41   1409           01813         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B42   1009           01814         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B43   1089           01815         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0B44   0080           01816         movwf INDF                                                      ;Save to QUEUE
0B45   0384           01817         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01818         count = 1
                      01819         while count < BUFFERSIZE / 2
0B46   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B47   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B48   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B49   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B4A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B4B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B4C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B4D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B50   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B51   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01832                 count = count + 1
0B52   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B53   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B54   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B55   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B56   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B57   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B58   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B59   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5A   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5B   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B5C   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B5D   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01832                 count = count + 1
0B5E   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B5F   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B60   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B61   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B62   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B63   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B64   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B65   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B66   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B67   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B68   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B69   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01832                 count = count + 1
0B6A   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B6B   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6C   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6D   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B6E   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B6F   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B70   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B71   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B72   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B73   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B74   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B75   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01832                 count = count + 1
0B76   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B77   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B78   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B79   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B7B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B7C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B7D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B80   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B81   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01832                 count = count + 1
0B82   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B83   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B84   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B85   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B86   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B87   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B88   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B89   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8A   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8B   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B8C   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B8D   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01832                 count = count + 1
0B8E   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B8F   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B90   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B91   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B92   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B93   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0B94   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0B95   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B96   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B97   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B98   0080           01830                 movwf INDF                                              ;Save to QUEUE
0B99   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01832                 count = count + 1
0B9A   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0B9B   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9C   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9D   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B9E   0080           01824                 movwf INDF                                              ;Save to QUEUE
0B9F   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BA0   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BA1   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA2   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA3   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA4   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BA5   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01832                 count = count + 1
0BA6   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BA7   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA8   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA9   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAA   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BAB   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BAC   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BAD   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAE   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAF   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB0   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BB1   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01832                 count = count + 1
0BB2   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BB3   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB4   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB5   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BB6   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BB7   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BB8   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BB9   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBA   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBB   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BBC   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BBD   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01832                 count = count + 1
0BBE   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BBF   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC0   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC1   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC2   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BC3   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BC4   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BC5   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC6   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BC7   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BC8   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BC9   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01832                 count = count + 1
0BCA   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BCB   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCC   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCD   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BCE   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BCF   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BD0   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BD1   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD2   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD3   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD4   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BD5   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01832                 count = count + 1
0BD6   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BD7   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD8   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD9   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDA   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BDB   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BDC   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BDD   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDE   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDF   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE0   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BE1   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01832                 count = count + 1
0BE2   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BE3   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE4   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE5   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE6   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BE7   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BE8   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BE9   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEA   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEB   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BEC   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BED   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01832                 count = count + 1
0BEE   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BEF   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF0   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF1   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF2   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BF3   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0BF4   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0BF5   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF6   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF7   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BF8   0080           01830                 movwf INDF                                              ;Save to QUEUE
0BF9   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01832                 count = count + 1
0BFA   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0BFB   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFC   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFD   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BFE   0080           01824                 movwf INDF                                              ;Save to QUEUE
0BFF   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C00   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C01   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C02   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C03   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C04   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C05   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01832                 count = count + 1
0C06   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C07   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C08   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C09   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C0B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C0C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C0D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C10   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C11   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01832                 count = count + 1
0C12   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C13   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C14   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C15   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C16   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C17   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C18   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C19   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1A   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1B   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C1C   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C1D   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01832                 count = count + 1
0C1E   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C1F   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C20   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C21   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C22   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C23   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C24   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C25   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C26   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C27   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C28   0080           01830                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C29   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01832                 count = count + 1
0C2A   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C2B   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2C   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2D   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C2E   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C2F   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C30   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C31   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C32   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C33   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C34   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C35   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01832                 count = count + 1
0C36   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C37   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C38   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C39   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C3B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C3C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C3D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C40   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C41   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01832                 count = count + 1
0C42   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C43   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C44   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C45   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C46   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C47   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C48   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C49   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4A   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4B   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C4C   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C4D   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01832                 count = count + 1
0C4E   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C4F   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C50   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C51   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C52   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C53   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C54   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C55   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C56   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C57   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C58   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C59   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000018            01832                 count = count + 1
0C5A   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C5B   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5C   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5D   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C5E   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C5F   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C60   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C61   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C62   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C63   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C64   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C65   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01832                 count = count + 1
0C66   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C67   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C68   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C69   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C6B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C6C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C6D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C70   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C71   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01832                 count = count + 1
0C72   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C73   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C74   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C75   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C76   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C77   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C78   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C79   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7A   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7B   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C7C   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C7D   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01832                 count = count + 1
0C7E   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C7F   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C80   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C81   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C82   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C83   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C84   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C85   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C86   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C87   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C88   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C89   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01832                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C8A   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C8B   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8C   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8D   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C8E   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C8F   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C90   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C91   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C92   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C93   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C94   0080           01830                 movwf INDF                                              ;Save to QUEUE
0C95   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01832                 count = count + 1
0C96   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0C97   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C98   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C99   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9A   0080           01824                 movwf INDF                                              ;Save to QUEUE
0C9B   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0C9C   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0C9D   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9E   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9F   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA0   0080           01830                 movwf INDF                                              ;Save to QUEUE
0CA1   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01832                 count = count + 1
0CA2   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0CA3   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA4   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA5   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA6   0080           01824                 movwf INDF                                              ;Save to QUEUE
0CA7   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0CA8   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0CA9   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAA   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAB   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CAC   0080           01830                 movwf INDF                                              ;Save to QUEUE
0CAD   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01832                 count = count + 1
0CAE   0808           01820                 movf ADC_DATAPORT, W                    ;Sample Y
0CAF   1409           01821                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB0   1009           01822                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB1   1489           01823                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB2   0080           01824                 movwf INDF                                              ;Save to QUEUE
0CB3   0384           01825                 decf FSR, F                                             ;Increment QUEUE pointer
0CB4   0808           01826                 movf ADC_DATAPORT, W                    ;Sample X
0CB5   1409           01827                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB6   1009           01828                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB7   1089           01829                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB8   0080           01830                 movwf INDF                                              ;Save to QUEUE
0CB9   0384           01831                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01832                 count = count + 1
                      01833         endw
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CBA   0808           01834         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0CBB   1409           01835         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CBC   1009           01836         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CBD   1489           01837         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0CBE   0080           01838         movwf INDF                                                      ;Save to QUEUE
0CBF   1783           01839         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0CC0   0808           01840         movf ADC_DATAPORT, W                            ;Sample X
0CC1   1409           01841         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CC2   1009           01842         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CC3   1089           01843         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0CC4   0080           01844         movwf INDF                                                      ;Save to QUEUE
0CC5   0A84           01845         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01846         count = 1
                      01847         while count < BUFFERSIZE / 2
0CC6   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0CC7   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC8   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC9   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CCA   0080           01852                 movwf INDF                                              ;Save to QUEUE
0CCB   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0CCC   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0CCD   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCE   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCF   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD0   0080           01858                 movwf INDF                                              ;Save to QUEUE
0CD1   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01860                 count = count + 1
0CD2   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0CD3   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD4   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD5   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD6   0080           01852                 movwf INDF                                              ;Save to QUEUE
0CD7   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0CD8   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0CD9   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDA   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDB   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CDC   0080           01858                 movwf INDF                                              ;Save to QUEUE
0CDD   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01860                 count = count + 1
0CDE   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0CDF   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE0   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE1   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE2   0080           01852                 movwf INDF                                              ;Save to QUEUE
0CE3   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0CE4   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0CE5   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE6   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE7   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE8   0080           01858                 movwf INDF                                              ;Save to QUEUE
0CE9   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01860                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CEA   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0CEB   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEC   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CED   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CEE   0080           01852                 movwf INDF                                              ;Save to QUEUE
0CEF   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0CF0   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0CF1   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF2   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF3   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF4   0080           01858                 movwf INDF                                              ;Save to QUEUE
0CF5   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01860                 count = count + 1
0CF6   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0CF7   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF8   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF9   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFA   0080           01852                 movwf INDF                                              ;Save to QUEUE
0CFB   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0CFC   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0CFD   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFE   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFF   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D00   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D01   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01860                 count = count + 1
0D02   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D03   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D04   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D05   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D06   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D07   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D08   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D09   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0A   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0B   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D0C   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D0D   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01860                 count = count + 1
0D0E   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D0F   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D10   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D11   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D12   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D13   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D14   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D15   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D16   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D17   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D18   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D19   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01860                 count = count + 1
0D1A   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D1B   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1C   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1D   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D1E   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D1F   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D20   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D21   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D22   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D23   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D24   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D25   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01860                 count = count + 1
0D26   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D27   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D28   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D29   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2A   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D2B   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D2C   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D2D   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2E   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2F   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D30   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D31   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01860                 count = count + 1
0D32   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D33   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D34   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D35   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D36   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D37   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D38   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D39   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3A   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3B   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D3C   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D3D   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01860                 count = count + 1
0D3E   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D3F   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D40   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D41   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D42   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D43   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D44   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D45   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D46   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D47   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D48   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D49   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01860                 count = count + 1
0D4A   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D4B   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D4C   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4D   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D4E   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D4F   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D50   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D51   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D52   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D53   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D54   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D55   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01860                 count = count + 1
0D56   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D57   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D58   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D59   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5A   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D5B   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D5C   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D5D   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5E   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5F   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D60   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D61   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01860                 count = count + 1
0D62   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D63   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D64   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D65   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D66   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D67   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D68   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D69   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6A   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6B   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D6C   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D6D   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01860                 count = count + 1
0D6E   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D6F   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D70   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D71   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D72   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D73   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D74   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D75   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D76   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D77   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D78   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D79   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01860                 count = count + 1
0D7A   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D7B   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7C   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D7D   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D7E   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D7F   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D80   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D81   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D82   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D83   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D84   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D85   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01860                 count = count + 1
0D86   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D87   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D88   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D89   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8A   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D8B   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D8C   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D8D   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8E   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8F   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D90   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D91   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01860                 count = count + 1
0D92   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D93   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D94   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D95   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D96   0080           01852                 movwf INDF                                              ;Save to QUEUE
0D97   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0D98   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0D99   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9A   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9B   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D9C   0080           01858                 movwf INDF                                              ;Save to QUEUE
0D9D   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01860                 count = count + 1
0D9E   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0D9F   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA0   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA1   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA2   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DA3   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DA4   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DA5   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA6   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA7   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DA8   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DA9   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01860                 count = count + 1
0DAA   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DAB   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAC   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAD   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DAE   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DAF   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DB0   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DB1   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB2   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB3   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB4   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DB5   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01860                 count = count + 1
0DB6   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DB7   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB8   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB9   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBA   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DBB   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DBC   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DBD   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBE   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBF   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC0   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DC1   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01860                 count = count + 1
0DC2   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DC3   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC4   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC5   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC6   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DC7   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DC8   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DC9   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCA   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCB   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DCC   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DCD   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01860                 count = count + 1
0DCE   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DCF   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD0   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD1   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD2   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DD3   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DD4   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DD5   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD6   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD7   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD8   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DD9   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01860                 count = count + 1
0DDA   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DDB   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDC   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDD   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DDE   0080           01852                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DDF   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DE0   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DE1   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE2   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE3   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE4   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DE5   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01860                 count = count + 1
0DE6   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DE7   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE8   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE9   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DEA   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DEB   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DEC   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DED   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEE   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DEF   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF0   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DF1   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01860                 count = count + 1
0DF2   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DF3   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF4   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF5   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF6   0080           01852                 movwf INDF                                              ;Save to QUEUE
0DF7   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0DF8   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0DF9   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFA   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFB   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DFC   0080           01858                 movwf INDF                                              ;Save to QUEUE
0DFD   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01860                 count = count + 1
0DFE   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0DFF   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E00   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E01   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E02   0080           01852                 movwf INDF                                              ;Save to QUEUE
0E03   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0E04   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0E05   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E06   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E07   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E08   0080           01858                 movwf INDF                                              ;Save to QUEUE
0E09   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01860                 count = count + 1
0E0A   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0E0B   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0C   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0D   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E0E   0080           01852                 movwf INDF                                              ;Save to QUEUE
0E0F   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E10   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0E11   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E12   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E13   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E14   0080           01858                 movwf INDF                                              ;Save to QUEUE
0E15   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01860                 count = count + 1
0E16   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0E17   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E18   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E19   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1A   0080           01852                 movwf INDF                                              ;Save to QUEUE
0E1B   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0E1C   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0E1D   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1E   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1F   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E20   0080           01858                 movwf INDF                                              ;Save to QUEUE
0E21   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01860                 count = count + 1
0E22   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0E23   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E24   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E25   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E26   0080           01852                 movwf INDF                                              ;Save to QUEUE
0E27   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0E28   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0E29   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2A   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2B   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E2C   0080           01858                 movwf INDF                                              ;Save to QUEUE
0E2D   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01860                 count = count + 1
0E2E   0808           01848                 movf ADC_DATAPORT, W                    ;Sample Y
0E2F   1409           01849                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E30   1009           01850                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E31   1489           01851                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E32   0080           01852                 movwf INDF                                              ;Save to QUEUE
0E33   0A84           01853                 incf FSR, F                                             ;Increment QUEUE pointer
0E34   0808           01854                 movf ADC_DATAPORT, W                    ;Sample X
0E35   1409           01855                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E36   1009           01856                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E37   1089           01857                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E38   0080           01858                 movwf INDF                                              ;Save to QUEUE
0E39   0A84           01859                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01860                 count = count + 1
                      01861         endw
0E3A   0808           01862         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0E3B   1409           01863         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E3C   1009           01864         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E3D   1489           01865         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0E3E   0080           01866         movwf INDF                                                      ;Save to QUEUE
0E3F   1384           01867         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E40   0808           01868         movf ADC_DATAPORT, W                            ;Sample X
0E41   1409           01869         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E42   1009           01870         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E43   1089           01871         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0E44   0080           01872         movwf INDF                                                      ;Save to QUEUE
0E45   0384           01873         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01874         count = 1
                      01875         while count < BUFFERSIZE / 2
0E46   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E47   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E48   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E49   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E4A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E4B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E4C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E4D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E50   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E51   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01888                 count = count + 1
0E52   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E53   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E54   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E55   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E56   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E57   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E58   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E59   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5A   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5B   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E5C   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E5D   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01888                 count = count + 1
0E5E   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E5F   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E60   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E61   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E62   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E63   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E64   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E65   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E66   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E67   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E68   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E69   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01888                 count = count + 1
0E6A   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E6B   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6C   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6D   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E6E   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E6F   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E70   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E71   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E72   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E73   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E74   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E75   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01888                 count = count + 1
0E76   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E77   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E78   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E79   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E7B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E7C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E7D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E80   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E81   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01888                 count = count + 1
0E82   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E83   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E84   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E85   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E86   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E87   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E88   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E89   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8A   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8B   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E8C   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E8D   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01888                 count = count + 1
0E8E   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E8F   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E90   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E91   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E92   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E93   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0E94   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0E95   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E96   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E97   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E98   0080           01886                 movwf INDF                                              ;Save to QUEUE
0E99   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01888                 count = count + 1
0E9A   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0E9B   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9C   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9D   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E9E   0080           01880                 movwf INDF                                              ;Save to QUEUE
0E9F   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EA0   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EA1   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA2   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA3   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA4   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EA5   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01888                 count = count + 1
0EA6   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EA7   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA8   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA9   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAA   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EAB   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EAC   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EAD   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAE   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAF   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB0   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EB1   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01888                 count = count + 1
0EB2   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EB3   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB4   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB5   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EB6   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EB7   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EB8   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EB9   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBA   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBB   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EBC   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EBD   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01888                 count = count + 1
0EBE   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EBF   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC0   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC1   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EC2   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EC3   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EC4   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EC5   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC6   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC7   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EC8   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EC9   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01888                 count = count + 1
0ECA   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0ECB   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECC   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECD   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ECE   0080           01880                 movwf INDF                                              ;Save to QUEUE
0ECF   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0ED0   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0ED1   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0ED2   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED3   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED4   0080           01886                 movwf INDF                                              ;Save to QUEUE
0ED5   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01888                 count = count + 1
0ED6   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0ED7   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED8   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED9   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDA   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EDB   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EDC   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EDD   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDE   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDF   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE0   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EE1   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01888                 count = count + 1
0EE2   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EE3   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE4   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE5   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EE6   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EE7   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EE8   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EE9   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEA   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEB   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EEC   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EED   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01888                 count = count + 1
0EEE   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EEF   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF0   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF1   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF2   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EF3   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0EF4   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0EF5   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF6   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF7   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EF8   0080           01886                 movwf INDF                                              ;Save to QUEUE
0EF9   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01888                 count = count + 1
0EFA   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0EFB   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFC   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFD   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EFE   0080           01880                 movwf INDF                                              ;Save to QUEUE
0EFF   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F00   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F01   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F02   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F03   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F04   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F05   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01888                 count = count + 1
0F06   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F07   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F08   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F09   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F0B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F0C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F0D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F10   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F11   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01888                 count = count + 1
0F12   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F13   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F14   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F15   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F16   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F17   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F18   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F19   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1A   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1B   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F1C   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F1D   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01888                 count = count + 1
0F1E   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F1F   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F20   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F21   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F22   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F23   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F24   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F25   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F26   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F27   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F28   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F29   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01888                 count = count + 1
0F2A   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F2B   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2C   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2D   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F2E   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F2F   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F30   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F31   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F32   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F33   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F34   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F35   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01888                 count = count + 1
0F36   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F37   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F38   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F39   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F3B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F3C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F3D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F40   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F41   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01888                 count = count + 1
0F42   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F43   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F44   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F45   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F46   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F47   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F48   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F49   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4A   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4B   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F4C   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F4D   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01888                 count = count + 1
0F4E   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F4F   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F50   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F51   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F52   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F53   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F54   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F55   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F56   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F57   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F58   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F59   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01888                 count = count + 1
0F5A   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F5B   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5C   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5D   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F5E   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F5F   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F60   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F61   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F62   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F63   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F64   0080           01886                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F65   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01888                 count = count + 1
0F66   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F67   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F68   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F69   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F6B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F6C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F6D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F70   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F71   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01888                 count = count + 1
0F72   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F73   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F74   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F75   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F76   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F77   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F78   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F79   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7A   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7B   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F7C   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F7D   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01888                 count = count + 1
0F7E   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F7F   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F80   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F81   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F82   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F83   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F84   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F85   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F86   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F87   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F88   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F89   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01888                 count = count + 1
0F8A   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F8B   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8C   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8D   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F8E   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F8F   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F90   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F91   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F92   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F93   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F94   0080           01886                 movwf INDF                                              ;Save to QUEUE
0F95   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001D            01888                 count = count + 1
0F96   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0F97   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F98   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F99   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F9A   0080           01880                 movwf INDF                                              ;Save to QUEUE
0F9B   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0F9C   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0F9D   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9E   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9F   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA0   0080           01886                 movwf INDF                                              ;Save to QUEUE
0FA1   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01888                 count = count + 1
0FA2   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0FA3   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA4   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA5   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FA6   0080           01880                 movwf INDF                                              ;Save to QUEUE
0FA7   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0FA8   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0FA9   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAA   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAB   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FAC   0080           01886                 movwf INDF                                              ;Save to QUEUE
0FAD   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01888                 count = count + 1
0FAE   0808           01876                 movf ADC_DATAPORT, W                    ;Sample Y
0FAF   1409           01877                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB0   1009           01878                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB1   1489           01879                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FB2   0080           01880                 movwf INDF                                              ;Save to QUEUE
0FB3   0384           01881                 decf FSR, F                                             ;Increment QUEUE pointer
0FB4   0808           01882                 movf ADC_DATAPORT, W                    ;Sample X
0FB5   1409           01883                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB6   1009           01884                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB7   1089           01885                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FB8   0080           01886                 movwf INDF                                              ;Save to QUEUE
0FB9   0384           01887                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01888                 count = count + 1
                      01889         endw
0FBA   0808           01890         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0FBB   1409           01891         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0FBC   118A           01892         bcf PCLATH, 3                                           ;insure correct program memory page
0FBD   120A           01893         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0FBE   2917           01894         goto ADCShutdown
                      01895         
                      01896 ;Fast sample
                      01897 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      01898 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      01899 ;-----------------------------------------------------------------------------
0FBF                  01900 Sample833k
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FBF   1009           01901         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01902         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0FC0   3020               M     movlw BUFFERMIN
0FC1   0084               M     movwf FSR
0FC2   0000           01903         nop
  0000                01904         local count
  00000001            01905         count = 1
                      01906         while count < BUFFERSIZE
0FC3   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FC4   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC5   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC6   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FC7   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FC8   0000           01912                 nop                                                             ;Wait a cycle
  00000002            01913                 count = count + 1
0FC9   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FCA   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCB   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCC   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FCD   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FCE   0000           01912                 nop                                                             ;Wait a cycle
  00000003            01913                 count = count + 1
0FCF   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FD0   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD1   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD2   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FD3   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FD4   0000           01912                 nop                                                             ;Wait a cycle
  00000004            01913                 count = count + 1
0FD5   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FD6   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD7   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD8   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FD9   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FDA   0000           01912                 nop                                                             ;Wait a cycle
  00000005            01913                 count = count + 1
0FDB   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FDC   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDD   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDE   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FDF   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FE0   0000           01912                 nop                                                             ;Wait a cycle
  00000006            01913                 count = count + 1
0FE1   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FE2   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE3   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE4   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FE5   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FE6   0000           01912                 nop                                                             ;Wait a cycle
  00000007            01913                 count = count + 1
0FE7   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FE8   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE9   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FEA   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FEB   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FEC   0000           01912                 nop                                                             ;Wait a cycle
  00000008            01913                 count = count + 1
0FED   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FEE   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FEF   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF0   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FF1   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FF2   0000           01912                 nop                                                             ;Wait a cycle
  00000009            01913                 count = count + 1
0FF3   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FF4   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF5   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF6   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FF7   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FF8   0000           01912                 nop                                                             ;Wait a cycle
  0000000A            01913                 count = count + 1
0FF9   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
0FFA   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFB   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFC   0080           01910                 movwf INDF                                              ;Save to QUEUE
0FFD   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
0FFE   0000           01912                 nop                                                             ;Wait a cycle
  0000000B            01913                 count = count + 1
0FFF   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1000   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1001   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1002   0080           01910                 movwf INDF                                              ;Save to QUEUE
1003   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1004   0000           01912                 nop                                                             ;Wait a cycle
  0000000C            01913                 count = count + 1
1005   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1006   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1007   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1008   0080           01910                 movwf INDF                                              ;Save to QUEUE
1009   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
100A   0000           01912                 nop                                                             ;Wait a cycle
  0000000D            01913                 count = count + 1
100B   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
100C   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100D   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100E   0080           01910                 movwf INDF                                              ;Save to QUEUE
100F   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1010   0000           01912                 nop                                                             ;Wait a cycle
  0000000E            01913                 count = count + 1
1011   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1012   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1013   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1014   0080           01910                 movwf INDF                                              ;Save to QUEUE
1015   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1016   0000           01912                 nop                                                             ;Wait a cycle
  0000000F            01913                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1017   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1018   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1019   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101A   0080           01910                 movwf INDF                                              ;Save to QUEUE
101B   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
101C   0000           01912                 nop                                                             ;Wait a cycle
  00000010            01913                 count = count + 1
101D   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
101E   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101F   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1020   0080           01910                 movwf INDF                                              ;Save to QUEUE
1021   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1022   0000           01912                 nop                                                             ;Wait a cycle
  00000011            01913                 count = count + 1
1023   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1024   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1025   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1026   0080           01910                 movwf INDF                                              ;Save to QUEUE
1027   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1028   0000           01912                 nop                                                             ;Wait a cycle
  00000012            01913                 count = count + 1
1029   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
102A   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102B   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102C   0080           01910                 movwf INDF                                              ;Save to QUEUE
102D   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
102E   0000           01912                 nop                                                             ;Wait a cycle
  00000013            01913                 count = count + 1
102F   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1030   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1031   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1032   0080           01910                 movwf INDF                                              ;Save to QUEUE
1033   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1034   0000           01912                 nop                                                             ;Wait a cycle
  00000014            01913                 count = count + 1
1035   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1036   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1037   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1038   0080           01910                 movwf INDF                                              ;Save to QUEUE
1039   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
103A   0000           01912                 nop                                                             ;Wait a cycle
  00000015            01913                 count = count + 1
103B   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
103C   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103D   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103E   0080           01910                 movwf INDF                                              ;Save to QUEUE
103F   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1040   0000           01912                 nop                                                             ;Wait a cycle
  00000016            01913                 count = count + 1
1041   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1042   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1043   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1044   0080           01910                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1045   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1046   0000           01912                 nop                                                             ;Wait a cycle
  00000017            01913                 count = count + 1
1047   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1048   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1049   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104A   0080           01910                 movwf INDF                                              ;Save to QUEUE
104B   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
104C   0000           01912                 nop                                                             ;Wait a cycle
  00000018            01913                 count = count + 1
104D   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
104E   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104F   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1050   0080           01910                 movwf INDF                                              ;Save to QUEUE
1051   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1052   0000           01912                 nop                                                             ;Wait a cycle
  00000019            01913                 count = count + 1
1053   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1054   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1055   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1056   0080           01910                 movwf INDF                                              ;Save to QUEUE
1057   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1058   0000           01912                 nop                                                             ;Wait a cycle
  0000001A            01913                 count = count + 1
1059   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
105A   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105B   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105C   0080           01910                 movwf INDF                                              ;Save to QUEUE
105D   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
105E   0000           01912                 nop                                                             ;Wait a cycle
  0000001B            01913                 count = count + 1
105F   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1060   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1061   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1062   0080           01910                 movwf INDF                                              ;Save to QUEUE
1063   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1064   0000           01912                 nop                                                             ;Wait a cycle
  0000001C            01913                 count = count + 1
1065   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1066   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1067   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1068   0080           01910                 movwf INDF                                              ;Save to QUEUE
1069   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
106A   0000           01912                 nop                                                             ;Wait a cycle
  0000001D            01913                 count = count + 1
106B   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
106C   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106D   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106E   0080           01910                 movwf INDF                                              ;Save to QUEUE
106F   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1070   0000           01912                 nop                                                             ;Wait a cycle
  0000001E            01913                 count = count + 1
1071   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1072   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1073   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1074   0080           01910                 movwf INDF                                              ;Save to QUEUE
1075   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1076   0000           01912                 nop                                                             ;Wait a cycle
  0000001F            01913                 count = count + 1
1077   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1078   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1079   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107A   0080           01910                 movwf INDF                                              ;Save to QUEUE
107B   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
107C   0000           01912                 nop                                                             ;Wait a cycle
  00000020            01913                 count = count + 1
107D   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
107E   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107F   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1080   0080           01910                 movwf INDF                                              ;Save to QUEUE
1081   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1082   0000           01912                 nop                                                             ;Wait a cycle
  00000021            01913                 count = count + 1
1083   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1084   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1085   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1086   0080           01910                 movwf INDF                                              ;Save to QUEUE
1087   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1088   0000           01912                 nop                                                             ;Wait a cycle
  00000022            01913                 count = count + 1
1089   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
108A   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108B   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108C   0080           01910                 movwf INDF                                              ;Save to QUEUE
108D   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
108E   0000           01912                 nop                                                             ;Wait a cycle
  00000023            01913                 count = count + 1
108F   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1090   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1091   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1092   0080           01910                 movwf INDF                                              ;Save to QUEUE
1093   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1094   0000           01912                 nop                                                             ;Wait a cycle
  00000024            01913                 count = count + 1
1095   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1096   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1097   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1098   0080           01910                 movwf INDF                                              ;Save to QUEUE
1099   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
109A   0000           01912                 nop                                                             ;Wait a cycle
  00000025            01913                 count = count + 1
109B   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
109C   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109D   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109E   0080           01910                 movwf INDF                                              ;Save to QUEUE
109F   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10A0   0000           01912                 nop                                                             ;Wait a cycle
  00000026            01913                 count = count + 1
10A1   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10A2   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A3   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A4   0080           01910                 movwf INDF                                              ;Save to QUEUE
10A5   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10A6   0000           01912                 nop                                                             ;Wait a cycle
  00000027            01913                 count = count + 1
10A7   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10A8   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A9   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AA   0080           01910                 movwf INDF                                              ;Save to QUEUE
10AB   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10AC   0000           01912                 nop                                                             ;Wait a cycle
  00000028            01913                 count = count + 1
10AD   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10AE   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AF   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B0   0080           01910                 movwf INDF                                              ;Save to QUEUE
10B1   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10B2   0000           01912                 nop                                                             ;Wait a cycle
  00000029            01913                 count = count + 1
10B3   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10B4   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B5   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B6   0080           01910                 movwf INDF                                              ;Save to QUEUE
10B7   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10B8   0000           01912                 nop                                                             ;Wait a cycle
  0000002A            01913                 count = count + 1
10B9   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10BA   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BB   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BC   0080           01910                 movwf INDF                                              ;Save to QUEUE
10BD   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10BE   0000           01912                 nop                                                             ;Wait a cycle
  0000002B            01913                 count = count + 1
10BF   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10C0   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C1   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C2   0080           01910                 movwf INDF                                              ;Save to QUEUE
10C3   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10C4   0000           01912                 nop                                                             ;Wait a cycle
  0000002C            01913                 count = count + 1
10C5   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10C6   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C7   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C8   0080           01910                 movwf INDF                                              ;Save to QUEUE
10C9   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10CA   0000           01912                 nop                                                             ;Wait a cycle
  0000002D            01913                 count = count + 1
10CB   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10CC   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10CD   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CE   0080           01910                 movwf INDF                                              ;Save to QUEUE
10CF   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10D0   0000           01912                 nop                                                             ;Wait a cycle
  0000002E            01913                 count = count + 1
10D1   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10D2   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D3   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D4   0080           01910                 movwf INDF                                              ;Save to QUEUE
10D5   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10D6   0000           01912                 nop                                                             ;Wait a cycle
  0000002F            01913                 count = count + 1
10D7   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10D8   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D9   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DA   0080           01910                 movwf INDF                                              ;Save to QUEUE
10DB   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10DC   0000           01912                 nop                                                             ;Wait a cycle
  00000030            01913                 count = count + 1
10DD   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10DE   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DF   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E0   0080           01910                 movwf INDF                                              ;Save to QUEUE
10E1   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10E2   0000           01912                 nop                                                             ;Wait a cycle
  00000031            01913                 count = count + 1
10E3   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10E4   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E5   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E6   0080           01910                 movwf INDF                                              ;Save to QUEUE
10E7   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10E8   0000           01912                 nop                                                             ;Wait a cycle
  00000032            01913                 count = count + 1
10E9   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10EA   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EB   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EC   0080           01910                 movwf INDF                                              ;Save to QUEUE
10ED   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10EE   0000           01912                 nop                                                             ;Wait a cycle
  00000033            01913                 count = count + 1
10EF   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10F0   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F1   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F2   0080           01910                 movwf INDF                                              ;Save to QUEUE
10F3   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10F4   0000           01912                 nop                                                             ;Wait a cycle
  00000034            01913                 count = count + 1
10F5   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10F6   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F7   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F8   0080           01910                 movwf INDF                                              ;Save to QUEUE
10F9   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
10FA   0000           01912                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000035            01913                 count = count + 1
10FB   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
10FC   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FD   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FE   0080           01910                 movwf INDF                                              ;Save to QUEUE
10FF   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1100   0000           01912                 nop                                                             ;Wait a cycle
  00000036            01913                 count = count + 1
1101   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1102   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1103   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1104   0080           01910                 movwf INDF                                              ;Save to QUEUE
1105   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1106   0000           01912                 nop                                                             ;Wait a cycle
  00000037            01913                 count = count + 1
1107   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1108   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1109   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110A   0080           01910                 movwf INDF                                              ;Save to QUEUE
110B   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
110C   0000           01912                 nop                                                             ;Wait a cycle
  00000038            01913                 count = count + 1
110D   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
110E   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110F   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1110   0080           01910                 movwf INDF                                              ;Save to QUEUE
1111   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1112   0000           01912                 nop                                                             ;Wait a cycle
  00000039            01913                 count = count + 1
1113   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1114   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1115   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1116   0080           01910                 movwf INDF                                              ;Save to QUEUE
1117   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1118   0000           01912                 nop                                                             ;Wait a cycle
  0000003A            01913                 count = count + 1
1119   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
111A   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111B   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111C   0080           01910                 movwf INDF                                              ;Save to QUEUE
111D   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
111E   0000           01912                 nop                                                             ;Wait a cycle
  0000003B            01913                 count = count + 1
111F   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1120   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1121   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1122   0080           01910                 movwf INDF                                              ;Save to QUEUE
1123   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1124   0000           01912                 nop                                                             ;Wait a cycle
  0000003C            01913                 count = count + 1
1125   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1126   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1127   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1128   0080           01910                 movwf INDF                                              ;Save to QUEUE
1129   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
112A   0000           01912                 nop                                                             ;Wait a cycle
  0000003D            01913                 count = count + 1
112B   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
112C   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112D   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112E   0080           01910                 movwf INDF                                              ;Save to QUEUE
112F   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1130   0000           01912                 nop                                                             ;Wait a cycle
  0000003E            01913                 count = count + 1
1131   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1132   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1133   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1134   0080           01910                 movwf INDF                                              ;Save to QUEUE
1135   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
1136   0000           01912                 nop                                                             ;Wait a cycle
  0000003F            01913                 count = count + 1
1137   0808           01907                 movf ADC_DATAPORT, W                    ;Sample
1138   1409           01908                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1139   1009           01909                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113A   0080           01910                 movwf INDF                                              ;Save to QUEUE
113B   0A84           01911                 incf FSR, F                                             ;Increment QUEUE pointer
113C   0000           01912                 nop                                                             ;Wait a cycle
  00000040            01913                 count = count + 1
                      01914         endw
113D   0808           01915         movf ADC_DATAPORT, W
113E   1409           01916         bsf ADC_CONTROLPORT, RDD
113F   1009           01917         bcf ADC_CONTROLPORT, RDD
1140   0080           01918         movwf INDF
1141   1784           01919         bsf FSR, 7                                                      ;goto bank 2
1142   0000           01920         nop                                                                     ;Wait a cycle
  00000001            01921         count = 1
                      01922         while count < BUFFERSIZE
1143   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1144   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1145   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1146   0080           01926                 movwf INDF                                              ;Save to QUEUE
1147   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1148   0000           01928                 nop                                                             ;Wait a cycle
  00000002            01929                 count = count + 1
1149   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
114A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114C   0080           01926                 movwf INDF                                              ;Save to QUEUE
114D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
114E   0000           01928                 nop                                                             ;Wait a cycle
  00000003            01929                 count = count + 1
114F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1150   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1151   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1152   0080           01926                 movwf INDF                                              ;Save to QUEUE
1153   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1154   0000           01928                 nop                                                             ;Wait a cycle
  00000004            01929                 count = count + 1
1155   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1156   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1157   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1158   0080           01926                 movwf INDF                                              ;Save to QUEUE
1159   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
115A   0000           01928                 nop                                                             ;Wait a cycle
  00000005            01929                 count = count + 1
115B   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
115C   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115D   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115E   0080           01926                 movwf INDF                                              ;Save to QUEUE
115F   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1160   0000           01928                 nop                                                             ;Wait a cycle
  00000006            01929                 count = count + 1
1161   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1162   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1163   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1164   0080           01926                 movwf INDF                                              ;Save to QUEUE
1165   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1166   0000           01928                 nop                                                             ;Wait a cycle
  00000007            01929                 count = count + 1
1167   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1168   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1169   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116A   0080           01926                 movwf INDF                                              ;Save to QUEUE
116B   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
116C   0000           01928                 nop                                                             ;Wait a cycle
  00000008            01929                 count = count + 1
116D   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
116E   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116F   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1170   0080           01926                 movwf INDF                                              ;Save to QUEUE
1171   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1172   0000           01928                 nop                                                             ;Wait a cycle
  00000009            01929                 count = count + 1
1173   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1174   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1175   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1176   0080           01926                 movwf INDF                                              ;Save to QUEUE
1177   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1178   0000           01928                 nop                                                             ;Wait a cycle
  0000000A            01929                 count = count + 1
1179   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
117A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117C   0080           01926                 movwf INDF                                              ;Save to QUEUE
117D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
117E   0000           01928                 nop                                                             ;Wait a cycle
  0000000B            01929                 count = count + 1
117F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1180   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1181   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1182   0080           01926                 movwf INDF                                              ;Save to QUEUE
1183   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1184   0000           01928                 nop                                                             ;Wait a cycle
  0000000C            01929                 count = count + 1
1185   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1186   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1187   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1188   0080           01926                 movwf INDF                                              ;Save to QUEUE
1189   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
118A   0000           01928                 nop                                                             ;Wait a cycle
  0000000D            01929                 count = count + 1
118B   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
118C   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118D   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118E   0080           01926                 movwf INDF                                              ;Save to QUEUE
118F   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1190   0000           01928                 nop                                                             ;Wait a cycle
  0000000E            01929                 count = count + 1
1191   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1192   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1193   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1194   0080           01926                 movwf INDF                                              ;Save to QUEUE
1195   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1196   0000           01928                 nop                                                             ;Wait a cycle
  0000000F            01929                 count = count + 1
1197   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1198   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1199   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119A   0080           01926                 movwf INDF                                              ;Save to QUEUE
119B   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
119C   0000           01928                 nop                                                             ;Wait a cycle
  00000010            01929                 count = count + 1
119D   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
119E   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119F   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A0   0080           01926                 movwf INDF                                              ;Save to QUEUE
11A1   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11A2   0000           01928                 nop                                                             ;Wait a cycle
  00000011            01929                 count = count + 1
11A3   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11A4   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A5   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A6   0080           01926                 movwf INDF                                              ;Save to QUEUE
11A7   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11A8   0000           01928                 nop                                                             ;Wait a cycle
  00000012            01929                 count = count + 1
11A9   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11AA   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AB   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AC   0080           01926                 movwf INDF                                              ;Save to QUEUE
11AD   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11AE   0000           01928                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            01929                 count = count + 1
11AF   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11B0   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B1   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B2   0080           01926                 movwf INDF                                              ;Save to QUEUE
11B3   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11B4   0000           01928                 nop                                                             ;Wait a cycle
  00000014            01929                 count = count + 1
11B5   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11B6   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B7   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B8   0080           01926                 movwf INDF                                              ;Save to QUEUE
11B9   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11BA   0000           01928                 nop                                                             ;Wait a cycle
  00000015            01929                 count = count + 1
11BB   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11BC   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BD   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BE   0080           01926                 movwf INDF                                              ;Save to QUEUE
11BF   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11C0   0000           01928                 nop                                                             ;Wait a cycle
  00000016            01929                 count = count + 1
11C1   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11C2   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C3   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C4   0080           01926                 movwf INDF                                              ;Save to QUEUE
11C5   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11C6   0000           01928                 nop                                                             ;Wait a cycle
  00000017            01929                 count = count + 1
11C7   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11C8   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C9   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CA   0080           01926                 movwf INDF                                              ;Save to QUEUE
11CB   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11CC   0000           01928                 nop                                                             ;Wait a cycle
  00000018            01929                 count = count + 1
11CD   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11CE   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CF   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D0   0080           01926                 movwf INDF                                              ;Save to QUEUE
11D1   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11D2   0000           01928                 nop                                                             ;Wait a cycle
  00000019            01929                 count = count + 1
11D3   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11D4   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D5   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D6   0080           01926                 movwf INDF                                              ;Save to QUEUE
11D7   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11D8   0000           01928                 nop                                                             ;Wait a cycle
  0000001A            01929                 count = count + 1
11D9   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11DA   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DB   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11DC   0080           01926                 movwf INDF                                              ;Save to QUEUE
11DD   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11DE   0000           01928                 nop                                                             ;Wait a cycle
  0000001B            01929                 count = count + 1
11DF   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11E0   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E1   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E2   0080           01926                 movwf INDF                                              ;Save to QUEUE
11E3   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11E4   0000           01928                 nop                                                             ;Wait a cycle
  0000001C            01929                 count = count + 1
11E5   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11E6   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E7   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E8   0080           01926                 movwf INDF                                              ;Save to QUEUE
11E9   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11EA   0000           01928                 nop                                                             ;Wait a cycle
  0000001D            01929                 count = count + 1
11EB   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11EC   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11ED   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EE   0080           01926                 movwf INDF                                              ;Save to QUEUE
11EF   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11F0   0000           01928                 nop                                                             ;Wait a cycle
  0000001E            01929                 count = count + 1
11F1   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11F2   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F3   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F4   0080           01926                 movwf INDF                                              ;Save to QUEUE
11F5   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11F6   0000           01928                 nop                                                             ;Wait a cycle
  0000001F            01929                 count = count + 1
11F7   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11F8   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F9   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FA   0080           01926                 movwf INDF                                              ;Save to QUEUE
11FB   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
11FC   0000           01928                 nop                                                             ;Wait a cycle
  00000020            01929                 count = count + 1
11FD   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
11FE   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FF   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1200   0080           01926                 movwf INDF                                              ;Save to QUEUE
1201   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1202   0000           01928                 nop                                                             ;Wait a cycle
  00000021            01929                 count = count + 1
1203   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1204   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1205   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1206   0080           01926                 movwf INDF                                              ;Save to QUEUE
1207   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1208   0000           01928                 nop                                                             ;Wait a cycle
  00000022            01929                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1209   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
120A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120C   0080           01926                 movwf INDF                                              ;Save to QUEUE
120D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
120E   0000           01928                 nop                                                             ;Wait a cycle
  00000023            01929                 count = count + 1
120F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1210   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1211   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1212   0080           01926                 movwf INDF                                              ;Save to QUEUE
1213   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1214   0000           01928                 nop                                                             ;Wait a cycle
  00000024            01929                 count = count + 1
1215   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1216   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1217   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1218   0080           01926                 movwf INDF                                              ;Save to QUEUE
1219   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
121A   0000           01928                 nop                                                             ;Wait a cycle
  00000025            01929                 count = count + 1
121B   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
121C   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121D   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121E   0080           01926                 movwf INDF                                              ;Save to QUEUE
121F   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1220   0000           01928                 nop                                                             ;Wait a cycle
  00000026            01929                 count = count + 1
1221   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1222   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1223   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1224   0080           01926                 movwf INDF                                              ;Save to QUEUE
1225   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1226   0000           01928                 nop                                                             ;Wait a cycle
  00000027            01929                 count = count + 1
1227   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1228   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1229   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122A   0080           01926                 movwf INDF                                              ;Save to QUEUE
122B   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
122C   0000           01928                 nop                                                             ;Wait a cycle
  00000028            01929                 count = count + 1
122D   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
122E   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122F   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1230   0080           01926                 movwf INDF                                              ;Save to QUEUE
1231   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1232   0000           01928                 nop                                                             ;Wait a cycle
  00000029            01929                 count = count + 1
1233   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1234   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1235   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1236   0080           01926                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1237   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1238   0000           01928                 nop                                                             ;Wait a cycle
  0000002A            01929                 count = count + 1
1239   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
123A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123C   0080           01926                 movwf INDF                                              ;Save to QUEUE
123D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
123E   0000           01928                 nop                                                             ;Wait a cycle
  0000002B            01929                 count = count + 1
123F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1240   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1241   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1242   0080           01926                 movwf INDF                                              ;Save to QUEUE
1243   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1244   0000           01928                 nop                                                             ;Wait a cycle
  0000002C            01929                 count = count + 1
1245   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1246   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1247   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1248   0080           01926                 movwf INDF                                              ;Save to QUEUE
1249   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
124A   0000           01928                 nop                                                             ;Wait a cycle
  0000002D            01929                 count = count + 1
124B   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
124C   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124D   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124E   0080           01926                 movwf INDF                                              ;Save to QUEUE
124F   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1250   0000           01928                 nop                                                             ;Wait a cycle
  0000002E            01929                 count = count + 1
1251   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1252   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1253   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1254   0080           01926                 movwf INDF                                              ;Save to QUEUE
1255   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1256   0000           01928                 nop                                                             ;Wait a cycle
  0000002F            01929                 count = count + 1
1257   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1258   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1259   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125A   0080           01926                 movwf INDF                                              ;Save to QUEUE
125B   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
125C   0000           01928                 nop                                                             ;Wait a cycle
  00000030            01929                 count = count + 1
125D   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
125E   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125F   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1260   0080           01926                 movwf INDF                                              ;Save to QUEUE
1261   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1262   0000           01928                 nop                                                             ;Wait a cycle
  00000031            01929                 count = count + 1
1263   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1264   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1265   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1266   0080           01926                 movwf INDF                                              ;Save to QUEUE
1267   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1268   0000           01928                 nop                                                             ;Wait a cycle
  00000032            01929                 count = count + 1
1269   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
126A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126C   0080           01926                 movwf INDF                                              ;Save to QUEUE
126D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
126E   0000           01928                 nop                                                             ;Wait a cycle
  00000033            01929                 count = count + 1
126F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1270   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1271   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1272   0080           01926                 movwf INDF                                              ;Save to QUEUE
1273   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1274   0000           01928                 nop                                                             ;Wait a cycle
  00000034            01929                 count = count + 1
1275   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1276   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1277   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1278   0080           01926                 movwf INDF                                              ;Save to QUEUE
1279   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
127A   0000           01928                 nop                                                             ;Wait a cycle
  00000035            01929                 count = count + 1
127B   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
127C   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127D   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127E   0080           01926                 movwf INDF                                              ;Save to QUEUE
127F   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1280   0000           01928                 nop                                                             ;Wait a cycle
  00000036            01929                 count = count + 1
1281   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1282   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1283   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1284   0080           01926                 movwf INDF                                              ;Save to QUEUE
1285   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1286   0000           01928                 nop                                                             ;Wait a cycle
  00000037            01929                 count = count + 1
1287   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1288   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1289   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128A   0080           01926                 movwf INDF                                              ;Save to QUEUE
128B   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
128C   0000           01928                 nop                                                             ;Wait a cycle
  00000038            01929                 count = count + 1
128D   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
128E   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128F   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1290   0080           01926                 movwf INDF                                              ;Save to QUEUE
1291   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1292   0000           01928                 nop                                                             ;Wait a cycle
  00000039            01929                 count = count + 1
1293   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
1294   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1295   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1296   0080           01926                 movwf INDF                                              ;Save to QUEUE
1297   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
1298   0000           01928                 nop                                                             ;Wait a cycle
  0000003A            01929                 count = count + 1
1299   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
129A   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129B   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129C   0080           01926                 movwf INDF                                              ;Save to QUEUE
129D   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
129E   0000           01928                 nop                                                             ;Wait a cycle
  0000003B            01929                 count = count + 1
129F   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
12A0   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A1   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A2   0080           01926                 movwf INDF                                              ;Save to QUEUE
12A3   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
12A4   0000           01928                 nop                                                             ;Wait a cycle
  0000003C            01929                 count = count + 1
12A5   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
12A6   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A7   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A8   0080           01926                 movwf INDF                                              ;Save to QUEUE
12A9   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
12AA   0000           01928                 nop                                                             ;Wait a cycle
  0000003D            01929                 count = count + 1
12AB   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
12AC   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AD   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AE   0080           01926                 movwf INDF                                              ;Save to QUEUE
12AF   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
12B0   0000           01928                 nop                                                             ;Wait a cycle
  0000003E            01929                 count = count + 1
12B1   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
12B2   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B3   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B4   0080           01926                 movwf INDF                                              ;Save to QUEUE
12B5   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
12B6   0000           01928                 nop                                                             ;Wait a cycle
  0000003F            01929                 count = count + 1
12B7   0808           01923                 movf ADC_DATAPORT, W                    ;Sample
12B8   1409           01924                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B9   1009           01925                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BA   0080           01926                 movwf INDF                                              ;Save to QUEUE
12BB   0384           01927                 decf FSR, F                                             ;Increment QUEUE pointer
12BC   0000           01928                 nop                                                             ;Wait a cycle
  00000040            01929                 count = count + 1
                      01930         endw
12BD   0808           01931         movf ADC_DATAPORT, W
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12BE   1409           01932         bsf ADC_CONTROLPORT, RDD
12BF   1009           01933         bcf ADC_CONTROLPORT, RDD
12C0   0080           01934         movwf INDF
12C1   1783           01935         bsf STATUS, IRP                                         ;goto bank 4
12C2   0000           01936         nop                                                                     ;Wait a cycle
  00000001            01937         count = 1
                      01938         while count < D'44'
12C3   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12C4   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C5   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C6   0080           01942                 movwf INDF                                              ;Save to QUEUE
12C7   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12C8   0000           01944                 nop                                                             ;Wait a cycle
  00000002            01945                 count = count + 1
12C9   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12CA   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CB   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CC   0080           01942                 movwf INDF                                              ;Save to QUEUE
12CD   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12CE   0000           01944                 nop                                                             ;Wait a cycle
  00000003            01945                 count = count + 1
12CF   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12D0   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D1   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D2   0080           01942                 movwf INDF                                              ;Save to QUEUE
12D3   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12D4   0000           01944                 nop                                                             ;Wait a cycle
  00000004            01945                 count = count + 1
12D5   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12D6   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D7   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D8   0080           01942                 movwf INDF                                              ;Save to QUEUE
12D9   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12DA   0000           01944                 nop                                                             ;Wait a cycle
  00000005            01945                 count = count + 1
12DB   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12DC   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DD   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DE   0080           01942                 movwf INDF                                              ;Save to QUEUE
12DF   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12E0   0000           01944                 nop                                                             ;Wait a cycle
  00000006            01945                 count = count + 1
12E1   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12E2   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E3   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E4   0080           01942                 movwf INDF                                              ;Save to QUEUE
12E5   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12E6   0000           01944                 nop                                                             ;Wait a cycle
  00000007            01945                 count = count + 1
12E7   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12E8   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E9   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12EA   0080           01942                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12EB   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12EC   0000           01944                 nop                                                             ;Wait a cycle
  00000008            01945                 count = count + 1
12ED   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12EE   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12EF   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F0   0080           01942                 movwf INDF                                              ;Save to QUEUE
12F1   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12F2   0000           01944                 nop                                                             ;Wait a cycle
  00000009            01945                 count = count + 1
12F3   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12F4   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F5   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F6   0080           01942                 movwf INDF                                              ;Save to QUEUE
12F7   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12F8   0000           01944                 nop                                                             ;Wait a cycle
  0000000A            01945                 count = count + 1
12F9   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
12FA   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FB   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FC   0080           01942                 movwf INDF                                              ;Save to QUEUE
12FD   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
12FE   0000           01944                 nop                                                             ;Wait a cycle
  0000000B            01945                 count = count + 1
12FF   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1300   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1301   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1302   0080           01942                 movwf INDF                                              ;Save to QUEUE
1303   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1304   0000           01944                 nop                                                             ;Wait a cycle
  0000000C            01945                 count = count + 1
1305   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1306   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1307   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1308   0080           01942                 movwf INDF                                              ;Save to QUEUE
1309   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
130A   0000           01944                 nop                                                             ;Wait a cycle
  0000000D            01945                 count = count + 1
130B   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
130C   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130D   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130E   0080           01942                 movwf INDF                                              ;Save to QUEUE
130F   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1310   0000           01944                 nop                                                             ;Wait a cycle
  0000000E            01945                 count = count + 1
1311   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1312   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1313   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1314   0080           01942                 movwf INDF                                              ;Save to QUEUE
1315   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1316   0000           01944                 nop                                                             ;Wait a cycle
  0000000F            01945                 count = count + 1
1317   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1318   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1319   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131A   0080           01942                 movwf INDF                                              ;Save to QUEUE
131B   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
131C   0000           01944                 nop                                                             ;Wait a cycle
  00000010            01945                 count = count + 1
131D   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
131E   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131F   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1320   0080           01942                 movwf INDF                                              ;Save to QUEUE
1321   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1322   0000           01944                 nop                                                             ;Wait a cycle
  00000011            01945                 count = count + 1
1323   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1324   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1325   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1326   0080           01942                 movwf INDF                                              ;Save to QUEUE
1327   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1328   0000           01944                 nop                                                             ;Wait a cycle
  00000012            01945                 count = count + 1
1329   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
132A   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132B   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132C   0080           01942                 movwf INDF                                              ;Save to QUEUE
132D   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
132E   0000           01944                 nop                                                             ;Wait a cycle
  00000013            01945                 count = count + 1
132F   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1330   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1331   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1332   0080           01942                 movwf INDF                                              ;Save to QUEUE
1333   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1334   0000           01944                 nop                                                             ;Wait a cycle
  00000014            01945                 count = count + 1
1335   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1336   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1337   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1338   0080           01942                 movwf INDF                                              ;Save to QUEUE
1339   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
133A   0000           01944                 nop                                                             ;Wait a cycle
  00000015            01945                 count = count + 1
133B   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
133C   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133D   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133E   0080           01942                 movwf INDF                                              ;Save to QUEUE
133F   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1340   0000           01944                 nop                                                             ;Wait a cycle
  00000016            01945                 count = count + 1
1341   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1342   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1343   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1344   0080           01942                 movwf INDF                                              ;Save to QUEUE
1345   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1346   0000           01944                 nop                                                             ;Wait a cycle
  00000017            01945                 count = count + 1
1347   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1348   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1349   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134A   0080           01942                 movwf INDF                                              ;Save to QUEUE
134B   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
134C   0000           01944                 nop                                                             ;Wait a cycle
  00000018            01945                 count = count + 1
134D   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
134E   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134F   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1350   0080           01942                 movwf INDF                                              ;Save to QUEUE
1351   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1352   0000           01944                 nop                                                             ;Wait a cycle
  00000019            01945                 count = count + 1
1353   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1354   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1355   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1356   0080           01942                 movwf INDF                                              ;Save to QUEUE
1357   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1358   0000           01944                 nop                                                             ;Wait a cycle
  0000001A            01945                 count = count + 1
1359   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
135A   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135B   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135C   0080           01942                 movwf INDF                                              ;Save to QUEUE
135D   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
135E   0000           01944                 nop                                                             ;Wait a cycle
  0000001B            01945                 count = count + 1
135F   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1360   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1361   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1362   0080           01942                 movwf INDF                                              ;Save to QUEUE
1363   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1364   0000           01944                 nop                                                             ;Wait a cycle
  0000001C            01945                 count = count + 1
1365   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1366   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1367   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1368   0080           01942                 movwf INDF                                              ;Save to QUEUE
1369   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
136A   0000           01944                 nop                                                             ;Wait a cycle
  0000001D            01945                 count = count + 1
136B   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
136C   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136D   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136E   0080           01942                 movwf INDF                                              ;Save to QUEUE
136F   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1370   0000           01944                 nop                                                             ;Wait a cycle
  0000001E            01945                 count = count + 1
1371   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1372   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1373   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1374   0080           01942                 movwf INDF                                              ;Save to QUEUE
1375   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1376   0000           01944                 nop                                                             ;Wait a cycle
  0000001F            01945                 count = count + 1
1377   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1378   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1379   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137A   0080           01942                 movwf INDF                                              ;Save to QUEUE
137B   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
137C   0000           01944                 nop                                                             ;Wait a cycle
  00000020            01945                 count = count + 1
137D   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
137E   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137F   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1380   0080           01942                 movwf INDF                                              ;Save to QUEUE
1381   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1382   0000           01944                 nop                                                             ;Wait a cycle
  00000021            01945                 count = count + 1
1383   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1384   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1385   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1386   0080           01942                 movwf INDF                                              ;Save to QUEUE
1387   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1388   0000           01944                 nop                                                             ;Wait a cycle
  00000022            01945                 count = count + 1
1389   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
138A   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138B   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138C   0080           01942                 movwf INDF                                              ;Save to QUEUE
138D   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
138E   0000           01944                 nop                                                             ;Wait a cycle
  00000023            01945                 count = count + 1
138F   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1390   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1391   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1392   0080           01942                 movwf INDF                                              ;Save to QUEUE
1393   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
1394   0000           01944                 nop                                                             ;Wait a cycle
  00000024            01945                 count = count + 1
1395   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
1396   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1397   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1398   0080           01942                 movwf INDF                                              ;Save to QUEUE
1399   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
139A   0000           01944                 nop                                                             ;Wait a cycle
  00000025            01945                 count = count + 1
139B   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
139C   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139D   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139E   0080           01942                 movwf INDF                                              ;Save to QUEUE
139F   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13A0   0000           01944                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            01945                 count = count + 1
13A1   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13A2   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A3   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A4   0080           01942                 movwf INDF                                              ;Save to QUEUE
13A5   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13A6   0000           01944                 nop                                                             ;Wait a cycle
  00000027            01945                 count = count + 1
13A7   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13A8   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A9   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AA   0080           01942                 movwf INDF                                              ;Save to QUEUE
13AB   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13AC   0000           01944                 nop                                                             ;Wait a cycle
  00000028            01945                 count = count + 1
13AD   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13AE   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AF   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B0   0080           01942                 movwf INDF                                              ;Save to QUEUE
13B1   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13B2   0000           01944                 nop                                                             ;Wait a cycle
  00000029            01945                 count = count + 1
13B3   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13B4   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B5   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B6   0080           01942                 movwf INDF                                              ;Save to QUEUE
13B7   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13B8   0000           01944                 nop                                                             ;Wait a cycle
  0000002A            01945                 count = count + 1
13B9   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13BA   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BB   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BC   0080           01942                 movwf INDF                                              ;Save to QUEUE
13BD   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13BE   0000           01944                 nop                                                             ;Wait a cycle
  0000002B            01945                 count = count + 1
13BF   0808           01939                 movf ADC_DATAPORT, W                    ;Sample
13C0   1409           01940                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C1   1009           01941                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C2   0080           01942                 movwf INDF                                              ;Save to QUEUE
13C3   0A84           01943                 incf FSR, F                                             ;Increment QUEUE pointer
13C4   0000           01944                 nop                                                             ;Wait a cycle
  0000002C            01945                 count = count + 1
                      01946         endw
13C5                  01947 Sample833kEnd
                      01948         while count < BUFFERSIZE
13C5   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13C6   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C7   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C8   0080           01952                 movwf INDF                                              ;Save to QUEUE
13C9   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13CA   0000           01954                 nop                                                             ;Wait a cycle
  0000002D            01955                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13CB   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13CC   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CD   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CE   0080           01952                 movwf INDF                                              ;Save to QUEUE
13CF   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13D0   0000           01954                 nop                                                             ;Wait a cycle
  0000002E            01955                 count = count + 1
13D1   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13D2   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D3   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D4   0080           01952                 movwf INDF                                              ;Save to QUEUE
13D5   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13D6   0000           01954                 nop                                                             ;Wait a cycle
  0000002F            01955                 count = count + 1
13D7   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13D8   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D9   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DA   0080           01952                 movwf INDF                                              ;Save to QUEUE
13DB   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13DC   0000           01954                 nop                                                             ;Wait a cycle
  00000030            01955                 count = count + 1
13DD   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13DE   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DF   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E0   0080           01952                 movwf INDF                                              ;Save to QUEUE
13E1   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13E2   0000           01954                 nop                                                             ;Wait a cycle
  00000031            01955                 count = count + 1
13E3   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13E4   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E5   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E6   0080           01952                 movwf INDF                                              ;Save to QUEUE
13E7   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13E8   0000           01954                 nop                                                             ;Wait a cycle
  00000032            01955                 count = count + 1
13E9   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13EA   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EB   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EC   0080           01952                 movwf INDF                                              ;Save to QUEUE
13ED   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13EE   0000           01954                 nop                                                             ;Wait a cycle
  00000033            01955                 count = count + 1
13EF   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13F0   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F1   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F2   0080           01952                 movwf INDF                                              ;Save to QUEUE
13F3   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13F4   0000           01954                 nop                                                             ;Wait a cycle
  00000034            01955                 count = count + 1
13F5   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13F6   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F7   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F8   0080           01952                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13F9   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
13FA   0000           01954                 nop                                                             ;Wait a cycle
  00000035            01955                 count = count + 1
13FB   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
13FC   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FD   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FE   0080           01952                 movwf INDF                                              ;Save to QUEUE
13FF   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1400   0000           01954                 nop                                                             ;Wait a cycle
  00000036            01955                 count = count + 1
1401   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1402   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1403   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1404   0080           01952                 movwf INDF                                              ;Save to QUEUE
1405   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1406   0000           01954                 nop                                                             ;Wait a cycle
  00000037            01955                 count = count + 1
1407   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1408   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1409   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140A   0080           01952                 movwf INDF                                              ;Save to QUEUE
140B   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
140C   0000           01954                 nop                                                             ;Wait a cycle
  00000038            01955                 count = count + 1
140D   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
140E   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140F   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1410   0080           01952                 movwf INDF                                              ;Save to QUEUE
1411   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1412   0000           01954                 nop                                                             ;Wait a cycle
  00000039            01955                 count = count + 1
1413   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1414   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1415   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1416   0080           01952                 movwf INDF                                              ;Save to QUEUE
1417   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1418   0000           01954                 nop                                                             ;Wait a cycle
  0000003A            01955                 count = count + 1
1419   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
141A   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141B   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141C   0080           01952                 movwf INDF                                              ;Save to QUEUE
141D   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
141E   0000           01954                 nop                                                             ;Wait a cycle
  0000003B            01955                 count = count + 1
141F   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1420   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1421   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1422   0080           01952                 movwf INDF                                              ;Save to QUEUE
1423   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1424   0000           01954                 nop                                                             ;Wait a cycle
  0000003C            01955                 count = count + 1
1425   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1426   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1427   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1428   0080           01952                 movwf INDF                                              ;Save to QUEUE
1429   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
142A   0000           01954                 nop                                                             ;Wait a cycle
  0000003D            01955                 count = count + 1
142B   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
142C   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142D   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142E   0080           01952                 movwf INDF                                              ;Save to QUEUE
142F   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1430   0000           01954                 nop                                                             ;Wait a cycle
  0000003E            01955                 count = count + 1
1431   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1432   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1433   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1434   0080           01952                 movwf INDF                                              ;Save to QUEUE
1435   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
1436   0000           01954                 nop                                                             ;Wait a cycle
  0000003F            01955                 count = count + 1
1437   0808           01949                 movf ADC_DATAPORT, W                    ;Sample
1438   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1439   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143A   0080           01952                 movwf INDF                                              ;Save to QUEUE
143B   0A84           01953                 incf FSR, F                                             ;Increment QUEUE pointer
143C   0000           01954                 nop                                                             ;Wait a cycle
  00000040            01955                 count = count + 1
                      01956         endw
143D   0808           01957         movf ADC_DATAPORT, W
143E   1409           01958         bsf ADC_CONTROLPORT, RDD
143F   1009           01959         bcf ADC_CONTROLPORT, RDD
1440   0080           01960         movwf INDF
1441   1384           01961         bcf FSR, 7                                                      ;goto bank 3
1442   0000           01962         nop                                                                     ;Wait a cycle
  00000001            01963         count = 1
                      01964         while count < BUFFERSIZE
1443   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1444   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1445   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1446   0080           01968                 movwf INDF                                              ;Save to QUEUE
1447   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1448   0000           01970                 nop                                                             ;Wait a cycle
  00000002            01971                 count = count + 1
1449   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
144A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144C   0080           01968                 movwf INDF                                              ;Save to QUEUE
144D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
144E   0000           01970                 nop                                                             ;Wait a cycle
  00000003            01971                 count = count + 1
144F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1450   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1451   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1452   0080           01968                 movwf INDF                                              ;Save to QUEUE
1453   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1454   0000           01970                 nop                                                             ;Wait a cycle
  00000004            01971                 count = count + 1
1455   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1456   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1457   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1458   0080           01968                 movwf INDF                                              ;Save to QUEUE
1459   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
145A   0000           01970                 nop                                                             ;Wait a cycle
  00000005            01971                 count = count + 1
145B   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
145C   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145D   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145E   0080           01968                 movwf INDF                                              ;Save to QUEUE
145F   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1460   0000           01970                 nop                                                             ;Wait a cycle
  00000006            01971                 count = count + 1
1461   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1462   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1463   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1464   0080           01968                 movwf INDF                                              ;Save to QUEUE
1465   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1466   0000           01970                 nop                                                             ;Wait a cycle
  00000007            01971                 count = count + 1
1467   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1468   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1469   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146A   0080           01968                 movwf INDF                                              ;Save to QUEUE
146B   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
146C   0000           01970                 nop                                                             ;Wait a cycle
  00000008            01971                 count = count + 1
146D   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
146E   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146F   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1470   0080           01968                 movwf INDF                                              ;Save to QUEUE
1471   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1472   0000           01970                 nop                                                             ;Wait a cycle
  00000009            01971                 count = count + 1
1473   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1474   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1475   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1476   0080           01968                 movwf INDF                                              ;Save to QUEUE
1477   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1478   0000           01970                 nop                                                             ;Wait a cycle
  0000000A            01971                 count = count + 1
1479   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
147A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147C   0080           01968                 movwf INDF                                              ;Save to QUEUE
147D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
147E   0000           01970                 nop                                                             ;Wait a cycle
  0000000B            01971                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

147F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1480   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1481   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1482   0080           01968                 movwf INDF                                              ;Save to QUEUE
1483   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1484   0000           01970                 nop                                                             ;Wait a cycle
  0000000C            01971                 count = count + 1
1485   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1486   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1487   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1488   0080           01968                 movwf INDF                                              ;Save to QUEUE
1489   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
148A   0000           01970                 nop                                                             ;Wait a cycle
  0000000D            01971                 count = count + 1
148B   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
148C   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148D   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148E   0080           01968                 movwf INDF                                              ;Save to QUEUE
148F   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1490   0000           01970                 nop                                                             ;Wait a cycle
  0000000E            01971                 count = count + 1
1491   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1492   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1493   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1494   0080           01968                 movwf INDF                                              ;Save to QUEUE
1495   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1496   0000           01970                 nop                                                             ;Wait a cycle
  0000000F            01971                 count = count + 1
1497   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1498   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1499   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149A   0080           01968                 movwf INDF                                              ;Save to QUEUE
149B   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
149C   0000           01970                 nop                                                             ;Wait a cycle
  00000010            01971                 count = count + 1
149D   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
149E   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149F   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A0   0080           01968                 movwf INDF                                              ;Save to QUEUE
14A1   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14A2   0000           01970                 nop                                                             ;Wait a cycle
  00000011            01971                 count = count + 1
14A3   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14A4   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A5   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A6   0080           01968                 movwf INDF                                              ;Save to QUEUE
14A7   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14A8   0000           01970                 nop                                                             ;Wait a cycle
  00000012            01971                 count = count + 1
14A9   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14AA   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AB   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AC   0080           01968                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14AD   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14AE   0000           01970                 nop                                                             ;Wait a cycle
  00000013            01971                 count = count + 1
14AF   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14B0   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B1   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B2   0080           01968                 movwf INDF                                              ;Save to QUEUE
14B3   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14B4   0000           01970                 nop                                                             ;Wait a cycle
  00000014            01971                 count = count + 1
14B5   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14B6   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B7   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B8   0080           01968                 movwf INDF                                              ;Save to QUEUE
14B9   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14BA   0000           01970                 nop                                                             ;Wait a cycle
  00000015            01971                 count = count + 1
14BB   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14BC   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BD   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BE   0080           01968                 movwf INDF                                              ;Save to QUEUE
14BF   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14C0   0000           01970                 nop                                                             ;Wait a cycle
  00000016            01971                 count = count + 1
14C1   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14C2   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C3   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C4   0080           01968                 movwf INDF                                              ;Save to QUEUE
14C5   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14C6   0000           01970                 nop                                                             ;Wait a cycle
  00000017            01971                 count = count + 1
14C7   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14C8   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C9   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CA   0080           01968                 movwf INDF                                              ;Save to QUEUE
14CB   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14CC   0000           01970                 nop                                                             ;Wait a cycle
  00000018            01971                 count = count + 1
14CD   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14CE   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CF   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D0   0080           01968                 movwf INDF                                              ;Save to QUEUE
14D1   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14D2   0000           01970                 nop                                                             ;Wait a cycle
  00000019            01971                 count = count + 1
14D3   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14D4   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D5   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D6   0080           01968                 movwf INDF                                              ;Save to QUEUE
14D7   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14D8   0000           01970                 nop                                                             ;Wait a cycle
  0000001A            01971                 count = count + 1
14D9   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14DA   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DB   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DC   0080           01968                 movwf INDF                                              ;Save to QUEUE
14DD   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14DE   0000           01970                 nop                                                             ;Wait a cycle
  0000001B            01971                 count = count + 1
14DF   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14E0   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E1   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E2   0080           01968                 movwf INDF                                              ;Save to QUEUE
14E3   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14E4   0000           01970                 nop                                                             ;Wait a cycle
  0000001C            01971                 count = count + 1
14E5   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14E6   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E7   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E8   0080           01968                 movwf INDF                                              ;Save to QUEUE
14E9   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14EA   0000           01970                 nop                                                             ;Wait a cycle
  0000001D            01971                 count = count + 1
14EB   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14EC   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14ED   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EE   0080           01968                 movwf INDF                                              ;Save to QUEUE
14EF   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14F0   0000           01970                 nop                                                             ;Wait a cycle
  0000001E            01971                 count = count + 1
14F1   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14F2   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F3   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F4   0080           01968                 movwf INDF                                              ;Save to QUEUE
14F5   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14F6   0000           01970                 nop                                                             ;Wait a cycle
  0000001F            01971                 count = count + 1
14F7   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14F8   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F9   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FA   0080           01968                 movwf INDF                                              ;Save to QUEUE
14FB   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
14FC   0000           01970                 nop                                                             ;Wait a cycle
  00000020            01971                 count = count + 1
14FD   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
14FE   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FF   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1500   0080           01968                 movwf INDF                                              ;Save to QUEUE
1501   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1502   0000           01970                 nop                                                             ;Wait a cycle
  00000021            01971                 count = count + 1
1503   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1504   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1505   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1506   0080           01968                 movwf INDF                                              ;Save to QUEUE
1507   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1508   0000           01970                 nop                                                             ;Wait a cycle
  00000022            01971                 count = count + 1
1509   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
150A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150C   0080           01968                 movwf INDF                                              ;Save to QUEUE
150D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
150E   0000           01970                 nop                                                             ;Wait a cycle
  00000023            01971                 count = count + 1
150F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1510   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1511   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1512   0080           01968                 movwf INDF                                              ;Save to QUEUE
1513   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1514   0000           01970                 nop                                                             ;Wait a cycle
  00000024            01971                 count = count + 1
1515   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1516   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1517   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1518   0080           01968                 movwf INDF                                              ;Save to QUEUE
1519   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
151A   0000           01970                 nop                                                             ;Wait a cycle
  00000025            01971                 count = count + 1
151B   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
151C   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151D   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151E   0080           01968                 movwf INDF                                              ;Save to QUEUE
151F   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1520   0000           01970                 nop                                                             ;Wait a cycle
  00000026            01971                 count = count + 1
1521   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1522   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1523   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1524   0080           01968                 movwf INDF                                              ;Save to QUEUE
1525   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1526   0000           01970                 nop                                                             ;Wait a cycle
  00000027            01971                 count = count + 1
1527   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1528   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1529   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152A   0080           01968                 movwf INDF                                              ;Save to QUEUE
152B   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
152C   0000           01970                 nop                                                             ;Wait a cycle
  00000028            01971                 count = count + 1
152D   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
152E   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152F   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1530   0080           01968                 movwf INDF                                              ;Save to QUEUE
1531   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1532   0000           01970                 nop                                                             ;Wait a cycle
  00000029            01971                 count = count + 1
1533   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1534   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1535   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1536   0080           01968                 movwf INDF                                              ;Save to QUEUE
1537   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1538   0000           01970                 nop                                                             ;Wait a cycle
  0000002A            01971                 count = count + 1
1539   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
153A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153C   0080           01968                 movwf INDF                                              ;Save to QUEUE
153D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
153E   0000           01970                 nop                                                             ;Wait a cycle
  0000002B            01971                 count = count + 1
153F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1540   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1541   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1542   0080           01968                 movwf INDF                                              ;Save to QUEUE
1543   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1544   0000           01970                 nop                                                             ;Wait a cycle
  0000002C            01971                 count = count + 1
1545   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1546   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1547   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1548   0080           01968                 movwf INDF                                              ;Save to QUEUE
1549   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
154A   0000           01970                 nop                                                             ;Wait a cycle
  0000002D            01971                 count = count + 1
154B   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
154C   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154D   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154E   0080           01968                 movwf INDF                                              ;Save to QUEUE
154F   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1550   0000           01970                 nop                                                             ;Wait a cycle
  0000002E            01971                 count = count + 1
1551   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1552   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1553   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1554   0080           01968                 movwf INDF                                              ;Save to QUEUE
1555   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1556   0000           01970                 nop                                                             ;Wait a cycle
  0000002F            01971                 count = count + 1
1557   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1558   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1559   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155A   0080           01968                 movwf INDF                                              ;Save to QUEUE
155B   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
155C   0000           01970                 nop                                                             ;Wait a cycle
  00000030            01971                 count = count + 1
155D   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
155E   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155F   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1560   0080           01968                 movwf INDF                                              ;Save to QUEUE
1561   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1562   0000           01970                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000031            01971                 count = count + 1
1563   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1564   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1565   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1566   0080           01968                 movwf INDF                                              ;Save to QUEUE
1567   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1568   0000           01970                 nop                                                             ;Wait a cycle
  00000032            01971                 count = count + 1
1569   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
156A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156C   0080           01968                 movwf INDF                                              ;Save to QUEUE
156D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
156E   0000           01970                 nop                                                             ;Wait a cycle
  00000033            01971                 count = count + 1
156F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1570   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1571   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1572   0080           01968                 movwf INDF                                              ;Save to QUEUE
1573   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1574   0000           01970                 nop                                                             ;Wait a cycle
  00000034            01971                 count = count + 1
1575   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1576   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1577   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1578   0080           01968                 movwf INDF                                              ;Save to QUEUE
1579   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
157A   0000           01970                 nop                                                             ;Wait a cycle
  00000035            01971                 count = count + 1
157B   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
157C   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157D   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157E   0080           01968                 movwf INDF                                              ;Save to QUEUE
157F   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1580   0000           01970                 nop                                                             ;Wait a cycle
  00000036            01971                 count = count + 1
1581   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1582   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1583   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1584   0080           01968                 movwf INDF                                              ;Save to QUEUE
1585   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1586   0000           01970                 nop                                                             ;Wait a cycle
  00000037            01971                 count = count + 1
1587   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1588   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1589   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158A   0080           01968                 movwf INDF                                              ;Save to QUEUE
158B   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
158C   0000           01970                 nop                                                             ;Wait a cycle
  00000038            01971                 count = count + 1
158D   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
158E   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158F   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1590   0080           01968                 movwf INDF                                              ;Save to QUEUE
1591   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1592   0000           01970                 nop                                                             ;Wait a cycle
  00000039            01971                 count = count + 1
1593   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
1594   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1595   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1596   0080           01968                 movwf INDF                                              ;Save to QUEUE
1597   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
1598   0000           01970                 nop                                                             ;Wait a cycle
  0000003A            01971                 count = count + 1
1599   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
159A   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159B   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159C   0080           01968                 movwf INDF                                              ;Save to QUEUE
159D   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
159E   0000           01970                 nop                                                             ;Wait a cycle
  0000003B            01971                 count = count + 1
159F   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
15A0   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A1   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A2   0080           01968                 movwf INDF                                              ;Save to QUEUE
15A3   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
15A4   0000           01970                 nop                                                             ;Wait a cycle
  0000003C            01971                 count = count + 1
15A5   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
15A6   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A7   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A8   0080           01968                 movwf INDF                                              ;Save to QUEUE
15A9   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
15AA   0000           01970                 nop                                                             ;Wait a cycle
  0000003D            01971                 count = count + 1
15AB   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
15AC   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AD   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AE   0080           01968                 movwf INDF                                              ;Save to QUEUE
15AF   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
15B0   0000           01970                 nop                                                             ;Wait a cycle
  0000003E            01971                 count = count + 1
15B1   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
15B2   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B3   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B4   0080           01968                 movwf INDF                                              ;Save to QUEUE
15B5   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
15B6   0000           01970                 nop                                                             ;Wait a cycle
  0000003F            01971                 count = count + 1
15B7   0808           01965                 movf ADC_DATAPORT, W                    ;Sample
15B8   1409           01966                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B9   1009           01967                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BA   0080           01968                 movwf INDF                                              ;Save to QUEUE
15BB   0384           01969                 decf FSR, F                                             ;Increment QUEUE pointer
15BC   0000           01970                 nop                                                             ;Wait a cycle
  00000040            01971                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01972         endw
15BD   0808           01973         movf ADC_DATAPORT, W                            ;Last sample
15BE   1409           01974         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15BF   118A           01975         bcf PCLATH, 3                                           ;insure correct program memory page
15C0   120A           01976         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
15C1   2917           01977         goto ADCShutdown
                      01978 
                      01979 ;Repetitive sample
                      01980 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      01981 ;-----------------------------------------------------------------------------
15C2                  01982 SampleRep5M
15C2   3015           01983         movlw high SampleRep5MPickSt
15C3   008A           01984         movwf PCLATH
15C4   0877           01985         movf gbl_modetempb, w
15C5   0782           01986         addwf PCL, f
15C6                  01987 SampleRep5MPickSt
                      01988         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
15C6   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15C7   118A               M                 bcf PCLATH, 3
                          M         endif
15C8   2DD5               M         goto SampleRep5MStep1
                      01989         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
15C9   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15CA   118A               M                 bcf PCLATH, 3
                          M         endif
15CB   2EE5               M         goto SampleRep5MStep2
                      01990         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
15CC   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15CD   118A               M                 bcf PCLATH, 3
                          M         endif
15CE   2FE8               M         goto SampleRep5MStep3
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01991         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
15CF   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
15D0   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15D1   28EB               M         goto SampleRep5MStep4
                      01992         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
15D2   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
15D3   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15D4   29EF               M         goto SampleRep5MStep5
15D5                  01993 SampleRep5MPickEn
15D5                  01994 SampleRep5MStep1
15D5   1009           01995         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01996         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
15D6   3020               M     movlw BUFFERMIN
15D7   0084               M     movwf FSR
15D8   0000           01997         nop
  0000                01998         local count
  00000001            01999         count = 1
                      02000         while count < D'52'
15D9   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15DA   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15DB   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15DC   0080           02004                 movwf INDF                                              ;Save to QUEUE
15DD   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02006                 count = count + 1
15DE   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15DF   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E0   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15E1   0080           02004                 movwf INDF                                              ;Save to QUEUE
15E2   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02006                 count = count + 1
15E3   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E4   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E5   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15E6   0080           02004                 movwf INDF                                              ;Save to QUEUE
15E7   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            02006                 count = count + 1
15E8   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E9   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EA   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15EB   0080           02004                 movwf INDF                                              ;Save to QUEUE
15EC   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02006                 count = count + 1
15ED   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15EE   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EF   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15F0   0080           02004                 movwf INDF                                              ;Save to QUEUE
15F1   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02006                 count = count + 1
15F2   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F3   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F4   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15F5   0080           02004                 movwf INDF                                              ;Save to QUEUE
15F6   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02006                 count = count + 1
15F7   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F8   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F9   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15FA   0080           02004                 movwf INDF                                              ;Save to QUEUE
15FB   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02006                 count = count + 1
15FC   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FD   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15FE   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
15FF   0080           02004                 movwf INDF                                              ;Save to QUEUE
1600   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02006                 count = count + 1
1601   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1602   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1603   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1604   0080           02004                 movwf INDF                                              ;Save to QUEUE
1605   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02006                 count = count + 1
1606   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1607   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1608   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1609   0080           02004                 movwf INDF                                              ;Save to QUEUE
160A   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02006                 count = count + 1
160B   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
160C   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160D   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
160E   0080           02004                 movwf INDF                                              ;Save to QUEUE
160F   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02006                 count = count + 1
1610   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1611   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1612   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1613   0080           02004                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1614   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02006                 count = count + 1
1615   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1616   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1617   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1618   0080           02004                 movwf INDF                                              ;Save to QUEUE
1619   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02006                 count = count + 1
161A   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
161B   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
161C   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
161D   0080           02004                 movwf INDF                                              ;Save to QUEUE
161E   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02006                 count = count + 1
161F   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1620   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1621   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1622   0080           02004                 movwf INDF                                              ;Save to QUEUE
1623   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02006                 count = count + 1
1624   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1625   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1626   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1627   0080           02004                 movwf INDF                                              ;Save to QUEUE
1628   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02006                 count = count + 1
1629   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162A   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
162B   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
162C   0080           02004                 movwf INDF                                              ;Save to QUEUE
162D   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02006                 count = count + 1
162E   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162F   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1630   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1631   0080           02004                 movwf INDF                                              ;Save to QUEUE
1632   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02006                 count = count + 1
1633   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1634   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1635   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1636   0080           02004                 movwf INDF                                              ;Save to QUEUE
1637   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02006                 count = count + 1
1638   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1639   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163A   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
163B   0080           02004                 movwf INDF                                              ;Save to QUEUE
163C   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02006                 count = count + 1
163D   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
163E   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163F   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1640   0080           02004                 movwf INDF                                              ;Save to QUEUE
1641   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02006                 count = count + 1
1642   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1643   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1644   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1645   0080           02004                 movwf INDF                                              ;Save to QUEUE
1646   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02006                 count = count + 1
1647   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1648   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1649   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
164A   0080           02004                 movwf INDF                                              ;Save to QUEUE
164B   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02006                 count = count + 1
164C   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164D   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
164E   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
164F   0080           02004                 movwf INDF                                              ;Save to QUEUE
1650   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02006                 count = count + 1
1651   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1652   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1653   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1654   0080           02004                 movwf INDF                                              ;Save to QUEUE
1655   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02006                 count = count + 1
1656   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1657   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1658   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1659   0080           02004                 movwf INDF                                              ;Save to QUEUE
165A   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02006                 count = count + 1
165B   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
165C   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165D   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
165E   0080           02004                 movwf INDF                                              ;Save to QUEUE
165F   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02006                 count = count + 1
1660   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1661   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1662   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1663   0080           02004                 movwf INDF                                              ;Save to QUEUE
1664   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02006                 count = count + 1
1665   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1666   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1667   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1668   0080           02004                 movwf INDF                                              ;Save to QUEUE
1669   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02006                 count = count + 1
166A   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
166B   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

166C   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
166D   0080           02004                 movwf INDF                                              ;Save to QUEUE
166E   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02006                 count = count + 1
166F   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1670   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1671   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1672   0080           02004                 movwf INDF                                              ;Save to QUEUE
1673   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02006                 count = count + 1
1674   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1675   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1676   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1677   0080           02004                 movwf INDF                                              ;Save to QUEUE
1678   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02006                 count = count + 1
1679   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167A   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
167B   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
167C   0080           02004                 movwf INDF                                              ;Save to QUEUE
167D   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02006                 count = count + 1
167E   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167F   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1680   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1681   0080           02004                 movwf INDF                                              ;Save to QUEUE
1682   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02006                 count = count + 1
1683   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1684   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1685   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1686   0080           02004                 movwf INDF                                              ;Save to QUEUE
1687   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02006                 count = count + 1
1688   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1689   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168A   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
168B   0080           02004                 movwf INDF                                              ;Save to QUEUE
168C   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02006                 count = count + 1
168D   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
168E   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168F   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1690   0080           02004                 movwf INDF                                              ;Save to QUEUE
1691   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02006                 count = count + 1
1692   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1693   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1694   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
1695   0080           02004                 movwf INDF                                              ;Save to QUEUE
1696   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02006                 count = count + 1
1697   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1698   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1699   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
169A   0080           02004                 movwf INDF                                              ;Save to QUEUE
169B   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02006                 count = count + 1
169C   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169D   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
169E   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
169F   0080           02004                 movwf INDF                                              ;Save to QUEUE
16A0   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02006                 count = count + 1
16A1   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A2   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A3   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16A4   0080           02004                 movwf INDF                                              ;Save to QUEUE
16A5   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02006                 count = count + 1
16A6   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A7   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A8   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16A9   0080           02004                 movwf INDF                                              ;Save to QUEUE
16AA   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02006                 count = count + 1
16AB   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16AC   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AD   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16AE   0080           02004                 movwf INDF                                              ;Save to QUEUE
16AF   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02006                 count = count + 1
16B0   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B1   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B2   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16B3   0080           02004                 movwf INDF                                              ;Save to QUEUE
16B4   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02006                 count = count + 1
16B5   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B6   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B7   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16B8   0080           02004                 movwf INDF                                              ;Save to QUEUE
16B9   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02006                 count = count + 1
16BA   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BB   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BC   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16BD   0080           02004                 movwf INDF                                              ;Save to QUEUE
16BE   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02006                 count = count + 1
16BF   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C0   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C1   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16C2   0080           02004                 movwf INDF                                              ;Save to QUEUE
16C3   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02006                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16C4   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C5   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C6   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16C7   0080           02004                 movwf INDF                                              ;Save to QUEUE
16C8   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02006                 count = count + 1
16C9   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CA   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CB   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16CC   0080           02004                 movwf INDF                                              ;Save to QUEUE
16CD   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02006                 count = count + 1
16CE   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CF   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D0   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16D1   0080           02004                 movwf INDF                                              ;Save to QUEUE
16D2   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02006                 count = count + 1
16D3   1409           02001                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D4   1009           02002                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D5   0808           02003                 movf ADC_DATAPORT, W                    ;Save Sample
16D6   0080           02004                 movwf INDF                                              ;Save to QUEUE
16D7   0A84           02005                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02006                 count = count + 1
                      02007         endw
16D8   1409           02008         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16D9   0808           02009         movf ADC_DATAPORT, W                            ;Sample
16DA                  02010 SampleRep5MEndA
16DA   0080           02011         movwf INDF
16DB   0A84           02012         incf FSR, F
16DC   2EDF           02013         goto SampleRep5MEndB
16DD                  02014 SampleRep5MEndC
16DD   0080           02015         movwf INDF
16DE   0384           02016         decf FSR, F
16DF                  02017 SampleRep5MEndB
                      02018         ADDLF D'3', gbl_modetempb, f
16DF   3003               M     movlw D'3'
16E0   07F7               M     addwf gbl_modetempb, f
16E1   1486           02019         bsf ADC_PORT, CS
                      02020         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
16E2   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16E3   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16E4   287F               M         goto MainB
                      02021         
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16E5                  02022 SampleRep5MStep2
16E5   0000           02023         nop
16E6   1009           02024         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
16E7   2EE8           02025         goto $ + 1
16E8   0000           02026         nop
  0000                02027         local count
  00000001            02028         count = 1
                      02029         while count < D'12'
16E9   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16EA   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16EB   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
16EC   0080           02033                 movwf INDF                                              ;Save to QUEUE
16ED   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02035                 count = count + 1
16EE   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16EF   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F0   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
16F1   0080           02033                 movwf INDF                                              ;Save to QUEUE
16F2   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02035                 count = count + 1
16F3   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F4   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F5   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
16F6   0080           02033                 movwf INDF                                              ;Save to QUEUE
16F7   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02035                 count = count + 1
16F8   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F9   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FA   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
16FB   0080           02033                 movwf INDF                                              ;Save to QUEUE
16FC   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02035                 count = count + 1
16FD   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FE   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FF   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
1700   0080           02033                 movwf INDF                                              ;Save to QUEUE
1701   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02035                 count = count + 1
1702   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1703   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1704   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
1705   0080           02033                 movwf INDF                                              ;Save to QUEUE
1706   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02035                 count = count + 1
1707   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1708   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1709   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
170A   0080           02033                 movwf INDF                                              ;Save to QUEUE
170B   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02035                 count = count + 1
170C   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170D   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
170E   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

170F   0080           02033                 movwf INDF                                              ;Save to QUEUE
1710   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02035                 count = count + 1
1711   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1712   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1713   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
1714   0080           02033                 movwf INDF                                              ;Save to QUEUE
1715   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02035                 count = count + 1
1716   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1717   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1718   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
1719   0080           02033                 movwf INDF                                              ;Save to QUEUE
171A   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02035                 count = count + 1
171B   1409           02030                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171C   1009           02031                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171D   0808           02032                 movf ADC_DATAPORT, W                    ;Save Sample
171E   0080           02033                 movwf INDF                                              ;Save to QUEUE
171F   0A84           02034                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02035                 count = count + 1
                      02036         endw
1720   1409           02037         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1721   1009           02038         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1722   0808           02039         movf ADC_DATAPORT, W                            ;Sample
1723   0080           02040         movwf INDF
1724   1784           02041         bsf FSR, 7                                                      ;goto bank 2
  00000001            02042         count = 1
                      02043         while count < D'39'
1725   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1726   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1727   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1728   0080           02047                 movwf INDF                                              ;Save to QUEUE
1729   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02049                 count = count + 1
172A   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
172B   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
172C   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
172D   0080           02047                 movwf INDF                                              ;Save to QUEUE
172E   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02049                 count = count + 1
172F   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1730   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1731   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1732   0080           02047                 movwf INDF                                              ;Save to QUEUE
1733   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02049                 count = count + 1
1734   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1735   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1736   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1737   0080           02047                 movwf INDF                                              ;Save to QUEUE
1738   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02049                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1739   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173A   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
173B   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
173C   0080           02047                 movwf INDF                                              ;Save to QUEUE
173D   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02049                 count = count + 1
173E   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173F   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1740   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1741   0080           02047                 movwf INDF                                              ;Save to QUEUE
1742   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02049                 count = count + 1
1743   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1744   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1745   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1746   0080           02047                 movwf INDF                                              ;Save to QUEUE
1747   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02049                 count = count + 1
1748   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1749   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174A   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
174B   0080           02047                 movwf INDF                                              ;Save to QUEUE
174C   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02049                 count = count + 1
174D   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174E   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174F   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1750   0080           02047                 movwf INDF                                              ;Save to QUEUE
1751   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02049                 count = count + 1
1752   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1753   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1754   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1755   0080           02047                 movwf INDF                                              ;Save to QUEUE
1756   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02049                 count = count + 1
1757   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1758   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1759   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
175A   0080           02047                 movwf INDF                                              ;Save to QUEUE
175B   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02049                 count = count + 1
175C   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175D   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175E   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
175F   0080           02047                 movwf INDF                                              ;Save to QUEUE
1760   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02049                 count = count + 1
1761   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1762   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1763   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1764   0080           02047                 movwf INDF                                              ;Save to QUEUE
1765   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            02049                 count = count + 1
1766   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1767   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1768   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1769   0080           02047                 movwf INDF                                              ;Save to QUEUE
176A   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02049                 count = count + 1
176B   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176C   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176D   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
176E   0080           02047                 movwf INDF                                              ;Save to QUEUE
176F   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02049                 count = count + 1
1770   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1771   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1772   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1773   0080           02047                 movwf INDF                                              ;Save to QUEUE
1774   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02049                 count = count + 1
1775   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1776   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1777   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1778   0080           02047                 movwf INDF                                              ;Save to QUEUE
1779   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02049                 count = count + 1
177A   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177B   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177C   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
177D   0080           02047                 movwf INDF                                              ;Save to QUEUE
177E   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02049                 count = count + 1
177F   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1780   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1781   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1782   0080           02047                 movwf INDF                                              ;Save to QUEUE
1783   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02049                 count = count + 1
1784   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1785   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1786   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1787   0080           02047                 movwf INDF                                              ;Save to QUEUE
1788   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02049                 count = count + 1
1789   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178A   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178B   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
178C   0080           02047                 movwf INDF                                              ;Save to QUEUE
178D   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02049                 count = count + 1
178E   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178F   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1790   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1791   0080           02047                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1792   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02049                 count = count + 1
1793   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1794   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1795   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
1796   0080           02047                 movwf INDF                                              ;Save to QUEUE
1797   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02049                 count = count + 1
1798   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1799   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179A   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
179B   0080           02047                 movwf INDF                                              ;Save to QUEUE
179C   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02049                 count = count + 1
179D   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179E   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179F   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17A0   0080           02047                 movwf INDF                                              ;Save to QUEUE
17A1   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02049                 count = count + 1
17A2   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A3   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A4   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17A5   0080           02047                 movwf INDF                                              ;Save to QUEUE
17A6   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02049                 count = count + 1
17A7   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A8   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A9   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17AA   0080           02047                 movwf INDF                                              ;Save to QUEUE
17AB   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02049                 count = count + 1
17AC   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AD   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AE   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17AF   0080           02047                 movwf INDF                                              ;Save to QUEUE
17B0   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02049                 count = count + 1
17B1   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B2   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B3   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17B4   0080           02047                 movwf INDF                                              ;Save to QUEUE
17B5   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02049                 count = count + 1
17B6   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B7   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B8   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17B9   0080           02047                 movwf INDF                                              ;Save to QUEUE
17BA   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02049                 count = count + 1
17BB   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BC   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BD   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17BE   0080           02047                 movwf INDF                                              ;Save to QUEUE
17BF   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02049                 count = count + 1
17C0   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C1   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C2   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17C3   0080           02047                 movwf INDF                                              ;Save to QUEUE
17C4   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02049                 count = count + 1
17C5   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C6   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C7   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17C8   0080           02047                 movwf INDF                                              ;Save to QUEUE
17C9   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02049                 count = count + 1
17CA   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CB   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CC   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17CD   0080           02047                 movwf INDF                                              ;Save to QUEUE
17CE   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02049                 count = count + 1
17CF   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D0   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D1   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17D2   0080           02047                 movwf INDF                                              ;Save to QUEUE
17D3   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02049                 count = count + 1
17D4   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D5   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D6   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17D7   0080           02047                 movwf INDF                                              ;Save to QUEUE
17D8   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02049                 count = count + 1
17D9   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DA   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17DB   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17DC   0080           02047                 movwf INDF                                              ;Save to QUEUE
17DD   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02049                 count = count + 1
17DE   1409           02044                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DF   1009           02045                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E0   0808           02046                 movf ADC_DATAPORT, W                    ;Sample
17E1   0080           02047                 movwf INDF                                              ;Save to QUEUE
17E2   0384           02048                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02049                 count = count + 1
                      02050         endw
17E3   1409           02051         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17E4   0808           02052         movf ADC_DATAPORT, W                            ;Sample
                      02053         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
17E5   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17E6   118A               M                 bcf PCLATH, 3
                          M         endif
17E7   2EDD               M         goto SampleRep5MEndC
                      02054         
17E8                  02055 SampleRep5MStep3
17E8   2FE9           02056         goto $ + 1
17E9   1009           02057         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17EA   2FEB           02058         goto $ + 1
17EB   0000           02059         nop
  0000                02060         local count
  00000001            02061         count = 1
                      02062         while count < D'25'
17EC   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17ED   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EE   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
17EF   0080           02066                 movwf INDF                                              ;Save to QUEUE
17F0   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02068                 count = count + 1
17F1   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F2   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F3   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
17F4   0080           02066                 movwf INDF                                              ;Save to QUEUE
17F5   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02068                 count = count + 1
17F6   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F7   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F8   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
17F9   0080           02066                 movwf INDF                                              ;Save to QUEUE
17FA   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02068                 count = count + 1
17FB   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FC   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FD   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
17FE   0080           02066                 movwf INDF                                              ;Save to QUEUE
17FF   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02068                 count = count + 1
1800   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1801   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1802   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1803   0080           02066                 movwf INDF                                              ;Save to QUEUE
1804   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02068                 count = count + 1
1805   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1806   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1807   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1808   0080           02066                 movwf INDF                                              ;Save to QUEUE
1809   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02068                 count = count + 1
180A   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

180B   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180C   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
180D   0080           02066                 movwf INDF                                              ;Save to QUEUE
180E   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02068                 count = count + 1
180F   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1810   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1811   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1812   0080           02066                 movwf INDF                                              ;Save to QUEUE
1813   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02068                 count = count + 1
1814   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1815   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1816   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1817   0080           02066                 movwf INDF                                              ;Save to QUEUE
1818   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02068                 count = count + 1
1819   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181A   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181B   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
181C   0080           02066                 movwf INDF                                              ;Save to QUEUE
181D   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02068                 count = count + 1
181E   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181F   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1820   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1821   0080           02066                 movwf INDF                                              ;Save to QUEUE
1822   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02068                 count = count + 1
1823   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1824   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1825   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1826   0080           02066                 movwf INDF                                              ;Save to QUEUE
1827   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02068                 count = count + 1
1828   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1829   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182A   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
182B   0080           02066                 movwf INDF                                              ;Save to QUEUE
182C   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02068                 count = count + 1
182D   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182E   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182F   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1830   0080           02066                 movwf INDF                                              ;Save to QUEUE
1831   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02068                 count = count + 1
1832   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1833   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1834   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1835   0080           02066                 movwf INDF                                              ;Save to QUEUE
1836   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02068                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1837   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1838   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1839   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
183A   0080           02066                 movwf INDF                                              ;Save to QUEUE
183B   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02068                 count = count + 1
183C   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183D   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183E   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
183F   0080           02066                 movwf INDF                                              ;Save to QUEUE
1840   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02068                 count = count + 1
1841   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1842   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1843   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1844   0080           02066                 movwf INDF                                              ;Save to QUEUE
1845   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02068                 count = count + 1
1846   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1847   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1848   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1849   0080           02066                 movwf INDF                                              ;Save to QUEUE
184A   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02068                 count = count + 1
184B   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184C   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184D   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
184E   0080           02066                 movwf INDF                                              ;Save to QUEUE
184F   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02068                 count = count + 1
1850   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1851   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1852   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1853   0080           02066                 movwf INDF                                              ;Save to QUEUE
1854   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02068                 count = count + 1
1855   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1856   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1857   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1858   0080           02066                 movwf INDF                                              ;Save to QUEUE
1859   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02068                 count = count + 1
185A   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185B   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185C   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
185D   0080           02066                 movwf INDF                                              ;Save to QUEUE
185E   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02068                 count = count + 1
185F   1409           02063                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1860   1009           02064                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1861   0808           02065                 movf ADC_DATAPORT, W                    ;Sample
1862   0080           02066                 movwf INDF                                              ;Save to QUEUE
1863   0384           02067                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            02068                 count = count + 1
                      02069         endw
1864   1409           02070         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1865   1009           02071         bcf ADC_CONTROLPORT, RDD
1866   0808           02072         movf ADC_DATAPORT, W                            ;Sample
1867   0080           02073         movwf INDF
1868   1783           02074         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02075         count = 1
                      02076         while count < D'26'
1869   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186A   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186B   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
186C   0080           02080                 movwf INDF                                              ;Save to QUEUE
186D   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02082                 count = count + 1
186E   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186F   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1870   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1871   0080           02080                 movwf INDF                                              ;Save to QUEUE
1872   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02082                 count = count + 1
1873   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1874   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1875   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1876   0080           02080                 movwf INDF                                              ;Save to QUEUE
1877   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02082                 count = count + 1
1878   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1879   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187A   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
187B   0080           02080                 movwf INDF                                              ;Save to QUEUE
187C   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02082                 count = count + 1
187D   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187E   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187F   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1880   0080           02080                 movwf INDF                                              ;Save to QUEUE
1881   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02082                 count = count + 1
1882   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1883   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1884   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1885   0080           02080                 movwf INDF                                              ;Save to QUEUE
1886   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02082                 count = count + 1
1887   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1888   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1889   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
188A   0080           02080                 movwf INDF                                              ;Save to QUEUE
188B   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02082                 count = count + 1
188C   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188D   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

188E   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
188F   0080           02080                 movwf INDF                                              ;Save to QUEUE
1890   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02082                 count = count + 1
1891   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1892   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1893   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1894   0080           02080                 movwf INDF                                              ;Save to QUEUE
1895   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02082                 count = count + 1
1896   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1897   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1898   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
1899   0080           02080                 movwf INDF                                              ;Save to QUEUE
189A   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02082                 count = count + 1
189B   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189C   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189D   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
189E   0080           02080                 movwf INDF                                              ;Save to QUEUE
189F   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02082                 count = count + 1
18A0   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A1   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A2   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18A3   0080           02080                 movwf INDF                                              ;Save to QUEUE
18A4   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02082                 count = count + 1
18A5   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A6   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A7   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18A8   0080           02080                 movwf INDF                                              ;Save to QUEUE
18A9   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02082                 count = count + 1
18AA   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AB   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AC   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18AD   0080           02080                 movwf INDF                                              ;Save to QUEUE
18AE   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02082                 count = count + 1
18AF   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B0   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B1   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18B2   0080           02080                 movwf INDF                                              ;Save to QUEUE
18B3   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02082                 count = count + 1
18B4   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B5   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B6   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18B7   0080           02080                 movwf INDF                                              ;Save to QUEUE
18B8   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02082                 count = count + 1
18B9   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18BA   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BB   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18BC   0080           02080                 movwf INDF                                              ;Save to QUEUE
18BD   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02082                 count = count + 1
18BE   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BF   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C0   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18C1   0080           02080                 movwf INDF                                              ;Save to QUEUE
18C2   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02082                 count = count + 1
18C3   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C4   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C5   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18C6   0080           02080                 movwf INDF                                              ;Save to QUEUE
18C7   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02082                 count = count + 1
18C8   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C9   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CA   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18CB   0080           02080                 movwf INDF                                              ;Save to QUEUE
18CC   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02082                 count = count + 1
18CD   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CE   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CF   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18D0   0080           02080                 movwf INDF                                              ;Save to QUEUE
18D1   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02082                 count = count + 1
18D2   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D3   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D4   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18D5   0080           02080                 movwf INDF                                              ;Save to QUEUE
18D6   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02082                 count = count + 1
18D7   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D8   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D9   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18DA   0080           02080                 movwf INDF                                              ;Save to QUEUE
18DB   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02082                 count = count + 1
18DC   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DD   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DE   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18DF   0080           02080                 movwf INDF                                              ;Save to QUEUE
18E0   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02082                 count = count + 1
18E1   1409           02077                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E2   1009           02078                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E3   0808           02079                 movf ADC_DATAPORT, W                    ;Sample
18E4   0080           02080                 movwf INDF                                              ;Save to QUEUE
18E5   0A84           02081                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02082                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02083         endw
18E6   1409           02084         bsf ADC_CONTROLPORT, RDD
18E7   0808           02085         movf ADC_DATAPORT, W                            ;Sample
                      02086         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
18E8   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18E9   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18EA   2EDA               M         goto SampleRep5MEndA
                      02087         
18EB                  02088 SampleRep5MStep4
18EB   28EC           02089         goto $ + 1
18EC   0000           02090         nop
18ED   1009           02091         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18EE   28EF           02092         goto $ + 1
18EF   0000           02093         nop
  0000                02094         local count
  00000001            02095         count = 1
                      02096         while count < D'38'
18F0   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F1   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F2   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
18F3   0080           02100                 movwf INDF                                              ;Save to QUEUE
18F4   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02102                 count = count + 1
18F5   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F6   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F7   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
18F8   0080           02100                 movwf INDF                                              ;Save to QUEUE
18F9   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02102                 count = count + 1
18FA   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FB   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FC   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
18FD   0080           02100                 movwf INDF                                              ;Save to QUEUE
18FE   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02102                 count = count + 1
18FF   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1900   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1901   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1902   0080           02100                 movwf INDF                                              ;Save to QUEUE
1903   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02102                 count = count + 1
1904   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1905   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1906   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1907   0080           02100                 movwf INDF                                              ;Save to QUEUE
1908   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02102                 count = count + 1
1909   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190A   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190B   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
190C   0080           02100                 movwf INDF                                              ;Save to QUEUE
190D   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02102                 count = count + 1
190E   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190F   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1910   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1911   0080           02100                 movwf INDF                                              ;Save to QUEUE
1912   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02102                 count = count + 1
1913   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1914   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1915   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1916   0080           02100                 movwf INDF                                              ;Save to QUEUE
1917   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02102                 count = count + 1
1918   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1919   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191A   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
191B   0080           02100                 movwf INDF                                              ;Save to QUEUE
191C   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02102                 count = count + 1
191D   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191E   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191F   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1920   0080           02100                 movwf INDF                                              ;Save to QUEUE
1921   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02102                 count = count + 1
1922   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1923   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1924   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1925   0080           02100                 movwf INDF                                              ;Save to QUEUE
1926   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02102                 count = count + 1
1927   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1928   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1929   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
192A   0080           02100                 movwf INDF                                              ;Save to QUEUE
192B   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02102                 count = count + 1
192C   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192D   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192E   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
192F   0080           02100                 movwf INDF                                              ;Save to QUEUE
1930   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02102                 count = count + 1
1931   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1932   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1933   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1934   0080           02100                 movwf INDF                                              ;Save to QUEUE
1935   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02102                 count = count + 1
1936   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1937   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1938   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1939   0080           02100                 movwf INDF                                              ;Save to QUEUE
193A   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02102                 count = count + 1
193B   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193C   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193D   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
193E   0080           02100                 movwf INDF                                              ;Save to QUEUE
193F   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02102                 count = count + 1
1940   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1941   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1942   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1943   0080           02100                 movwf INDF                                              ;Save to QUEUE
1944   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02102                 count = count + 1
1945   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1946   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1947   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1948   0080           02100                 movwf INDF                                              ;Save to QUEUE
1949   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02102                 count = count + 1
194A   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194B   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194C   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
194D   0080           02100                 movwf INDF                                              ;Save to QUEUE
194E   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02102                 count = count + 1
194F   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1950   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1951   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1952   0080           02100                 movwf INDF                                              ;Save to QUEUE
1953   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02102                 count = count + 1
1954   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1955   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1956   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1957   0080           02100                 movwf INDF                                              ;Save to QUEUE
1958   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02102                 count = count + 1
1959   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195A   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195B   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
195C   0080           02100                 movwf INDF                                              ;Save to QUEUE
195D   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02102                 count = count + 1
195E   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

195F   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1960   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1961   0080           02100                 movwf INDF                                              ;Save to QUEUE
1962   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02102                 count = count + 1
1963   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1964   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1965   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1966   0080           02100                 movwf INDF                                              ;Save to QUEUE
1967   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02102                 count = count + 1
1968   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1969   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196A   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
196B   0080           02100                 movwf INDF                                              ;Save to QUEUE
196C   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02102                 count = count + 1
196D   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196E   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196F   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1970   0080           02100                 movwf INDF                                              ;Save to QUEUE
1971   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02102                 count = count + 1
1972   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1973   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1974   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1975   0080           02100                 movwf INDF                                              ;Save to QUEUE
1976   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02102                 count = count + 1
1977   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1978   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1979   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
197A   0080           02100                 movwf INDF                                              ;Save to QUEUE
197B   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02102                 count = count + 1
197C   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197D   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197E   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
197F   0080           02100                 movwf INDF                                              ;Save to QUEUE
1980   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02102                 count = count + 1
1981   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1982   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1983   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1984   0080           02100                 movwf INDF                                              ;Save to QUEUE
1985   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02102                 count = count + 1
1986   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1987   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1988   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1989   0080           02100                 movwf INDF                                              ;Save to QUEUE
198A   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02102                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

198B   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198C   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198D   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
198E   0080           02100                 movwf INDF                                              ;Save to QUEUE
198F   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02102                 count = count + 1
1990   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1991   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1992   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1993   0080           02100                 movwf INDF                                              ;Save to QUEUE
1994   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02102                 count = count + 1
1995   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1996   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1997   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
1998   0080           02100                 movwf INDF                                              ;Save to QUEUE
1999   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02102                 count = count + 1
199A   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199B   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199C   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
199D   0080           02100                 movwf INDF                                              ;Save to QUEUE
199E   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02102                 count = count + 1
199F   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A0   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A1   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
19A2   0080           02100                 movwf INDF                                              ;Save to QUEUE
19A3   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02102                 count = count + 1
19A4   1409           02097                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A5   1009           02098                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A6   0808           02099                 movf ADC_DATAPORT, W                    ;Sample
19A7   0080           02100                 movwf INDF                                              ;Save to QUEUE
19A8   0A84           02101                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02102                 count = count + 1
                      02103         endw
19A9   1409           02104         bsf ADC_CONTROLPORT, RDD
19AA   1009           02105         bcf ADC_CONTROLPORT, RDD
19AB   0808           02106         movf ADC_DATAPORT, W                            ;Sample
19AC   0080           02107         movwf INDF
19AD   1384           02108         bcf FSR, 7                                                      ;goto bank 3
  00000001            02109         count = 1
                      02110         while count < D'13'
19AE   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AF   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B0   0808           02113                 movf ADC_DATAPORT, W
19B1   0080           02114                 movwf INDF                                              ;Save to QUEUE
19B2   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02116                 count = count + 1
19B3   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B4   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B5   0808           02113                 movf ADC_DATAPORT, W
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19B6   0080           02114                 movwf INDF                                              ;Save to QUEUE
19B7   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02116                 count = count + 1
19B8   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B9   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BA   0808           02113                 movf ADC_DATAPORT, W
19BB   0080           02114                 movwf INDF                                              ;Save to QUEUE
19BC   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02116                 count = count + 1
19BD   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BE   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BF   0808           02113                 movf ADC_DATAPORT, W
19C0   0080           02114                 movwf INDF                                              ;Save to QUEUE
19C1   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02116                 count = count + 1
19C2   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C3   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C4   0808           02113                 movf ADC_DATAPORT, W
19C5   0080           02114                 movwf INDF                                              ;Save to QUEUE
19C6   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02116                 count = count + 1
19C7   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C8   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C9   0808           02113                 movf ADC_DATAPORT, W
19CA   0080           02114                 movwf INDF                                              ;Save to QUEUE
19CB   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02116                 count = count + 1
19CC   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CD   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19CE   0808           02113                 movf ADC_DATAPORT, W
19CF   0080           02114                 movwf INDF                                              ;Save to QUEUE
19D0   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02116                 count = count + 1
19D1   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D2   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D3   0808           02113                 movf ADC_DATAPORT, W
19D4   0080           02114                 movwf INDF                                              ;Save to QUEUE
19D5   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02116                 count = count + 1
19D6   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D7   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D8   0808           02113                 movf ADC_DATAPORT, W
19D9   0080           02114                 movwf INDF                                              ;Save to QUEUE
19DA   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02116                 count = count + 1
19DB   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DC   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DD   0808           02113                 movf ADC_DATAPORT, W
19DE   0080           02114                 movwf INDF                                              ;Save to QUEUE
19DF   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02116                 count = count + 1
19E0   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E1   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19E2   0808           02113                 movf ADC_DATAPORT, W
19E3   0080           02114                 movwf INDF                                              ;Save to QUEUE
19E4   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02116                 count = count + 1
19E5   1409           02111                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E6   1009           02112                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E7   0808           02113                 movf ADC_DATAPORT, W
19E8   0080           02114                 movwf INDF                                              ;Save to QUEUE
19E9   0384           02115                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02116                 count = count + 1
                      02117         endw
19EA   1409           02118         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
19EB   0808           02119         movf ADC_DATAPORT, W                            ;Sample
                      02120         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
19EC   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19ED   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19EE   2EDD               M         goto SampleRep5MEndC
                      02121 
19EF                  02122 SampleRep5MStep5
19EF   29F0           02123         goto $ + 1
                      02124         if (Sample1MhzEnd & (0x1000))
                      02125                 bsf PCLATH, 4
                      02126         else
19F0   120A           02127                 bcf PCLATH, 4
                      02128         endif
                      02129         if (Sample1MhzEnd & (0x800))
19F1   158A           02130                 bsf PCLATH, 3
                      02131         else
                      02132                 bcf PCLATH, 3
                      02133         endif
19F2   1009           02134         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
19F3   0000           02135         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
19F4   28BD           02136         goto Sample1MhzEnd
                      02137         
                      02138 ;Repetitive sample
                      02139 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02140 ;-----------------------------------------------------------------------------
19F5                  02141 SampleRep2M
19F5   3019           02142         movlw high SampleRep2MPickSt
19F6   008A           02143         movwf PCLATH
19F7   0877           02144         movf gbl_modetempb, w
19F8   0782           02145         addwf PCL, f
19F9                  02146 SampleRep2MPickSt
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02147         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
19F9   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
19FA   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19FB   2A02               M         goto SampleRep2MStep1
                      02148         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
19FC   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
19FD   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19FE   2C09               M         goto SampleRep2MStep2
                      02149         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
19FF   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1A00   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A01   2E0A               M         goto SampleRep2MStep3
1A02                  02150 SampleRep2MPickEn
1A02                  02151 SampleRep2MStep1
1A02   1009           02152         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02153         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1A03   3020               M     movlw BUFFERMIN
1A04   0084               M     movwf FSR
1A05   0000           02154         nop
  0000                02155         local count
  00000001            02156         count = 1
                      02157         while count < BUFFERSIZE
1A06   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A07   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A08   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A09   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A0A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A0B   0000           02163                 nop
  00000002            02164                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A0C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A0D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A0E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A0F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A10   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A11   0000           02163                 nop
  00000003            02164                 count = count + 1
1A12   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A13   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A14   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A15   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A16   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A17   0000           02163                 nop
  00000004            02164                 count = count + 1
1A18   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A19   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A1A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A1B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A1C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A1D   0000           02163                 nop
  00000005            02164                 count = count + 1
1A1E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A1F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A20   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A21   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A22   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A23   0000           02163                 nop
  00000006            02164                 count = count + 1
1A24   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A25   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A26   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A27   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A28   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A29   0000           02163                 nop
  00000007            02164                 count = count + 1
1A2A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A2B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A2C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A2D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A2E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A2F   0000           02163                 nop
  00000008            02164                 count = count + 1
1A30   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A31   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A32   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A33   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A34   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A35   0000           02163                 nop
  00000009            02164                 count = count + 1
1A36   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A37   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A38   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A39   0080           02161                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A3A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A3B   0000           02163                 nop
  0000000A            02164                 count = count + 1
1A3C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A3D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A3F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A40   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A41   0000           02163                 nop
  0000000B            02164                 count = count + 1
1A42   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A43   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A44   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A45   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A46   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A47   0000           02163                 nop
  0000000C            02164                 count = count + 1
1A48   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A49   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A4C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A4D   0000           02163                 nop
  0000000D            02164                 count = count + 1
1A4E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A4F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A50   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A51   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A52   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A53   0000           02163                 nop
  0000000E            02164                 count = count + 1
1A54   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A55   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A56   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A57   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A58   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A59   0000           02163                 nop
  0000000F            02164                 count = count + 1
1A5A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A5B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A5E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A5F   0000           02163                 nop
  00000010            02164                 count = count + 1
1A60   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A61   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A62   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A63   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A64   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A65   0000           02163                 nop
  00000011            02164                 count = count + 1
1A66   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A67   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A68   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A69   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A6A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A6B   0000           02163                 nop
  00000012            02164                 count = count + 1
1A6C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A6D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A6E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A6F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A70   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A71   0000           02163                 nop
  00000013            02164                 count = count + 1
1A72   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A73   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A74   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A75   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A76   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A77   0000           02163                 nop
  00000014            02164                 count = count + 1
1A78   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A79   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A7A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A7B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A7C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A7D   0000           02163                 nop
  00000015            02164                 count = count + 1
1A7E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A7F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A80   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A81   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A82   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A83   0000           02163                 nop
  00000016            02164                 count = count + 1
1A84   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A85   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A86   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A87   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A88   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A89   0000           02163                 nop
  00000017            02164                 count = count + 1
1A8A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A8B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A8C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A8D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A8E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A8F   0000           02163                 nop
  00000018            02164                 count = count + 1
1A90   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A91   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A92   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A93   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A94   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A95   0000           02163                 nop
  00000019            02164                 count = count + 1
1A96   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A97   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A98   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A99   0080           02161                 movwf INDF                                              ;Save to QUEUE
1A9A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1A9B   0000           02163                 nop
  0000001A            02164                 count = count + 1
1A9C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1A9D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A9E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A9F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AA0   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AA1   0000           02163                 nop
  0000001B            02164                 count = count + 1
1AA2   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AA3   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA4   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA5   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AA6   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AA7   0000           02163                 nop
  0000001C            02164                 count = count + 1
1AA8   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AA9   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AAA   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AAB   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AAC   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AAD   0000           02163                 nop
  0000001D            02164                 count = count + 1
1AAE   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AAF   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB0   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB1   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AB2   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AB3   0000           02163                 nop
  0000001E            02164                 count = count + 1
1AB4   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AB5   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB6   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB7   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AB8   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AB9   0000           02163                 nop
  0000001F            02164                 count = count + 1
1ABA   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1ABB   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ABC   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ABD   0080           02161                 movwf INDF                                              ;Save to QUEUE
1ABE   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1ABF   0000           02163                 nop
  00000020            02164                 count = count + 1
1AC0   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AC1   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AC2   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC3   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AC4   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AC5   0000           02163                 nop
  00000021            02164                 count = count + 1
1AC6   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AC7   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC8   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC9   0080           02161                 movwf INDF                                              ;Save to QUEUE
1ACA   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1ACB   0000           02163                 nop
  00000022            02164                 count = count + 1
1ACC   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1ACD   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ACE   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ACF   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AD0   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AD1   0000           02163                 nop
  00000023            02164                 count = count + 1
1AD2   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AD3   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD4   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD5   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AD6   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AD7   0000           02163                 nop
  00000024            02164                 count = count + 1
1AD8   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AD9   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ADA   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ADB   0080           02161                 movwf INDF                                              ;Save to QUEUE
1ADC   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1ADD   0000           02163                 nop
  00000025            02164                 count = count + 1
1ADE   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1ADF   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE0   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE1   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AE2   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AE3   0000           02163                 nop
  00000026            02164                 count = count + 1
1AE4   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AE5   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE6   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE7   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AE8   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AE9   0000           02163                 nop
  00000027            02164                 count = count + 1
1AEA   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AEB   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEC   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AED   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AEE   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AEF   0000           02163                 nop
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000028            02164                 count = count + 1
1AF0   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AF1   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF2   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF3   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AF4   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AF5   0000           02163                 nop
  00000029            02164                 count = count + 1
1AF6   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AF7   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF8   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF9   0080           02161                 movwf INDF                                              ;Save to QUEUE
1AFA   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1AFB   0000           02163                 nop
  0000002A            02164                 count = count + 1
1AFC   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1AFD   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFE   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFF   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B00   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B01   0000           02163                 nop
  0000002B            02164                 count = count + 1
1B02   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B03   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B04   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B05   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B06   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B07   0000           02163                 nop
  0000002C            02164                 count = count + 1
1B08   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B09   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B0C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B0D   0000           02163                 nop
  0000002D            02164                 count = count + 1
1B0E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B0F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B10   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B11   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B12   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B13   0000           02163                 nop
  0000002E            02164                 count = count + 1
1B14   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B15   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B16   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B17   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B18   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B19   0000           02163                 nop
  0000002F            02164                 count = count + 1
1B1A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B1B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B1D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B1E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B1F   0000           02163                 nop
  00000030            02164                 count = count + 1
1B20   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B21   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B22   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B23   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B24   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B25   0000           02163                 nop
  00000031            02164                 count = count + 1
1B26   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B27   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B28   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B29   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B2A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B2B   0000           02163                 nop
  00000032            02164                 count = count + 1
1B2C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B2D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B30   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B31   0000           02163                 nop
  00000033            02164                 count = count + 1
1B32   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B33   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B34   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B35   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B36   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B37   0000           02163                 nop
  00000034            02164                 count = count + 1
1B38   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B39   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B3C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B3D   0000           02163                 nop
  00000035            02164                 count = count + 1
1B3E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B3F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B40   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B41   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B42   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B43   0000           02163                 nop
  00000036            02164                 count = count + 1
1B44   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B45   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B46   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B47   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B48   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B49   0000           02163                 nop
  00000037            02164                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B4A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B4B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B4E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B4F   0000           02163                 nop
  00000038            02164                 count = count + 1
1B50   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B51   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B52   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B53   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B54   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B55   0000           02163                 nop
  00000039            02164                 count = count + 1
1B56   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B57   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B58   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B59   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B5A   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B5B   0000           02163                 nop
  0000003A            02164                 count = count + 1
1B5C   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B5D   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5E   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5F   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B60   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B61   0000           02163                 nop
  0000003B            02164                 count = count + 1
1B62   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B63   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B64   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B65   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B66   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B67   0000           02163                 nop
  0000003C            02164                 count = count + 1
1B68   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B69   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6A   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6B   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B6C   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B6D   0000           02163                 nop
  0000003D            02164                 count = count + 1
1B6E   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B6F   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B70   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B71   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B72   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B73   0000           02163                 nop
  0000003E            02164                 count = count + 1
1B74   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B75   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B76   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B77   0080           02161                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B78   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B79   0000           02163                 nop
  0000003F            02164                 count = count + 1
1B7A   0808           02158                 movf ADC_DATAPORT, W                    ;Save Sample
1B7B   1409           02159                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7C   1009           02160                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7D   0080           02161                 movwf INDF                                              ;Save to QUEUE
1B7E   0A84           02162                 incf FSR, F                                             ;Increment QUEUE pointer
1B7F   0000           02163                 nop
  00000040            02164                 count = count + 1
                      02165         endw
1B80   0808           02166         movf ADC_DATAPORT, W
1B81   1409           02167         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1B82   1009           02168         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1B83   0080           02169         movwf INDF
1B84   1784           02170         bsf FSR, 7                                                      ;goto bank 2
1B85   0000           02171         nop
  00000001            02172         count = 1
                      02173         while count < D'22'
1B86   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1B87   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B88   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B89   0080           02177                 movwf INDF                                              ;Save to QUEUE
1B8A   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1B8B   0000           02179                 nop
  00000002            02180                 count = count + 1
1B8C   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1B8D   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B8E   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B8F   0080           02177                 movwf INDF                                              ;Save to QUEUE
1B90   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1B91   0000           02179                 nop
  00000003            02180                 count = count + 1
1B92   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1B93   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B94   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B95   0080           02177                 movwf INDF                                              ;Save to QUEUE
1B96   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1B97   0000           02179                 nop
  00000004            02180                 count = count + 1
1B98   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1B99   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B9A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B9B   0080           02177                 movwf INDF                                              ;Save to QUEUE
1B9C   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1B9D   0000           02179                 nop
  00000005            02180                 count = count + 1
1B9E   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1B9F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA0   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA1   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BA2   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BA3   0000           02179                 nop
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            02180                 count = count + 1
1BA4   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BA5   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA6   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA7   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BA8   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BA9   0000           02179                 nop
  00000007            02180                 count = count + 1
1BAA   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BAB   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BAC   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BAD   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BAE   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BAF   0000           02179                 nop
  00000008            02180                 count = count + 1
1BB0   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BB1   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB2   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB3   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BB4   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BB5   0000           02179                 nop
  00000009            02180                 count = count + 1
1BB6   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BB7   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB8   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB9   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BBA   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BBB   0000           02179                 nop
  0000000A            02180                 count = count + 1
1BBC   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BBD   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBE   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBF   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BC0   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BC1   0000           02179                 nop
  0000000B            02180                 count = count + 1
1BC2   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BC3   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC4   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC5   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BC6   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BC7   0000           02179                 nop
  0000000C            02180                 count = count + 1
1BC8   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BC9   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCA   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCB   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BCC   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BCD   0000           02179                 nop
  0000000D            02180                 count = count + 1
1BCE   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BCF   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD0   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BD1   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BD2   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BD3   0000           02179                 nop
  0000000E            02180                 count = count + 1
1BD4   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BD5   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD6   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD7   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BD8   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BD9   0000           02179                 nop
  0000000F            02180                 count = count + 1
1BDA   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BDB   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDC   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDD   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BDE   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BDF   0000           02179                 nop
  00000010            02180                 count = count + 1
1BE0   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BE1   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE2   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE3   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BE4   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BE5   0000           02179                 nop
  00000011            02180                 count = count + 1
1BE6   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BE7   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE8   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE9   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BEA   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BEB   0000           02179                 nop
  00000012            02180                 count = count + 1
1BEC   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BED   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BEE   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BEF   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BF0   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BF1   0000           02179                 nop
  00000013            02180                 count = count + 1
1BF2   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BF3   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF4   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF5   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BF6   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BF7   0000           02179                 nop
  00000014            02180                 count = count + 1
1BF8   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BF9   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BFA   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BFB   0080           02177                 movwf INDF                                              ;Save to QUEUE
1BFC   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1BFD   0000           02179                 nop
  00000015            02180                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BFE   0808           02174                 movf ADC_DATAPORT, W                    ;Sample
1BFF   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C00   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C01   0080           02177                 movwf INDF                                              ;Save to QUEUE
1C02   0384           02178                 decf FSR, F                                             ;Increment QUEUE pointer
1C03   0000           02179                 nop
  00000016            02180                 count = count + 1
                      02181         endw
1C04   0808           02182         movf ADC_DATAPORT, W                            ;Sample
1C05   1409           02183         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02184         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1C06   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1C07   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1C08   2EDD               M         goto SampleRep5MEndC
                      02185 
1C09                  02186 SampleRep2MStep2
1C09   2C0A           02187         goto $ + 1                                                      ;Delay 2
1C0A   1009           02188         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1C0B   2C0C           02189         goto $ + 1                                                      ;Wait three cycles
1C0C   0000           02190         nop
  0000                02191         local count
  00000001            02192         count = 1
                      02193         while count < D'42'
1C0D   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C0E   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C0F   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C10   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C11   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C12   0000           02199                 nop
  00000002            02200                 count = count + 1
1C13   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C14   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C15   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C16   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C17   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C18   0000           02199                 nop
  00000003            02200                 count = count + 1
1C19   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C1A   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1B   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1C   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C1D   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C1E   0000           02199                 nop
  00000004            02200                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C1F   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C20   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C21   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C22   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C23   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C24   0000           02199                 nop
  00000005            02200                 count = count + 1
1C25   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C26   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C27   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C28   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C29   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C2A   0000           02199                 nop
  00000006            02200                 count = count + 1
1C2B   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C2C   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C2D   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C2E   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C2F   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C30   0000           02199                 nop
  00000007            02200                 count = count + 1
1C31   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C32   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C33   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C34   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C35   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C36   0000           02199                 nop
  00000008            02200                 count = count + 1
1C37   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C38   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C39   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3A   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C3B   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C3C   0000           02199                 nop
  00000009            02200                 count = count + 1
1C3D   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C3E   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3F   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C40   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C41   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C42   0000           02199                 nop
  0000000A            02200                 count = count + 1
1C43   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C44   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C45   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C46   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C47   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C48   0000           02199                 nop
  0000000B            02200                 count = count + 1
1C49   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C4A   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4B   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C4C   0080           02197                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C4D   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C4E   0000           02199                 nop
  0000000C            02200                 count = count + 1
1C4F   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C50   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C51   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C52   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C53   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C54   0000           02199                 nop
  0000000D            02200                 count = count + 1
1C55   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C56   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C57   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C58   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C59   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C5A   0000           02199                 nop
  0000000E            02200                 count = count + 1
1C5B   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C5C   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5D   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5E   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C5F   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C60   0000           02199                 nop
  0000000F            02200                 count = count + 1
1C61   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C62   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C63   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C64   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C65   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C66   0000           02199                 nop
  00000010            02200                 count = count + 1
1C67   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C68   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C69   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6A   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C6B   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C6C   0000           02199                 nop
  00000011            02200                 count = count + 1
1C6D   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C6E   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6F   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C70   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C71   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C72   0000           02199                 nop
  00000012            02200                 count = count + 1
1C73   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C74   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C75   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C76   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C77   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C78   0000           02199                 nop
  00000013            02200                 count = count + 1
1C79   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C7A   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7B   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7C   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C7D   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C7E   0000           02199                 nop
  00000014            02200                 count = count + 1
1C7F   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C80   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C81   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C82   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C83   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C84   0000           02199                 nop
  00000015            02200                 count = count + 1
1C85   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C86   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C87   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C88   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C89   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C8A   0000           02199                 nop
  00000016            02200                 count = count + 1
1C8B   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C8C   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8D   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8E   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C8F   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C90   0000           02199                 nop
  00000017            02200                 count = count + 1
1C91   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C92   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C93   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C94   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C95   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C96   0000           02199                 nop
  00000018            02200                 count = count + 1
1C97   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C98   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C99   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9A   0080           02197                 movwf INDF                                              ;Save to QUEUE
1C9B   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1C9C   0000           02199                 nop
  00000019            02200                 count = count + 1
1C9D   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1C9E   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9F   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA0   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CA1   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CA2   0000           02199                 nop
  0000001A            02200                 count = count + 1
1CA3   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CA4   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA5   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA6   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CA7   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CA8   0000           02199                 nop
  0000001B            02200                 count = count + 1
1CA9   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CAA   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAB   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAC   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CAD   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CAE   0000           02199                 nop
  0000001C            02200                 count = count + 1
1CAF   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CB0   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB1   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB2   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CB3   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CB4   0000           02199                 nop
  0000001D            02200                 count = count + 1
1CB5   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CB6   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB7   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB8   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CB9   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CBA   0000           02199                 nop
  0000001E            02200                 count = count + 1
1CBB   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CBC   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBD   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBE   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CBF   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CC0   0000           02199                 nop
  0000001F            02200                 count = count + 1
1CC1   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CC2   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC3   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC4   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CC5   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CC6   0000           02199                 nop
  00000020            02200                 count = count + 1
1CC7   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CC8   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC9   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCA   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CCB   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CCC   0000           02199                 nop
  00000021            02200                 count = count + 1
1CCD   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CCE   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCF   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD0   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CD1   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CD2   0000           02199                 nop
  00000022            02200                 count = count + 1
1CD3   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CD4   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CD5   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD6   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CD7   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CD8   0000           02199                 nop
  00000023            02200                 count = count + 1
1CD9   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CDA   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDB   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDC   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CDD   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CDE   0000           02199                 nop
  00000024            02200                 count = count + 1
1CDF   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CE0   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE1   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE2   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CE3   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CE4   0000           02199                 nop
  00000025            02200                 count = count + 1
1CE5   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CE6   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE7   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE8   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CE9   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CEA   0000           02199                 nop
  00000026            02200                 count = count + 1
1CEB   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CEC   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CED   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEE   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CEF   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CF0   0000           02199                 nop
  00000027            02200                 count = count + 1
1CF1   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CF2   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF3   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF4   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CF5   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CF6   0000           02199                 nop
  00000028            02200                 count = count + 1
1CF7   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CF8   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF9   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CFA   0080           02197                 movwf INDF                                              ;Save to QUEUE
1CFB   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1CFC   0000           02199                 nop
  00000029            02200                 count = count + 1
1CFD   0808           02194                 movf ADC_DATAPORT, W                    ;Sample
1CFE   1409           02195                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFF   1009           02196                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D00   0080           02197                 movwf INDF                                              ;Save to QUEUE
1D01   0384           02198                 decf FSR, F                                             ;Increment QUEUE pointer
1D02   0000           02199                 nop
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002A            02200                 count = count + 1
                      02201         endw
1D03   0808           02202         movf ADC_DATAPORT, W
1D04   1409           02203         bsf ADC_CONTROLPORT, RDD
1D05   1009           02204         bcf ADC_CONTROLPORT, RDD
1D06   0080           02205         movwf INDF
1D07   1783           02206         bsf STATUS, IRP                                         ;goto bank 4
1D08   0000           02207         nop
  00000001            02208         count = 1
                      02209         while count < D'43'
1D09   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D0A   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0B   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0C   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D0D   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D0E   0000           02215                 nop
  00000002            02216                 count = count + 1
1D0F   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D10   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D11   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D12   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D13   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D14   0000           02215                 nop
  00000003            02216                 count = count + 1
1D15   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D16   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D17   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D18   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D19   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D1A   0000           02215                 nop
  00000004            02216                 count = count + 1
1D1B   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D1C   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1D   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1E   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D1F   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D20   0000           02215                 nop
  00000005            02216                 count = count + 1
1D21   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D22   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D23   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D24   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D25   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D26   0000           02215                 nop
  00000006            02216                 count = count + 1
1D27   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D28   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D29   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2A   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D2B   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D2C   0000           02215                 nop
  00000007            02216                 count = count + 1
1D2D   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D2E   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2F   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D30   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D31   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D32   0000           02215                 nop
  00000008            02216                 count = count + 1
1D33   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D34   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D35   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D36   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D37   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D38   0000           02215                 nop
  00000009            02216                 count = count + 1
1D39   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D3A   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3B   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3C   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D3D   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D3E   0000           02215                 nop
  0000000A            02216                 count = count + 1
1D3F   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D40   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D41   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D42   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D43   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D44   0000           02215                 nop
  0000000B            02216                 count = count + 1
1D45   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D46   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D47   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D48   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D49   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D4A   0000           02215                 nop
  0000000C            02216                 count = count + 1
1D4B   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D4C   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4D   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4E   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D4F   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D50   0000           02215                 nop
  0000000D            02216                 count = count + 1
1D51   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D52   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D53   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D54   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D55   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D56   0000           02215                 nop
  0000000E            02216                 count = count + 1
1D57   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D58   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D59   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5A   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D5B   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D5C   0000           02215                 nop
  0000000F            02216                 count = count + 1
1D5D   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D5E   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5F   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D60   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D61   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D62   0000           02215                 nop
  00000010            02216                 count = count + 1
1D63   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D64   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D65   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D66   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D67   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D68   0000           02215                 nop
  00000011            02216                 count = count + 1
1D69   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D6A   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6B   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6C   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D6D   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D6E   0000           02215                 nop
  00000012            02216                 count = count + 1
1D6F   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D70   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D71   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D72   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D73   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D74   0000           02215                 nop
  00000013            02216                 count = count + 1
1D75   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D76   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D77   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D78   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D79   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D7A   0000           02215                 nop
  00000014            02216                 count = count + 1
1D7B   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D7C   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7D   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7E   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D7F   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D80   0000           02215                 nop
  00000015            02216                 count = count + 1
1D81   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D82   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D83   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D84   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D85   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D86   0000           02215                 nop
  00000016            02216                 count = count + 1
1D87   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D88   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D89   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8A   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D8B   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D8C   0000           02215                 nop
  00000017            02216                 count = count + 1
1D8D   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D8E   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8F   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D90   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D91   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D92   0000           02215                 nop
  00000018            02216                 count = count + 1
1D93   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D94   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D95   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D96   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D97   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D98   0000           02215                 nop
  00000019            02216                 count = count + 1
1D99   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1D9A   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9B   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9C   0080           02213                 movwf INDF                                              ;Save to QUEUE
1D9D   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1D9E   0000           02215                 nop
  0000001A            02216                 count = count + 1
1D9F   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DA0   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA1   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA2   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DA3   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DA4   0000           02215                 nop
  0000001B            02216                 count = count + 1
1DA5   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DA6   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA7   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA8   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DA9   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DAA   0000           02215                 nop
  0000001C            02216                 count = count + 1
1DAB   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DAC   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAD   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAE   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DAF   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DB0   0000           02215                 nop
  0000001D            02216                 count = count + 1
1DB1   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DB2   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB3   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB4   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DB5   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DB6   0000           02215                 nop
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            02216                 count = count + 1
1DB7   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DB8   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB9   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBA   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DBB   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DBC   0000           02215                 nop
  0000001F            02216                 count = count + 1
1DBD   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DBE   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBF   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC0   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DC1   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DC2   0000           02215                 nop
  00000020            02216                 count = count + 1
1DC3   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DC4   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC5   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC6   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DC7   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DC8   0000           02215                 nop
  00000021            02216                 count = count + 1
1DC9   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DCA   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCB   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCC   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DCD   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DCE   0000           02215                 nop
  00000022            02216                 count = count + 1
1DCF   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DD0   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD1   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD2   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DD3   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DD4   0000           02215                 nop
  00000023            02216                 count = count + 1
1DD5   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DD6   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD7   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD8   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DD9   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DDA   0000           02215                 nop
  00000024            02216                 count = count + 1
1DDB   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DDC   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDD   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDE   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DDF   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DE0   0000           02215                 nop
  00000025            02216                 count = count + 1
1DE1   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DE2   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE3   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DE4   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DE5   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DE6   0000           02215                 nop
  00000026            02216                 count = count + 1
1DE7   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DE8   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE9   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DEA   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DEB   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DEC   0000           02215                 nop
  00000027            02216                 count = count + 1
1DED   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DEE   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DEF   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF0   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DF1   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DF2   0000           02215                 nop
  00000028            02216                 count = count + 1
1DF3   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DF4   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF5   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF6   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DF7   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DF8   0000           02215                 nop
  00000029            02216                 count = count + 1
1DF9   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1DFA   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFB   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFC   0080           02213                 movwf INDF                                              ;Save to QUEUE
1DFD   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1DFE   0000           02215                 nop
  0000002A            02216                 count = count + 1
1DFF   0808           02210                 movf ADC_DATAPORT, W                    ;Sample
1E00   1409           02211                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E01   1009           02212                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E02   0080           02213                 movwf INDF                                              ;Save to QUEUE
1E03   0A84           02214                 incf FSR, F                                             ;Increment QUEUE pointer
1E04   0000           02215                 nop
  0000002B            02216                 count = count + 1
                      02217         endw
1E05   0808           02218         movf ADC_DATAPORT, W                            ;Sample
1E06   1409           02219         bsf ADC_CONTROLPORT, RDD
                      02220         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1E07   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1E08   118A               M                 bcf PCLATH, 3
                          M         endif
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
1E09   2EDA               M         goto SampleRep5MEndA
                      02221 
1E0A                  02222 SampleRep2MStep3
1E0A   2E0B           02223         goto $ + 1                                                      ;Delay 4
                      02224         if (Sample833kEnd & (0x1000))
1E0B   160A           02225                 bsf PCLATH, 4
                      02226         else
                      02227                 bcf PCLATH, 4
                      02228         endif
                      02229         if (Sample833kEnd & (0x800))
                      02230                 bsf PCLATH, 3
                      02231         else
1E0C   118A           02232                 bcf PCLATH, 3
                      02233         endif
1E0D   1009           02234         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1E0E   0000           02235         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1E0F   2BC5           02236         goto Sample833kEnd
                      02237 
                      02238 
                      02239 ;=============================================================================
                      02240 end             ;end of program
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 204


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       00000117
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BANK0                             00000000
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 205


SYMBOL TABLE
  LABEL                             VALUE 

BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1SEL                            00000001
CH1SELG                           00000004
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   00000228
ChannelConfStore                  00000234
ConfReceive                       000001EB
ConfReceiveRateOnly               00000202
ConfSend                          0000020D
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             0000010C
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

DelayFive                         00000422
DelayLoop                         0000010D
DelaySeven                        00000421
DelayTwo                          00000424
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           000000F6
GetByteB                          000000F8
GetByteC                          000000FC
GetByteD                          00000100
GetByteE                          00000104
HTS                               00000002
I2C_DATA                          00000005
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000050
IntHandler                        00000004
IrqServiceTimer1                  0000011C
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000075
MainB                             0000007F
MainSelect                        00000011
MainWTrigB                        0000009D
MainWaitTrig                      0000008C
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           00000107
PutByteSerial                     00000107
R                                 00000002
RBIE                              00000003
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000004B8
Sample1MhzEnd                     000008BD
Sample250kA                       000003D2
Sample250kB                       000003E9
Sample250kC                       00000400
Sample250kD                       00000417
Sample417k250k                    000003C2
Sample417kA                       000003D3
Sample417kB                       000003EA
Sample417kC                       00000401
Sample417kD                       00000418
Sample417kLoopA                   000003CB
Sample417kLoopB                   000003E2
Sample417kLoopC                   000003F9
Sample417kLoopD                   00000410
Sample625k                        0000037F
Sample625kLoopA                   00000385
Sample625kLoopB                   00000395
Sample625kLoopC                   000003A5
Sample625kLoopD                   000003B5
Sample833k                        00000FBF
Sample833kEnd                     000013C5
SampleDelayed                     00000271
SampleDelayedLoopA                0000027C
SampleDelayedLoopB                00000296
SampleDelayedLoopC                000002B0
SampleDelayedLoopD                000002CA
SampleIntDrvn                     0000016D
SampleRealTime                    000001EA
SampleRep2M                       000019F5
SampleRep2MPickEn                 00001A02
SampleRep2MPickSt                 000019F9
SampleRep2MStep1                  00001A02
SampleRep2MStep2                  00001C09
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2MStep3                  00001E0A
SampleRep5M                       000015C2
SampleRep5MEndA                   000016DA
SampleRep5MEndB                   000016DF
SampleRep5MEndC                   000016DD
SampleRep5MPickEn                 000015D5
SampleRep5MPickSt                 000015C6
SampleRep5MStep1                  000015D5
SampleRep5MStep2                  000016E5
SampleRep5MStep3                  000017E8
SampleRep5MStep4                  000018EB
SampleRep5MStep5                  000019EF
SampleXY250k192k                  00000425
SampleXY250kLA                    00000434
SampleXY250kLB                    00000458
SampleXY250kLC                    0000047C
SampleXY250kLD                    000004A0
SampleXY417k                      000009BC
SampleXYDelayed                   000002DC
SampleXYDelayedLA                 000002EE
SampleXYDelayedLB                 00000316
SampleXYDelayedLC                 0000033E
SampleXYDelayedLD                 00000366
StSample417kLoopB                 000003E7
StSample417kLoopC                 000003FE
StSample417kLoopD                 00000415
StSampleDelayedLoopA              00000281
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000A8
WaitComm_Break                    000000EE
WaitComm_Conf                     000000DC
WaitComm_Data                     000000A9
WaitComm_Rec                      000000E5
WaitComm_SendDataA                000000B4
WaitComm_SendDataB                000000BE
WaitComm_SendDataC                000000C8
WaitComm_SendDataD                000000D2
WaitComm_SendDataExit             000000D8
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000066
b0_sampleAddr                     00000064
b0_sampleBank                     00000065
b0_triggerDelay1                  00000060
b0_triggerDelay2                  00000061
b0_triggerDelay3                  00000062
b0_triggerLevel                   00000063
b0_unused0                        0000006F
b0_unused1                        0000006E
b0_unused2                        0000006D
b0_unused3                        0000006C
b0_unused4                        0000006B
b0_unused5                        0000006A
b0_unused6                        00000069
b0_unused7                        00000068
b0_unused8                        00000067
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

b1_unusedD                        000000E2
b1_unusedE                        000000E1
b1_unusedF                        000000E0
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000073
gbl_cntrb                         00000074
gbl_cntrc                         00000075
gbl_configLoc1                    00000070
gbl_dataConfig                    00000079
gbl_modetemp                      00000076
gbl_modetempb                     00000077
gbl_pclath_temp                   0000007C
gbl_sampleRate1                   00000071
gbl_sampleRate2                   00000072
gbl_spdata                        00000078
gbl_status_temp                   0000007B
gbl_unused0                       0000007F
gbl_unused1                       0000007E
gbl_unused2                       0000007D
gbl_w_temp                        0000007A
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

ih_1                              0000000A
ih_2                              00000042
ih_3                              0000004B
irqst1_1                          00000141
irqst1_2                          00000143
irqst1_3                          00000145
irqst1_4                          00000147
irqst1_5                          00000168
sid_Exit                          000001E4
sid_GetByte                       00000182
sid_GetByteB                      0000018A
sid_GetByteC                      0000018E
sid_GetByteD                      00000192
sid_GetByteE                      00000196
sid_WaitComm_Break                000001DC
sid_WaitComm_Conf                 000001CA
sid_WaitComm_Data                 00000198
sid_WaitComm_Rec                  000001D3
sid_WaitComm_SendDataA            000001A4
sid_WaitComm_SendDataB            000001AE
sid_WaitComm_SendDataC            000001B8
sid_WaitComm_SendDataD            000001C2
sid_WaitComm_SendDataExit         000001C8
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 218


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 219


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120924.ASM   9-26-2012  22:20:15         PAGE 220


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX ---------------- ---------------- ----------------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7696
Program Memory Words Free:   496


Errors   :     0
Warnings :     0 reported,  1129 suppressed
Messages :    16 reported,    26 suppressed

