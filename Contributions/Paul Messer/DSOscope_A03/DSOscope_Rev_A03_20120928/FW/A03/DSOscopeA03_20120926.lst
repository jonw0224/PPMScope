MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;
                      00071 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00072 ;
                      00073 ;
                      00074 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00075 ;
                      00076 ;This program is free software; you can redistribute it and/or modify it under
                      00077 ;the terms of the GNU General Public License as published by the Free Software
                      00078 ;Foundation; either version 2 of the License, or (at your option) any later
                      00079 ;version.
                      00080 ;
                      00081 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00082 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00083 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00084 ;details.
                      00085 ;
                      00086 ;You should have received a copy of the GNU General Public License along with
                      00087 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00088 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00089 ;
                      00090 ;==============================================================================
                      00091 
                      00092 ;=============================================================================
                      00093 ; C O N F I G U R A T I O N
                      00094 ;=============================================================================
                      00095 
                      00096         LIST P=16F887
                      00097 
                      00098         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00099 
                      00100 
                      00101 ;*****************************************************
                      00102 ;       === Configuration Word Definitions ===
                      00103 ;*****************************************************
                      00104 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00105 
                      00106 ; '__CONFIG' directive is used to embed configuration data within .asm file.
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; The labels following the directive are located in the respective .inc file.
                      00108 ; See respective data sheet for additional information on configuration word.
                      00109 
2007   20F2           00110         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00111         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00112 
                      00113 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00114 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00115 
2000   0001 0002 0003 00116         __idlocs        0x1234
       0004 
                      00117 
  00000020            00118         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00119 
                      00120 ;=============================================================================
                      00121 ; C O N S T A N T S
                      00122 ;=============================================================================
                      00123 
  00000000            00124 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00125 BANK1                   equ     0x0080
  00000100            00126 BANK2                   equ     0x0100
  00000180            00127 BANK3                   equ     0x0180
                      00128 
  00000020            00129 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00130 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00131                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00132                                                         ;the data points alternate between channel 1 and
                      00133                                                         ;channel 2
  0000005F            00134 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00135 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00136 
                      00137 ;I/O Pin maps
                      00138 ;-----------------------------------------------------------------------------
  00000007            00139         SERIALPORT      set     PORTC
  00000007            00140                 RX              equ     0x07
  00000006            00141                 TX              equ     0x06
                      00142 
  00000009            00143         ADC_CONTROLPORT set     PORTE
  00000000            00144                 RDD             equ     0x00
  00000001            00145                 ADDR0   equ     0x01
                      00146 
  00000006            00147         TRIGGERPORT     set     PORTB
  00000000            00148                 TRIGGER equ     0x00
                      00149 
  00000006            00150         ADC_PORT        set     PORTB
  00000003            00151                 ADDR2   equ     0x03
  00000002            00152                 ADDR1   equ     0x02
  00000001            00153                 CS              equ     0x01
                      00154 
  00000008            00155         ADC_DATAPORT    set     PORTD
                      00156 
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00157         ANALOG_SEL      set     PORTC
  00000001            00158                 CH1SEL  equ     0x01
  00000002            00159                 CH2SEL  equ     0x02
                      00160 
  00000005            00161         ANALOG_GAIN     set     PORTA
  00000000            00162                 GAIN1   equ     0x00
  00000001            00163                 GAIN5   equ     0x01
  00000004            00164                 CH1SELG equ     0x04
  00000005            00165                 CH2SELG equ     0x05
                      00166 
  00000007            00167         ANALOG_ACDC     set     PORTC
  00000000            00168                 ACDCMODE        equ     0x00
                      00169 
                      00170 ;Configuration memory map
                      00171 ;-----------------------------------------------------------------------------
                      00172 ;Bit map for gbl_configLoc1
  00000007            00173         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00174         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00175         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00176         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00177         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00178         FREQMODEBIT2            equ     0x02
  00000001            00179         FREQMODEBIT1            equ     0x01
  00000000            00180         FREQMODEBIT0            equ     0x00
                      00181 
                      00182 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00183         SAMPLEBANK3                     equ     0x02
  00000003            00184         SAMPLEBANK2                     equ     0x03
  00000001            00185         SAMPLEBANK1                     equ     0x01
  00000000            00186         SAMPLEBANK0                     equ     0x00
                      00187 
                      00188 
                      00189 ;Table of frequency modes, 0 to 15
  00000000            00190         FREQSAMPLE1M            equ     D'0'
  00000001            00191         FREQSAMPLE833K          equ     D'1'
  00000002            00192         FREQSAMPLE625K          equ     D'2'
  00000003            00193         FREQSAMPLE417K          equ     D'3'
  00000004            00194         FREQSAMPLE250K          equ     D'4'
  00000005            00195         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00196         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00197         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00198         FREQSAMPLEXY417K        equ     D'8'
  00000009            00199         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00200         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00201         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00202         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
                      00203 
                      00204 
                      00205 ;=============================================================================
                      00206 ; V A R I A B L E S
                      00207 ;=============================================================================
                      00208 
                      00209         ;Global General Purpose Registers, accessible anywhere
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210 CBLOCK  0x70
  00000070            00211         gbl_configLoc1                  ;Configuration mode
  00000071            00212         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000072            00213         gbl_sampleRate2
  00000073            00214         gbl_cntra                               ;general use counter
  00000074            00215         gbl_cntrb                               ;second counter
  00000075            00216         gbl_cntrc                               ;third counter
  00000076            00217         gbl_modetemp                    ;temporary mode variable
  00000077            00218         gbl_modetempb                   ;temporary mode for repetitive sampling
  00000078            00219         gbl_spdata                              ;data to/from serial port
  00000079            00220         gbl_dataConfig                  ;the data configuration
  0000007A            00221         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007B            00222         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007C            00223         gbl_pclath_temp                 ;temp storage for pclath register during interrupt handling
  0000007D            00224         gbl_unused2
  0000007E            00225         gbl_unused1
  0000007F            00226         gbl_unused0
                      00227 ENDC
                      00228 
                      00229         ;Bank0 General Purpose Registers
                      00230 CBLOCK  0x60
  00000060            00231         b0_triggerDelay1                ;trigger delay (3 bytes)
  00000061            00232         b0_triggerDelay2
  00000062            00233         b0_triggerDelay3
  00000063            00234         b0_triggerLevel                 ;the trigger level
  00000064            00235         b0_sampleAddr                   ;address to store ADC sampled value
  00000065            00236         b0_sampleBank                   ;bank to store ADC sampled value
  00000066            00237         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000067            00238         b0_unused8
  00000068            00239         b0_unused7
  00000069            00240         b0_unused6
  0000006A            00241         b0_unused5
  0000006B            00242         b0_unused4
  0000006C            00243         b0_unused3
  0000006D            00244         b0_unused2
  0000006E            00245         b0_unused1
  0000006F            00246         b0_unused0
                      00247 ENDC
                      00248 
                      00249         ;Bank1 General Purpose Registers
                      00250 CBLOCK  0xE0
  000000E0            00251         b1_unusedF
  000000E1            00252         b1_unusedE
  000000E2            00253         b1_unusedD
  000000E3            00254         b1_unusedC
  000000E4            00255         b1_unusedB
  000000E5            00256         b1_unusedA
  000000E6            00257         b1_unused9
  000000E7            00258         b1_unused8
  000000E8            00259         b1_unused7
  000000E9            00260         b1_unused6
  000000EA            00261         b1_unused5
  000000EB            00262         b1_unused4
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000EC            00263         b1_unused3
  000000ED            00264         b1_unused2
  000000EE            00265         b1_unused1
  000000EF            00266         b1_unused0
                      00267 ENDC
                      00268 
                      00269         ;Bank2 General Purpose Registers
                      00270 CBLOCK  0x110
  00000110            00271         b2_unused1F
  00000111            00272         b2_unused1E
  00000112            00273         b2_unused1D
  00000113            00274         b2_unused1C
  00000114            00275         b2_unused1B
  00000115            00276         b2_unused1A
  00000116            00277         b2_unused19
  00000117            00278         b2_unused18
  00000118            00279         b2_unused17
  00000119            00280         b2_unused16
  0000011A            00281         b2_unused15
  0000011B            00282         b2_unused14
  0000011C            00283         b2_unused13
  0000011D            00284         b2_unused12
  0000011E            00285         b2_unused11
  0000011F            00286         b2_unused10
                      00287 ENDC
                      00288 CBLOCK  0x160
  00000160            00289         b2_unusedF
  00000161            00290         b2_unusedE
  00000162            00291         b2_unusedD
  00000163            00292         b2_unusedC
  00000164            00293         b2_unusedB
  00000165            00294         b2_unusedA
  00000166            00295         b2_unused9
  00000167            00296         b2_unused8
  00000168            00297         b2_unused7
  00000169            00298         b2_unused6
  0000016A            00299         b2_unused5
  0000016B            00300         b2_unused4
  0000016C            00301         b2_unused3
  0000016D            00302         b2_unused2
  0000016E            00303         b2_unused1
  0000016F            00304         b2_unused0
                      00305 ENDC
                      00306 
                      00307         ;Bank3 General Purpose Registers
                      00308 CBLOCK  0x190
  00000190            00309         b3_unused1F
  00000191            00310         b3_unused1E
  00000192            00311         b3_unused1D
  00000193            00312         b3_unused1C
  00000194            00313         b3_unused1B
  00000195            00314         b3_unused1A
  00000196            00315         b3_unused19
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000197            00316         b3_unused18
  00000198            00317         b3_unused17
  00000199            00318         b3_unused16
  0000019A            00319         b3_unused15
  0000019B            00320         b3_unused14
  0000019C            00321         b3_unused13
  0000019D            00322         b3_unused12
  0000019E            00323         b3_unused11
  0000019F            00324         b3_unused10
                      00325 ENDC
                      00326 CBLOCK  0x1E0
  000001E0            00327         b3_unusedF
  000001E1            00328         b3_unusedE
  000001E2            00329         b3_unusedD
  000001E3            00330         b3_unusedC
  000001E4            00331         b3_unusedB
  000001E5            00332         b3_unusedA
  000001E6            00333         b3_unused9
  000001E7            00334         b3_unused8
  000001E8            00335         b3_unused7
  000001E9            00336         b3_unused6
  000001EA            00337         b3_unused5
  000001EB            00338         b3_unused4
  000001EC            00339         b3_unused3
  000001ED            00340         b3_unused2
  000001EE            00341         b3_unused1
  000001EF            00342         b3_unused0
                      00343 ENDC
                      00344 
                      00345 ;=============================================================================
                      00346 ; I N C L U D E S
                      00347 ;=============================================================================
                      00348         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00349         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00350         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00351 
                      00352 
                      00353 ;=============================================================================
                      00354 ; M A C R O S
                      00355 ;=============================================================================
                      00356 
                      00357 MGOTO macro address
                      00358         if (address & (0x1000))
                      00359                 bsf PCLATH, 4
                      00360         else
                      00361                 bcf PCLATH, 4
                      00362         endif
                      00363         if (address & (0x800))
                      00364                 bsf PCLATH, 3
                      00365         else
                      00366                 bcf PCLATH, 3
                      00367         endif
                      00368         goto address
                      00369         endm
                      00370 
                      00371 
                      00372 
                      00373 
                      00374 ;=============================================================================
                      00375 ; I N T E R R U P T S
                      00376 ;=============================================================================
                      00377 
0000                  00378 org 0x0000      ;Reset Vector
                      00379 ;First three lines of initialization included here to save on memory.
                      00380         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00381         clrf ADC_DATAPORT
0003   2850           00382         goto Initial
                      00383 
0004                  00384 org 0x0004      ;Interrupt Vector
0004                  00385 IntHandler
                      00386         ;Save the current state
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   00FA           00387     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00388         swapf   STATUS,W                                        ;Move status register into W register
0006   00FB           00389         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00390 
                      00391         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00392         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00393         ; the interrupt is truly enabled before acting on the flag state.
                      00394 ;       comf    INTCON, W                                       ;Check for trigger interrupt and its ena
                            ble bit
                      00395 ;       andlw   (1<<INTF)|(1<<INTE)
                      00396 ;       btfss   STATUS, Z
                      00397 ;               goto ih_2
                      00398 
                      00399         ;HOWEVER, we can shorten/speed up this interrupt check!  Since we only enable the trigger
                      00400         ; interrupt when we are actually looking for it, and since we only enter this routine if
                      00401         ; we have an interrupt, we can shorten the trigger interrupt check to just look at the
                      00402         ; enable being active:
0007   1E0B           00403         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   2842           00404                 goto    ih_2
0009   120B           00405         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00406                                                                                 ; for the duration of th
                            e acquisition
000A                  00407 ih_1
000A   0BF3           00408         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0x010101 
                            implies minimum delay
000B   280A           00409                 goto ih_1
000C   0BF4           00410         decfsz gbl_cntrb, f
000D   280A           00411                 goto ih_1
000E   0BF5           00412         decfsz gbl_cntrc, f
000F   280A           00413                 goto ih_1
0010   0876           00414         movf gbl_modetemp, w
                      00415 
0011                  00416 MainSelect
0011   0782           00417         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00418         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0012   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0013   118A               M                 bcf PCLATH, 3
                          M         endif
0014   2CC7               M         goto Sample1M
                      00419         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0015   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0016   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0017   2FCE               M         goto Sample833k
                      00420         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2B8E               M         goto Sample625k
                      00421         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001B   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
001D   2BD1               M         goto Sample417k250k
                      00422         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2BD1               M         goto Sample417k250k
                      00423 ;       MGOTO SampleDelayed                                     ;FreqMode = 5
                      00424         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bsf PCLATH, 3
                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2977               M         goto SampleIntDrvn
                      00425         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0024   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0026   2DD1               M         goto SampleRep5M
                      00426         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0027   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
0028   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0029   2A04               M         goto SampleRep2M
                      00427         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
002B   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002C   29CB               M         goto SampleXY417k
                      00428         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   118A               M                 bcf PCLATH, 3
                          M         endif
002F   2C34               M         goto SampleXY250k192k
                      00429         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0031   118A               M                 bcf PCLATH, 3
                          M         endif
0032   2C34               M         goto SampleXY250k192k
                      00430         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2AEB               M         goto SampleXYDelayed
                      00431         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   2977               M         goto SampleIntDrvn
                      00432         MGOTO SampleRealTime                            ;FreqMode = 13
                          M         if (SampleRealTime & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRealTime & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   29F9               M         goto SampleRealTime
                      00433         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   2879               M         goto Main
                      00434         MGOTO Main                                                      ;Invalid FreqMode = 15
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2879               M         goto Main
                      00435 
                      00436 
0042                  00437 ih_2
0042   1283 1303      00438         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0044   1C0C           00439         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0045   284B           00440                 goto    ih_3                                    ;It wasn't, so restore registers and the
                            n return from interrupt
0046   1683 1303      00441         banksel BANK1
0048   1C0C           00442         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0049   284B           00443                 goto    ih_3
004A   2128           00444         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00445 
004B                  00446 ih_3
                      00447         ;restore previous state 
004B   0E7B           00448     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
004C   0083           00449     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
004D   0EFA           00450     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
004E   0E7A           00451     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
004F   0009           00452     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00453 
                      00454 
                      00455 ;=============================================================================
                      00456 ; M A I N
                      00457 ;=============================================================================
                      00458 ;Initalize for the program
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00459 ;-----------------------------------------------------------------------------
0050                  00460 Initial
0050   0185           00461         clrf PORTA
0051   1683 1303      00462         banksel TRISA
                      00463         MOVLF B'00010111', TRISA                        ;Configure PORTA
0053   3017               M     movlw B'00010111'
0054   0085               M     movwf TRISA
                      00464         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0055   30C0               M     movlw B'11000000'
0056   0081               M     movwf OPTION_REG
                      00465         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0057   3010               M     movlw B'00010000'
0058   008B               M     movwf INTCON
                      00466         MOVLF B'00110001', TRISB
0059   3031               M     movlw B'00110001'
005A   0086               M     movwf TRISB
                      00467         MOVLF B'11111111', TRISD
005B   30FF               M     movlw B'11111111'
005C   0088               M     movwf TRISD
                      00468         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
005D   3004               M     movlw B'00000100'
005E   0089               M     movwf TRISE
                      00469         MOVLF B'10111001', TRISC                        ;Configure PORTC
005F   30B9               M     movlw B'10111001'
0060   0087               M     movwf TRISC
                      00470 
0061   1683 1703      00471         banksel ANSEL                   ;Access bank 3
0063   0188           00472         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0064   0189           00473         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00474 
                      00475         ;Initialize Serial Port
                      00476 
0065   3008           00477         movlw   0x08                    ;Set the Serial Port baud rate generators
0066   0087           00478         movwf   BAUDCTL
0067   1683 1303      00479         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0069   3056           00480         movlw   0x56                    ; for 57.6K baud
006A   0099           00481         movwf   SPBRG
006B   3000           00482         movlw   0x00
006C   009A           00483         movwf   SPBRGH
006D   3024           00484         movlw   0x24                    ;Set the Serial Port Transmitter configuration
006E   0098           00485         movwf   TXSTA
006F   1283 1303      00486         banksel RCSTA                   ;Access bank 0
0071   3090           00487         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0072   0098           00488         movwf   RCSTA
                      00489 
0073   1383           00490         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
0074   019F           00491         clrf    ADCON0                  ;Make sure PIC's ADC is off
0075   3001           00492         movlw   0x01                    ;Initialize the "trigger delay counter" to minimium delay
0076   00F3           00493         movwf   gbl_cntra               ; for the initial case of "RUN" button pushed with the "TRIGGER 
                            OFF"
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0077   00F4           00494         movwf   gbl_cntrb               ; selection having being set
0078   00F5           00495         movwf   gbl_cntrc
                      00496         
0079                  00497 Main
                      00498         MOVLF 0x01, gbl_cntra   ;Set up trigger delay to minimum
0079   3001               M     movlw 0x01
007A   00F3               M     movwf gbl_cntra
007B   00F4           00499         movwf gbl_cntrb
007C   00F5           00500         movwf gbl_cntrc
                      00501         MOVLF 0x11, gbl_sampleRate2     ;Set up sampleRate for 35 + 8*(256*16+16+1) =  32,929 cycles
007D   3011               M     movlw 0x11
007E   00F2               M     movwf gbl_sampleRate2
                      00502         MOVLF 0x10, gbl_sampleRate1
007F   3010               M     movlw 0x10
0080   00F1               M     movwf gbl_sampleRate1
                      00503         MOVLF D'12'*D'3', gbl_modetemp
0081   3024               M     movlw D'12'*D'3'
0082   00F6               M     movwf gbl_modetemp
                      00504         ;bsf INTCON, INTE               ;Interrupt on
                      00505         ;bsf INTCON, GIE
                      00506         ;goto $
                      00507         MGOTO SampleIntDrvn             ;Start sampling
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0083   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0084   118A               M                 bcf PCLATH, 3
                          M         endif
0085   2977               M         goto SampleIntDrvn
                      00508         
                      00509 
                      00510 
                      00511 
0086   20B1           00512         call    WaitComm                ;Call WaitComm and stay there until we have
                      00513                                                         ; received a "ConfReceive" Configuration Informa
                            tion Field
                      00514 
0087   01F7           00515         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00516         
0088                  00517 MainB
0088   1089           00518         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
0089   1A70           00519         btfsc   gbl_configLoc1, CHANNELBIT
008A   1489           00520                 bsf             ADC_CONTROLPORT, ADDR0
                      00521         if (high MainSelect)
                      00522                 movlw   high MainSelect                 ;Prepare for jump
                      00523                 movwf   PCLATH
                      00524         else
008B   018A           00525                 clrf PCLATH
                      00526         endif
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008C   0870           00527         movf    gbl_configLoc1, w                       ;Put configuration in WREG
008D   390F           00528         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
008E   00F6           00529         movwf   gbl_modetemp                            ;Multiply by 3
008F   1003           00530         bcf             STATUS, C
0090   0DF6           00531         rlf             gbl_modetemp, f
0091   0776           00532         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0092   1086           00533         bcf             ADC_PORT, CS                            ;Select MAX118
0093   1F70           00534         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
0094   2811           00535                 goto    MainSelect
0095                  00536 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0095   00F6           00537         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
0096   0A62           00538         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
0097   00F3           00539         movwf   gbl_cntra
0098   0A61           00540         incf    b0_triggerDelay2, w     
0099   00F4           00541         movwf   gbl_cntrb
009A   0A60           00542         incf    b0_triggerDelay1, w
009B   00F5           00543         movwf   gbl_cntrc
009C   1683 1303      00544         banksel OPTION_REG                                      ;Access bank 1
009E   1301           00545         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
009F   1BF0           00546         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
00A0   1701           00547                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
00A1   1283 1303      00548         banksel BANK0                                           ;Access bank 0
00A3   108B           00549         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
00A4   160B           00550         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
00A5   178B           00551         bsf             INTCON, GIE                                     ;Enable interrupts
                      00552 
00A6                  00553 MainWTrigB
00A6   2102           00554         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00555         skipEqLF B'11110011', gbl_spdata        ;message is received
00A7   0878               M         movf gbl_spdata, w
00A8   3AF3               M         xorlw B'11110011'
00A9   1D03               M         btfss STATUS, Z
00AA   28A6           00556                 goto    MainWTrigB
00AB   120B           00557         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
00AC   138B           00558         bcf             INTCON, GIE                                     ;Disable interrupts
                      00559         MOVLF B'11011100', gbl_spdata           ;Respond
00AD   30DC               M     movlw B'11011100'
00AE   00F8               M     movwf gbl_spdata
00AF   2113           00560         call    PutByte
00B0   2879           00561         goto    Main                                            ;Abort
                      00562 
                      00563                                                                                 ;Note that the jitter on
                             the interrupt is
                      00564                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00565                                                                                 ;on the PIC running at 2
                            0 MHz
                      00566 
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00567 ;=============================================================================
                      00568 ; S U B R O U T I N E S
                      00569 ;=============================================================================
                      00570 
                      00571 ;Wait for command from computer and respond accordingly
                      00572 
                      00573         ; Received Commands are:
                      00574         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00575         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00576         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00577         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00578 
                      00579 ;-----------------------------------------------------------------------------
00B1                  00580 WaitComm
00B1   2102           00581         call GetByte                                            ;Wait for receive
                      00582 
00B2                  00583 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00584         skipEqLF B'11111000', gbl_spdata
00B2   0878               M         movf gbl_spdata, w
00B3   3AF8               M         xorlw B'11111000'
00B4   1D03               M         btfss STATUS, Z
00B5   28E4           00585                 goto WaitComm_Conf
                      00586         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00B6   30DC               M     movlw B'11011100'
00B7   00F8               M     movwf gbl_spdata
00B8   2113           00587         call PutByte
                      00588         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue, also clears 
                            FSR7
00B9   3020               M     movlw BUFFERMIN
00BA   0084               M     movwf FSR
                      00589         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00BB   3040               M     movlw BUFFERSIZE
00BC   00F4               M     movwf gbl_cntrb
00BD                  00590 WaitComm_SendDataA
                      00591         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00BD   0800               M     movf INDF, w
00BE   00F8               M     movwf gbl_spdata
00BF   0A84           00592         incf FSR, F                                                     ;Increment pointer
00C0   2113           00593         call PutByte                                            ;Send data
00C1   0BF4           00594         decfsz gbl_cntrb, f
00C2   28BD           00595                 goto WaitComm_SendDataA
                      00596         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00C3   3040               M     movlw BUFFERSIZE
00C4   00F4               M     movwf gbl_cntrb
00C5   1784           00597         bsf FSR, 7                                                      ;Bank 1
00C6   0384           00598         decf FSR, f
00C7                  00599 WaitComm_SendDataB
                      00600         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00C7   0800               M     movf INDF, w
00C8   00F8               M     movwf gbl_spdata
00C9   0384           00601         decf FSR, F                                                     ;Increment pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   2113           00602         call PutByte                                            ;Send data
00CB   0BF4           00603         decfsz gbl_cntrb, f
00CC   28C7           00604                 goto WaitComm_SendDataB
                      00605         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00CD   3040               M     movlw BUFFERSIZE
00CE   00F4               M     movwf gbl_cntrb
00CF   1783           00606         bsf STATUS, IRP                                         ;Bank 3
00D0   0A84           00607         incf FSR, f
00D1                  00608 WaitComm_SendDataC
                      00609         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00D1   0800               M     movf INDF, w
00D2   00F8               M     movwf gbl_spdata
00D3   0A84           00610         incf FSR, F                                                     ;Increment pointer
00D4   2113           00611         call PutByte                                            ;Send data
00D5   0BF4           00612         decfsz gbl_cntrb, f
00D6   28D1           00613                 goto WaitComm_SendDataC
                      00614         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00D7   3040               M     movlw BUFFERSIZE
00D8   00F4               M     movwf gbl_cntrb
00D9   1384           00615         bcf FSR, 7                                                      ;Bank 2
00DA   0384           00616         decf FSR, f
00DB                  00617 WaitComm_SendDataD
                      00618         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00DB   0800               M     movf INDF, w
00DC   00F8               M     movwf gbl_spdata
00DD   0384           00619         decf FSR, F                                                     ;Increment pointer
00DE   2113           00620         call PutByte                                            ;Send data
00DF   0BF4           00621         decfsz gbl_cntrb, f
00E0   28DB           00622                 goto WaitComm_SendDataD
00E1                  00623 WaitComm_SendDataExit
00E1   1383           00624         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
00E2   2237           00625         call    ChannelConfSend
00E3   28B1           00626         goto    WaitComm
                      00627 
00E4                  00628 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00629         skipEqLF B'11111001', gbl_spdata
00E4   0878               M         movf gbl_spdata, w
00E5   3AF9               M         xorlw B'11111001'
00E6   1D03               M         btfss STATUS, Z
00E7   28ED           00630                 goto WaitComm_Rec
                      00631         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00E8   30DD               M     movlw B'11011101'
00E9   00F8               M     movwf gbl_spdata
00EA   2113           00632         call    PutByte
00EB   221C           00633         call    ConfSend
00EC   28B1           00634         goto    WaitComm
                      00635 
00ED                  00636 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00637         skipEqLF B'11111010', gbl_spdata
00ED   0878               M         movf gbl_spdata, w
00EE   3AFA               M         xorlw B'11111010'
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EF   1D03               M         btfss STATUS, Z
00F0   28FA           00638                 goto WaitComm_Break
                      00639         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
00F1   30DE               M     movlw B'11011110'
00F2   00F8               M     movwf gbl_spdata
00F3   2113           00640         call    PutByte
00F4   21FA           00641         call    ConfReceive
00F5   3001           00642         movlw   0x01                                            ;Set counters to 0x010101 for the case o
                            f
00F6   00F3           00643         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
00F7   00F4           00644         movwf   gbl_cntrb
00F8   00F5           00645         movwf   gbl_cntrc
00F9   0008           00646         return
                      00647 
00FA                  00648 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00649         skipEqLF B'11110011', gbl_spdata
00FA   0878               M         movf gbl_spdata, w
00FB   3AF3               M         xorlw B'11110011'
00FC   1D03               M         btfss STATUS, Z
00FD   28B1           00650                 goto WaitComm                                   ;No valid message sent
                      00651         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
00FE   30DC               M     movlw B'11011100'
00FF   00F8               M     movwf gbl_spdata
0100   2113           00652         call    PutByte
0101   28B1           00653         goto    WaitComm
                      00654 
                      00655 
                      00656 
                      00657 ;GetByte is used to receive a byte on the serial port
                      00658 ;------------------------------------------------------------------------------
0102                  00659 GetByte
0102   1E8C           00660         btfss PIR1, RCIF                        
0103   2902           00661                 goto GetByte
0104                  00662 GetByteB
0104   1D18           00663         btfss RCSTA, FERR                                       ;Handle the frame error
0105   2908           00664                 goto GetByteC
0106   081A           00665         movf RCREG, w                                           ;Throw away data with errors
0107   2902           00666         goto GetByte
0108                  00667 GetByteC
0108   1C98           00668         btfss RCSTA, OERR                                       ;Handle the over run error
0109   2910           00669                 goto GetByteE
010A   1218           00670         bcf RCSTA, CREN                                         ;Reset the receive logic
010B   1618           00671         bsf RCSTA, CREN
010C                  00672 GetByteD
010C   081A           00673         movf RCREG, w                                           ;Throw away data with errors
010D   1A8C           00674         btfsc PIR1, RCIF
010E   290C           00675                 goto GetByteD
010F   2902           00676         goto GetByte
0110                  00677 GetByteE                                                                ;No errors if we got here       
                      00678         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0110   081A               M     movf RCREG, w
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0111   00F8               M     movwf gbl_spdata
0112   3400           00679         retlw 0
                      00680         
                      00681 ;PutByte is used to put a byte on the serial port
                      00682 ;------------------------------------------------------------------------------
0113                  00683 PutByte
0113                  00684 PutByteSerial
0113   1E0C           00685         btfss PIR1, TXIF
0114   2913           00686                 goto PutByteSerial
                      00687         MOVFF gbl_spdata, TXREG
0115   0878               M     movf gbl_spdata, w
0116   0099               M     movwf TXREG
0117   3400           00688         retlw 0
                      00689 
                      00690 ;Delay used to adjust sample rate
                      00691 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00692 ;statement)
                      00693 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00694 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00695 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00696 ;-----------------------------------------------------------------------------
0118                  00697 Delay
0118   3001           00698         movlw 0x01
0119                  00699 DelayLoop
0119   02F3           00700         subwf gbl_cntra, F
011A   1C03           00701         btfss STATUS, C
011B   02F4           00702                 subwf gbl_cntrb, F
011C   08F3           00703         movf gbl_cntra, F
                      00704         skipZero
011D   1D03               M         btfss STATUS, Z
011E   2919           00705                 goto DelayLoop
011F   08F4           00706         movf gbl_cntrb, F
                      00707         skipZero
0120   1D03               M         btfss STATUS, Z
0121   2919           00708                 goto DelayLoop
0122   0008           00709         return
                      00710 
                      00711 ;ADCShutdown, shutsdown the MAX118
                      00712 ;-----------------------------------------------------------------------------
0123                  00713 ADCShutdown
0123   0080           00714         movwf   INDF                                            ;Save to QUEUE
0124   1486           00715         bsf             ADC_PORT, CS                            ;Unselect MAX118
0125   1383           00716         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
0126   2243           00717         call    ChannelConfStore
0127   2879           00718         goto Main
                      00719 
                      00720 ;=============================================================================
                      00721 ;*****************************************************************************
                      00722 ;=============================================================================
                      00723 
                      00724 ;Interrupt Driven Sampling with Command Responder
                      00725 ;This code section consists of two routines:
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00726 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00727 ; (2) A looping routine that responds to PC commands while we are waiting for sampling interrupts
                      00728 
                      00729 ;Jonathan Weaver: Measurements from simulation
                      00730 ;Interrupt to the first sample = 103 cycles using minimum delay
                      00731 ;Sampling rate = 5000000/(8*SAMPLERATE1:SAMPLERATE2+35) with 20 MHz clock
                      00732 ;Minimum value for SAMPLERATE1:SAMPLERATE2 ~= 20 
                      00733 ;(around 140 cycles to execute the timer1 interrupt.  Added some time for processing the serial port.)
                      00734 ;Maximum sample rate (at SAMPLERATE1:SAMPLERATE2 = 20) is 1,953 Hz.
                      00735 ;Waveform completion at that sample rate is 7.6 times per second
                      00736 
                      00737 ;Note!  There is an xx instruction count between the actual Timer 1 interrupt
                      00738 ; being "detected/vectored to" and the Timer 1 counter being reloaded.
                      00739 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00740 ; when it rolls over to 0x0000, the interrupt is generated.
                      00741 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00742 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00743 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00744 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00745 ;-----------------------------------------------------------------------------
                      00746 
0128                  00747 IrqServiceTimer1
                      00748         ;reload timer for next interrupt and clear the interrupt flag
                      00749         ;sample ADC and store into appropriate location
                      00750         ;increment location and maybe the bank to store into for next time around
                      00751         ;turn off interrupt if done acquiring
                      00752         ;return from call
0128   1283 1303      00753         banksel BANK0
012A   1010           00754         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
012B   0971           00755         comf    gbl_sampleRate1, W                      ;MSB of sampling rate
012C   008F           00756         movwf   TMR1H
012D   0972           00757         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
012E   008E           00758         movwf   TMR1L
012F   100C           00759         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0130   1410           00760         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
0131   0000           00761         nop
0132   0804           00762         movf    FSR, W                                          ;Save the current FSR
0133   00E6           00763         movwf   b0_fsr_temp
                      00764 
                      00765 ;Paul, I made some modifications here to fix the glitches and to make the sampling adhere to the XY meth
                            od
                      00766 ;more precisely
                      00767 
0134   0864           00768         movf b0_sampleAddr, W
0135   0084           00769         movwf FSR
                      00770         ;Assume bank0
0136   1383           00771         bcf STATUS, IRP
0137   1384           00772         bcf FSR, 7
                      00773         ;Set bank1 if needed
0138   18E5           00774         btfsc b0_sampleBank, SAMPLEBANK1
0139   1784           00775         bsf FSR, 7
                      00776         ;Set bank2 if needed
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013A   19E5           00777     btfsc b0_sampleBank, SAMPLEBANK2
013B   1783           00778         bsf STATUS, IRP
                      00779     ;Set bank3 if needed
013C   1965           00780     btfsc b0_sampleBank, SAMPLEBANK3
013D   1784           00781         bsf FSR, 7
013E   1965           00782     btfsc b0_sampleBank, SAMPLEBANK3
013F   1783           00783         bsf STATUS, IRP
                      00784 
                      00785                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
                      00786                                                         ;Note!: This is a bit strange, as the other samp
                            ling methods use an
                      00787                                                         ; acquisition memory loading technique of inc-de
                            c-inc-dec for
                      00788                                                         ; bank0-bank1-bank3-bank2 ... so, we have to acc
                            omodate!
                      00789 ;       movf    b0_sampleAddr, W                                ;Get the acquisition memory address poin
                            ter
                      00790 ;    btfsc      b0_sampleBank, SAMPLEBANK1              ;Check for it being the "decrementing bank1"
                      00791 ;               xorlw   0x7f                                            ;Its the "decrementing bank 1", 
                            so invert the address pointer
                      00792 ;       btfsc   b0_sampleBank, SAMPLEBANK2              ;Check for it being the "decrementing bank2"
                      00793 ;               xorlw   0x7f                                            ;Its the "decrementing bank2", s
                            o invert the address pointer
                      00794 ;       movwf   FSR                                                     ;Put the acquisition memory poin
                            ter into the indirection register
                      00795 ;
                      00796 ;                                                       ;Setup the indirection bank bits IRP and FSR7
                      00797 ;       btfss   b0_sampleBank, SAMPLEBANK0      ;Instruction cycle count for balancing act starts here
                      00798 ;               goto $+4                                                ;
                      00799 ;       bcf             FSR, 7                                          ;
                      00800 ;       bcf             STATUS, IRP                                     ;
                      00801 ;       goto    irqst1_1                                        ;takes 4 to get here +2 to jump
                      00802 ;       btfss   b0_sampleBank, SAMPLEBANK1      ;
                      00803 ;               goto $+4                                                ;
                      00804 ;       bsf             FSR, 7                                          ;
                      00805 ;       bcf             STATUS, IRP                                     ;
                      00806 ;       goto    irqst1_2                                        ;takes 7 to get here +2 to jump
                      00807 ;       btfss   b0_sampleBank, SAMPLEBANK3      ;
                      00808 ;               goto $+4                                                ;
                      00809 ;       bsf             FSR, 7                                          ;
                      00810 ;       bsf             STATUS, IRP                                     ;
                      00811 ;       goto    irqst1_3                                        ;takes 10 to get here + 2 to jump
                      00812 ;       btfss   b0_sampleBank, SAMPLEBANK2      ;
                      00813 ;               goto $+4                                                ;
                      00814 ;       bcf             FSR, 7                                          ;
                      00815 ;       bsf             STATUS, IRP                                     ;
                      00816 ;       goto    irqst1_4                                        ;takes 13 to get here + 2 to jump
                      00817 
                      00818                                                         ;Instruction time balancer for above indirection
                             bank bit setting/clearing
                      00819 ;irqst1_1
                      00820 ;       goto    $+1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00821 ;       nop
                      00822 ;irqst1_2
                      00823 ;       goto    $+1
                      00824 ;       nop
                      00825 ;irqst1_3
                      00826 ;       goto    $+1
                      00827 ;       nop
                      00828 ;irqst1_4
                      00829 
0140   1089           00830         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
0141   1009           00831         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
0142   2943           00832         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
0143   2944           00833         goto    $+1
0144   0000           00834         nop
0145   0808           00835         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0146   1409           00836         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0147   1489           00837         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
0148   1009           00838         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
0149   0080           00839         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
                      00840 ;JWW - Another couple of changes
014A   1865           00841     btfsc b0_sampleBank, SAMPLEBANK0    ;Increment acquistion memory pointer if Bank0
014B   0A84           00842         incf    FSR, F                                          
014C   18E5           00843     btfsc b0_sampleBank, SAMPLEBANK1    ;Decrement memory pointer if Bank1
014D   0384           00844         decf FSR, F
                      00845 ;       goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
                      00846 ;       nop
014E   0808           00847         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
                      00848                                                                                 ;After this point, no ne
                            ed for instruction cycle balancing
014F   1409           00849         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
                      00850 ;JWW - Another changed code section
0150   19E5           00851     btfsc b0_sampleBank, SAMPLEBANK2    ;Decrement memory pointer if Bank2
0151   0384           00852         decf FSR, F
0152   1965           00853         btfsc b0_sampleBank, SAMPLEBANK3    ;Increment memory pointer if Bank3
0153   0A84           00854                 incf FSR, F
0154   0080           00855     movwf       INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00856 ;JWW - Remove some original code
                      00857 ;       incf    b0_sampleAddr, F                        ;Increment acquisition memory pointer...
                      00858 ;       incf    b0_sampleAddr, F                        ; ...2 times for 2 samples taken
0155   3002           00859         movlw 0x02                                                      ;Prepare to increment sampleAddr
                             by 2
0156   18E5           00860         btfsc b0_sampleBank, SAMPLEBANK1        ;If BANK1, prepare to decrement sampleAddr by 2
0157   30FE           00861                 movlw (0x00 - 0x02)
0158   19E5           00862         btfsc b0_sampleBank, SAMPLEBANK2        ;If BANK2, prepare to decrement sampleAddr by 2
0159   30FE           00863                 movlw (0x00 - 0x02)
015A   07E4           00864         addwf b0_sampleAddr, F
015B   301F           00865         movlw BUFFERMIN-1                                       ;Check if filling last aquisition memory
                             location in bank
015C   0664           00866         xorwf b0_sampleAddr, W
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015D   1903           00867         btfsc STATUS, Z
015E   2966           00868                 goto irqst1_6
                      00869 
015F   3060           00870         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
0160   0664           00871         xorwf   b0_sampleAddr, W
0161   1D03           00872         btfss   STATUS, Z
0162   2972           00873                 goto    irqst1_5                                ;Jump, we are not done filling the curre
                            nt bank
0163   305F           00874         movlw   BUFFERMAX                                       ;Reset the acquisition memory pointer to
                             its END
0164   00E4           00875         movwf   b0_sampleAddr
0165   2968           00876         goto irqst1_7
                      00877 
                      00878 ;JWW - added condition for lower limit of Buffer address
0166                  00879 irqst1_6
                      00880     MOVLF BUFFERMIN, b0_sampleAddr              
0166   3020               M     movlw BUFFERMIN
0167   00E4               M     movwf b0_sampleAddr
                      00881 
0168                  00882 irqst1_7
0168   1003           00883         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0169   0DE5           00884         rlf     b0_sampleBank, F
016A   1E65           00885         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
016B   2972           00886                 goto    irqst1_5                                ;Not done, so keep going...
016C   1010           00887         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
016D   100C           00888         bcf             PIR1, TMR1IF                            ;Clear the interrupt flag, too
016E   1683 1303      00889         banksel BANK1
0170   100C           00890         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
0171   130B           00891         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
0172                  00892 irqst1_5
0172   1283 1303      00893         banksel BANK0
0174   0866           00894         movf    b0_fsr_temp, W                          ;Restore FSR register
0175   0084           00895         movwf   FSR
0176   0008           00896         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      00897                                                                         ; state and does the retfie
                      00898 
                      00899 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
0177                  00900 SampleIntDrvn
                      00901         ;Setup the sample write location and sample bank variables
                      00902         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      00903         ;Turn on Timer 1
                      00904         ;Enable the Timer 1 interrupt
0177   1283 1303      00905         banksel BANK0
0179   3020           00906         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
017A   00E4           00907         movwf   b0_sampleAddr
017B   3001           00908         movlw   0x01                                            ;Initialize sample bank pointer
017C   00E5           00909         movwf   b0_sampleBank
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   1010           00910         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
017E   1690           00911         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
017F   1610           00912         bsf             T1CON, T1CKPS0
0180   30FF           00913         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
0181   008F           00914         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
0182   008E           00915         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
0183   100C           00916         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0184   1683 1303      00917         banksel BANK1
0186   140C           00918         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
0187   170B           00919         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
0188   178B           00920         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
0189   1283 1303      00921         banksel BANK0
018B   1410           00922         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
                      00923 
                      00924         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      00925         ; Received Commands are:
                      00926         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00927         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00928         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00929         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00930         ;
                      00931         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      00932         ; routine after the sample memory buffer has been fully filled), leave this
                      00933         ; routine and go back to Main
                      00934 
018C                  00935 sid_GetByte
018C   1683 1303      00936         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
018E   1C0C           00937         btfss   PIE1, TMR1IE
018F   29EF           00938                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
0190   1283 1303      00939         banksel BANK0
0192   1E8C           00940         btfss   PIR1, RCIF                      
0193   298C           00941                 goto sid_GetByte
0194                  00942 sid_GetByteB
0194   1D18           00943         btfss   RCSTA, FERR                                     ;Handle the frame error
0195   2998           00944                 goto sid_GetByteC
0196   081A           00945         movf    RCREG, w                                        ;Throw away data with errors
0197   298C           00946         goto    sid_GetByte
0198                  00947 sid_GetByteC
0198   1C98           00948         btfss   RCSTA, OERR                                     ;Handle the over run error
0199   29A0           00949                 goto sid_GetByteE
019A   1218           00950         bcf             RCSTA, CREN                                     ;Reset the receive logic
019B   1618           00951         bsf             RCSTA, CREN
019C                  00952 sid_GetByteD
019C   081A           00953         movf    RCREG, w                                        ;Throw away data with errors
019D   1A8C           00954         btfsc   PIR1, RCIF
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019E   299C           00955                 goto sid_GetByteD
019F   298C           00956         goto    sid_GetByte
01A0                  00957 sid_GetByteE                                                    ;No errors if we got here       
                      00958         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
01A0   081A               M     movf RCREG, w
01A1   00F8               M     movwf gbl_spdata
                      00959 
                      00960 
01A2                  00961 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00962         skipEqLF B'11111000', gbl_spdata
01A2   0878               M         movf gbl_spdata, w
01A3   3AF8               M         xorlw B'11111000'
01A4   1D03               M         btfss STATUS, Z
01A5   29D5           00963                 goto sid_WaitComm_Conf
                      00964         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
01A6   30DC               M     movlw B'11011100'
01A7   00F8               M     movwf gbl_spdata
01A8   2113           00965         call    PutByte
                      00966         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
01A9   3020               M     movlw BUFFERMIN
01AA   0084               M     movwf FSR
                      00967         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01AB   3040               M     movlw BUFFERSIZE
01AC   00F4               M     movwf gbl_cntrb
01AD   1383           00968         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
01AE                  00969 sid_WaitComm_SendDataA                                  ;In Bank 0
                      00970         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01AE   0800               M     movf INDF, w
01AF   00F8               M     movwf gbl_spdata
01B0   0A84           00971         incf    FSR, F                                          ;Increment pointer
01B1   2113           00972         call    PutByte                                         ;Send data
01B2   0BF4           00973         decfsz  gbl_cntrb, f
01B3   29AE           00974                 goto sid_WaitComm_SendDataA
                      00975         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01B4   3040               M     movlw BUFFERSIZE
01B5   00F4               M     movwf gbl_cntrb
01B6   0384           00976         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 1 
01B7   1784           00977         bsf             FSR, 7                                          ;Set Bank 1
01B8                  00978 sid_WaitComm_SendDataB
                      00979         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01B8   0800               M     movf INDF, w
01B9   00F8               M     movwf gbl_spdata
01BA   0384           00980         decf    FSR, F                                          ;Increment pointer
01BB   2113           00981         call    PutByte                                         ;Send data
01BC   0BF4           00982         decfsz  gbl_cntrb, f
01BD   29B8           00983                 goto sid_WaitComm_SendDataB
                      00984         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01BE   3040               M     movlw BUFFERSIZE
01BF   00F4               M     movwf gbl_cntrb
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C0   0A84           00985         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
01C1   1783           00986         bsf             STATUS, IRP                                     ;Set Bank 3
01C2                  00987 sid_WaitComm_SendDataC
                      00988         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01C2   0800               M     movf INDF, w
01C3   00F8               M     movwf gbl_spdata
01C4   0A84           00989         incf    FSR, F                                          ;Increment pointer
01C5   2113           00990         call    PutByte                                         ;Send data
01C6   0BF4           00991         decfsz  gbl_cntrb, f
01C7   29C2           00992                 goto sid_WaitComm_SendDataC
                      00993         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01C8   3040               M     movlw BUFFERSIZE
01C9   00F4               M     movwf gbl_cntrb
01CA   0384           00994         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 2
01CB   1384           00995         bcf             FSR, 7                                          ;Set Bank 2
01CC                  00996 sid_WaitComm_SendDataD
                      00997         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01CC   0800               M     movf INDF, w
01CD   00F8               M     movwf gbl_spdata
01CE   0384           00998         decf    FSR, F                                          ;Increment pointer
01CF   2113           00999         call    PutByte                                         ;Send data
01D0   0BF4           01000         decfsz  gbl_cntrb, f
01D1   29CC           01001                 goto sid_WaitComm_SendDataD
01D2                  01002 sid_WaitComm_SendDataExit
01D2   1383           01003         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
01D3   2237           01004         call    ChannelConfSend
01D4   298C           01005         goto    sid_GetByte
                      01006 
01D5                  01007 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      01008         skipEqLF B'11111001', gbl_spdata
01D5   0878               M         movf gbl_spdata, w
01D6   3AF9               M         xorlw B'11111001'
01D7   1D03               M         btfss STATUS, Z
01D8   29DE           01009                 goto sid_WaitComm_Rec
                      01010         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
01D9   30DD               M     movlw B'11011101'
01DA   00F8               M     movwf gbl_spdata
01DB   2113           01011         call    PutByte
01DC   221C           01012         call    ConfSend
01DD   298C           01013         goto    sid_GetByte
                      01014 
01DE                  01015 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      01016         skipEqLF B'11111010', gbl_spdata
01DE   0878               M         movf gbl_spdata, w
01DF   3AFA               M         xorlw B'11111010'
01E0   1D03               M         btfss STATUS, Z
01E1   29E7           01017                 goto sid_WaitComm_Break
                      01018         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
01E2   30DE               M     movlw B'11011110'
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E3   00F8               M     movwf gbl_spdata
01E4   2113           01019         call    PutByte
01E5   2211           01020         call    ConfReceiveRateOnly
01E6   298C           01021         goto    sid_GetByte
                      01022 
01E7                  01023 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      01024         skipEqLF B'11110011', gbl_spdata
01E7   0878               M         movf gbl_spdata, w
01E8   3AF3               M         xorlw B'11110011'
01E9   1D03               M         btfss STATUS, Z
01EA   298C           01025                 goto sid_GetByte                                ;No valid message sent
                      01026         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
01EB   30DC               M     movlw B'11011100'
01EC   00F8               M     movwf gbl_spdata
01ED   2113           01027         call    PutByte
01EE   298C           01028         goto    sid_GetByte
                      01029 
                      01030 
01EF                  01031 sid_Exit
01EF   1283 1303      01032         banksel BANK0
01F1   1486           01033         bsf ADC_PORT, CS                                        ;Unselect MAX118
01F2   1383           01034         bcf STATUS, IRP                                         ;Set indirection to bank 0 and/or bank 1
01F3   2243           01035         call    ChannelConfStore                        ;Update state of front panel switches/knobs
01F4   3001           01036         movlw   0x01                                            ;Set counters to 0x010101 for the case o
                            f
01F5   00F3           01037         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
01F6   00F4           01038         movwf   gbl_cntrb
01F7   00F5           01039         movwf   gbl_cntrc
01F8   2879           01040         goto    Main
                      01041 
                      01042 
                      01043 
                      01044 
                      01045 ;SampleRealTime is used to send a continuous stream of ADC samples to the PC app.
                      01046 ;The sample pairs for channel 0 and channel 1 are sent as acquired at the rate
                      01047 ; determined by the Timer 1 interrupt.  The sampling rate can not be higher than
                      01048 ; the interface character rate divide by 2, or samples will be lost!  Be sure to keep
                      01049 ; the interrupt rate, determined by sampleRate1:sampleRate2, below the effective
                      01050 ; character rate divided by 2 on the interface.  57.6K baud would support a maximum sample
                      01051 ; rate of approximately 2000Hz, or a 500uSec interrupt period.  Remember, there are
                      01052 ; two data characters for each interrupt, channel 0's ADC byte and channel 1's ADC byte.
                      01053 ;-----------------------------------------------------------------------------
01F9                  01054 SampleRealTime
01F9   2879           01055         goto    Main                                            ;Not implemented yet
                      01056 
                      01057 
                      01058 
                      01059 ;Receive and store the user settings from the PC application
                      01060 ;-----------------------------------------------------------------------------
01FA                  01061 ConfReceive
01FA   2102           01062         call GetByte                                            ;Receive ConfigLoc1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FB   0878           01063         movf gbl_spdata, w
01FC   39DF           01064         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      01065         if clockFreq == 20                                      ;if necessary
01FD   3820           01066                 iorlw 1 << CLOCKFREQBIT
                      01067         endif
01FE   00F0           01068         movwf gbl_configLoc1
01FF   1283 1303      01069         banksel BANK0
0201   2102           01070         call GetByte                                            ;Receive trigger delay
                      01071         MOVFF gbl_spdata, b0_triggerDelay1
0202   0878               M     movf gbl_spdata, w
0203   00E0               M     movwf b0_triggerDelay1
0204   2102           01072         call GetByte
                      01073         MOVFF gbl_spdata, b0_triggerDelay2
0205   0878               M     movf gbl_spdata, w
0206   00E1               M     movwf b0_triggerDelay2
0207   2102           01074         call GetByte
                      01075         MOVFF gbl_spdata, b0_triggerDelay3
0208   0878               M     movf gbl_spdata, w
0209   00E2               M     movwf b0_triggerDelay3
020A   2102           01076         call GetByte                                            ;Receive sample rate
                      01077         MOVFF gbl_spdata, gbl_sampleRate1
020B   0878               M     movf gbl_spdata, w
020C   00F1               M     movwf gbl_sampleRate1
020D   2102           01078         call GetByte
                      01079         MOVFF gbl_spdata, gbl_sampleRate2
020E   0878               M     movf gbl_spdata, w
020F   00F2               M     movwf gbl_sampleRate2
0210   0008           01080         return
                      01081 
                      01082 ;Receive user settings from the PC application. BUT, throw most of them away!
                      01083 ;This is used during the SampleIntDrvn routine to prevent changing
                      01084 ;of state during an interrupt driven acquisition that is in progress.
                      01085 ;However, allow the sampleRate1:2 variable to be changed.  This allows
                      01086 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      01087 ;the user might have to wait a long time before the sampling completed and
                      01088 ;the user would again get control.
                      01089 ;-----------------------------------------------------------------------------
0211                  01090 ConfReceiveRateOnly
0211   2102           01091         call GetByte                                            ;Receive ConfigLoc1
0212   2102           01092         call GetByte                                            ;Receive trigger delay
0213   2102           01093         call GetByte
0214   2102           01094         call GetByte
0215   2102           01095         call GetByte                                            ;Receive sample rate
                      01096         MOVFF gbl_spdata, gbl_sampleRate1
0216   0878               M     movf gbl_spdata, w
0217   00F1               M     movwf gbl_sampleRate1
0218   2102           01097         call GetByte
                      01098         MOVFF gbl_spdata, gbl_sampleRate2
0219   0878               M     movf gbl_spdata, w
021A   00F2               M     movwf gbl_sampleRate2
021B   0008           01099         return
                      01100 
                      01101 ;Send the current DSOscope configuration to the PC application
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01102 ;-----------------------------------------------------------------------------
021C                  01103 ConfSend
                      01104         ;Send number of datapoints (2 bytes)
                      01105         MOVLF high TOTALBUFFERSIZE, gbl_spdata
021C   3001               M     movlw high TOTALBUFFERSIZE
021D   00F8               M     movwf gbl_spdata
021E   2113           01106         call PutByte
                      01107         MOVLF low TOTALBUFFERSIZE, gbl_spdata
021F   3000               M     movlw low TOTALBUFFERSIZE
0220   00F8               M     movwf gbl_spdata
0221   2113           01108         call PutByte
                      01109         ;Send clock frequency configuration
                      01110         MOVFF gbl_configLoc1, gbl_spdata
0222   0870               M     movf gbl_configLoc1, w
0223   00F8               M     movwf gbl_spdata
0224   2113           01111         call PutByte
0225   1283 1303      01112         banksel BANK0
                      01113         MOVFF b0_triggerDelay1, gbl_spdata
0227   0860               M     movf b0_triggerDelay1, w
0228   00F8               M     movwf gbl_spdata
0229   2113           01114         call PutByte
                      01115         MOVFF b0_triggerDelay2, gbl_spdata
022A   0861               M     movf b0_triggerDelay2, w
022B   00F8               M     movwf gbl_spdata
022C   2113           01116         call PutByte
                      01117         MOVFF b0_triggerDelay3, gbl_spdata
022D   0862               M     movf b0_triggerDelay3, w
022E   00F8               M     movwf gbl_spdata
022F   2113           01118         call PutByte
                      01119         MOVFF gbl_sampleRate1, gbl_spdata
0230   0871               M     movf gbl_sampleRate1, w
0231   00F8               M     movwf gbl_spdata
0232   2113           01120         call PutByte
                      01121         MOVFF gbl_sampleRate2, gbl_spdata
0233   0872               M     movf gbl_sampleRate2, w
0234   00F8               M     movwf gbl_spdata
0235   2113           01122         call PutByte
0236   0008           01123         return
                      01124 
                      01125 ;Send the current DSOscope channel settings to the PC application
                      01126 ;-----------------------------------------------------------------------------
0237                  01127 ChannelConfSend
                      01128         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
0237   0879               M     movf gbl_dataConfig, w
0238   00F8               M     movwf gbl_spdata
0239   2113           01129         call PutByte
023A   01F8           01130         clrf gbl_spdata
023B   2113           01131         call PutByte                                            ;Channel 1 offset
023C   2113           01132         call PutByte                                            ;Channel 2 offset
023D   1283 1303      01133         banksel BANK0
                      01134         MOVFF b0_triggerLevel, gbl_spdata
023F   0863               M     movf b0_triggerLevel, w
0240   00F8               M     movwf gbl_spdata
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0241   2113           01135         call PutByte                                            ;Triggerlevel
0242   0008           01136         return
                      01137 
                      01138 
                      01139 ;Read and store the current front panel settings of the DSOscope
                      01140 ;-----------------------------------------------------------------------------
0243                  01141 ChannelConfStore
                      01142         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                      01143         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                      01144         ;                                                                               Channel 2 Scale 
                            (2) bits
                      01145         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                      01146         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                      01147         ;                                                                               Two least signif
                            icant bits = 0
0243   01F9           01148         clrf gbl_dataConfig
0244   1683 1303      01149         banksel TRISC                                   ;Access Bank1
0246   1507           01150         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0247   1087           01151         bcf TRISC, CH1SEL                                       ;Ch1Sel output
0248   1685           01152         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
0249   1205           01153         bcf TRISA, CH1SELG                                      ;Ch1Sel output
024A   1283 1303      01154         banksel ANALOG_SEL                              ;Access Bank0
024C   1087           01155         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
024D   1205           01156         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
024E   1779           01157         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
024F   1C05           01158         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0250   1379           01159                 bcf gbl_dataConfig, 6
0251   1C85           01160         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0252   1379           01161                 bcf gbl_dataConfig, 6
0253   1C85           01162         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0254   17F9           01163                 bsf gbl_dataConfig, 7
0255   1807           01164         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0256   15F9           01165                 bsf gbl_dataConfig, 3
0257   1487           01166         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0258   1605           01167         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01168 
0259   1683 1303      01169         banksel TRISC                                   ;Access Bank1
025B   1487           01170         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
025C   1107           01171         bcf TRISC, CH2SEL                                       ;Ch2Sel output
025D   1605           01172         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
025E   1285           01173         bcf TRISA, CH2SELG                                      ;Ch2Sel output
025F   1283 1303      01174         banksel ANALOG_SEL                              ;Access Bank0
0261   1107           01175         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
0262   1285           01176         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
0263   1679           01177         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
0264   1C05           01178         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0265   1279           01179                 bcf gbl_dataConfig, 4
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0266   1C85           01180         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0267   1279           01181                 bcf gbl_dataConfig, 4
0268   1C85           01182         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0269   16F9           01183                 bsf gbl_dataConfig, 5
026A   1807           01184         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
026B   1579           01185                 bsf gbl_dataConfig, 2
026C   1507           01186         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
026D   1685           01187         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01188 
                      01189         ;Next byte is Trigger Level
026E   1089           01190         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
026F   1506           01191         bsf ADC_PORT, ADDR1
0270   1186           01192         bcf ADC_PORT, ADDR2
0271   1086           01193         bcf ADC_PORT, CS                                        ;Select maxim ADC
0272   1009           01194         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
0273   0000           01195         nop                                                                     ;Wait 5
0274   0000           01196         nop
0275   0000           01197         nop
0276   0000           01198         nop
0277   0000           01199         nop
0278   0808           01200         movf ADC_DATAPORT, W                            ;Save trigger level
0279   1409           01201         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
027A   1486           01202         bsf ADC_PORT, CS                                        ;unselect maxim ADC
027B   1089           01203         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
027C   1106           01204         bcf ADC_PORT, ADDR1
027D   1186           01205         bcf ADC_PORT, ADDR2
027E   00E3           01206         movwf b0_triggerLevel
027F   0008           01207         return
                      01208 
                      01209 
                      01210 ;=============================================================================
                      01211 ;*****************************************************************************
                      01212 ;=============================================================================
                      01213 
                      01214 
                      01215 ;Sample Delayed
                      01216 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01217 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01218 ;-----------------------------------------------------------------------------
0280                  01219 SampleDelayed
0280   1009           01220         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01221         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
0281   303F               M     movlw BUFFERSIZE-1
0282   00F5               M     movwf gbl_cntrc
                      01222         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0283   3020               M     movlw BUFFERMIN
0284   0084               M     movwf FSR
                      01223         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0285   0872               M     movf gbl_sampleRate2, w
0286   00F3               M     movwf gbl_cntra
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01224         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0287   0871               M     movf gbl_sampleRate1, w
0288   00F4               M     movwf gbl_cntrb
0289   0000           01225         nop
028A   2118           01226         call Delay
028B                  01227 SampleDelayedLoopA
028B   0808           01228         movf ADC_DATAPORT, W                            ;Sample
028C   1409           01229         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
028D   1009           01230         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
028E   0080           01231         movwf INDF                                                      ;Save to QUEUE
028F   0A84           01232         incf FSR, F                                                     ;Increment QUEUE pointer
0290                  01233 StSampleDelayedLoopA
                      01234         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0290   0872               M     movf gbl_sampleRate2, w
0291   00F3               M     movwf gbl_cntra
                      01235         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0292   0871               M     movf gbl_sampleRate1, w
0293   00F4               M     movwf gbl_cntrb
0294   2118           01236         call Delay
0295   0BF5           01237         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0296   2A8B           01238                 goto SampleDelayedLoopA
0297   0000           01239         nop
0298   0808           01240         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
0299   1409           01241         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
029A   1009           01242         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
029B   0080           01243         movwf INDF                                                      ;Save to QUEUE
029C   1784           01244         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01245         MOVLF BUFFERSIZE-1, gbl_cntrc
029D   303F               M     movlw BUFFERSIZE-1
029E   00F5               M     movwf gbl_cntrc
                      01246         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
029F   0872               M     movf gbl_sampleRate2, w
02A0   00F3               M     movwf gbl_cntra
                      01247         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02A1   0871               M     movf gbl_sampleRate1, w
02A2   00F4               M     movwf gbl_cntrb
02A3   2118           01248         call Delay
02A4   0000           01249         nop
02A5                  01250 SampleDelayedLoopB
02A5   0808           01251         movf ADC_DATAPORT, W                            ;Sample
02A6   1409           01252         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02A7   1009           01253         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02A8   0080           01254         movwf INDF                                                      ;Save to QUEUE
02A9   0384           01255         decf FSR, F                                                     ;Increment QUEUE pointer
                      01256         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02AA   0872               M     movf gbl_sampleRate2, w
02AB   00F3               M     movwf gbl_cntra
                      01257         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02AC   0871               M     movf gbl_sampleRate1, w
02AD   00F4               M     movwf gbl_cntrb
02AE   2118           01258         call Delay
02AF   0BF5           01259         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02B0   2AA5           01260                 goto SampleDelayedLoopB
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1   0000           01261         nop
02B2   0808           01262         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
02B3   1409           01263         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02B4   1009           01264         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02B5   0080           01265         movwf INDF                                                      ;Save to QUEUE
02B6   1783           01266         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01267         MOVLF BUFFERSIZE-1, gbl_cntrc
02B7   303F               M     movlw BUFFERSIZE-1
02B8   00F5               M     movwf gbl_cntrc
                      01268         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02B9   0872               M     movf gbl_sampleRate2, w
02BA   00F3               M     movwf gbl_cntra
                      01269         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02BB   0871               M     movf gbl_sampleRate1, w
02BC   00F4               M     movwf gbl_cntrb
02BD   2118           01270         call Delay
02BE   0000           01271         nop
02BF                  01272 SampleDelayedLoopC
02BF   0808           01273         movf ADC_DATAPORT, W                            ;Sample
02C0   1409           01274         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02C1   1009           01275         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02C2   0080           01276         movwf INDF                                                      ;Save to QUEUE
02C3   0A84           01277         incf FSR, F                                                     ;Increment QUEUE pointer
                      01278         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02C4   0872               M     movf gbl_sampleRate2, w
02C5   00F3               M     movwf gbl_cntra
                      01279         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02C6   0871               M     movf gbl_sampleRate1, w
02C7   00F4               M     movwf gbl_cntrb
02C8   2118           01280         call Delay
02C9   0BF5           01281         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02CA   2ABF           01282                 goto SampleDelayedLoopC
02CB   0000           01283         nop
02CC   0808           01284         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
02CD   1409           01285         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02CE   1009           01286         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02CF   0080           01287         movwf INDF                                                      ;Save to QUEUE
02D0   1384           01288         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01289         MOVLF BUFFERSIZE-1, gbl_cntrc
02D1   303F               M     movlw BUFFERSIZE-1
02D2   00F5               M     movwf gbl_cntrc
                      01290         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02D3   0872               M     movf gbl_sampleRate2, w
02D4   00F3               M     movwf gbl_cntra
                      01291         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02D5   0871               M     movf gbl_sampleRate1, w
02D6   00F4               M     movwf gbl_cntrb
02D7   2118           01292         call Delay
02D8   0000           01293         nop
02D9                  01294 SampleDelayedLoopD
02D9   0808           01295         movf ADC_DATAPORT, W                            ;Sample
02DA   1409           01296         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02DB   1009           01297         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DC   0080           01298         movwf INDF                                                      ;Save to QUEUE
02DD   0384           01299         decf FSR, F                                                     ;Increment QUEUE pointer
                      01300         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02DE   0872               M     movf gbl_sampleRate2, w
02DF   00F3               M     movwf gbl_cntra
                      01301         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02E0   0871               M     movf gbl_sampleRate1, w
02E1   00F4               M     movwf gbl_cntrb
02E2   2118           01302         call Delay
02E3   0BF5           01303         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02E4   2AD9           01304                 goto SampleDelayedLoopD
02E5   0000           01305         nop
02E6   0808           01306         movf ADC_DATAPORT, W                            ;Last sample
02E7   1409           01307         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02E8   118A           01308         bcf PCLATH, 3                                           ;insure correct program memory page
02E9   120A           01309         bcf PCLATH, 4
02EA   2923           01310         goto ADCShutdown
                      01311 
                      01312 ;SampleXYDelayed
                      01313 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01314 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01315 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01316 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01317 ;-----------------------------------------------------------------------------
02EB                  01318 SampleXYDelayed
02EB   1009           01319         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
02EC   1489           01320         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01321         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
02ED   3020               M     movlw BUFFERMIN
02EE   0084               M     movwf FSR
02EF   0808           01322         movf ADC_DATAPORT, W                            ;Sample X
02F0   1409           01323         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F1   1009           01324         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F2   1089           01325         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02F3   0080           01326         movwf INDF                                                      ;Save to QUEUE
02F4   0A84           01327         incf FSR, F                                                     ;Increment QUEUE pointer
                      01328         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
02F5   301F               M     movlw BUFFERSIZE/2-1
02F6   00F5               M     movwf gbl_cntrc
                      01329         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02F7   0872               M     movf gbl_sampleRate2, w
02F8   00F3               M     movwf gbl_cntra
                      01330         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02F9   0871               M     movf gbl_sampleRate1, w
02FA   00F4               M     movwf gbl_cntrb
02FB   2118           01331         call Delay
02FC   0000           01332         nop
02FD                  01333 SampleXYDelayedLA
02FD   0808           01334         movf ADC_DATAPORT, W                            ;Sample Y
02FE   1409           01335         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02FF   1009           01336         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0300   1489           01337         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0301   0080           01338         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0302   0A84           01339         incf FSR, F                                                     ;Increment QUEUE pointer
0303   0808           01340         movf ADC_DATAPORT, W                            ;Sample X
0304   1409           01341         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0305   1009           01342         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0306   1089           01343         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0307   0080           01344         movwf INDF                                                      ;Save to QUEUE
0308   0A84           01345         incf FSR, F                                                     ;Increment QUEUE pointer
                      01346         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0309   0872               M     movf gbl_sampleRate2, w
030A   00F3               M     movwf gbl_cntra
                      01347         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
030B   0871               M     movf gbl_sampleRate1, w
030C   00F4               M     movwf gbl_cntrb
030D   2118           01348         call Delay
030E   0BF5           01349         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
030F   2AFD           01350                 goto SampleXYDelayedLA
0310   0000           01351         nop
0311   0808           01352         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0312   1409           01353         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0313   1009           01354         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0314   1489           01355         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0315   0080           01356         movwf INDF                                                      ;Save to QUEUE
0316   1784           01357         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0317   0808           01358         movf ADC_DATAPORT, W                            ;Sample X
0318   1409           01359         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0319   1009           01360         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
031A   1089           01361         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
031B   0080           01362         movwf INDF                                                      ;Save to QUEUE
031C   0384           01363         decf FSR, f                                                     ;Increment QUEUE pointer
                      01364         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
031D   301F               M     movlw BUFFERSIZE/2-1
031E   00F5               M     movwf gbl_cntrc
                      01365         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
031F   0872               M     movf gbl_sampleRate2, w
0320   00F3               M     movwf gbl_cntra
                      01366         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0321   0871               M     movf gbl_sampleRate1, w
0322   00F4               M     movwf gbl_cntrb
0323   2118           01367         call Delay
0324   0000           01368         nop
0325                  01369 SampleXYDelayedLB
0325   0808           01370         movf ADC_DATAPORT, W                            ;Sample Y
0326   1409           01371         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0327   1009           01372         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0328   1489           01373         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0329   0080           01374         movwf INDF                                                      ;Save to QUEUE
032A   0384           01375         decf FSR, F                                                     ;Increment QUEUE pointer
032B   0808           01376         movf ADC_DATAPORT, W                            ;Sample X
032C   1409           01377         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
032D   1009           01378         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
032E   1089           01379         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
032F   0080           01380         movwf INDF                                                      ;Save to QUEUE
0330   0384           01381         decf FSR, F                                                     ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01382         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0331   0872               M     movf gbl_sampleRate2, w
0332   00F3               M     movwf gbl_cntra
                      01383         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0333   0871               M     movf gbl_sampleRate1, w
0334   00F4               M     movwf gbl_cntrb
0335   2118           01384         call Delay
0336   0BF5           01385         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0337   2B25           01386                 goto SampleXYDelayedLB
0338   0000           01387         nop
0339   0808           01388         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
033A   1409           01389         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
033B   1009           01390         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
033C   1489           01391         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
033D   0080           01392         movwf INDF                                                      ;Save to QUEUE
033E   1783           01393         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
033F   0808           01394         movf ADC_DATAPORT, W                            ;Sample X
0340   1409           01395         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0341   1009           01396         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0342   1089           01397         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0343   0080           01398         movwf INDF                                                      ;Save to QUEUE
0344   0A84           01399         incf FSR, f                                                     ;Increment QUEUE pointer
                      01400         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0345   301F               M     movlw BUFFERSIZE/2-1
0346   00F5               M     movwf gbl_cntrc
                      01401         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0347   0872               M     movf gbl_sampleRate2, w
0348   00F3               M     movwf gbl_cntra
                      01402         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0349   0871               M     movf gbl_sampleRate1, w
034A   00F4               M     movwf gbl_cntrb
034B   2118           01403         call Delay
034C   0000           01404         nop
034D                  01405 SampleXYDelayedLC
034D   0808           01406         movf ADC_DATAPORT, W                            ;Sample Y
034E   1409           01407         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
034F   1009           01408         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0350   1489           01409         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0351   0080           01410         movwf INDF                                                      ;Save to QUEUE
0352   0A84           01411         incf FSR, F                                                     ;Increment QUEUE pointer
0353   0808           01412         movf ADC_DATAPORT, W                            ;Sample X
0354   1409           01413         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0355   1009           01414         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0356   1089           01415         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0357   0080           01416         movwf INDF                                                      ;Save to QUEUE
0358   0A84           01417         incf FSR, F                                                     ;Increment QUEUE pointer
                      01418         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0359   0872               M     movf gbl_sampleRate2, w
035A   00F3               M     movwf gbl_cntra
                      01419         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
035B   0871               M     movf gbl_sampleRate1, w
035C   00F4               M     movwf gbl_cntrb
035D   2118           01420         call Delay
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035E   0BF5           01421         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
035F   2B4D           01422                 goto SampleXYDelayedLC
0360   0000           01423         nop
0361   0808           01424         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0362   1409           01425         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0363   1009           01426         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0364   1489           01427         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0365   0080           01428         movwf INDF                                                      ;Save to QUEUE
0366   1384           01429         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0367   0808           01430         movf ADC_DATAPORT, W                            ;Sample X
0368   1409           01431         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0369   1009           01432         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
036A   1089           01433         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
036B   0080           01434         movwf INDF                                                      ;Save to QUEUE
036C   0384           01435         decf FSR, f                                                     ;Increment QUEUE pointer
                      01436         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
036D   301F               M     movlw BUFFERSIZE/2-1
036E   00F5               M     movwf gbl_cntrc
                      01437         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
036F   0872               M     movf gbl_sampleRate2, w
0370   00F3               M     movwf gbl_cntra
                      01438         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0371   0871               M     movf gbl_sampleRate1, w
0372   00F4               M     movwf gbl_cntrb
0373   2118           01439         call Delay
0374   0000           01440         nop
0375                  01441 SampleXYDelayedLD
0375   0808           01442         movf ADC_DATAPORT, W                            ;Sample Y
0376   1409           01443         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0377   1009           01444         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0378   1489           01445         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0379   0080           01446         movwf INDF                                                      ;Save to QUEUE
037A   0384           01447         decf FSR, F                                                     ;Increment QUEUE pointer
037B   0808           01448         movf ADC_DATAPORT, W                            ;Sample X
037C   1409           01449         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037D   1009           01450         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
037E   1089           01451         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
037F   0080           01452         movwf INDF                                                      ;Save to QUEUE
0380   0384           01453         decf FSR, F                                                     ;Increment QUEUE pointer
                      01454         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0381   0872               M     movf gbl_sampleRate2, w
0382   00F3               M     movwf gbl_cntra
                      01455         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0383   0871               M     movf gbl_sampleRate1, w
0384   00F4               M     movwf gbl_cntrb
0385   2118           01456         call Delay
0386   0BF5           01457         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0387   2B75           01458                 goto SampleXYDelayedLD
0388   0000           01459         nop
0389   0808           01460         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
038A   1409           01461         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
038B   118A           01462         bcf PCLATH, 3                                           ;insure correct program memory page
038C   120A           01463         bcf PCLATH, 4
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D   2923           01464         goto ADCShutdown
                      01465 
                      01466 ;Fast sample
                      01467 ;Sampling rate = 625 kHz with 20 MHz clock
                      01468 ;Sampling rate = 125 kHz with 4 MHz clock
                      01469 ;-----------------------------------------------------------------------------
038E                  01470 Sample625k
038E   1009           01471         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01472         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
038F   303F               M     movlw BUFFERSIZE-1
0390   00F3               M     movwf gbl_cntra
                      01473         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0391   3020               M     movlw BUFFERMIN
0392   0084               M     movwf FSR
0393   0000           01474         nop
0394                  01475 Sample625kLoopA
0394   0808           01476         movf ADC_DATAPORT, W                            ;Sample
0395   1409           01477         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0396   1009           01478         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0397   0080           01479         movwf INDF                                                      ;Save to QUEUE
0398   0A84           01480         incf FSR, F                                                     ;Increment QUEUE pointer
0399   0BF3           01481         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
039A   2B94           01482                 goto Sample625kLoopA
039B   0000           01483         nop
039C   0808           01484         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
039D   1409           01485         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
039E   1009           01486         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
039F   0080           01487         movwf INDF                                                      ;Save to QUEUE
03A0   1784           01488         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01489         MOVLF BUFFERSIZE-1, gbl_cntra
03A1   303F               M     movlw BUFFERSIZE-1
03A2   00F3               M     movwf gbl_cntra
03A3   0000           01490         nop
03A4                  01491 Sample625kLoopB
03A4   0808           01492         movf ADC_DATAPORT, W                            ;Sample
03A5   1409           01493         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A6   1009           01494         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03A7   0080           01495         movwf INDF                                                      ;Save to QUEUE
03A8   0384           01496         decf FSR, F                                                     ;Increment QUEUE pointer
03A9   0BF3           01497         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03AA   2BA4           01498                 goto Sample625kLoopB
03AB   0000           01499         nop
03AC   0808           01500         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
03AD   1409           01501         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03AE   1009           01502         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03AF   0080           01503         movwf INDF                                                      ;Save to QUEUE
03B0   1783           01504         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01505         MOVLF BUFFERSIZE-1, gbl_cntra
03B1   303F               M     movlw BUFFERSIZE-1
03B2   00F3               M     movwf gbl_cntra
03B3   0000           01506         nop
03B4                  01507 Sample625kLoopC
03B4   0808           01508         movf ADC_DATAPORT, W                            ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B5   1409           01509         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03B6   1009           01510         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03B7   0080           01511         movwf INDF                                                      ;Save to QUEUE
03B8   0A84           01512         incf FSR, F                                                     ;Increment QUEUE pointer
03B9   0BF3           01513         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03BA   2BB4           01514                 goto Sample625kLoopC
03BB   0000           01515         nop
03BC   0808           01516         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
03BD   1409           01517         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03BE   1009           01518         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03BF   0080           01519         movwf INDF                                                      ;Save to QUEUE
03C0   1384           01520         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01521         MOVLF BUFFERSIZE-1, gbl_cntra
03C1   303F               M     movlw BUFFERSIZE-1
03C2   00F3               M     movwf gbl_cntra
03C3   0000           01522         nop
03C4                  01523 Sample625kLoopD
03C4   0808           01524         movf ADC_DATAPORT, W                            ;Sample
03C5   1409           01525         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03C6   1009           01526         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03C7   0080           01527         movwf INDF                                                      ;Save to QUEUE
03C8   0384           01528         decf FSR, F                                                     ;Increment QUEUE pointer
03C9   0BF3           01529         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03CA   2BC4           01530                 goto Sample625kLoopD
03CB   0000           01531         nop
03CC   0808           01532         movf ADC_DATAPORT, W                            ;Last sample
03CD   1409           01533         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03CE   118A           01534         bcf PCLATH, 3                                           ;insure correct program memory page
03CF   120A           01535         bcf PCLATH, 4
03D0   2923           01536         goto ADCShutdown
                      01537 
                      01538 ;Fast sample
                      01539 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01540 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01541 ;or
                      01542 ;Sampling rate = 250 kHz with 20 MHz clock
                      01543 ;Sampling rate =  50 kHz with 4 MHz clock
                      01544 ;-----------------------------------------------------------------------------
03D1                  01545 Sample417k250k
03D1   1009           01546         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01547         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
03D2   303F               M     movlw BUFFERSIZE - 1
03D3   00F3               M     movwf gbl_cntra
                      01548         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03D4   3020               M     movlw BUFFERMIN
03D5   0084               M     movwf FSR
03D6   2BD7           01549         goto $ + 1                                                      ;Delay 3
03D7   1D70           01550         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
03D8   2BDA           01551                 goto Sample417kLoopA
03D9   2430           01552         call DelaySeven                                         ;Delay 9 cycles
03DA                  01553 Sample417kLoopA
03DA   0808           01554         movf ADC_DATAPORT, W                            ;Sample
03DB   1409           01555         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DC   1009           01556         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03DD   0080           01557         movwf INDF                                                      ;Save to QUEUE
03DE   0A84           01558         incf FSR, F                                                     ;Increment QUEUE pointer
03DF   1D70           01559         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03E0   2BE2           01560                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
03E1                  01561 Sample250kA
03E1   2430           01562         call DelaySeven                                         ;Delay 9 cycles
03E2                  01563 Sample417kA
03E2   0000           01564         nop
03E3   0BF3           01565         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03E4   2BDA           01566                 goto Sample417kLoopA
03E5   0000           01567         nop
03E6   0808           01568         movf ADC_DATAPORT, W                            ;Last sample bank 1
03E7   1409           01569         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E8   1009           01570         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03E9   0080           01571         movwf INDF                                                      ;Save to QUEUE
03EA   1784           01572         bsf FSR, 7                                                      ;Goto bank 2
                      01573         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03EB   303F               M     movlw BUFFERSIZE - 1
03EC   00F3               M     movwf gbl_cntra
03ED   2BEE           01574         goto $ + 1
03EE   1D70           01575         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03EF   2BF1           01576                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
03F0   2430           01577         call DelaySeven                                         ;Delay 9 cycles
03F1                  01578 Sample417kLoopB
03F1   0808           01579         movf ADC_DATAPORT, W                            ;Sample
03F2   1409           01580         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F3   1009           01581         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F4   0080           01582         movwf INDF                                                      ;Save to QUEUE
03F5   0384           01583         decf FSR, F                                                     ;Increment QUEUE pointer
03F6                  01584 StSample417kLoopB
03F6   1D70           01585         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03F7   2BF9           01586                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
03F8                  01587 Sample250kB
03F8   2430           01588         call DelaySeven                                         ;Delay 9 cycles
03F9                  01589 Sample417kB
03F9   0000           01590         nop
03FA   0BF3           01591         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03FB   2BF1           01592                 goto Sample417kLoopB
03FC   0000           01593         nop
03FD   0808           01594         movf ADC_DATAPORT, W                            ;Last sample bank 2
03FE   1409           01595         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FF   1009           01596         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0400   0080           01597         movwf INDF                                                      ;Save to QUEUE
0401   1783           01598         bsf STATUS, IRP                                         ;Goto bank 4
                      01599         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
0402   303F               M     movlw BUFFERSIZE - 1
0403   00F3               M     movwf gbl_cntra
0404   2C05           01600         goto $ + 1
0405   1D70           01601         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             on mode
0406   2C08           01602                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
0407   2430           01603         call DelaySeven                                         ;Delay 9 cycles
0408                  01604 Sample417kLoopC
0408   0808           01605         movf ADC_DATAPORT, W                            ;Sample
0409   1409           01606         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
040A   1009           01607         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
040B   0080           01608         movwf INDF                                                      ;Save to QUEUE
040C   0A84           01609         incf FSR, F                                                     ;Increment QUEUE pointer
040D                  01610 StSample417kLoopC
040D   1D70           01611         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
040E   2C10           01612                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
040F                  01613 Sample250kC
040F   2430           01614         call DelaySeven                                         ;Delay 9 cycles
0410                  01615 Sample417kC
0410   0000           01616         nop
0411   0BF3           01617         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0412   2C08           01618                 goto Sample417kLoopC
0413   0000           01619         nop
0414   0808           01620         movf ADC_DATAPORT, W                            ;Last sample bank 4
0415   1409           01621         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0416   1009           01622         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0417   0080           01623         movwf INDF                                                      ;Save to QUEUE
0418   1384           01624         bcf FSR, 7                                                      ;Goto bank 3
                      01625         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
0419   303F               M     movlw BUFFERSIZE - 1
041A   00F3               M     movwf gbl_cntra
041B   2C1C           01626         goto $ + 1
041C   1D70           01627         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
041D   2C1F           01628                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
041E   2430           01629         call DelaySeven                                         ;Delay 9 cycles
041F                  01630 Sample417kLoopD
041F   0808           01631         movf ADC_DATAPORT, W                            ;Sample
0420   1409           01632         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0421   1009           01633         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0422   0080           01634         movwf INDF                                                      ;Save to QUEUE
0423   0384           01635         decf FSR, F                                                     ;Increment QUEUE pointer
0424                  01636 StSample417kLoopD
0424   1D70           01637         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0425   2C27           01638                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
0426                  01639 Sample250kD
0426   2430           01640         call DelaySeven                                         ;Delay 9 cycles
0427                  01641 Sample417kD
0427   0000           01642         nop
0428   0BF3           01643         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0429   2C1F           01644                 goto Sample417kLoopD
042A   0000           01645         nop
042B   0808           01646         movf ADC_DATAPORT, W                            ;Last sample
042C   1409           01647         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
042D   118A           01648         bcf PCLATH, 3                                           ;insure correct program memory page
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042E   120A           01649         bcf PCLATH, 4
042F   2923           01650         goto ADCShutdown
                      01651 
                      01652 ;Delay Seven Cycles, helper to Sample417k250k
0430                  01653 DelaySeven
0430   2C31           01654         goto $ + 1                                                      ;7
                      01655 ;Delay Five Cycles, helper to SampleXY250k192k
0431                  01656 DelayFive
0431   0000           01657         nop                                                                     ;5
0432   2C33           01658         goto $ + 1                                              
                      01659 ;Delay Two Cycles, helper to SampleXY250k192k
0433                  01660 DelayTwo
0433   0008           01661         return                                                          ;2
                      01662 
                      01663 
                      01664 ;Fast sample XY
                      01665 ;Sampling rate = 250 kHz with 20 MHz clock
0434                  01666 SampleXY250k192k
0434   1009           01667         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0435   1489           01668         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01669         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0436   3020               M     movlw BUFFERMIN
0437   0084               M     movwf FSR
0438   0808           01670         movf ADC_DATAPORT, W                            ;Sample X
0439   1409           01671         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043A   1009           01672         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043B   1089           01673         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
043C   0080           01674         movwf INDF                                                      ;Save to QUEUE
043D   0A84           01675         incf FSR, F                                                     ;Increment QUEUE pointer
                      01676         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
043E   301F               M     movlw BUFFERSIZE/2-1
043F   00F5               M     movwf gbl_cntrc
0440   1C70           01677         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0441   2431           01678                 call DelayFive                                  ;192k
0442   2433           01679         call DelayTwo
0443                  01680 SampleXY250kLA
0443   0808           01681         movf ADC_DATAPORT, W                            ;Sample Y
0444   1409           01682         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0445   1009           01683         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0446   1489           01684         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0447   0080           01685         movwf INDF                                                      ;Save to QUEUE
0448   0A84           01686         incf FSR, F                                                     ;Increment QUEUE pointer
0449   0808           01687         movf ADC_DATAPORT, W                            ;Sample X
044A   1409           01688         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
044B   1009           01689         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
044C   1089           01690         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
044D   0080           01691         movwf INDF                                                      ;Save to QUEUE
044E   0A84           01692         incf FSR, F                                                     ;Increment QUEUE pointer
044F   1C70           01693         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0450   2431           01694                 call DelayFive                                  ;192k
0451   2C52           01695         goto $ + 1
0452   0000           01696         nop
0453   0BF5           01697         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0454   2C43           01698                 goto SampleXY250kLA
0455   0000           01699         nop
0456   0808           01700         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0457   1409           01701         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0458   1009           01702         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0459   1489           01703         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
045A   0080           01704         movwf INDF                                                      ;Save to QUEUE
045B   1784           01705         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
045C   0808           01706         movf ADC_DATAPORT, W                            ;Sample X
045D   1409           01707         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
045E   1009           01708         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
045F   1089           01709         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0460   0080           01710         movwf INDF                                                      ;Save to QUEUE
0461   0384           01711         decf FSR, f                                                     ;Increment QUEUE pointer
                      01712         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0462   301F               M     movlw BUFFERSIZE/2-1
0463   00F5               M     movwf gbl_cntrc
0464   1C70           01713         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0465   2431           01714                 call DelayFive                                  ;192k
0466   2433           01715         call DelayTwo
0467                  01716 SampleXY250kLB
0467   0808           01717         movf ADC_DATAPORT, W                            ;Sample Y
0468   1409           01718         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0469   1009           01719         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
046A   1489           01720         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
046B   0080           01721         movwf INDF                                                      ;Save to QUEUE
046C   0384           01722         decf FSR, F                                                     ;Increment QUEUE pointer
046D   0808           01723         movf ADC_DATAPORT, W                            ;Sample X
046E   1409           01724         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
046F   1009           01725         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0470   1089           01726         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0471   0080           01727         movwf INDF                                                      ;Save to QUEUE
0472   0384           01728         decf FSR, F                                                     ;Increment QUEUE pointer
0473   1C70           01729         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0474   2431           01730                 call DelayFive                                  ;192k
0475   2C76           01731         goto $ + 1
0476   0000           01732         nop
0477   0BF5           01733         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0478   2C67           01734                 goto SampleXY250kLB
0479   0000           01735         nop
047A   0808           01736         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
047B   1409           01737         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
047C   1009           01738         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
047D   1489           01739         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
047E   0080           01740         movwf INDF                                                      ;Save to QUEUE
047F   1783           01741         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0480   0808           01742         movf ADC_DATAPORT, W                            ;Sample X
0481   1409           01743         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0482   1009           01744         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0483   1089           01745         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0484   0080           01746         movwf INDF                                                      ;Save to QUEUE
0485   0A84           01747         incf FSR, f                                                     ;Increment QUEUE pointer
                      01748         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0486   301F               M     movlw BUFFERSIZE/2-1
0487   00F5               M     movwf gbl_cntrc
0488   1C70           01749         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0489   2431           01750                 call DelayFive                                  ;192k
048A   2433           01751         call DelayTwo
048B                  01752 SampleXY250kLC
048B   0808           01753         movf ADC_DATAPORT, W                            ;Sample Y
048C   1409           01754         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
048D   1009           01755         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
048E   1489           01756         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
048F   0080           01757         movwf INDF                                                      ;Save to QUEUE
0490   0A84           01758         incf FSR, F                                                     ;Increment QUEUE pointer
0491   0808           01759         movf ADC_DATAPORT, W                            ;Sample X
0492   1409           01760         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0493   1009           01761         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0494   1089           01762         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0495   0080           01763         movwf INDF                                                      ;Save to QUEUE
0496   0A84           01764         incf FSR, F                                                     ;Increment QUEUE pointer
0497   1C70           01765         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0498   2431           01766                 call DelayFive                                  ;192k
0499   2C9A           01767         goto $ + 1
049A   0000           01768         nop
049B   0BF5           01769         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
049C   2C8B           01770                 goto SampleXY250kLC
049D   0000           01771         nop
049E   0808           01772         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
049F   1409           01773         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A0   1009           01774         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A1   1489           01775         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04A2   0080           01776         movwf INDF                                                      ;Save to QUEUE
04A3   1384           01777         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
04A4   0808           01778         movf ADC_DATAPORT, W                            ;Sample X
04A5   1409           01779         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A6   1009           01780         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A7   1089           01781         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04A8   0080           01782         movwf INDF                                                      ;Save to QUEUE
04A9   0384           01783         decf FSR, f                                                     ;Increment QUEUE pointer
                      01784         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
04AA   301F               M     movlw BUFFERSIZE/2-1
04AB   00F5               M     movwf gbl_cntrc
04AC   1C70           01785         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04AD   2431           01786                 call DelayFive                                  ;192k
04AE   2433           01787         call DelayTwo
04AF                  01788 SampleXY250kLD
04AF   0808           01789         movf ADC_DATAPORT, W                            ;Sample Y
04B0   1409           01790         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04B1   1009           01791         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04B2   1489           01792         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04B3   0080           01793         movwf INDF                                                      ;Save to QUEUE
04B4   0384           01794         decf FSR, F                                                     ;Increment QUEUE pointer
04B5   0808           01795         movf ADC_DATAPORT, W                            ;Sample X
04B6   1409           01796         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04B7   1009           01797         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B8   1089           01798         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04B9   0080           01799         movwf INDF                                                      ;Save to QUEUE
04BA   0384           01800         decf FSR, F                                                     ;Increment QUEUE pointer
04BB   1C70           01801         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04BC   2431           01802                 call DelayFive                                  ;192k
04BD   2CBE           01803         goto $ + 1
04BE   0000           01804         nop
04BF   0BF5           01805         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04C0   2CAF           01806                 goto SampleXY250kLD
04C1   0000           01807         nop
04C2   0808           01808         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
04C3   1409           01809         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04C4   118A           01810         bcf PCLATH, 3                                           ;insure correct program memory page
04C5   120A           01811         bcf PCLATH, 4
04C6   2923           01812         goto ADCShutdown
                      01813 
                      01814 ;Fastest sample
                      01815 ;Sampling rate = 1 MHz with 20 MHz clock
                      01816 ;Sampling rate = 200 kHz with 4 MHz clock
                      01817 ;-----------------------------------------------------------------------------
04C7                  01818 Sample1M
04C7   1009           01819         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01820         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04C8   3020               M     movlw BUFFERMIN
04C9   0084               M     movwf FSR
04CA   0000           01821         nop
  0000                01822         local count
  00000001            01823         count = 1
                      01824         while count < BUFFERSIZE
04CB   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04CC   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CD   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04CE   0080           01828                 movwf INDF                                              ;Save to QUEUE
04CF   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01830                 count = count + 1
04D0   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D1   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D2   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04D3   0080           01828                 movwf INDF                                              ;Save to QUEUE
04D4   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01830                 count = count + 1
04D5   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D6   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D7   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04D8   0080           01828                 movwf INDF                                              ;Save to QUEUE
04D9   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01830                 count = count + 1
04DA   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04DB   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04DC   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04DD   0080           01828                 movwf INDF                                              ;Save to QUEUE
04DE   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01830                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04DF   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E0   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E1   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04E2   0080           01828                 movwf INDF                                              ;Save to QUEUE
04E3   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01830                 count = count + 1
04E4   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E5   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E6   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04E7   0080           01828                 movwf INDF                                              ;Save to QUEUE
04E8   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01830                 count = count + 1
04E9   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EA   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04EB   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04EC   0080           01828                 movwf INDF                                              ;Save to QUEUE
04ED   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01830                 count = count + 1
04EE   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EF   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F0   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04F1   0080           01828                 movwf INDF                                              ;Save to QUEUE
04F2   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01830                 count = count + 1
04F3   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F4   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F5   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04F6   0080           01828                 movwf INDF                                              ;Save to QUEUE
04F7   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01830                 count = count + 1
04F8   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F9   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FA   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
04FB   0080           01828                 movwf INDF                                              ;Save to QUEUE
04FC   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01830                 count = count + 1
04FD   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04FE   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FF   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0500   0080           01828                 movwf INDF                                              ;Save to QUEUE
0501   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01830                 count = count + 1
0502   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0503   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0504   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0505   0080           01828                 movwf INDF                                              ;Save to QUEUE
0506   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01830                 count = count + 1
0507   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0508   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0509   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
050A   0080           01828                 movwf INDF                                              ;Save to QUEUE
050B   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            01830                 count = count + 1
050C   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050D   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
050E   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
050F   0080           01828                 movwf INDF                                              ;Save to QUEUE
0510   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01830                 count = count + 1
0511   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0512   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0513   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0514   0080           01828                 movwf INDF                                              ;Save to QUEUE
0515   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01830                 count = count + 1
0516   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0517   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0518   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0519   0080           01828                 movwf INDF                                              ;Save to QUEUE
051A   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01830                 count = count + 1
051B   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
051C   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051D   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
051E   0080           01828                 movwf INDF                                              ;Save to QUEUE
051F   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01830                 count = count + 1
0520   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0521   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0522   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0523   0080           01828                 movwf INDF                                              ;Save to QUEUE
0524   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01830                 count = count + 1
0525   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0526   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0527   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0528   0080           01828                 movwf INDF                                              ;Save to QUEUE
0529   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01830                 count = count + 1
052A   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
052B   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
052C   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
052D   0080           01828                 movwf INDF                                              ;Save to QUEUE
052E   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01830                 count = count + 1
052F   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0530   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0531   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0532   0080           01828                 movwf INDF                                              ;Save to QUEUE
0533   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01830                 count = count + 1
0534   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0535   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0536   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0537   0080           01828                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0538   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01830                 count = count + 1
0539   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053A   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
053B   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
053C   0080           01828                 movwf INDF                                              ;Save to QUEUE
053D   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01830                 count = count + 1
053E   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053F   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0540   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0541   0080           01828                 movwf INDF                                              ;Save to QUEUE
0542   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01830                 count = count + 1
0543   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0544   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0545   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0546   0080           01828                 movwf INDF                                              ;Save to QUEUE
0547   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01830                 count = count + 1
0548   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0549   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054A   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
054B   0080           01828                 movwf INDF                                              ;Save to QUEUE
054C   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01830                 count = count + 1
054D   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
054E   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054F   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0550   0080           01828                 movwf INDF                                              ;Save to QUEUE
0551   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01830                 count = count + 1
0552   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0553   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0554   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0555   0080           01828                 movwf INDF                                              ;Save to QUEUE
0556   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01830                 count = count + 1
0557   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0558   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0559   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
055A   0080           01828                 movwf INDF                                              ;Save to QUEUE
055B   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01830                 count = count + 1
055C   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055D   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
055E   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
055F   0080           01828                 movwf INDF                                              ;Save to QUEUE
0560   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01830                 count = count + 1
0561   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0562   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0563   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0564   0080           01828                 movwf INDF                                              ;Save to QUEUE
0565   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01830                 count = count + 1
0566   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0567   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0568   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0569   0080           01828                 movwf INDF                                              ;Save to QUEUE
056A   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01830                 count = count + 1
056B   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
056C   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056D   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
056E   0080           01828                 movwf INDF                                              ;Save to QUEUE
056F   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01830                 count = count + 1
0570   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0571   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0572   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0573   0080           01828                 movwf INDF                                              ;Save to QUEUE
0574   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01830                 count = count + 1
0575   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0576   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0577   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0578   0080           01828                 movwf INDF                                              ;Save to QUEUE
0579   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01830                 count = count + 1
057A   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
057B   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
057C   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
057D   0080           01828                 movwf INDF                                              ;Save to QUEUE
057E   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01830                 count = count + 1
057F   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0580   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0581   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0582   0080           01828                 movwf INDF                                              ;Save to QUEUE
0583   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01830                 count = count + 1
0584   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0585   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0586   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0587   0080           01828                 movwf INDF                                              ;Save to QUEUE
0588   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01830                 count = count + 1
0589   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058A   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
058B   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
058C   0080           01828                 movwf INDF                                              ;Save to QUEUE
058D   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01830                 count = count + 1
058E   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058F   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0590   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0591   0080           01828                 movwf INDF                                              ;Save to QUEUE
0592   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01830                 count = count + 1
0593   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0594   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0595   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0596   0080           01828                 movwf INDF                                              ;Save to QUEUE
0597   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01830                 count = count + 1
0598   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0599   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059A   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
059B   0080           01828                 movwf INDF                                              ;Save to QUEUE
059C   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01830                 count = count + 1
059D   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
059E   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059F   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05A0   0080           01828                 movwf INDF                                              ;Save to QUEUE
05A1   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01830                 count = count + 1
05A2   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A3   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A4   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05A5   0080           01828                 movwf INDF                                              ;Save to QUEUE
05A6   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01830                 count = count + 1
05A7   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A8   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A9   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05AA   0080           01828                 movwf INDF                                              ;Save to QUEUE
05AB   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01830                 count = count + 1
05AC   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AD   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AE   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05AF   0080           01828                 movwf INDF                                              ;Save to QUEUE
05B0   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01830                 count = count + 1
05B1   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B2   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B3   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05B4   0080           01828                 movwf INDF                                              ;Save to QUEUE
05B5   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01830                 count = count + 1
05B6   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B7   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B8   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05B9   0080           01828                 movwf INDF                                              ;Save to QUEUE
05BA   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01830                 count = count + 1
05BB   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05BC   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BD   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05BE   0080           01828                 movwf INDF                                              ;Save to QUEUE
05BF   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01830                 count = count + 1
05C0   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C1   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C2   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05C3   0080           01828                 movwf INDF                                              ;Save to QUEUE
05C4   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01830                 count = count + 1
05C5   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C6   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C7   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05C8   0080           01828                 movwf INDF                                              ;Save to QUEUE
05C9   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01830                 count = count + 1
05CA   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CB   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CC   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05CD   0080           01828                 movwf INDF                                              ;Save to QUEUE
05CE   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01830                 count = count + 1
05CF   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D0   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D1   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05D2   0080           01828                 movwf INDF                                              ;Save to QUEUE
05D3   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01830                 count = count + 1
05D4   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D5   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D6   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05D7   0080           01828                 movwf INDF                                              ;Save to QUEUE
05D8   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01830                 count = count + 1
05D9   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DA   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DB   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05DC   0080           01828                 movwf INDF                                              ;Save to QUEUE
05DD   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01830                 count = count + 1
05DE   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DF   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E0   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05E1   0080           01828                 movwf INDF                                              ;Save to QUEUE
05E2   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01830                 count = count + 1
05E3   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E4   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E5   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05E6   0080           01828                 movwf INDF                                              ;Save to QUEUE
05E7   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01830                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05E8   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E9   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EA   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05EB   0080           01828                 movwf INDF                                              ;Save to QUEUE
05EC   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01830                 count = count + 1
05ED   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EE   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EF   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05F0   0080           01828                 movwf INDF                                              ;Save to QUEUE
05F1   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01830                 count = count + 1
05F2   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F3   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F4   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05F5   0080           01828                 movwf INDF                                              ;Save to QUEUE
05F6   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01830                 count = count + 1
05F7   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F8   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F9   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05FA   0080           01828                 movwf INDF                                              ;Save to QUEUE
05FB   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01830                 count = count + 1
05FC   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05FD   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05FE   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
05FF   0080           01828                 movwf INDF                                              ;Save to QUEUE
0600   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01830                 count = count + 1
0601   1409           01825                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0602   1009           01826                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0603   0808           01827                 movf ADC_DATAPORT, W                    ;Save Sample
0604   0080           01828                 movwf INDF                                              ;Save to QUEUE
0605   0A84           01829                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01830                 count = count + 1
                      01831         endw
0606   1409           01832         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
0607   1009           01833         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
0608   0808           01834         movf ADC_DATAPORT, W
0609   0080           01835         movwf INDF
060A   1784           01836         bsf FSR, 7                                                      ;goto bank 2
  00000001            01837         count = 1
                      01838         while count < BUFFERSIZE
060B   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
060C   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060D   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
060E   0080           01842                 movwf INDF                                              ;Save to QUEUE
060F   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01844                 count = count + 1
0610   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0611   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0612   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0613   0080           01842                 movwf INDF                                              ;Save to QUEUE
0614   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01844                 count = count + 1
0615   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0616   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0617   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0618   0080           01842                 movwf INDF                                              ;Save to QUEUE
0619   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01844                 count = count + 1
061A   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
061B   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
061C   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
061D   0080           01842                 movwf INDF                                              ;Save to QUEUE
061E   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01844                 count = count + 1
061F   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0620   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0621   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0622   0080           01842                 movwf INDF                                              ;Save to QUEUE
0623   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01844                 count = count + 1
0624   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0625   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0626   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0627   0080           01842                 movwf INDF                                              ;Save to QUEUE
0628   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01844                 count = count + 1
0629   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062A   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
062B   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
062C   0080           01842                 movwf INDF                                              ;Save to QUEUE
062D   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01844                 count = count + 1
062E   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062F   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0630   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0631   0080           01842                 movwf INDF                                              ;Save to QUEUE
0632   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01844                 count = count + 1
0633   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0634   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0635   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0636   0080           01842                 movwf INDF                                              ;Save to QUEUE
0637   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01844                 count = count + 1
0638   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0639   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063A   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
063B   0080           01842                 movwf INDF                                              ;Save to QUEUE
063C   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01844                 count = count + 1
063D   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
063E   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

063F   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0640   0080           01842                 movwf INDF                                              ;Save to QUEUE
0641   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01844                 count = count + 1
0642   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0643   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0644   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0645   0080           01842                 movwf INDF                                              ;Save to QUEUE
0646   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01844                 count = count + 1
0647   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0648   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0649   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
064A   0080           01842                 movwf INDF                                              ;Save to QUEUE
064B   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01844                 count = count + 1
064C   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064D   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064E   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
064F   0080           01842                 movwf INDF                                              ;Save to QUEUE
0650   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01844                 count = count + 1
0651   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0652   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0653   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0654   0080           01842                 movwf INDF                                              ;Save to QUEUE
0655   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01844                 count = count + 1
0656   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0657   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0658   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0659   0080           01842                 movwf INDF                                              ;Save to QUEUE
065A   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01844                 count = count + 1
065B   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065C   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065D   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
065E   0080           01842                 movwf INDF                                              ;Save to QUEUE
065F   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01844                 count = count + 1
0660   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0661   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0662   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0663   0080           01842                 movwf INDF                                              ;Save to QUEUE
0664   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01844                 count = count + 1
0665   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0666   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0667   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0668   0080           01842                 movwf INDF                                              ;Save to QUEUE
0669   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01844                 count = count + 1
066A   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

066B   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066C   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
066D   0080           01842                 movwf INDF                                              ;Save to QUEUE
066E   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01844                 count = count + 1
066F   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0670   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0671   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0672   0080           01842                 movwf INDF                                              ;Save to QUEUE
0673   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01844                 count = count + 1
0674   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0675   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0676   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0677   0080           01842                 movwf INDF                                              ;Save to QUEUE
0678   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01844                 count = count + 1
0679   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067A   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067B   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
067C   0080           01842                 movwf INDF                                              ;Save to QUEUE
067D   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01844                 count = count + 1
067E   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067F   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0680   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0681   0080           01842                 movwf INDF                                              ;Save to QUEUE
0682   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01844                 count = count + 1
0683   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0684   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0685   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0686   0080           01842                 movwf INDF                                              ;Save to QUEUE
0687   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01844                 count = count + 1
0688   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0689   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068A   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
068B   0080           01842                 movwf INDF                                              ;Save to QUEUE
068C   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01844                 count = count + 1
068D   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068E   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068F   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0690   0080           01842                 movwf INDF                                              ;Save to QUEUE
0691   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01844                 count = count + 1
0692   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0693   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0694   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0695   0080           01842                 movwf INDF                                              ;Save to QUEUE
0696   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01844                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0697   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0698   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0699   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
069A   0080           01842                 movwf INDF                                              ;Save to QUEUE
069B   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01844                 count = count + 1
069C   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069D   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069E   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
069F   0080           01842                 movwf INDF                                              ;Save to QUEUE
06A0   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01844                 count = count + 1
06A1   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A2   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A3   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06A4   0080           01842                 movwf INDF                                              ;Save to QUEUE
06A5   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01844                 count = count + 1
06A6   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A7   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A8   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06A9   0080           01842                 movwf INDF                                              ;Save to QUEUE
06AA   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01844                 count = count + 1
06AB   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AC   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AD   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06AE   0080           01842                 movwf INDF                                              ;Save to QUEUE
06AF   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01844                 count = count + 1
06B0   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B1   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B2   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06B3   0080           01842                 movwf INDF                                              ;Save to QUEUE
06B4   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01844                 count = count + 1
06B5   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B6   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B7   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06B8   0080           01842                 movwf INDF                                              ;Save to QUEUE
06B9   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01844                 count = count + 1
06BA   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BB   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BC   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06BD   0080           01842                 movwf INDF                                              ;Save to QUEUE
06BE   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01844                 count = count + 1
06BF   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C0   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C1   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06C2   0080           01842                 movwf INDF                                              ;Save to QUEUE
06C3   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            01844                 count = count + 1
06C4   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C5   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C6   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06C7   0080           01842                 movwf INDF                                              ;Save to QUEUE
06C8   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01844                 count = count + 1
06C9   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CA   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CB   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06CC   0080           01842                 movwf INDF                                              ;Save to QUEUE
06CD   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01844                 count = count + 1
06CE   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CF   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D0   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06D1   0080           01842                 movwf INDF                                              ;Save to QUEUE
06D2   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01844                 count = count + 1
06D3   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D4   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D5   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06D6   0080           01842                 movwf INDF                                              ;Save to QUEUE
06D7   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01844                 count = count + 1
06D8   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D9   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DA   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06DB   0080           01842                 movwf INDF                                              ;Save to QUEUE
06DC   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01844                 count = count + 1
06DD   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DE   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DF   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06E0   0080           01842                 movwf INDF                                              ;Save to QUEUE
06E1   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01844                 count = count + 1
06E2   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E3   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E4   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06E5   0080           01842                 movwf INDF                                              ;Save to QUEUE
06E6   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01844                 count = count + 1
06E7   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E8   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E9   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06EA   0080           01842                 movwf INDF                                              ;Save to QUEUE
06EB   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01844                 count = count + 1
06EC   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06ED   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EE   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06EF   0080           01842                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06F0   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01844                 count = count + 1
06F1   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F2   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F3   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06F4   0080           01842                 movwf INDF                                              ;Save to QUEUE
06F5   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01844                 count = count + 1
06F6   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F7   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F8   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06F9   0080           01842                 movwf INDF                                              ;Save to QUEUE
06FA   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01844                 count = count + 1
06FB   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FC   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FD   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
06FE   0080           01842                 movwf INDF                                              ;Save to QUEUE
06FF   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01844                 count = count + 1
0700   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0701   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0702   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0703   0080           01842                 movwf INDF                                              ;Save to QUEUE
0704   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01844                 count = count + 1
0705   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0706   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0707   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0708   0080           01842                 movwf INDF                                              ;Save to QUEUE
0709   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01844                 count = count + 1
070A   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070B   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070C   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
070D   0080           01842                 movwf INDF                                              ;Save to QUEUE
070E   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01844                 count = count + 1
070F   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0710   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0711   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0712   0080           01842                 movwf INDF                                              ;Save to QUEUE
0713   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01844                 count = count + 1
0714   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0715   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0716   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0717   0080           01842                 movwf INDF                                              ;Save to QUEUE
0718   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01844                 count = count + 1
0719   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071A   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071B   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

071C   0080           01842                 movwf INDF                                              ;Save to QUEUE
071D   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01844                 count = count + 1
071E   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071F   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0720   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0721   0080           01842                 movwf INDF                                              ;Save to QUEUE
0722   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01844                 count = count + 1
0723   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0724   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0725   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0726   0080           01842                 movwf INDF                                              ;Save to QUEUE
0727   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01844                 count = count + 1
0728   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0729   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072A   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
072B   0080           01842                 movwf INDF                                              ;Save to QUEUE
072C   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01844                 count = count + 1
072D   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072E   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072F   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0730   0080           01842                 movwf INDF                                              ;Save to QUEUE
0731   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01844                 count = count + 1
0732   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0733   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0734   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0735   0080           01842                 movwf INDF                                              ;Save to QUEUE
0736   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01844                 count = count + 1
0737   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0738   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0739   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
073A   0080           01842                 movwf INDF                                              ;Save to QUEUE
073B   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01844                 count = count + 1
073C   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073D   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073E   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
073F   0080           01842                 movwf INDF                                              ;Save to QUEUE
0740   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01844                 count = count + 1
0741   1409           01839                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0742   1009           01840                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0743   0808           01841                 movf ADC_DATAPORT, W                    ;Sample
0744   0080           01842                 movwf INDF                                              ;Save to QUEUE
0745   0384           01843                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01844                 count = count + 1
                      01845         endw
0746   1409           01846         bsf ADC_CONTROLPORT, RDD
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0747   1009           01847         bcf ADC_CONTROLPORT, RDD
0748   0808           01848         movf ADC_DATAPORT, W
0749   0080           01849         movwf INDF
074A   1783           01850         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01851         count = 1
                      01852         while count < BUFFERSIZE
074B   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074C   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074D   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
074E   0080           01856                 movwf INDF                                              ;Save to QUEUE
074F   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01858                 count = count + 1
0750   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0751   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0752   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0753   0080           01856                 movwf INDF                                              ;Save to QUEUE
0754   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01858                 count = count + 1
0755   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0756   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0757   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0758   0080           01856                 movwf INDF                                              ;Save to QUEUE
0759   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01858                 count = count + 1
075A   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075B   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075C   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
075D   0080           01856                 movwf INDF                                              ;Save to QUEUE
075E   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01858                 count = count + 1
075F   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0760   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0761   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0762   0080           01856                 movwf INDF                                              ;Save to QUEUE
0763   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01858                 count = count + 1
0764   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0765   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0766   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0767   0080           01856                 movwf INDF                                              ;Save to QUEUE
0768   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01858                 count = count + 1
0769   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076A   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076B   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
076C   0080           01856                 movwf INDF                                              ;Save to QUEUE
076D   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01858                 count = count + 1
076E   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076F   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0770   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0771   0080           01856                 movwf INDF                                              ;Save to QUEUE
0772   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            01858                 count = count + 1
0773   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0774   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0775   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0776   0080           01856                 movwf INDF                                              ;Save to QUEUE
0777   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01858                 count = count + 1
0778   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0779   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077A   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
077B   0080           01856                 movwf INDF                                              ;Save to QUEUE
077C   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01858                 count = count + 1
077D   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077E   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077F   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0780   0080           01856                 movwf INDF                                              ;Save to QUEUE
0781   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01858                 count = count + 1
0782   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0783   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0784   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0785   0080           01856                 movwf INDF                                              ;Save to QUEUE
0786   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01858                 count = count + 1
0787   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0788   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0789   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
078A   0080           01856                 movwf INDF                                              ;Save to QUEUE
078B   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01858                 count = count + 1
078C   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078D   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078E   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
078F   0080           01856                 movwf INDF                                              ;Save to QUEUE
0790   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01858                 count = count + 1
0791   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0792   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0793   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0794   0080           01856                 movwf INDF                                              ;Save to QUEUE
0795   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01858                 count = count + 1
0796   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0797   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0798   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0799   0080           01856                 movwf INDF                                              ;Save to QUEUE
079A   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01858                 count = count + 1
079B   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079C   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079D   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
079E   0080           01856                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

079F   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01858                 count = count + 1
07A0   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A1   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A2   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07A3   0080           01856                 movwf INDF                                              ;Save to QUEUE
07A4   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01858                 count = count + 1
07A5   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A6   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A7   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07A8   0080           01856                 movwf INDF                                              ;Save to QUEUE
07A9   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01858                 count = count + 1
07AA   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AB   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AC   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07AD   0080           01856                 movwf INDF                                              ;Save to QUEUE
07AE   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01858                 count = count + 1
07AF   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B0   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B1   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07B2   0080           01856                 movwf INDF                                              ;Save to QUEUE
07B3   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01858                 count = count + 1
07B4   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B5   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B6   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07B7   0080           01856                 movwf INDF                                              ;Save to QUEUE
07B8   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01858                 count = count + 1
07B9   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BA   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BB   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07BC   0080           01856                 movwf INDF                                              ;Save to QUEUE
07BD   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01858                 count = count + 1
07BE   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BF   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C0   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07C1   0080           01856                 movwf INDF                                              ;Save to QUEUE
07C2   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01858                 count = count + 1
07C3   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C4   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C5   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07C6   0080           01856                 movwf INDF                                              ;Save to QUEUE
07C7   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01858                 count = count + 1
07C8   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C9   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CA   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07CB   0080           01856                 movwf INDF                                              ;Save to QUEUE
07CC   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01858                 count = count + 1
07CD   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CE   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CF   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07D0   0080           01856                 movwf INDF                                              ;Save to QUEUE
07D1   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01858                 count = count + 1
07D2   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D3   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D4   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07D5   0080           01856                 movwf INDF                                              ;Save to QUEUE
07D6   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01858                 count = count + 1
07D7   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D8   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D9   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07DA   0080           01856                 movwf INDF                                              ;Save to QUEUE
07DB   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01858                 count = count + 1
07DC   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DD   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DE   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07DF   0080           01856                 movwf INDF                                              ;Save to QUEUE
07E0   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01858                 count = count + 1
07E1   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E2   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E3   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07E4   0080           01856                 movwf INDF                                              ;Save to QUEUE
07E5   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01858                 count = count + 1
07E6   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E7   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E8   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07E9   0080           01856                 movwf INDF                                              ;Save to QUEUE
07EA   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01858                 count = count + 1
07EB   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EC   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07ED   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07EE   0080           01856                 movwf INDF                                              ;Save to QUEUE
07EF   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01858                 count = count + 1
07F0   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F1   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F2   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07F3   0080           01856                 movwf INDF                                              ;Save to QUEUE
07F4   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01858                 count = count + 1
07F5   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F6   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07F7   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07F8   0080           01856                 movwf INDF                                              ;Save to QUEUE
07F9   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01858                 count = count + 1
07FA   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FB   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FC   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
07FD   0080           01856                 movwf INDF                                              ;Save to QUEUE
07FE   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01858                 count = count + 1
07FF   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0800   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0801   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0802   0080           01856                 movwf INDF                                              ;Save to QUEUE
0803   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01858                 count = count + 1
0804   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0805   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0806   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0807   0080           01856                 movwf INDF                                              ;Save to QUEUE
0808   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01858                 count = count + 1
0809   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080A   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080B   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
080C   0080           01856                 movwf INDF                                              ;Save to QUEUE
080D   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01858                 count = count + 1
080E   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080F   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0810   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0811   0080           01856                 movwf INDF                                              ;Save to QUEUE
0812   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01858                 count = count + 1
0813   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0814   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0815   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0816   0080           01856                 movwf INDF                                              ;Save to QUEUE
0817   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01858                 count = count + 1
0818   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0819   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081A   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
081B   0080           01856                 movwf INDF                                              ;Save to QUEUE
081C   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01858                 count = count + 1
081D   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081E   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081F   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0820   0080           01856                 movwf INDF                                              ;Save to QUEUE
0821   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01858                 count = count + 1
0822   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0823   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0824   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0825   0080           01856                 movwf INDF                                              ;Save to QUEUE
0826   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01858                 count = count + 1
0827   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0828   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0829   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
082A   0080           01856                 movwf INDF                                              ;Save to QUEUE
082B   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01858                 count = count + 1
082C   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082D   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082E   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
082F   0080           01856                 movwf INDF                                              ;Save to QUEUE
0830   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01858                 count = count + 1
0831   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0832   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0833   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0834   0080           01856                 movwf INDF                                              ;Save to QUEUE
0835   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01858                 count = count + 1
0836   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0837   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0838   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0839   0080           01856                 movwf INDF                                              ;Save to QUEUE
083A   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01858                 count = count + 1
083B   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083C   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083D   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
083E   0080           01856                 movwf INDF                                              ;Save to QUEUE
083F   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01858                 count = count + 1
0840   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0841   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0842   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0843   0080           01856                 movwf INDF                                              ;Save to QUEUE
0844   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01858                 count = count + 1
0845   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0846   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0847   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0848   0080           01856                 movwf INDF                                              ;Save to QUEUE
0849   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01858                 count = count + 1
084A   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084B   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084C   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
084D   0080           01856                 movwf INDF                                              ;Save to QUEUE
084E   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01858                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

084F   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0850   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0851   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0852   0080           01856                 movwf INDF                                              ;Save to QUEUE
0853   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01858                 count = count + 1
0854   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0855   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0856   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0857   0080           01856                 movwf INDF                                              ;Save to QUEUE
0858   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01858                 count = count + 1
0859   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085A   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085B   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
085C   0080           01856                 movwf INDF                                              ;Save to QUEUE
085D   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01858                 count = count + 1
085E   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085F   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0860   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0861   0080           01856                 movwf INDF                                              ;Save to QUEUE
0862   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01858                 count = count + 1
0863   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0864   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0865   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0866   0080           01856                 movwf INDF                                              ;Save to QUEUE
0867   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01858                 count = count + 1
0868   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0869   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086A   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
086B   0080           01856                 movwf INDF                                              ;Save to QUEUE
086C   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01858                 count = count + 1
086D   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086E   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086F   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0870   0080           01856                 movwf INDF                                              ;Save to QUEUE
0871   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01858                 count = count + 1
0872   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0873   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0874   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0875   0080           01856                 movwf INDF                                              ;Save to QUEUE
0876   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01858                 count = count + 1
0877   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0878   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0879   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
087A   0080           01856                 movwf INDF                                              ;Save to QUEUE
087B   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003E            01858                 count = count + 1
087C   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087D   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087E   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
087F   0080           01856                 movwf INDF                                              ;Save to QUEUE
0880   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01858                 count = count + 1
0881   1409           01853                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0882   1009           01854                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0883   0808           01855                 movf ADC_DATAPORT, W                    ;Sample
0884   0080           01856                 movwf INDF                                              ;Save to QUEUE
0885   0A84           01857                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01858                 count = count + 1
                      01859         endw
0886   1409           01860         bsf ADC_CONTROLPORT, RDD
0887   1009           01861         bcf ADC_CONTROLPORT, RDD
0888   0808           01862         movf ADC_DATAPORT, W                            ;Sample
0889   0080           01863         movwf INDF
088A   1384           01864         bcf FSR, 7                                                      ;goto bank 3
  00000001            01865         count = 1
                      01866         while count < D'14'
088B   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088C   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088D   0808           01869                 movf ADC_DATAPORT, W
088E   0080           01870                 movwf INDF                                              ;Save to QUEUE
088F   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01872                 count = count + 1
0890   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0891   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0892   0808           01869                 movf ADC_DATAPORT, W
0893   0080           01870                 movwf INDF                                              ;Save to QUEUE
0894   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01872                 count = count + 1
0895   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0896   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0897   0808           01869                 movf ADC_DATAPORT, W
0898   0080           01870                 movwf INDF                                              ;Save to QUEUE
0899   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01872                 count = count + 1
089A   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089B   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089C   0808           01869                 movf ADC_DATAPORT, W
089D   0080           01870                 movwf INDF                                              ;Save to QUEUE
089E   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01872                 count = count + 1
089F   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A0   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A1   0808           01869                 movf ADC_DATAPORT, W
08A2   0080           01870                 movwf INDF                                              ;Save to QUEUE
08A3   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01872                 count = count + 1
08A4   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A5   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08A6   0808           01869                 movf ADC_DATAPORT, W
08A7   0080           01870                 movwf INDF                                              ;Save to QUEUE
08A8   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01872                 count = count + 1
08A9   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AA   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AB   0808           01869                 movf ADC_DATAPORT, W
08AC   0080           01870                 movwf INDF                                              ;Save to QUEUE
08AD   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01872                 count = count + 1
08AE   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AF   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B0   0808           01869                 movf ADC_DATAPORT, W
08B1   0080           01870                 movwf INDF                                              ;Save to QUEUE
08B2   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01872                 count = count + 1
08B3   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B4   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B5   0808           01869                 movf ADC_DATAPORT, W
08B6   0080           01870                 movwf INDF                                              ;Save to QUEUE
08B7   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01872                 count = count + 1
08B8   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B9   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BA   0808           01869                 movf ADC_DATAPORT, W
08BB   0080           01870                 movwf INDF                                              ;Save to QUEUE
08BC   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01872                 count = count + 1
08BD   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BE   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BF   0808           01869                 movf ADC_DATAPORT, W
08C0   0080           01870                 movwf INDF                                              ;Save to QUEUE
08C1   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01872                 count = count + 1
08C2   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C3   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C4   0808           01869                 movf ADC_DATAPORT, W
08C5   0080           01870                 movwf INDF                                              ;Save to QUEUE
08C6   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01872                 count = count + 1
08C7   1409           01867                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C8   1009           01868                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C9   0808           01869                 movf ADC_DATAPORT, W
08CA   0080           01870                 movwf INDF                                              ;Save to QUEUE
08CB   0384           01871                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01872                 count = count + 1
                      01873         endw
08CC                  01874 Sample1MhzEnd
                      01875         while count < BUFFERSIZE
08CC   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CD   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CE   0808           01878                 movf ADC_DATAPORT, W
08CF   0080           01879                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08D0   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01881                 count = count + 1
08D1   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D2   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D3   0808           01878                 movf ADC_DATAPORT, W
08D4   0080           01879                 movwf INDF                                              ;Save to QUEUE
08D5   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01881                 count = count + 1
08D6   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D7   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D8   0808           01878                 movf ADC_DATAPORT, W
08D9   0080           01879                 movwf INDF                                              ;Save to QUEUE
08DA   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01881                 count = count + 1
08DB   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DC   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DD   0808           01878                 movf ADC_DATAPORT, W
08DE   0080           01879                 movwf INDF                                              ;Save to QUEUE
08DF   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01881                 count = count + 1
08E0   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E1   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E2   0808           01878                 movf ADC_DATAPORT, W
08E3   0080           01879                 movwf INDF                                              ;Save to QUEUE
08E4   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01881                 count = count + 1
08E5   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E6   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E7   0808           01878                 movf ADC_DATAPORT, W
08E8   0080           01879                 movwf INDF                                              ;Save to QUEUE
08E9   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01881                 count = count + 1
08EA   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EB   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EC   0808           01878                 movf ADC_DATAPORT, W
08ED   0080           01879                 movwf INDF                                              ;Save to QUEUE
08EE   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01881                 count = count + 1
08EF   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F0   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F1   0808           01878                 movf ADC_DATAPORT, W
08F2   0080           01879                 movwf INDF                                              ;Save to QUEUE
08F3   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01881                 count = count + 1
08F4   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F5   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F6   0808           01878                 movf ADC_DATAPORT, W
08F7   0080           01879                 movwf INDF                                              ;Save to QUEUE
08F8   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01881                 count = count + 1
08F9   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FA   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FB   0808           01878                 movf ADC_DATAPORT, W
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08FC   0080           01879                 movwf INDF                                              ;Save to QUEUE
08FD   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01881                 count = count + 1
08FE   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FF   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0900   0808           01878                 movf ADC_DATAPORT, W
0901   0080           01879                 movwf INDF                                              ;Save to QUEUE
0902   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01881                 count = count + 1
0903   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0904   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0905   0808           01878                 movf ADC_DATAPORT, W
0906   0080           01879                 movwf INDF                                              ;Save to QUEUE
0907   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01881                 count = count + 1
0908   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0909   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090A   0808           01878                 movf ADC_DATAPORT, W
090B   0080           01879                 movwf INDF                                              ;Save to QUEUE
090C   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01881                 count = count + 1
090D   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090E   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090F   0808           01878                 movf ADC_DATAPORT, W
0910   0080           01879                 movwf INDF                                              ;Save to QUEUE
0911   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01881                 count = count + 1
0912   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0913   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0914   0808           01878                 movf ADC_DATAPORT, W
0915   0080           01879                 movwf INDF                                              ;Save to QUEUE
0916   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01881                 count = count + 1
0917   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0918   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0919   0808           01878                 movf ADC_DATAPORT, W
091A   0080           01879                 movwf INDF                                              ;Save to QUEUE
091B   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01881                 count = count + 1
091C   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091D   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091E   0808           01878                 movf ADC_DATAPORT, W
091F   0080           01879                 movwf INDF                                              ;Save to QUEUE
0920   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01881                 count = count + 1
0921   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0922   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0923   0808           01878                 movf ADC_DATAPORT, W
0924   0080           01879                 movwf INDF                                              ;Save to QUEUE
0925   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01881                 count = count + 1
0926   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0927   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0928   0808           01878                 movf ADC_DATAPORT, W
0929   0080           01879                 movwf INDF                                              ;Save to QUEUE
092A   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01881                 count = count + 1
092B   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092C   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092D   0808           01878                 movf ADC_DATAPORT, W
092E   0080           01879                 movwf INDF                                              ;Save to QUEUE
092F   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01881                 count = count + 1
0930   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0931   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0932   0808           01878                 movf ADC_DATAPORT, W
0933   0080           01879                 movwf INDF                                              ;Save to QUEUE
0934   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01881                 count = count + 1
0935   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0936   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0937   0808           01878                 movf ADC_DATAPORT, W
0938   0080           01879                 movwf INDF                                              ;Save to QUEUE
0939   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01881                 count = count + 1
093A   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093B   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093C   0808           01878                 movf ADC_DATAPORT, W
093D   0080           01879                 movwf INDF                                              ;Save to QUEUE
093E   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01881                 count = count + 1
093F   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0940   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0941   0808           01878                 movf ADC_DATAPORT, W
0942   0080           01879                 movwf INDF                                              ;Save to QUEUE
0943   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01881                 count = count + 1
0944   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0945   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0946   0808           01878                 movf ADC_DATAPORT, W
0947   0080           01879                 movwf INDF                                              ;Save to QUEUE
0948   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01881                 count = count + 1
0949   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094A   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094B   0808           01878                 movf ADC_DATAPORT, W
094C   0080           01879                 movwf INDF                                              ;Save to QUEUE
094D   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01881                 count = count + 1
094E   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094F   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0950   0808           01878                 movf ADC_DATAPORT, W
0951   0080           01879                 movwf INDF                                              ;Save to QUEUE
0952   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01881                 count = count + 1
0953   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0954   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0955   0808           01878                 movf ADC_DATAPORT, W
0956   0080           01879                 movwf INDF                                              ;Save to QUEUE
0957   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01881                 count = count + 1
0958   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0959   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095A   0808           01878                 movf ADC_DATAPORT, W
095B   0080           01879                 movwf INDF                                              ;Save to QUEUE
095C   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01881                 count = count + 1
095D   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095E   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095F   0808           01878                 movf ADC_DATAPORT, W
0960   0080           01879                 movwf INDF                                              ;Save to QUEUE
0961   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01881                 count = count + 1
0962   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0963   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0964   0808           01878                 movf ADC_DATAPORT, W
0965   0080           01879                 movwf INDF                                              ;Save to QUEUE
0966   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01881                 count = count + 1
0967   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0968   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0969   0808           01878                 movf ADC_DATAPORT, W
096A   0080           01879                 movwf INDF                                              ;Save to QUEUE
096B   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01881                 count = count + 1
096C   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096D   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096E   0808           01878                 movf ADC_DATAPORT, W
096F   0080           01879                 movwf INDF                                              ;Save to QUEUE
0970   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01881                 count = count + 1
0971   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0972   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0973   0808           01878                 movf ADC_DATAPORT, W
0974   0080           01879                 movwf INDF                                              ;Save to QUEUE
0975   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01881                 count = count + 1
0976   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0977   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0978   0808           01878                 movf ADC_DATAPORT, W
0979   0080           01879                 movwf INDF                                              ;Save to QUEUE
097A   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01881                 count = count + 1
097B   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097C   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097D   0808           01878                 movf ADC_DATAPORT, W
097E   0080           01879                 movwf INDF                                              ;Save to QUEUE
097F   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01881                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0980   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0981   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0982   0808           01878                 movf ADC_DATAPORT, W
0983   0080           01879                 movwf INDF                                              ;Save to QUEUE
0984   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01881                 count = count + 1
0985   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0986   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0987   0808           01878                 movf ADC_DATAPORT, W
0988   0080           01879                 movwf INDF                                              ;Save to QUEUE
0989   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01881                 count = count + 1
098A   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098B   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098C   0808           01878                 movf ADC_DATAPORT, W
098D   0080           01879                 movwf INDF                                              ;Save to QUEUE
098E   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01881                 count = count + 1
098F   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0990   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0991   0808           01878                 movf ADC_DATAPORT, W
0992   0080           01879                 movwf INDF                                              ;Save to QUEUE
0993   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01881                 count = count + 1
0994   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0995   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0996   0808           01878                 movf ADC_DATAPORT, W
0997   0080           01879                 movwf INDF                                              ;Save to QUEUE
0998   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01881                 count = count + 1
0999   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099A   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099B   0808           01878                 movf ADC_DATAPORT, W
099C   0080           01879                 movwf INDF                                              ;Save to QUEUE
099D   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01881                 count = count + 1
099E   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099F   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A0   0808           01878                 movf ADC_DATAPORT, W
09A1   0080           01879                 movwf INDF                                              ;Save to QUEUE
09A2   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01881                 count = count + 1
09A3   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A4   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A5   0808           01878                 movf ADC_DATAPORT, W
09A6   0080           01879                 movwf INDF                                              ;Save to QUEUE
09A7   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01881                 count = count + 1
09A8   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A9   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AA   0808           01878                 movf ADC_DATAPORT, W
09AB   0080           01879                 movwf INDF                                              ;Save to QUEUE
09AC   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003B            01881                 count = count + 1
09AD   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AE   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AF   0808           01878                 movf ADC_DATAPORT, W
09B0   0080           01879                 movwf INDF                                              ;Save to QUEUE
09B1   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01881                 count = count + 1
09B2   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B3   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B4   0808           01878                 movf ADC_DATAPORT, W
09B5   0080           01879                 movwf INDF                                              ;Save to QUEUE
09B6   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01881                 count = count + 1
09B7   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B8   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B9   0808           01878                 movf ADC_DATAPORT, W
09BA   0080           01879                 movwf INDF                                              ;Save to QUEUE
09BB   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01881                 count = count + 1
09BC   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09BD   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09BE   0808           01878                 movf ADC_DATAPORT, W
09BF   0080           01879                 movwf INDF                                              ;Save to QUEUE
09C0   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01881                 count = count + 1
09C1   1409           01876                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C2   1009           01877                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C3   0808           01878                 movf ADC_DATAPORT, W
09C4   0080           01879                 movwf INDF                                              ;Save to QUEUE
09C5   0384           01880                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01881                 count = count + 1
                      01882         endw
09C6   1409           01883         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09C7   0808           01884         movf ADC_DATAPORT, W                            ;Sample
09C8   118A           01885         bcf PCLATH, 3                                           ;insure correct program memory page
09C9   120A           01886         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
09CA   2923           01887         goto ADCShutdown
                      01888 
                      01889 ;Fastest XY sample
                      01890 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01891 ;Sampling rate =  83.333 kHz with 4 MHz clock
09CB                  01892 SampleXY417k
09CB   1009           01893         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
09CC   1489           01894         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01895         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
09CD   3020               M     movlw BUFFERMIN
09CE   0084               M     movwf FSR
09CF   0808           01896         movf ADC_DATAPORT, W                            ;Sample X
09D0   1409           01897         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09D1   1009           01898         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
09D2   1089           01899         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
09D3   0080           01900         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09D4   0A84           01901         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            01902         count = 1
                      01903         while count < BUFFERSIZE / 2
09D5   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
09D6   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D7   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D8   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09D9   0080           01908                 movwf INDF                                              ;Save to QUEUE
09DA   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
09DB   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
09DC   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DD   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DE   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09DF   0080           01914                 movwf INDF                                              ;Save to QUEUE
09E0   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01916                 count = count + 1
09E1   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
09E2   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E3   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E4   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09E5   0080           01908                 movwf INDF                                              ;Save to QUEUE
09E6   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
09E7   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
09E8   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E9   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EA   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09EB   0080           01914                 movwf INDF                                              ;Save to QUEUE
09EC   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01916                 count = count + 1
09ED   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
09EE   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EF   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F0   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09F1   0080           01908                 movwf INDF                                              ;Save to QUEUE
09F2   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
09F3   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
09F4   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F5   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F6   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F7   0080           01914                 movwf INDF                                              ;Save to QUEUE
09F8   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01916                 count = count + 1
09F9   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
09FA   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FB   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FC   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09FD   0080           01908                 movwf INDF                                              ;Save to QUEUE
09FE   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
09FF   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A00   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A01   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A02   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A03   0080           01914                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A04   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01916                 count = count + 1
0A05   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A06   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A07   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A08   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A09   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A0A   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A0B   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A0C   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0D   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0E   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A0F   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A10   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01916                 count = count + 1
0A11   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A12   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A13   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A14   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A15   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A16   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A17   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A18   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A19   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1A   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A1B   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A1C   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01916                 count = count + 1
0A1D   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A1E   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1F   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A20   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A21   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A22   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A23   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A24   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A25   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A26   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A27   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A28   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01916                 count = count + 1
0A29   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A2A   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2B   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2C   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A2D   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A2E   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A2F   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A30   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A31   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A32   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A33   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A34   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            01916                 count = count + 1
0A35   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A36   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A37   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A38   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A39   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A3A   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A3B   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A3C   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3D   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3E   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A3F   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A40   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01916                 count = count + 1
0A41   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A42   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A43   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A44   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A45   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A46   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A47   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A48   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A49   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4A   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A4B   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A4C   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01916                 count = count + 1
0A4D   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A4E   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4F   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A50   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A51   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A52   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A53   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A54   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A55   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A56   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A57   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A58   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01916                 count = count + 1
0A59   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A5A   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5B   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5C   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A5D   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A5E   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A5F   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A60   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A61   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A62   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A63   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A64   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01916                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A65   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A66   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A67   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A68   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A69   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A6A   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A6B   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A6C   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6D   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6E   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A6F   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A70   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01916                 count = count + 1
0A71   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A72   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A73   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A74   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A75   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A76   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A77   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A78   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A79   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7A   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A7B   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A7C   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01916                 count = count + 1
0A7D   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A7E   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7F   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A80   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A81   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A82   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A83   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A84   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A85   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A86   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A87   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A88   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01916                 count = count + 1
0A89   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0A8A   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8B   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8C   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A8D   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A8E   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A8F   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A90   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A91   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A92   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A93   0080           01914                 movwf INDF                                              ;Save to QUEUE
0A94   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01916                 count = count + 1
0A95   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A96   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A97   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A98   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A99   0080           01908                 movwf INDF                                              ;Save to QUEUE
0A9A   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0A9B   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0A9C   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9D   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9E   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A9F   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AA0   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01916                 count = count + 1
0AA1   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AA2   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA3   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA4   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AA5   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AA6   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AA7   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AA8   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA9   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAA   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AAB   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AAC   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01916                 count = count + 1
0AAD   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AAE   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAF   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB0   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB1   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AB2   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AB3   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AB4   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB5   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB6   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB7   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AB8   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01916                 count = count + 1
0AB9   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0ABA   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABB   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABC   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABD   0080           01908                 movwf INDF                                              ;Save to QUEUE
0ABE   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0ABF   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AC0   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC1   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC2   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC3   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AC4   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01916                 count = count + 1
0AC5   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AC6   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AC7   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC8   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC9   0080           01908                 movwf INDF                                              ;Save to QUEUE
0ACA   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0ACB   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0ACC   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACD   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACE   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ACF   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AD0   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01916                 count = count + 1
0AD1   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AD2   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD3   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD4   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD5   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AD6   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AD7   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AD8   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD9   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADA   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ADB   0080           01914                 movwf INDF                                              ;Save to QUEUE
0ADC   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01916                 count = count + 1
0ADD   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0ADE   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADF   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE0   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE1   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AE2   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AE3   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AE4   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE5   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE6   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE7   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AE8   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01916                 count = count + 1
0AE9   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AEA   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEB   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AEC   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AED   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AEE   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AEF   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AF0   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF1   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF2   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF3   0080           01914                 movwf INDF                                              ;Save to QUEUE
0AF4   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01916                 count = count + 1
0AF5   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0AF6   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF7   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AF8   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF9   0080           01908                 movwf INDF                                              ;Save to QUEUE
0AFA   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0AFB   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0AFC   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFD   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFE   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AFF   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B00   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01916                 count = count + 1
0B01   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B02   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B03   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B04   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B05   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B06   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B07   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B08   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B09   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0A   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B0B   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B0C   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01916                 count = count + 1
0B0D   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B0E   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0F   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B10   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B11   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B12   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B13   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B14   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B15   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B16   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B17   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B18   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01916                 count = count + 1
0B19   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B1A   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1B   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1C   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1D   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B1E   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B1F   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B20   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B21   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B22   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B23   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B24   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01916                 count = count + 1
0B25   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B26   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B27   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B28   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B29   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B2A   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B2B   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B2C   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2D   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2E   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B2F   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B30   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01916                 count = count + 1
0B31   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B32   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B33   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B34   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B35   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B36   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B37   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B38   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B39   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B3A   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B3B   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B3C   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01916                 count = count + 1
0B3D   0808           01904                 movf ADC_DATAPORT, W                    ;Sample Y
0B3E   1409           01905                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B3F   1009           01906                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B40   1489           01907                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B41   0080           01908                 movwf INDF                                              ;Save to QUEUE
0B42   0A84           01909                 incf FSR, F                                             ;Increment QUEUE pointer
0B43   0808           01910                 movf ADC_DATAPORT, W                    ;Sample X
0B44   1409           01911                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B45   1009           01912                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B46   1089           01913                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B47   0080           01914                 movwf INDF                                              ;Save to QUEUE
0B48   0A84           01915                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01916                 count = count + 1
                      01917         endw
0B49   0808           01918         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0B4A   1409           01919         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B4B   1009           01920         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B4C   1489           01921         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0B4D   0080           01922         movwf INDF                                                      ;Save to QUEUE
0B4E   1784           01923         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0B4F   0808           01924         movf ADC_DATAPORT, W                            ;Sample X
0B50   1409           01925         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B51   1009           01926         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B52   1089           01927         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0B53   0080           01928         movwf INDF                                                      ;Save to QUEUE
0B54   0384           01929         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01930         count = 1
                      01931         while count < BUFFERSIZE / 2
0B55   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B56   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B57   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B58   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B59   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B5A   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B5B   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B5C   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5D   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5E   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B5F   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B60   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01944                 count = count + 1
0B61   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B62   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B63   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B64   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B65   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B66   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B67   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B68   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B69   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6A   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B6B   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B6C   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01944                 count = count + 1
0B6D   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B6E   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6F   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B70   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B71   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B72   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B73   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B74   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B75   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B76   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B77   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B78   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01944                 count = count + 1
0B79   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B7A   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7B   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7C   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7D   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B7E   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B7F   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B80   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B81   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B82   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B83   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B84   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01944                 count = count + 1
0B85   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B86   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B87   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B88   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B89   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B8A   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B8B   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B8C   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8D   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8E   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B8F   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B90   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01944                 count = count + 1
0B91   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B92   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B93   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B94   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B95   0080           01936                 movwf INDF                                              ;Save to QUEUE
0B96   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0B97   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0B98   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B99   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9A   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B9B   0080           01942                 movwf INDF                                              ;Save to QUEUE
0B9C   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01944                 count = count + 1
0B9D   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0B9E   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9F   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA0   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA1   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BA2   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BA3   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BA4   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA5   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA6   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA7   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BA8   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01944                 count = count + 1
0BA9   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BAA   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAB   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAC   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAD   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BAE   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BAF   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BB0   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB1   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB2   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB3   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BB4   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01944                 count = count + 1
0BB5   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BB6   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB7   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB8   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BB9   0080           01936                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BBA   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BBB   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BBC   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBD   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBE   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BBF   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BC0   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01944                 count = count + 1
0BC1   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BC2   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC3   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC4   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC5   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BC6   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BC7   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BC8   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC9   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCA   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BCB   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BCC   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01944                 count = count + 1
0BCD   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BCE   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCF   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD0   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD1   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BD2   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BD3   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BD4   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD5   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD6   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD7   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BD8   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01944                 count = count + 1
0BD9   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BDA   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDB   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDC   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDD   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BDE   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BDF   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BE0   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE1   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE2   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE3   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BE4   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01944                 count = count + 1
0BE5   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BE6   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE7   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE8   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE9   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BEA   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BEB   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BEC   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BED   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEE   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BEF   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BF0   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01944                 count = count + 1
0BF1   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BF2   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF3   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF4   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF5   0080           01936                 movwf INDF                                              ;Save to QUEUE
0BF6   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0BF7   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0BF8   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF9   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFA   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BFB   0080           01942                 movwf INDF                                              ;Save to QUEUE
0BFC   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01944                 count = count + 1
0BFD   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0BFE   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFF   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C00   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C01   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C02   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C03   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C04   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C05   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C06   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C07   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C08   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01944                 count = count + 1
0C09   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C0A   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0B   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0C   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0D   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C0E   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C0F   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C10   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C11   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C12   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C13   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C14   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01944                 count = count + 1
0C15   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C16   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C17   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C18   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C19   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C1A   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C1B   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C1C   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1D   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1E   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C1F   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C20   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01944                 count = count + 1
0C21   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C22   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C23   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C24   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C25   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C26   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C27   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C28   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C29   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2A   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C2B   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C2C   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01944                 count = count + 1
0C2D   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C2E   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2F   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C30   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C31   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C32   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C33   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C34   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C35   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C36   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C37   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C38   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01944                 count = count + 1
0C39   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C3A   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3B   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3C   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3D   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C3E   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C3F   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C40   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C41   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C42   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C43   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C44   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01944                 count = count + 1
0C45   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C46   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C47   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C48   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C49   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C4A   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C4B   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C4C   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C4D   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4E   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C4F   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C50   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01944                 count = count + 1
0C51   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C52   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C53   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C54   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C55   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C56   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C57   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C58   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C59   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5A   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C5B   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C5C   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01944                 count = count + 1
0C5D   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C5E   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5F   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C60   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C61   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C62   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C63   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C64   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C65   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C66   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C67   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C68   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01944                 count = count + 1
0C69   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C6A   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6B   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6C   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6D   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C6E   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C6F   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C70   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C71   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C72   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C73   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C74   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01944                 count = count + 1
0C75   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C76   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C77   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C78   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C79   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C7A   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C7B   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C7C   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7D   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C7E   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C7F   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C80   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01944                 count = count + 1
0C81   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C82   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C83   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C84   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C85   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C86   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C87   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C88   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C89   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8A   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C8B   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C8C   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01944                 count = count + 1
0C8D   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C8E   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8F   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C90   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C91   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C92   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C93   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0C94   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C95   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C96   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C97   0080           01942                 movwf INDF                                              ;Save to QUEUE
0C98   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01944                 count = count + 1
0C99   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0C9A   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9B   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9C   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9D   0080           01936                 movwf INDF                                              ;Save to QUEUE
0C9E   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0C9F   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0CA0   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA1   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA2   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA3   0080           01942                 movwf INDF                                              ;Save to QUEUE
0CA4   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01944                 count = count + 1
0CA5   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0CA6   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA7   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA8   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA9   0080           01936                 movwf INDF                                              ;Save to QUEUE
0CAA   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0CAB   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0CAC   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAD   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAE   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CAF   0080           01942                 movwf INDF                                              ;Save to QUEUE
0CB0   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01944                 count = count + 1
0CB1   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0CB2   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB3   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB4   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB5   0080           01936                 movwf INDF                                              ;Save to QUEUE
0CB6   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0CB7   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0CB8   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB9   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CBA   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CBB   0080           01942                 movwf INDF                                              ;Save to QUEUE
0CBC   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01944                 count = count + 1
0CBD   0808           01932                 movf ADC_DATAPORT, W                    ;Sample Y
0CBE   1409           01933                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CBF   1009           01934                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC0   1489           01935                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CC1   0080           01936                 movwf INDF                                              ;Save to QUEUE
0CC2   0384           01937                 decf FSR, F                                             ;Increment QUEUE pointer
0CC3   0808           01938                 movf ADC_DATAPORT, W                    ;Sample X
0CC4   1409           01939                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC5   1009           01940                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC6   1089           01941                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC7   0080           01942                 movwf INDF                                              ;Save to QUEUE
0CC8   0384           01943                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01944                 count = count + 1
                      01945         endw
0CC9   0808           01946         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0CCA   1409           01947         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CCB   1009           01948         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CCC   1489           01949         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0CCD   0080           01950         movwf INDF                                                      ;Save to QUEUE
0CCE   1783           01951         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0CCF   0808           01952         movf ADC_DATAPORT, W                            ;Sample X
0CD0   1409           01953         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CD1   1009           01954         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CD2   1089           01955         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0CD3   0080           01956         movwf INDF                                                      ;Save to QUEUE
0CD4   0A84           01957         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01958         count = 1
                      01959         while count < BUFFERSIZE / 2
0CD5   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0CD6   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD7   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD8   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD9   0080           01964                 movwf INDF                                              ;Save to QUEUE
0CDA   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0CDB   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0CDC   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDD   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CDE   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CDF   0080           01970                 movwf INDF                                              ;Save to QUEUE
0CE0   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01972                 count = count + 1
0CE1   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0CE2   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE3   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE4   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE5   0080           01964                 movwf INDF                                              ;Save to QUEUE
0CE6   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0CE7   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0CE8   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE9   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CEA   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CEB   0080           01970                 movwf INDF                                              ;Save to QUEUE
0CEC   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01972                 count = count + 1
0CED   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0CEE   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEF   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF0   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF1   0080           01964                 movwf INDF                                              ;Save to QUEUE
0CF2   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0CF3   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0CF4   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF5   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF6   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF7   0080           01970                 movwf INDF                                              ;Save to QUEUE
0CF8   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01972                 count = count + 1
0CF9   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0CFA   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFB   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFC   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFD   0080           01964                 movwf INDF                                              ;Save to QUEUE
0CFE   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0CFF   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D00   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D01   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D02   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D03   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D04   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01972                 count = count + 1
0D05   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D06   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D07   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D08   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D09   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D0A   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D0B   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D0C   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0D   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0E   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D0F   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D10   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01972                 count = count + 1
0D11   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D12   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D13   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D14   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D15   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D16   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D17   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D18   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D19   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1A   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D1B   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D1C   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01972                 count = count + 1
0D1D   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D1E   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1F   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D20   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D21   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D22   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D23   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D24   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D25   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D26   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D27   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D28   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01972                 count = count + 1
0D29   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D2A   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2B   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2C   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2D   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D2E   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D2F   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D30   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D31   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D32   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D33   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D34   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01972                 count = count + 1
0D35   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D36   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D37   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D38   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D39   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D3A   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D3B   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D3C   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3D   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3E   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D3F   0080           01970                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D40   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01972                 count = count + 1
0D41   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D42   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D43   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D44   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D45   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D46   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D47   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D48   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D49   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4A   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D4B   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D4C   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01972                 count = count + 1
0D4D   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D4E   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4F   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D50   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D51   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D52   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D53   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D54   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D55   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D56   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D57   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D58   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01972                 count = count + 1
0D59   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D5A   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5B   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5C   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5D   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D5E   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D5F   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D60   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D61   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D62   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D63   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D64   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01972                 count = count + 1
0D65   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D66   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D67   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D68   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D69   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D6A   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D6B   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D6C   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6D   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6E   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D6F   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D70   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E            01972                 count = count + 1
0D71   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D72   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D73   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D74   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D75   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D76   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D77   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D78   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D79   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7A   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D7B   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D7C   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01972                 count = count + 1
0D7D   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D7E   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7F   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D80   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D81   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D82   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D83   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D84   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D85   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D86   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D87   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D88   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01972                 count = count + 1
0D89   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D8A   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8B   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8C   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8D   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D8E   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D8F   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D90   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D91   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D92   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D93   0080           01970                 movwf INDF                                              ;Save to QUEUE
0D94   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01972                 count = count + 1
0D95   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0D96   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D97   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D98   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D99   0080           01964                 movwf INDF                                              ;Save to QUEUE
0D9A   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0D9B   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0D9C   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9D   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9E   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D9F   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DA0   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01972                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DA1   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DA2   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA3   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA4   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA5   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DA6   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DA7   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DA8   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA9   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAA   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DAB   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DAC   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01972                 count = count + 1
0DAD   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DAE   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAF   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB0   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DB1   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DB2   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DB3   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DB4   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB5   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB6   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB7   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DB8   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01972                 count = count + 1
0DB9   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DBA   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBB   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBC   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBD   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DBE   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DBF   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DC0   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC1   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC2   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC3   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DC4   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01972                 count = count + 1
0DC5   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DC6   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC7   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC8   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC9   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DCA   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DCB   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DCC   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCD   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCE   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DCF   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DD0   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01972                 count = count + 1
0DD1   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DD2   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD3   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD4   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD5   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DD6   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DD7   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DD8   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD9   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDA   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DDB   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DDC   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01972                 count = count + 1
0DDD   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DDE   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDF   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE0   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DE1   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DE2   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DE3   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DE4   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE5   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE6   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE7   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DE8   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01972                 count = count + 1
0DE9   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DEA   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEB   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DEC   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DED   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DEE   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DEF   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DF0   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF1   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF2   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF3   0080           01970                 movwf INDF                                              ;Save to QUEUE
0DF4   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01972                 count = count + 1
0DF5   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0DF6   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF7   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF8   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF9   0080           01964                 movwf INDF                                              ;Save to QUEUE
0DFA   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0DFB   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0DFC   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFD   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFE   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DFF   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E00   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01972                 count = count + 1
0E01   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E02   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E03   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E04   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E05   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E06   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E07   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E08   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E09   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0A   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E0B   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E0C   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01972                 count = count + 1
0E0D   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E0E   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0F   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E10   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E11   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E12   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E13   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E14   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E15   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E16   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E17   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E18   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01972                 count = count + 1
0E19   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E1A   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1B   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1C   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1D   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E1E   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E1F   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E20   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E21   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E22   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E23   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E24   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01972                 count = count + 1
0E25   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E26   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E27   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E28   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E29   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E2A   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E2B   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E2C   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2D   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2E   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E2F   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E30   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01972                 count = count + 1
0E31   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E32   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E33   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E34   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E35   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E36   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E37   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E38   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E39   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E3A   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E3B   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E3C   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01972                 count = count + 1
0E3D   0808           01960                 movf ADC_DATAPORT, W                    ;Sample Y
0E3E   1409           01961                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E3F   1009           01962                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E40   1489           01963                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E41   0080           01964                 movwf INDF                                              ;Save to QUEUE
0E42   0A84           01965                 incf FSR, F                                             ;Increment QUEUE pointer
0E43   0808           01966                 movf ADC_DATAPORT, W                    ;Sample X
0E44   1409           01967                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E45   1009           01968                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E46   1089           01969                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E47   0080           01970                 movwf INDF                                              ;Save to QUEUE
0E48   0A84           01971                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01972                 count = count + 1
                      01973         endw
0E49   0808           01974         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0E4A   1409           01975         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E4B   1009           01976         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E4C   1489           01977         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0E4D   0080           01978         movwf INDF                                                      ;Save to QUEUE
0E4E   1384           01979         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0E4F   0808           01980         movf ADC_DATAPORT, W                            ;Sample X
0E50   1409           01981         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E51   1009           01982         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E52   1089           01983         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0E53   0080           01984         movwf INDF                                                      ;Save to QUEUE
0E54   0384           01985         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01986         count = 1
                      01987         while count < BUFFERSIZE / 2
0E55   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E56   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E57   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E58   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E59   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E5A   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E5B   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E5C   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5D   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5E   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E5F   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E60   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02000                 count = count + 1
0E61   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E62   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E63   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E64   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E65   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E66   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E67   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E68   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E69   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6A   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E6B   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E6C   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02000                 count = count + 1
0E6D   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E6E   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6F   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E70   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E71   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E72   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E73   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E74   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E75   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E76   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E77   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E78   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02000                 count = count + 1
0E79   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E7A   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7B   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7C   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7D   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E7E   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E7F   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E80   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E81   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E82   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E83   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E84   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02000                 count = count + 1
0E85   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E86   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E87   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E88   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E89   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E8A   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E8B   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E8C   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8D   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8E   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E8F   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E90   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02000                 count = count + 1
0E91   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E92   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E93   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E94   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E95   0080           01992                 movwf INDF                                              ;Save to QUEUE
0E96   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0E97   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0E98   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E99   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9A   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E9B   0080           01998                 movwf INDF                                              ;Save to QUEUE
0E9C   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02000                 count = count + 1
0E9D   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0E9E   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9F   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA0   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EA1   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EA2   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EA3   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EA4   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA5   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA6   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA7   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EA8   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02000                 count = count + 1
0EA9   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EAA   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAB   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAC   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAD   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EAE   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EAF   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EB0   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB1   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB2   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB3   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EB4   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02000                 count = count + 1
0EB5   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EB6   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB7   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB8   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EB9   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EBA   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EBB   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EBC   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBD   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBE   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EBF   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EC0   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02000                 count = count + 1
0EC1   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EC2   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC3   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC4   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EC5   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EC6   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EC7   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EC8   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC9   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECA   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ECB   0080           01998                 movwf INDF                                              ;Save to QUEUE
0ECC   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02000                 count = count + 1
0ECD   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0ECE   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECF   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED0   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ED1   0080           01992                 movwf INDF                                              ;Save to QUEUE
0ED2   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0ED3   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0ED4   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED5   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED6   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED7   0080           01998                 movwf INDF                                              ;Save to QUEUE
0ED8   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02000                 count = count + 1
0ED9   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EDA   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDB   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDC   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDD   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EDE   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EDF   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EE0   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE1   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE2   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE3   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EE4   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02000                 count = count + 1
0EE5   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EE6   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE7   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE8   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EE9   0080           01992                 movwf INDF                                              ;Save to QUEUE
0EEA   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EEB   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EEC   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EED   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEE   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EEF   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EF0   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02000                 count = count + 1
0EF1   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EF2   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF3   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF4   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF5   0080           01992                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EF6   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0EF7   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0EF8   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF9   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFA   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EFB   0080           01998                 movwf INDF                                              ;Save to QUEUE
0EFC   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02000                 count = count + 1
0EFD   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0EFE   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFF   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F00   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F01   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F02   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F03   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F04   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F05   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F06   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F07   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F08   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02000                 count = count + 1
0F09   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F0A   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0B   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0C   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0D   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F0E   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F0F   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F10   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F11   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F12   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F13   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F14   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02000                 count = count + 1
0F15   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F16   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F17   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F18   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F19   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F1A   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F1B   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F1C   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1D   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1E   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F1F   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F20   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02000                 count = count + 1
0F21   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F22   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F23   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F24   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F25   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F26   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F27   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F28   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F29   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2A   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F2B   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F2C   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02000                 count = count + 1
0F2D   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F2E   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2F   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F30   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F31   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F32   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F33   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F34   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F35   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F36   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F37   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F38   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02000                 count = count + 1
0F39   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F3A   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3B   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3C   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3D   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F3E   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F3F   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F40   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F41   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F42   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F43   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F44   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02000                 count = count + 1
0F45   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F46   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F47   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F48   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F49   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F4A   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F4B   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F4C   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4D   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4E   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F4F   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F50   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02000                 count = count + 1
0F51   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F52   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F53   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F54   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F55   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F56   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F57   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F58   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F59   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5A   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F5B   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F5C   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02000                 count = count + 1
0F5D   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F5E   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5F   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F60   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F61   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F62   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F63   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F64   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F65   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F66   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F67   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F68   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02000                 count = count + 1
0F69   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F6A   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6B   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6C   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6D   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F6E   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F6F   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F70   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F71   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F72   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F73   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F74   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02000                 count = count + 1
0F75   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F76   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F77   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F78   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F79   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F7A   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F7B   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F7C   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7D   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7E   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F7F   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F80   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02000                 count = count + 1
0F81   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F82   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F83   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F84   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F85   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F86   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F87   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F88   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F89   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8A   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F8B   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F8C   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02000                 count = count + 1
0F8D   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F8E   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8F   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F90   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F91   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F92   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F93   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0F94   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F95   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F96   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F97   0080           01998                 movwf INDF                                              ;Save to QUEUE
0F98   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02000                 count = count + 1
0F99   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0F9A   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9B   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9C   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F9D   0080           01992                 movwf INDF                                              ;Save to QUEUE
0F9E   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0F9F   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0FA0   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA1   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA2   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA3   0080           01998                 movwf INDF                                              ;Save to QUEUE
0FA4   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02000                 count = count + 1
0FA5   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0FA6   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA7   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA8   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FA9   0080           01992                 movwf INDF                                              ;Save to QUEUE
0FAA   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0FAB   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0FAC   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAD   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAE   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FAF   0080           01998                 movwf INDF                                              ;Save to QUEUE
0FB0   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02000                 count = count + 1
0FB1   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0FB2   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB3   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB4   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FB5   0080           01992                 movwf INDF                                              ;Save to QUEUE
0FB6   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0FB7   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0FB8   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB9   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FBA   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FBB   0080           01998                 movwf INDF                                              ;Save to QUEUE
0FBC   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02000                 count = count + 1
0FBD   0808           01988                 movf ADC_DATAPORT, W                    ;Sample Y
0FBE   1409           01989                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBF   1009           01990                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC0   1489           01991                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FC1   0080           01992                 movwf INDF                                              ;Save to QUEUE
0FC2   0384           01993                 decf FSR, F                                             ;Increment QUEUE pointer
0FC3   0808           01994                 movf ADC_DATAPORT, W                    ;Sample X
0FC4   1409           01995                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC5   1009           01996                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC6   1089           01997                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FC7   0080           01998                 movwf INDF                                              ;Save to QUEUE
0FC8   0384           01999                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02000                 count = count + 1
                      02001         endw
0FC9   0808           02002         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0FCA   1409           02003         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0FCB   118A           02004         bcf PCLATH, 3                                           ;insure correct program memory page
0FCC   120A           02005         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0FCD   2923           02006         goto ADCShutdown
                      02007         
                      02008 ;Fast sample
                      02009 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      02010 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      02011 ;-----------------------------------------------------------------------------
0FCE                  02012 Sample833k
0FCE   1009           02013         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02014         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0FCF   3020               M     movlw BUFFERMIN
0FD0   0084               M     movwf FSR
0FD1   0000           02015         nop
  0000                02016         local count
  00000001            02017         count = 1
                      02018         while count < BUFFERSIZE
0FD2   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FD3   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD4   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD5   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FD6   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FD7   0000           02024                 nop                                                             ;Wait a cycle
  00000002            02025                 count = count + 1
0FD8   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FD9   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDA   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDB   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FDC   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FDD   0000           02024                 nop                                                             ;Wait a cycle
  00000003            02025                 count = count + 1
0FDE   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FDF   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE0   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE1   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FE2   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FE3   0000           02024                 nop                                                             ;Wait a cycle
  00000004            02025                 count = count + 1
0FE4   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FE5   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE6   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE7   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FE8   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FE9   0000           02024                 nop                                                             ;Wait a cycle
  00000005            02025                 count = count + 1
0FEA   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FEB   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FEC   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FED   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FEE   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FEF   0000           02024                 nop                                                             ;Wait a cycle
  00000006            02025                 count = count + 1
0FF0   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FF1   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF2   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF3   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FF4   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FF5   0000           02024                 nop                                                             ;Wait a cycle
  00000007            02025                 count = count + 1
0FF6   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FF7   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF8   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF9   0080           02022                 movwf INDF                                              ;Save to QUEUE
0FFA   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
0FFB   0000           02024                 nop                                                             ;Wait a cycle
  00000008            02025                 count = count + 1
0FFC   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
0FFD   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFE   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFF   0080           02022                 movwf INDF                                              ;Save to QUEUE
1000   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1001   0000           02024                 nop                                                             ;Wait a cycle
  00000009            02025                 count = count + 1
1002   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1003   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1004   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1005   0080           02022                 movwf INDF                                              ;Save to QUEUE
1006   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1007   0000           02024                 nop                                                             ;Wait a cycle
  0000000A            02025                 count = count + 1
1008   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1009   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100A   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100B   0080           02022                 movwf INDF                                              ;Save to QUEUE
100C   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

100D   0000           02024                 nop                                                             ;Wait a cycle
  0000000B            02025                 count = count + 1
100E   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
100F   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1010   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1011   0080           02022                 movwf INDF                                              ;Save to QUEUE
1012   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1013   0000           02024                 nop                                                             ;Wait a cycle
  0000000C            02025                 count = count + 1
1014   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1015   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1016   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1017   0080           02022                 movwf INDF                                              ;Save to QUEUE
1018   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1019   0000           02024                 nop                                                             ;Wait a cycle
  0000000D            02025                 count = count + 1
101A   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
101B   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101C   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101D   0080           02022                 movwf INDF                                              ;Save to QUEUE
101E   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
101F   0000           02024                 nop                                                             ;Wait a cycle
  0000000E            02025                 count = count + 1
1020   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1021   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1022   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1023   0080           02022                 movwf INDF                                              ;Save to QUEUE
1024   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1025   0000           02024                 nop                                                             ;Wait a cycle
  0000000F            02025                 count = count + 1
1026   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1027   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1028   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1029   0080           02022                 movwf INDF                                              ;Save to QUEUE
102A   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
102B   0000           02024                 nop                                                             ;Wait a cycle
  00000010            02025                 count = count + 1
102C   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
102D   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102E   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102F   0080           02022                 movwf INDF                                              ;Save to QUEUE
1030   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1031   0000           02024                 nop                                                             ;Wait a cycle
  00000011            02025                 count = count + 1
1032   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1033   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1034   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1035   0080           02022                 movwf INDF                                              ;Save to QUEUE
1036   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1037   0000           02024                 nop                                                             ;Wait a cycle
  00000012            02025                 count = count + 1
1038   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1039   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

103A   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103B   0080           02022                 movwf INDF                                              ;Save to QUEUE
103C   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
103D   0000           02024                 nop                                                             ;Wait a cycle
  00000013            02025                 count = count + 1
103E   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
103F   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1040   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1041   0080           02022                 movwf INDF                                              ;Save to QUEUE
1042   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1043   0000           02024                 nop                                                             ;Wait a cycle
  00000014            02025                 count = count + 1
1044   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1045   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1046   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1047   0080           02022                 movwf INDF                                              ;Save to QUEUE
1048   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1049   0000           02024                 nop                                                             ;Wait a cycle
  00000015            02025                 count = count + 1
104A   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
104B   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104C   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104D   0080           02022                 movwf INDF                                              ;Save to QUEUE
104E   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
104F   0000           02024                 nop                                                             ;Wait a cycle
  00000016            02025                 count = count + 1
1050   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1051   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1052   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1053   0080           02022                 movwf INDF                                              ;Save to QUEUE
1054   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1055   0000           02024                 nop                                                             ;Wait a cycle
  00000017            02025                 count = count + 1
1056   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1057   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1058   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1059   0080           02022                 movwf INDF                                              ;Save to QUEUE
105A   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
105B   0000           02024                 nop                                                             ;Wait a cycle
  00000018            02025                 count = count + 1
105C   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
105D   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105E   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105F   0080           02022                 movwf INDF                                              ;Save to QUEUE
1060   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1061   0000           02024                 nop                                                             ;Wait a cycle
  00000019            02025                 count = count + 1
1062   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1063   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1064   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1065   0080           02022                 movwf INDF                                              ;Save to QUEUE
1066   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1067   0000           02024                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001A            02025                 count = count + 1
1068   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1069   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106A   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106B   0080           02022                 movwf INDF                                              ;Save to QUEUE
106C   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
106D   0000           02024                 nop                                                             ;Wait a cycle
  0000001B            02025                 count = count + 1
106E   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
106F   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1070   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1071   0080           02022                 movwf INDF                                              ;Save to QUEUE
1072   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1073   0000           02024                 nop                                                             ;Wait a cycle
  0000001C            02025                 count = count + 1
1074   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1075   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1076   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1077   0080           02022                 movwf INDF                                              ;Save to QUEUE
1078   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1079   0000           02024                 nop                                                             ;Wait a cycle
  0000001D            02025                 count = count + 1
107A   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
107B   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107C   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107D   0080           02022                 movwf INDF                                              ;Save to QUEUE
107E   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
107F   0000           02024                 nop                                                             ;Wait a cycle
  0000001E            02025                 count = count + 1
1080   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1081   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1082   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1083   0080           02022                 movwf INDF                                              ;Save to QUEUE
1084   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1085   0000           02024                 nop                                                             ;Wait a cycle
  0000001F            02025                 count = count + 1
1086   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1087   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1088   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1089   0080           02022                 movwf INDF                                              ;Save to QUEUE
108A   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
108B   0000           02024                 nop                                                             ;Wait a cycle
  00000020            02025                 count = count + 1
108C   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
108D   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108E   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108F   0080           02022                 movwf INDF                                              ;Save to QUEUE
1090   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1091   0000           02024                 nop                                                             ;Wait a cycle
  00000021            02025                 count = count + 1
1092   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1093   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1094   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1095   0080           02022                 movwf INDF                                              ;Save to QUEUE
1096   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1097   0000           02024                 nop                                                             ;Wait a cycle
  00000022            02025                 count = count + 1
1098   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1099   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109A   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109B   0080           02022                 movwf INDF                                              ;Save to QUEUE
109C   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
109D   0000           02024                 nop                                                             ;Wait a cycle
  00000023            02025                 count = count + 1
109E   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
109F   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A0   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A1   0080           02022                 movwf INDF                                              ;Save to QUEUE
10A2   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10A3   0000           02024                 nop                                                             ;Wait a cycle
  00000024            02025                 count = count + 1
10A4   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10A5   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A6   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A7   0080           02022                 movwf INDF                                              ;Save to QUEUE
10A8   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10A9   0000           02024                 nop                                                             ;Wait a cycle
  00000025            02025                 count = count + 1
10AA   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10AB   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AC   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AD   0080           02022                 movwf INDF                                              ;Save to QUEUE
10AE   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10AF   0000           02024                 nop                                                             ;Wait a cycle
  00000026            02025                 count = count + 1
10B0   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10B1   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B2   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B3   0080           02022                 movwf INDF                                              ;Save to QUEUE
10B4   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10B5   0000           02024                 nop                                                             ;Wait a cycle
  00000027            02025                 count = count + 1
10B6   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10B7   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B8   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B9   0080           02022                 movwf INDF                                              ;Save to QUEUE
10BA   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10BB   0000           02024                 nop                                                             ;Wait a cycle
  00000028            02025                 count = count + 1
10BC   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10BD   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BE   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BF   0080           02022                 movwf INDF                                              ;Save to QUEUE
10C0   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10C1   0000           02024                 nop                                                             ;Wait a cycle
  00000029            02025                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10C2   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10C3   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C4   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C5   0080           02022                 movwf INDF                                              ;Save to QUEUE
10C6   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10C7   0000           02024                 nop                                                             ;Wait a cycle
  0000002A            02025                 count = count + 1
10C8   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10C9   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CA   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CB   0080           02022                 movwf INDF                                              ;Save to QUEUE
10CC   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10CD   0000           02024                 nop                                                             ;Wait a cycle
  0000002B            02025                 count = count + 1
10CE   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10CF   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D0   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D1   0080           02022                 movwf INDF                                              ;Save to QUEUE
10D2   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10D3   0000           02024                 nop                                                             ;Wait a cycle
  0000002C            02025                 count = count + 1
10D4   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10D5   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D6   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D7   0080           02022                 movwf INDF                                              ;Save to QUEUE
10D8   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10D9   0000           02024                 nop                                                             ;Wait a cycle
  0000002D            02025                 count = count + 1
10DA   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10DB   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DC   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DD   0080           02022                 movwf INDF                                              ;Save to QUEUE
10DE   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10DF   0000           02024                 nop                                                             ;Wait a cycle
  0000002E            02025                 count = count + 1
10E0   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10E1   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E2   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E3   0080           02022                 movwf INDF                                              ;Save to QUEUE
10E4   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10E5   0000           02024                 nop                                                             ;Wait a cycle
  0000002F            02025                 count = count + 1
10E6   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10E7   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E8   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E9   0080           02022                 movwf INDF                                              ;Save to QUEUE
10EA   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10EB   0000           02024                 nop                                                             ;Wait a cycle
  00000030            02025                 count = count + 1
10EC   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10ED   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EE   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EF   0080           02022                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10F0   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10F1   0000           02024                 nop                                                             ;Wait a cycle
  00000031            02025                 count = count + 1
10F2   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10F3   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F4   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F5   0080           02022                 movwf INDF                                              ;Save to QUEUE
10F6   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10F7   0000           02024                 nop                                                             ;Wait a cycle
  00000032            02025                 count = count + 1
10F8   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10F9   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FA   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FB   0080           02022                 movwf INDF                                              ;Save to QUEUE
10FC   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
10FD   0000           02024                 nop                                                             ;Wait a cycle
  00000033            02025                 count = count + 1
10FE   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
10FF   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1100   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1101   0080           02022                 movwf INDF                                              ;Save to QUEUE
1102   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1103   0000           02024                 nop                                                             ;Wait a cycle
  00000034            02025                 count = count + 1
1104   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1105   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1106   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1107   0080           02022                 movwf INDF                                              ;Save to QUEUE
1108   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1109   0000           02024                 nop                                                             ;Wait a cycle
  00000035            02025                 count = count + 1
110A   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
110B   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110C   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110D   0080           02022                 movwf INDF                                              ;Save to QUEUE
110E   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
110F   0000           02024                 nop                                                             ;Wait a cycle
  00000036            02025                 count = count + 1
1110   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1111   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1112   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1113   0080           02022                 movwf INDF                                              ;Save to QUEUE
1114   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1115   0000           02024                 nop                                                             ;Wait a cycle
  00000037            02025                 count = count + 1
1116   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1117   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1118   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1119   0080           02022                 movwf INDF                                              ;Save to QUEUE
111A   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
111B   0000           02024                 nop                                                             ;Wait a cycle
  00000038            02025                 count = count + 1
111C   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

111D   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111E   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111F   0080           02022                 movwf INDF                                              ;Save to QUEUE
1120   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1121   0000           02024                 nop                                                             ;Wait a cycle
  00000039            02025                 count = count + 1
1122   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1123   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1124   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1125   0080           02022                 movwf INDF                                              ;Save to QUEUE
1126   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1127   0000           02024                 nop                                                             ;Wait a cycle
  0000003A            02025                 count = count + 1
1128   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1129   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112A   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112B   0080           02022                 movwf INDF                                              ;Save to QUEUE
112C   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
112D   0000           02024                 nop                                                             ;Wait a cycle
  0000003B            02025                 count = count + 1
112E   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
112F   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1130   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1131   0080           02022                 movwf INDF                                              ;Save to QUEUE
1132   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1133   0000           02024                 nop                                                             ;Wait a cycle
  0000003C            02025                 count = count + 1
1134   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1135   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1136   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1137   0080           02022                 movwf INDF                                              ;Save to QUEUE
1138   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1139   0000           02024                 nop                                                             ;Wait a cycle
  0000003D            02025                 count = count + 1
113A   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
113B   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113C   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113D   0080           02022                 movwf INDF                                              ;Save to QUEUE
113E   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
113F   0000           02024                 nop                                                             ;Wait a cycle
  0000003E            02025                 count = count + 1
1140   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1141   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1142   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1143   0080           02022                 movwf INDF                                              ;Save to QUEUE
1144   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
1145   0000           02024                 nop                                                             ;Wait a cycle
  0000003F            02025                 count = count + 1
1146   0808           02019                 movf ADC_DATAPORT, W                    ;Sample
1147   1409           02020                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1148   1009           02021                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1149   0080           02022                 movwf INDF                                              ;Save to QUEUE
114A   0A84           02023                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

114B   0000           02024                 nop                                                             ;Wait a cycle
  00000040            02025                 count = count + 1
                      02026         endw
114C   0808           02027         movf ADC_DATAPORT, W
114D   1409           02028         bsf ADC_CONTROLPORT, RDD
114E   1009           02029         bcf ADC_CONTROLPORT, RDD
114F   0080           02030         movwf INDF
1150   1784           02031         bsf FSR, 7                                                      ;goto bank 2
1151   0000           02032         nop                                                                     ;Wait a cycle
  00000001            02033         count = 1
                      02034         while count < BUFFERSIZE
1152   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1153   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1154   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1155   0080           02038                 movwf INDF                                              ;Save to QUEUE
1156   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1157   0000           02040                 nop                                                             ;Wait a cycle
  00000002            02041                 count = count + 1
1158   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1159   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115A   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115B   0080           02038                 movwf INDF                                              ;Save to QUEUE
115C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
115D   0000           02040                 nop                                                             ;Wait a cycle
  00000003            02041                 count = count + 1
115E   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
115F   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1160   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1161   0080           02038                 movwf INDF                                              ;Save to QUEUE
1162   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1163   0000           02040                 nop                                                             ;Wait a cycle
  00000004            02041                 count = count + 1
1164   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1165   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1166   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1167   0080           02038                 movwf INDF                                              ;Save to QUEUE
1168   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1169   0000           02040                 nop                                                             ;Wait a cycle
  00000005            02041                 count = count + 1
116A   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
116B   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116C   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116D   0080           02038                 movwf INDF                                              ;Save to QUEUE
116E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
116F   0000           02040                 nop                                                             ;Wait a cycle
  00000006            02041                 count = count + 1
1170   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1171   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1172   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1173   0080           02038                 movwf INDF                                              ;Save to QUEUE
1174   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1175   0000           02040                 nop                                                             ;Wait a cycle
  00000007            02041                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1176   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1177   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1178   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1179   0080           02038                 movwf INDF                                              ;Save to QUEUE
117A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
117B   0000           02040                 nop                                                             ;Wait a cycle
  00000008            02041                 count = count + 1
117C   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
117D   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117E   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1180   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1181   0000           02040                 nop                                                             ;Wait a cycle
  00000009            02041                 count = count + 1
1182   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1183   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1184   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1185   0080           02038                 movwf INDF                                              ;Save to QUEUE
1186   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1187   0000           02040                 nop                                                             ;Wait a cycle
  0000000A            02041                 count = count + 1
1188   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1189   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118A   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118B   0080           02038                 movwf INDF                                              ;Save to QUEUE
118C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
118D   0000           02040                 nop                                                             ;Wait a cycle
  0000000B            02041                 count = count + 1
118E   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
118F   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1190   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1191   0080           02038                 movwf INDF                                              ;Save to QUEUE
1192   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1193   0000           02040                 nop                                                             ;Wait a cycle
  0000000C            02041                 count = count + 1
1194   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1195   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1196   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1197   0080           02038                 movwf INDF                                              ;Save to QUEUE
1198   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1199   0000           02040                 nop                                                             ;Wait a cycle
  0000000D            02041                 count = count + 1
119A   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
119B   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119C   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119D   0080           02038                 movwf INDF                                              ;Save to QUEUE
119E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
119F   0000           02040                 nop                                                             ;Wait a cycle
  0000000E            02041                 count = count + 1
11A0   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11A1   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A2   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A3   0080           02038                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11A4   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11A5   0000           02040                 nop                                                             ;Wait a cycle
  0000000F            02041                 count = count + 1
11A6   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11A7   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A8   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A9   0080           02038                 movwf INDF                                              ;Save to QUEUE
11AA   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11AB   0000           02040                 nop                                                             ;Wait a cycle
  00000010            02041                 count = count + 1
11AC   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11AD   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AE   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AF   0080           02038                 movwf INDF                                              ;Save to QUEUE
11B0   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11B1   0000           02040                 nop                                                             ;Wait a cycle
  00000011            02041                 count = count + 1
11B2   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11B3   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B4   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B5   0080           02038                 movwf INDF                                              ;Save to QUEUE
11B6   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11B7   0000           02040                 nop                                                             ;Wait a cycle
  00000012            02041                 count = count + 1
11B8   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11B9   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BA   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BB   0080           02038                 movwf INDF                                              ;Save to QUEUE
11BC   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11BD   0000           02040                 nop                                                             ;Wait a cycle
  00000013            02041                 count = count + 1
11BE   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11BF   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C0   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C1   0080           02038                 movwf INDF                                              ;Save to QUEUE
11C2   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11C3   0000           02040                 nop                                                             ;Wait a cycle
  00000014            02041                 count = count + 1
11C4   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11C5   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C6   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C7   0080           02038                 movwf INDF                                              ;Save to QUEUE
11C8   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11C9   0000           02040                 nop                                                             ;Wait a cycle
  00000015            02041                 count = count + 1
11CA   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11CB   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CC   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CD   0080           02038                 movwf INDF                                              ;Save to QUEUE
11CE   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11CF   0000           02040                 nop                                                             ;Wait a cycle
  00000016            02041                 count = count + 1
11D0   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11D1   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D2   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D3   0080           02038                 movwf INDF                                              ;Save to QUEUE
11D4   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11D5   0000           02040                 nop                                                             ;Wait a cycle
  00000017            02041                 count = count + 1
11D6   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11D7   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D8   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D9   0080           02038                 movwf INDF                                              ;Save to QUEUE
11DA   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11DB   0000           02040                 nop                                                             ;Wait a cycle
  00000018            02041                 count = count + 1
11DC   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11DD   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DE   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DF   0080           02038                 movwf INDF                                              ;Save to QUEUE
11E0   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11E1   0000           02040                 nop                                                             ;Wait a cycle
  00000019            02041                 count = count + 1
11E2   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11E3   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E4   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E5   0080           02038                 movwf INDF                                              ;Save to QUEUE
11E6   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11E7   0000           02040                 nop                                                             ;Wait a cycle
  0000001A            02041                 count = count + 1
11E8   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11E9   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EA   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EB   0080           02038                 movwf INDF                                              ;Save to QUEUE
11EC   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11ED   0000           02040                 nop                                                             ;Wait a cycle
  0000001B            02041                 count = count + 1
11EE   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11EF   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F0   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F1   0080           02038                 movwf INDF                                              ;Save to QUEUE
11F2   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11F3   0000           02040                 nop                                                             ;Wait a cycle
  0000001C            02041                 count = count + 1
11F4   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11F5   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F6   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F7   0080           02038                 movwf INDF                                              ;Save to QUEUE
11F8   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
11F9   0000           02040                 nop                                                             ;Wait a cycle
  0000001D            02041                 count = count + 1
11FA   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
11FB   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FC   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FD   0080           02038                 movwf INDF                                              ;Save to QUEUE
11FE   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11FF   0000           02040                 nop                                                             ;Wait a cycle
  0000001E            02041                 count = count + 1
1200   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1201   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1202   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1203   0080           02038                 movwf INDF                                              ;Save to QUEUE
1204   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1205   0000           02040                 nop                                                             ;Wait a cycle
  0000001F            02041                 count = count + 1
1206   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1207   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1208   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1209   0080           02038                 movwf INDF                                              ;Save to QUEUE
120A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
120B   0000           02040                 nop                                                             ;Wait a cycle
  00000020            02041                 count = count + 1
120C   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
120D   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120E   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1210   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1211   0000           02040                 nop                                                             ;Wait a cycle
  00000021            02041                 count = count + 1
1212   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1213   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1214   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1215   0080           02038                 movwf INDF                                              ;Save to QUEUE
1216   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1217   0000           02040                 nop                                                             ;Wait a cycle
  00000022            02041                 count = count + 1
1218   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1219   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121A   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121B   0080           02038                 movwf INDF                                              ;Save to QUEUE
121C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
121D   0000           02040                 nop                                                             ;Wait a cycle
  00000023            02041                 count = count + 1
121E   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
121F   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1220   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1221   0080           02038                 movwf INDF                                              ;Save to QUEUE
1222   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1223   0000           02040                 nop                                                             ;Wait a cycle
  00000024            02041                 count = count + 1
1224   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1225   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1226   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1227   0080           02038                 movwf INDF                                              ;Save to QUEUE
1228   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1229   0000           02040                 nop                                                             ;Wait a cycle
  00000025            02041                 count = count + 1
122A   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
122B   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

122C   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122D   0080           02038                 movwf INDF                                              ;Save to QUEUE
122E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
122F   0000           02040                 nop                                                             ;Wait a cycle
  00000026            02041                 count = count + 1
1230   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1231   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1232   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1233   0080           02038                 movwf INDF                                              ;Save to QUEUE
1234   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1235   0000           02040                 nop                                                             ;Wait a cycle
  00000027            02041                 count = count + 1
1236   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1237   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1238   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1239   0080           02038                 movwf INDF                                              ;Save to QUEUE
123A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
123B   0000           02040                 nop                                                             ;Wait a cycle
  00000028            02041                 count = count + 1
123C   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
123D   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123E   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1240   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1241   0000           02040                 nop                                                             ;Wait a cycle
  00000029            02041                 count = count + 1
1242   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1243   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1244   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1245   0080           02038                 movwf INDF                                              ;Save to QUEUE
1246   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1247   0000           02040                 nop                                                             ;Wait a cycle
  0000002A            02041                 count = count + 1
1248   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1249   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124A   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124B   0080           02038                 movwf INDF                                              ;Save to QUEUE
124C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
124D   0000           02040                 nop                                                             ;Wait a cycle
  0000002B            02041                 count = count + 1
124E   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
124F   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1250   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1251   0080           02038                 movwf INDF                                              ;Save to QUEUE
1252   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1253   0000           02040                 nop                                                             ;Wait a cycle
  0000002C            02041                 count = count + 1
1254   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1255   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1256   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1257   0080           02038                 movwf INDF                                              ;Save to QUEUE
1258   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1259   0000           02040                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002D            02041                 count = count + 1
125A   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
125B   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125C   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125D   0080           02038                 movwf INDF                                              ;Save to QUEUE
125E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
125F   0000           02040                 nop                                                             ;Wait a cycle
  0000002E            02041                 count = count + 1
1260   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1261   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1262   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1263   0080           02038                 movwf INDF                                              ;Save to QUEUE
1264   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1265   0000           02040                 nop                                                             ;Wait a cycle
  0000002F            02041                 count = count + 1
1266   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1267   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1268   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1269   0080           02038                 movwf INDF                                              ;Save to QUEUE
126A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
126B   0000           02040                 nop                                                             ;Wait a cycle
  00000030            02041                 count = count + 1
126C   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
126D   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126E   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1270   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1271   0000           02040                 nop                                                             ;Wait a cycle
  00000031            02041                 count = count + 1
1272   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1273   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1274   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1275   0080           02038                 movwf INDF                                              ;Save to QUEUE
1276   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1277   0000           02040                 nop                                                             ;Wait a cycle
  00000032            02041                 count = count + 1
1278   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1279   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127A   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127B   0080           02038                 movwf INDF                                              ;Save to QUEUE
127C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
127D   0000           02040                 nop                                                             ;Wait a cycle
  00000033            02041                 count = count + 1
127E   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
127F   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1280   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1281   0080           02038                 movwf INDF                                              ;Save to QUEUE
1282   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1283   0000           02040                 nop                                                             ;Wait a cycle
  00000034            02041                 count = count + 1
1284   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1285   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1286   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1287   0080           02038                 movwf INDF                                              ;Save to QUEUE
1288   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1289   0000           02040                 nop                                                             ;Wait a cycle
  00000035            02041                 count = count + 1
128A   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
128B   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128C   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128D   0080           02038                 movwf INDF                                              ;Save to QUEUE
128E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
128F   0000           02040                 nop                                                             ;Wait a cycle
  00000036            02041                 count = count + 1
1290   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1291   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1292   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1293   0080           02038                 movwf INDF                                              ;Save to QUEUE
1294   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
1295   0000           02040                 nop                                                             ;Wait a cycle
  00000037            02041                 count = count + 1
1296   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
1297   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1298   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1299   0080           02038                 movwf INDF                                              ;Save to QUEUE
129A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
129B   0000           02040                 nop                                                             ;Wait a cycle
  00000038            02041                 count = count + 1
129C   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
129D   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129E   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129F   0080           02038                 movwf INDF                                              ;Save to QUEUE
12A0   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12A1   0000           02040                 nop                                                             ;Wait a cycle
  00000039            02041                 count = count + 1
12A2   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12A3   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A4   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A5   0080           02038                 movwf INDF                                              ;Save to QUEUE
12A6   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12A7   0000           02040                 nop                                                             ;Wait a cycle
  0000003A            02041                 count = count + 1
12A8   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12A9   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AA   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AB   0080           02038                 movwf INDF                                              ;Save to QUEUE
12AC   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12AD   0000           02040                 nop                                                             ;Wait a cycle
  0000003B            02041                 count = count + 1
12AE   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12AF   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B0   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B1   0080           02038                 movwf INDF                                              ;Save to QUEUE
12B2   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12B3   0000           02040                 nop                                                             ;Wait a cycle
  0000003C            02041                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12B4   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12B5   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B6   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B7   0080           02038                 movwf INDF                                              ;Save to QUEUE
12B8   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12B9   0000           02040                 nop                                                             ;Wait a cycle
  0000003D            02041                 count = count + 1
12BA   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12BB   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BC   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BD   0080           02038                 movwf INDF                                              ;Save to QUEUE
12BE   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12BF   0000           02040                 nop                                                             ;Wait a cycle
  0000003E            02041                 count = count + 1
12C0   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12C1   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C2   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C3   0080           02038                 movwf INDF                                              ;Save to QUEUE
12C4   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12C5   0000           02040                 nop                                                             ;Wait a cycle
  0000003F            02041                 count = count + 1
12C6   0808           02035                 movf ADC_DATAPORT, W                    ;Sample
12C7   1409           02036                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C8   1009           02037                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C9   0080           02038                 movwf INDF                                              ;Save to QUEUE
12CA   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
12CB   0000           02040                 nop                                                             ;Wait a cycle
  00000040            02041                 count = count + 1
                      02042         endw
12CC   0808           02043         movf ADC_DATAPORT, W
12CD   1409           02044         bsf ADC_CONTROLPORT, RDD
12CE   1009           02045         bcf ADC_CONTROLPORT, RDD
12CF   0080           02046         movwf INDF
12D0   1783           02047         bsf STATUS, IRP                                         ;goto bank 4
12D1   0000           02048         nop                                                                     ;Wait a cycle
  00000001            02049         count = 1
                      02050         while count < D'44'
12D2   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12D3   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D4   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D5   0080           02054                 movwf INDF                                              ;Save to QUEUE
12D6   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12D7   0000           02056                 nop                                                             ;Wait a cycle
  00000002            02057                 count = count + 1
12D8   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12D9   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DA   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DB   0080           02054                 movwf INDF                                              ;Save to QUEUE
12DC   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12DD   0000           02056                 nop                                                             ;Wait a cycle
  00000003            02057                 count = count + 1
12DE   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12DF   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12E0   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E1   0080           02054                 movwf INDF                                              ;Save to QUEUE
12E2   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12E3   0000           02056                 nop                                                             ;Wait a cycle
  00000004            02057                 count = count + 1
12E4   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12E5   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E6   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E7   0080           02054                 movwf INDF                                              ;Save to QUEUE
12E8   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12E9   0000           02056                 nop                                                             ;Wait a cycle
  00000005            02057                 count = count + 1
12EA   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12EB   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12EC   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12ED   0080           02054                 movwf INDF                                              ;Save to QUEUE
12EE   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12EF   0000           02056                 nop                                                             ;Wait a cycle
  00000006            02057                 count = count + 1
12F0   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12F1   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F2   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F3   0080           02054                 movwf INDF                                              ;Save to QUEUE
12F4   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12F5   0000           02056                 nop                                                             ;Wait a cycle
  00000007            02057                 count = count + 1
12F6   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12F7   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F8   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F9   0080           02054                 movwf INDF                                              ;Save to QUEUE
12FA   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
12FB   0000           02056                 nop                                                             ;Wait a cycle
  00000008            02057                 count = count + 1
12FC   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
12FD   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FE   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FF   0080           02054                 movwf INDF                                              ;Save to QUEUE
1300   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1301   0000           02056                 nop                                                             ;Wait a cycle
  00000009            02057                 count = count + 1
1302   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1303   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1304   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1305   0080           02054                 movwf INDF                                              ;Save to QUEUE
1306   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1307   0000           02056                 nop                                                             ;Wait a cycle
  0000000A            02057                 count = count + 1
1308   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1309   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130A   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130B   0080           02054                 movwf INDF                                              ;Save to QUEUE
130C   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
130D   0000           02056                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            02057                 count = count + 1
130E   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
130F   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1310   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1311   0080           02054                 movwf INDF                                              ;Save to QUEUE
1312   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1313   0000           02056                 nop                                                             ;Wait a cycle
  0000000C            02057                 count = count + 1
1314   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1315   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1316   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1317   0080           02054                 movwf INDF                                              ;Save to QUEUE
1318   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1319   0000           02056                 nop                                                             ;Wait a cycle
  0000000D            02057                 count = count + 1
131A   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
131B   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131C   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131D   0080           02054                 movwf INDF                                              ;Save to QUEUE
131E   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
131F   0000           02056                 nop                                                             ;Wait a cycle
  0000000E            02057                 count = count + 1
1320   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1321   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1322   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1323   0080           02054                 movwf INDF                                              ;Save to QUEUE
1324   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1325   0000           02056                 nop                                                             ;Wait a cycle
  0000000F            02057                 count = count + 1
1326   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1327   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1328   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1329   0080           02054                 movwf INDF                                              ;Save to QUEUE
132A   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
132B   0000           02056                 nop                                                             ;Wait a cycle
  00000010            02057                 count = count + 1
132C   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
132D   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132E   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132F   0080           02054                 movwf INDF                                              ;Save to QUEUE
1330   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1331   0000           02056                 nop                                                             ;Wait a cycle
  00000011            02057                 count = count + 1
1332   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1333   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1334   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1335   0080           02054                 movwf INDF                                              ;Save to QUEUE
1336   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1337   0000           02056                 nop                                                             ;Wait a cycle
  00000012            02057                 count = count + 1
1338   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1339   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133A   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

133B   0080           02054                 movwf INDF                                              ;Save to QUEUE
133C   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
133D   0000           02056                 nop                                                             ;Wait a cycle
  00000013            02057                 count = count + 1
133E   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
133F   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1340   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1341   0080           02054                 movwf INDF                                              ;Save to QUEUE
1342   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1343   0000           02056                 nop                                                             ;Wait a cycle
  00000014            02057                 count = count + 1
1344   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1345   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1346   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1347   0080           02054                 movwf INDF                                              ;Save to QUEUE
1348   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1349   0000           02056                 nop                                                             ;Wait a cycle
  00000015            02057                 count = count + 1
134A   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
134B   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134C   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134D   0080           02054                 movwf INDF                                              ;Save to QUEUE
134E   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
134F   0000           02056                 nop                                                             ;Wait a cycle
  00000016            02057                 count = count + 1
1350   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1351   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1352   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1353   0080           02054                 movwf INDF                                              ;Save to QUEUE
1354   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1355   0000           02056                 nop                                                             ;Wait a cycle
  00000017            02057                 count = count + 1
1356   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1357   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1358   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1359   0080           02054                 movwf INDF                                              ;Save to QUEUE
135A   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
135B   0000           02056                 nop                                                             ;Wait a cycle
  00000018            02057                 count = count + 1
135C   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
135D   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135E   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135F   0080           02054                 movwf INDF                                              ;Save to QUEUE
1360   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1361   0000           02056                 nop                                                             ;Wait a cycle
  00000019            02057                 count = count + 1
1362   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1363   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1364   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1365   0080           02054                 movwf INDF                                              ;Save to QUEUE
1366   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1367   0000           02056                 nop                                                             ;Wait a cycle
  0000001A            02057                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1368   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1369   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136A   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136B   0080           02054                 movwf INDF                                              ;Save to QUEUE
136C   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
136D   0000           02056                 nop                                                             ;Wait a cycle
  0000001B            02057                 count = count + 1
136E   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
136F   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1370   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1371   0080           02054                 movwf INDF                                              ;Save to QUEUE
1372   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1373   0000           02056                 nop                                                             ;Wait a cycle
  0000001C            02057                 count = count + 1
1374   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1375   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1376   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1377   0080           02054                 movwf INDF                                              ;Save to QUEUE
1378   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1379   0000           02056                 nop                                                             ;Wait a cycle
  0000001D            02057                 count = count + 1
137A   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
137B   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137C   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137D   0080           02054                 movwf INDF                                              ;Save to QUEUE
137E   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
137F   0000           02056                 nop                                                             ;Wait a cycle
  0000001E            02057                 count = count + 1
1380   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1381   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1382   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1383   0080           02054                 movwf INDF                                              ;Save to QUEUE
1384   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1385   0000           02056                 nop                                                             ;Wait a cycle
  0000001F            02057                 count = count + 1
1386   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1387   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1388   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1389   0080           02054                 movwf INDF                                              ;Save to QUEUE
138A   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
138B   0000           02056                 nop                                                             ;Wait a cycle
  00000020            02057                 count = count + 1
138C   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
138D   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138E   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138F   0080           02054                 movwf INDF                                              ;Save to QUEUE
1390   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1391   0000           02056                 nop                                                             ;Wait a cycle
  00000021            02057                 count = count + 1
1392   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1393   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1394   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1395   0080           02054                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1396   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
1397   0000           02056                 nop                                                             ;Wait a cycle
  00000022            02057                 count = count + 1
1398   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
1399   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139A   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139B   0080           02054                 movwf INDF                                              ;Save to QUEUE
139C   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
139D   0000           02056                 nop                                                             ;Wait a cycle
  00000023            02057                 count = count + 1
139E   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
139F   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A0   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A1   0080           02054                 movwf INDF                                              ;Save to QUEUE
13A2   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13A3   0000           02056                 nop                                                             ;Wait a cycle
  00000024            02057                 count = count + 1
13A4   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13A5   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A6   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A7   0080           02054                 movwf INDF                                              ;Save to QUEUE
13A8   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13A9   0000           02056                 nop                                                             ;Wait a cycle
  00000025            02057                 count = count + 1
13AA   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13AB   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AC   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AD   0080           02054                 movwf INDF                                              ;Save to QUEUE
13AE   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13AF   0000           02056                 nop                                                             ;Wait a cycle
  00000026            02057                 count = count + 1
13B0   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13B1   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B2   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B3   0080           02054                 movwf INDF                                              ;Save to QUEUE
13B4   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13B5   0000           02056                 nop                                                             ;Wait a cycle
  00000027            02057                 count = count + 1
13B6   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13B7   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B8   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B9   0080           02054                 movwf INDF                                              ;Save to QUEUE
13BA   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13BB   0000           02056                 nop                                                             ;Wait a cycle
  00000028            02057                 count = count + 1
13BC   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13BD   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BE   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BF   0080           02054                 movwf INDF                                              ;Save to QUEUE
13C0   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13C1   0000           02056                 nop                                                             ;Wait a cycle
  00000029            02057                 count = count + 1
13C2   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13C3   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C4   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C5   0080           02054                 movwf INDF                                              ;Save to QUEUE
13C6   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13C7   0000           02056                 nop                                                             ;Wait a cycle
  0000002A            02057                 count = count + 1
13C8   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13C9   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CA   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CB   0080           02054                 movwf INDF                                              ;Save to QUEUE
13CC   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13CD   0000           02056                 nop                                                             ;Wait a cycle
  0000002B            02057                 count = count + 1
13CE   0808           02051                 movf ADC_DATAPORT, W                    ;Sample
13CF   1409           02052                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D0   1009           02053                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D1   0080           02054                 movwf INDF                                              ;Save to QUEUE
13D2   0A84           02055                 incf FSR, F                                             ;Increment QUEUE pointer
13D3   0000           02056                 nop                                                             ;Wait a cycle
  0000002C            02057                 count = count + 1
                      02058         endw
13D4                  02059 Sample833kEnd
                      02060         while count < BUFFERSIZE
13D4   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13D5   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D6   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D7   0080           02064                 movwf INDF                                              ;Save to QUEUE
13D8   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13D9   0000           02066                 nop                                                             ;Wait a cycle
  0000002D            02067                 count = count + 1
13DA   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13DB   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DC   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DD   0080           02064                 movwf INDF                                              ;Save to QUEUE
13DE   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13DF   0000           02066                 nop                                                             ;Wait a cycle
  0000002E            02067                 count = count + 1
13E0   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13E1   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E2   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E3   0080           02064                 movwf INDF                                              ;Save to QUEUE
13E4   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13E5   0000           02066                 nop                                                             ;Wait a cycle
  0000002F            02067                 count = count + 1
13E6   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13E7   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E8   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E9   0080           02064                 movwf INDF                                              ;Save to QUEUE
13EA   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13EB   0000           02066                 nop                                                             ;Wait a cycle
  00000030            02067                 count = count + 1
13EC   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13ED   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13EE   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EF   0080           02064                 movwf INDF                                              ;Save to QUEUE
13F0   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13F1   0000           02066                 nop                                                             ;Wait a cycle
  00000031            02067                 count = count + 1
13F2   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13F3   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F4   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F5   0080           02064                 movwf INDF                                              ;Save to QUEUE
13F6   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13F7   0000           02066                 nop                                                             ;Wait a cycle
  00000032            02067                 count = count + 1
13F8   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13F9   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FA   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FB   0080           02064                 movwf INDF                                              ;Save to QUEUE
13FC   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
13FD   0000           02066                 nop                                                             ;Wait a cycle
  00000033            02067                 count = count + 1
13FE   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
13FF   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1400   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1401   0080           02064                 movwf INDF                                              ;Save to QUEUE
1402   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1403   0000           02066                 nop                                                             ;Wait a cycle
  00000034            02067                 count = count + 1
1404   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1405   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1406   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1407   0080           02064                 movwf INDF                                              ;Save to QUEUE
1408   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1409   0000           02066                 nop                                                             ;Wait a cycle
  00000035            02067                 count = count + 1
140A   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
140B   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140C   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140D   0080           02064                 movwf INDF                                              ;Save to QUEUE
140E   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
140F   0000           02066                 nop                                                             ;Wait a cycle
  00000036            02067                 count = count + 1
1410   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1411   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1412   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1413   0080           02064                 movwf INDF                                              ;Save to QUEUE
1414   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1415   0000           02066                 nop                                                             ;Wait a cycle
  00000037            02067                 count = count + 1
1416   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1417   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1418   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1419   0080           02064                 movwf INDF                                              ;Save to QUEUE
141A   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
141B   0000           02066                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000038            02067                 count = count + 1
141C   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
141D   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141E   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141F   0080           02064                 movwf INDF                                              ;Save to QUEUE
1420   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1421   0000           02066                 nop                                                             ;Wait a cycle
  00000039            02067                 count = count + 1
1422   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1423   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1424   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1425   0080           02064                 movwf INDF                                              ;Save to QUEUE
1426   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1427   0000           02066                 nop                                                             ;Wait a cycle
  0000003A            02067                 count = count + 1
1428   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1429   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142A   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142B   0080           02064                 movwf INDF                                              ;Save to QUEUE
142C   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
142D   0000           02066                 nop                                                             ;Wait a cycle
  0000003B            02067                 count = count + 1
142E   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
142F   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1430   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1431   0080           02064                 movwf INDF                                              ;Save to QUEUE
1432   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1433   0000           02066                 nop                                                             ;Wait a cycle
  0000003C            02067                 count = count + 1
1434   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1435   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1436   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1437   0080           02064                 movwf INDF                                              ;Save to QUEUE
1438   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1439   0000           02066                 nop                                                             ;Wait a cycle
  0000003D            02067                 count = count + 1
143A   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
143B   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143C   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143D   0080           02064                 movwf INDF                                              ;Save to QUEUE
143E   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
143F   0000           02066                 nop                                                             ;Wait a cycle
  0000003E            02067                 count = count + 1
1440   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1441   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1442   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1443   0080           02064                 movwf INDF                                              ;Save to QUEUE
1444   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
1445   0000           02066                 nop                                                             ;Wait a cycle
  0000003F            02067                 count = count + 1
1446   0808           02061                 movf ADC_DATAPORT, W                    ;Sample
1447   1409           02062                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1448   1009           02063                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1449   0080           02064                 movwf INDF                                              ;Save to QUEUE
144A   0A84           02065                 incf FSR, F                                             ;Increment QUEUE pointer
144B   0000           02066                 nop                                                             ;Wait a cycle
  00000040            02067                 count = count + 1
                      02068         endw
144C   0808           02069         movf ADC_DATAPORT, W
144D   1409           02070         bsf ADC_CONTROLPORT, RDD
144E   1009           02071         bcf ADC_CONTROLPORT, RDD
144F   0080           02072         movwf INDF
1450   1384           02073         bcf FSR, 7                                                      ;goto bank 3
1451   0000           02074         nop                                                                     ;Wait a cycle
  00000001            02075         count = 1
                      02076         while count < BUFFERSIZE
1452   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1453   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1454   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1455   0080           02080                 movwf INDF                                              ;Save to QUEUE
1456   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1457   0000           02082                 nop                                                             ;Wait a cycle
  00000002            02083                 count = count + 1
1458   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1459   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145A   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145B   0080           02080                 movwf INDF                                              ;Save to QUEUE
145C   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
145D   0000           02082                 nop                                                             ;Wait a cycle
  00000003            02083                 count = count + 1
145E   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
145F   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1460   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1461   0080           02080                 movwf INDF                                              ;Save to QUEUE
1462   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1463   0000           02082                 nop                                                             ;Wait a cycle
  00000004            02083                 count = count + 1
1464   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1465   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1466   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1467   0080           02080                 movwf INDF                                              ;Save to QUEUE
1468   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1469   0000           02082                 nop                                                             ;Wait a cycle
  00000005            02083                 count = count + 1
146A   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
146B   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146C   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146D   0080           02080                 movwf INDF                                              ;Save to QUEUE
146E   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
146F   0000           02082                 nop                                                             ;Wait a cycle
  00000006            02083                 count = count + 1
1470   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1471   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1472   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1473   0080           02080                 movwf INDF                                              ;Save to QUEUE
1474   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1475   0000           02082                 nop                                                             ;Wait a cycle
  00000007            02083                 count = count + 1
1476   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1477   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1478   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1479   0080           02080                 movwf INDF                                              ;Save to QUEUE
147A   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
147B   0000           02082                 nop                                                             ;Wait a cycle
  00000008            02083                 count = count + 1
147C   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
147D   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147E   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147F   0080           02080                 movwf INDF                                              ;Save to QUEUE
1480   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1481   0000           02082                 nop                                                             ;Wait a cycle
  00000009            02083                 count = count + 1
1482   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1483   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1484   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1485   0080           02080                 movwf INDF                                              ;Save to QUEUE
1486   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1487   0000           02082                 nop                                                             ;Wait a cycle
  0000000A            02083                 count = count + 1
1488   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1489   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148A   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148B   0080           02080                 movwf INDF                                              ;Save to QUEUE
148C   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
148D   0000           02082                 nop                                                             ;Wait a cycle
  0000000B            02083                 count = count + 1
148E   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
148F   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1490   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1491   0080           02080                 movwf INDF                                              ;Save to QUEUE
1492   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1493   0000           02082                 nop                                                             ;Wait a cycle
  0000000C            02083                 count = count + 1
1494   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1495   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1496   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1497   0080           02080                 movwf INDF                                              ;Save to QUEUE
1498   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1499   0000           02082                 nop                                                             ;Wait a cycle
  0000000D            02083                 count = count + 1
149A   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
149B   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149C   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149D   0080           02080                 movwf INDF                                              ;Save to QUEUE
149E   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
149F   0000           02082                 nop                                                             ;Wait a cycle
  0000000E            02083                 count = count + 1
14A0   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14A1   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14A2   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A3   0080           02080                 movwf INDF                                              ;Save to QUEUE
14A4   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14A5   0000           02082                 nop                                                             ;Wait a cycle
  0000000F            02083                 count = count + 1
14A6   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14A7   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A8   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A9   0080           02080                 movwf INDF                                              ;Save to QUEUE
14AA   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14AB   0000           02082                 nop                                                             ;Wait a cycle
  00000010            02083                 count = count + 1
14AC   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14AD   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AE   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AF   0080           02080                 movwf INDF                                              ;Save to QUEUE
14B0   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14B1   0000           02082                 nop                                                             ;Wait a cycle
  00000011            02083                 count = count + 1
14B2   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14B3   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B4   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B5   0080           02080                 movwf INDF                                              ;Save to QUEUE
14B6   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14B7   0000           02082                 nop                                                             ;Wait a cycle
  00000012            02083                 count = count + 1
14B8   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14B9   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BA   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BB   0080           02080                 movwf INDF                                              ;Save to QUEUE
14BC   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14BD   0000           02082                 nop                                                             ;Wait a cycle
  00000013            02083                 count = count + 1
14BE   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14BF   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C0   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C1   0080           02080                 movwf INDF                                              ;Save to QUEUE
14C2   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14C3   0000           02082                 nop                                                             ;Wait a cycle
  00000014            02083                 count = count + 1
14C4   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14C5   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C6   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C7   0080           02080                 movwf INDF                                              ;Save to QUEUE
14C8   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14C9   0000           02082                 nop                                                             ;Wait a cycle
  00000015            02083                 count = count + 1
14CA   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14CB   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CC   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CD   0080           02080                 movwf INDF                                              ;Save to QUEUE
14CE   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14CF   0000           02082                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            02083                 count = count + 1
14D0   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14D1   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D2   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D3   0080           02080                 movwf INDF                                              ;Save to QUEUE
14D4   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14D5   0000           02082                 nop                                                             ;Wait a cycle
  00000017            02083                 count = count + 1
14D6   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14D7   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D8   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D9   0080           02080                 movwf INDF                                              ;Save to QUEUE
14DA   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14DB   0000           02082                 nop                                                             ;Wait a cycle
  00000018            02083                 count = count + 1
14DC   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14DD   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DE   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DF   0080           02080                 movwf INDF                                              ;Save to QUEUE
14E0   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14E1   0000           02082                 nop                                                             ;Wait a cycle
  00000019            02083                 count = count + 1
14E2   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14E3   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E4   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E5   0080           02080                 movwf INDF                                              ;Save to QUEUE
14E6   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14E7   0000           02082                 nop                                                             ;Wait a cycle
  0000001A            02083                 count = count + 1
14E8   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14E9   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EA   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EB   0080           02080                 movwf INDF                                              ;Save to QUEUE
14EC   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14ED   0000           02082                 nop                                                             ;Wait a cycle
  0000001B            02083                 count = count + 1
14EE   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14EF   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F0   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F1   0080           02080                 movwf INDF                                              ;Save to QUEUE
14F2   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14F3   0000           02082                 nop                                                             ;Wait a cycle
  0000001C            02083                 count = count + 1
14F4   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14F5   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F6   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F7   0080           02080                 movwf INDF                                              ;Save to QUEUE
14F8   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14F9   0000           02082                 nop                                                             ;Wait a cycle
  0000001D            02083                 count = count + 1
14FA   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
14FB   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FC   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14FD   0080           02080                 movwf INDF                                              ;Save to QUEUE
14FE   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
14FF   0000           02082                 nop                                                             ;Wait a cycle
  0000001E            02083                 count = count + 1
1500   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1501   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1502   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1503   0080           02080                 movwf INDF                                              ;Save to QUEUE
1504   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1505   0000           02082                 nop                                                             ;Wait a cycle
  0000001F            02083                 count = count + 1
1506   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1507   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1508   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1509   0080           02080                 movwf INDF                                              ;Save to QUEUE
150A   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
150B   0000           02082                 nop                                                             ;Wait a cycle
  00000020            02083                 count = count + 1
150C   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
150D   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150E   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150F   0080           02080                 movwf INDF                                              ;Save to QUEUE
1510   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1511   0000           02082                 nop                                                             ;Wait a cycle
  00000021            02083                 count = count + 1
1512   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1513   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1514   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1515   0080           02080                 movwf INDF                                              ;Save to QUEUE
1516   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1517   0000           02082                 nop                                                             ;Wait a cycle
  00000022            02083                 count = count + 1
1518   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1519   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151A   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151B   0080           02080                 movwf INDF                                              ;Save to QUEUE
151C   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
151D   0000           02082                 nop                                                             ;Wait a cycle
  00000023            02083                 count = count + 1
151E   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
151F   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1520   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1521   0080           02080                 movwf INDF                                              ;Save to QUEUE
1522   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1523   0000           02082                 nop                                                             ;Wait a cycle
  00000024            02083                 count = count + 1
1524   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1525   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1526   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1527   0080           02080                 movwf INDF                                              ;Save to QUEUE
1528   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1529   0000           02082                 nop                                                             ;Wait a cycle
  00000025            02083                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

152A   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
152B   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152C   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152D   0080           02080                 movwf INDF                                              ;Save to QUEUE
152E   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
152F   0000           02082                 nop                                                             ;Wait a cycle
  00000026            02083                 count = count + 1
1530   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1531   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1532   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1533   0080           02080                 movwf INDF                                              ;Save to QUEUE
1534   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1535   0000           02082                 nop                                                             ;Wait a cycle
  00000027            02083                 count = count + 1
1536   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1537   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1538   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1539   0080           02080                 movwf INDF                                              ;Save to QUEUE
153A   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
153B   0000           02082                 nop                                                             ;Wait a cycle
  00000028            02083                 count = count + 1
153C   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
153D   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153E   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153F   0080           02080                 movwf INDF                                              ;Save to QUEUE
1540   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1541   0000           02082                 nop                                                             ;Wait a cycle
  00000029            02083                 count = count + 1
1542   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1543   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1544   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1545   0080           02080                 movwf INDF                                              ;Save to QUEUE
1546   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1547   0000           02082                 nop                                                             ;Wait a cycle
  0000002A            02083                 count = count + 1
1548   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1549   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154A   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154B   0080           02080                 movwf INDF                                              ;Save to QUEUE
154C   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
154D   0000           02082                 nop                                                             ;Wait a cycle
  0000002B            02083                 count = count + 1
154E   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
154F   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1550   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1551   0080           02080                 movwf INDF                                              ;Save to QUEUE
1552   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1553   0000           02082                 nop                                                             ;Wait a cycle
  0000002C            02083                 count = count + 1
1554   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1555   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1556   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1557   0080           02080                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1558   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1559   0000           02082                 nop                                                             ;Wait a cycle
  0000002D            02083                 count = count + 1
155A   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
155B   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155C   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155D   0080           02080                 movwf INDF                                              ;Save to QUEUE
155E   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
155F   0000           02082                 nop                                                             ;Wait a cycle
  0000002E            02083                 count = count + 1
1560   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1561   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1562   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1563   0080           02080                 movwf INDF                                              ;Save to QUEUE
1564   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1565   0000           02082                 nop                                                             ;Wait a cycle
  0000002F            02083                 count = count + 1
1566   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1567   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1568   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1569   0080           02080                 movwf INDF                                              ;Save to QUEUE
156A   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
156B   0000           02082                 nop                                                             ;Wait a cycle
  00000030            02083                 count = count + 1
156C   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
156D   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156E   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156F   0080           02080                 movwf INDF                                              ;Save to QUEUE
1570   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1571   0000           02082                 nop                                                             ;Wait a cycle
  00000031            02083                 count = count + 1
1572   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1573   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1574   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1575   0080           02080                 movwf INDF                                              ;Save to QUEUE
1576   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1577   0000           02082                 nop                                                             ;Wait a cycle
  00000032            02083                 count = count + 1
1578   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1579   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157A   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157B   0080           02080                 movwf INDF                                              ;Save to QUEUE
157C   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
157D   0000           02082                 nop                                                             ;Wait a cycle
  00000033            02083                 count = count + 1
157E   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
157F   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1580   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1581   0080           02080                 movwf INDF                                              ;Save to QUEUE
1582   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1583   0000           02082                 nop                                                             ;Wait a cycle
  00000034            02083                 count = count + 1
1584   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1585   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1586   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1587   0080           02080                 movwf INDF                                              ;Save to QUEUE
1588   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1589   0000           02082                 nop                                                             ;Wait a cycle
  00000035            02083                 count = count + 1
158A   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
158B   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158C   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158D   0080           02080                 movwf INDF                                              ;Save to QUEUE
158E   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
158F   0000           02082                 nop                                                             ;Wait a cycle
  00000036            02083                 count = count + 1
1590   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1591   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1592   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1593   0080           02080                 movwf INDF                                              ;Save to QUEUE
1594   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
1595   0000           02082                 nop                                                             ;Wait a cycle
  00000037            02083                 count = count + 1
1596   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
1597   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1598   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1599   0080           02080                 movwf INDF                                              ;Save to QUEUE
159A   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
159B   0000           02082                 nop                                                             ;Wait a cycle
  00000038            02083                 count = count + 1
159C   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
159D   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159E   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159F   0080           02080                 movwf INDF                                              ;Save to QUEUE
15A0   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15A1   0000           02082                 nop                                                             ;Wait a cycle
  00000039            02083                 count = count + 1
15A2   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15A3   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A4   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A5   0080           02080                 movwf INDF                                              ;Save to QUEUE
15A6   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15A7   0000           02082                 nop                                                             ;Wait a cycle
  0000003A            02083                 count = count + 1
15A8   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15A9   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AA   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AB   0080           02080                 movwf INDF                                              ;Save to QUEUE
15AC   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15AD   0000           02082                 nop                                                             ;Wait a cycle
  0000003B            02083                 count = count + 1
15AE   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15AF   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B0   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B1   0080           02080                 movwf INDF                                              ;Save to QUEUE
15B2   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15B3   0000           02082                 nop                                                             ;Wait a cycle
  0000003C            02083                 count = count + 1
15B4   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15B5   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B6   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B7   0080           02080                 movwf INDF                                              ;Save to QUEUE
15B8   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15B9   0000           02082                 nop                                                             ;Wait a cycle
  0000003D            02083                 count = count + 1
15BA   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15BB   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15BC   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BD   0080           02080                 movwf INDF                                              ;Save to QUEUE
15BE   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15BF   0000           02082                 nop                                                             ;Wait a cycle
  0000003E            02083                 count = count + 1
15C0   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15C1   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C2   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C3   0080           02080                 movwf INDF                                              ;Save to QUEUE
15C4   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15C5   0000           02082                 nop                                                             ;Wait a cycle
  0000003F            02083                 count = count + 1
15C6   0808           02077                 movf ADC_DATAPORT, W                    ;Sample
15C7   1409           02078                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15C8   1009           02079                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15C9   0080           02080                 movwf INDF                                              ;Save to QUEUE
15CA   0384           02081                 decf FSR, F                                             ;Increment QUEUE pointer
15CB   0000           02082                 nop                                                             ;Wait a cycle
  00000040            02083                 count = count + 1
                      02084         endw
15CC   0808           02085         movf ADC_DATAPORT, W                            ;Last sample
15CD   1409           02086         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15CE   118A           02087         bcf PCLATH, 3                                           ;insure correct program memory page
15CF   120A           02088         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
15D0   2923           02089         goto ADCShutdown
                      02090 
                      02091 ;Repetitive sample
                      02092 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      02093 ;-----------------------------------------------------------------------------
15D1                  02094 SampleRep5M
15D1   3015           02095         movlw high SampleRep5MPickSt
15D2   008A           02096         movwf PCLATH
15D3   0877           02097         movf gbl_modetempb, w
15D4   0782           02098         addwf PCL, f
15D5                  02099 SampleRep5MPickSt
                      02100         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
15D5   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15D6   118A               M                 bcf PCLATH, 3
                          M         endif
15D7   2DE4               M         goto SampleRep5MStep1
                      02101         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
15D8   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15D9   118A               M                 bcf PCLATH, 3
                          M         endif
15DA   2EF4               M         goto SampleRep5MStep2
                      02102         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
15DB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15DC   118A               M                 bcf PCLATH, 3
                          M         endif
15DD   2FF7               M         goto SampleRep5MStep3
                      02103         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
15DE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
15DF   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15E0   28FA               M         goto SampleRep5MStep4
                      02104         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
15E1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
15E2   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15E3   29FE               M         goto SampleRep5MStep5
15E4                  02105 SampleRep5MPickEn
15E4                  02106 SampleRep5MStep1
15E4   1009           02107         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02108         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
15E5   3020               M     movlw BUFFERMIN
15E6   0084               M     movwf FSR
15E7   0000           02109         nop
  0000                02110         local count
  00000001            02111         count = 1
                      02112         while count < D'52'
15E8   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E9   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EA   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
15EB   0080           02116                 movwf INDF                                              ;Save to QUEUE
15EC   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02118                 count = count + 1
15ED   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15EE   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EF   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
15F0   0080           02116                 movwf INDF                                              ;Save to QUEUE
15F1   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02118                 count = count + 1
15F2   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F3   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F4   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
15F5   0080           02116                 movwf INDF                                              ;Save to QUEUE
15F6   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02118                 count = count + 1
15F7   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F8   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F9   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
15FA   0080           02116                 movwf INDF                                              ;Save to QUEUE
15FB   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02118                 count = count + 1
15FC   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FD   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15FE   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
15FF   0080           02116                 movwf INDF                                              ;Save to QUEUE
1600   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02118                 count = count + 1
1601   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1602   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1603   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1604   0080           02116                 movwf INDF                                              ;Save to QUEUE
1605   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02118                 count = count + 1
1606   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1607   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1608   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1609   0080           02116                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

160A   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02118                 count = count + 1
160B   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
160C   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160D   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
160E   0080           02116                 movwf INDF                                              ;Save to QUEUE
160F   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02118                 count = count + 1
1610   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1611   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1612   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1613   0080           02116                 movwf INDF                                              ;Save to QUEUE
1614   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02118                 count = count + 1
1615   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1616   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1617   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1618   0080           02116                 movwf INDF                                              ;Save to QUEUE
1619   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02118                 count = count + 1
161A   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
161B   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
161C   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
161D   0080           02116                 movwf INDF                                              ;Save to QUEUE
161E   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02118                 count = count + 1
161F   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1620   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1621   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1622   0080           02116                 movwf INDF                                              ;Save to QUEUE
1623   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02118                 count = count + 1
1624   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1625   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1626   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1627   0080           02116                 movwf INDF                                              ;Save to QUEUE
1628   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02118                 count = count + 1
1629   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162A   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
162B   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
162C   0080           02116                 movwf INDF                                              ;Save to QUEUE
162D   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02118                 count = count + 1
162E   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162F   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1630   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1631   0080           02116                 movwf INDF                                              ;Save to QUEUE
1632   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02118                 count = count + 1
1633   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1634   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1635   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1636   0080           02116                 movwf INDF                                              ;Save to QUEUE
1637   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02118                 count = count + 1
1638   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1639   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163A   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
163B   0080           02116                 movwf INDF                                              ;Save to QUEUE
163C   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02118                 count = count + 1
163D   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
163E   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163F   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1640   0080           02116                 movwf INDF                                              ;Save to QUEUE
1641   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02118                 count = count + 1
1642   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1643   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1644   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1645   0080           02116                 movwf INDF                                              ;Save to QUEUE
1646   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02118                 count = count + 1
1647   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1648   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1649   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
164A   0080           02116                 movwf INDF                                              ;Save to QUEUE
164B   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02118                 count = count + 1
164C   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164D   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
164E   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
164F   0080           02116                 movwf INDF                                              ;Save to QUEUE
1650   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02118                 count = count + 1
1651   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1652   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1653   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1654   0080           02116                 movwf INDF                                              ;Save to QUEUE
1655   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02118                 count = count + 1
1656   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1657   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1658   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1659   0080           02116                 movwf INDF                                              ;Save to QUEUE
165A   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02118                 count = count + 1
165B   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
165C   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165D   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
165E   0080           02116                 movwf INDF                                              ;Save to QUEUE
165F   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02118                 count = count + 1
1660   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1661   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1662   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1663   0080           02116                 movwf INDF                                              ;Save to QUEUE
1664   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02118                 count = count + 1
1665   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1666   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1667   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1668   0080           02116                 movwf INDF                                              ;Save to QUEUE
1669   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02118                 count = count + 1
166A   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
166B   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
166C   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
166D   0080           02116                 movwf INDF                                              ;Save to QUEUE
166E   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02118                 count = count + 1
166F   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1670   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1671   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1672   0080           02116                 movwf INDF                                              ;Save to QUEUE
1673   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02118                 count = count + 1
1674   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1675   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1676   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1677   0080           02116                 movwf INDF                                              ;Save to QUEUE
1678   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02118                 count = count + 1
1679   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167A   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
167B   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
167C   0080           02116                 movwf INDF                                              ;Save to QUEUE
167D   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02118                 count = count + 1
167E   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167F   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1680   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1681   0080           02116                 movwf INDF                                              ;Save to QUEUE
1682   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02118                 count = count + 1
1683   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1684   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1685   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1686   0080           02116                 movwf INDF                                              ;Save to QUEUE
1687   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02118                 count = count + 1
1688   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1689   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168A   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
168B   0080           02116                 movwf INDF                                              ;Save to QUEUE
168C   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02118                 count = count + 1
168D   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

168E   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168F   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1690   0080           02116                 movwf INDF                                              ;Save to QUEUE
1691   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02118                 count = count + 1
1692   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1693   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1694   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
1695   0080           02116                 movwf INDF                                              ;Save to QUEUE
1696   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02118                 count = count + 1
1697   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1698   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1699   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
169A   0080           02116                 movwf INDF                                              ;Save to QUEUE
169B   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02118                 count = count + 1
169C   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169D   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
169E   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
169F   0080           02116                 movwf INDF                                              ;Save to QUEUE
16A0   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02118                 count = count + 1
16A1   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A2   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A3   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16A4   0080           02116                 movwf INDF                                              ;Save to QUEUE
16A5   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02118                 count = count + 1
16A6   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A7   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A8   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16A9   0080           02116                 movwf INDF                                              ;Save to QUEUE
16AA   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02118                 count = count + 1
16AB   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16AC   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AD   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16AE   0080           02116                 movwf INDF                                              ;Save to QUEUE
16AF   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02118                 count = count + 1
16B0   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B1   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B2   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16B3   0080           02116                 movwf INDF                                              ;Save to QUEUE
16B4   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02118                 count = count + 1
16B5   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B6   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B7   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16B8   0080           02116                 movwf INDF                                              ;Save to QUEUE
16B9   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02118                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16BA   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BB   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BC   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16BD   0080           02116                 movwf INDF                                              ;Save to QUEUE
16BE   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02118                 count = count + 1
16BF   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C0   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C1   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16C2   0080           02116                 movwf INDF                                              ;Save to QUEUE
16C3   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02118                 count = count + 1
16C4   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C5   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C6   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16C7   0080           02116                 movwf INDF                                              ;Save to QUEUE
16C8   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02118                 count = count + 1
16C9   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CA   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CB   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16CC   0080           02116                 movwf INDF                                              ;Save to QUEUE
16CD   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02118                 count = count + 1
16CE   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CF   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D0   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16D1   0080           02116                 movwf INDF                                              ;Save to QUEUE
16D2   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            02118                 count = count + 1
16D3   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D4   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D5   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16D6   0080           02116                 movwf INDF                                              ;Save to QUEUE
16D7   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02118                 count = count + 1
16D8   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D9   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DA   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16DB   0080           02116                 movwf INDF                                              ;Save to QUEUE
16DC   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02118                 count = count + 1
16DD   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16DE   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16DF   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16E0   0080           02116                 movwf INDF                                              ;Save to QUEUE
16E1   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02118                 count = count + 1
16E2   1409           02113                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E3   1009           02114                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E4   0808           02115                 movf ADC_DATAPORT, W                    ;Save Sample
16E5   0080           02116                 movwf INDF                                              ;Save to QUEUE
16E6   0A84           02117                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            02118                 count = count + 1
                      02119         endw
16E7   1409           02120         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16E8   0808           02121         movf ADC_DATAPORT, W                            ;Sample
16E9                  02122 SampleRep5MEndA
16E9   0080           02123         movwf INDF
16EA   0A84           02124         incf FSR, F
16EB   2EEE           02125         goto SampleRep5MEndB
16EC                  02126 SampleRep5MEndC
16EC   0080           02127         movwf INDF
16ED   0384           02128         decf FSR, F
16EE                  02129 SampleRep5MEndB
                      02130         ADDLF D'3', gbl_modetempb, f
16EE   3003               M     movlw D'3'
16EF   07F7               M     addwf gbl_modetempb, f
16F0   1486           02131         bsf ADC_PORT, CS
                      02132         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
16F1   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16F2   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16F3   2888               M         goto MainB
                      02133         
16F4                  02134 SampleRep5MStep2
16F4   0000           02135         nop
16F5   1009           02136         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
16F6   2EF7           02137         goto $ + 1
16F7   0000           02138         nop
  0000                02139         local count
  00000001            02140         count = 1
                      02141         while count < D'12'
16F8   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F9   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FA   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
16FB   0080           02145                 movwf INDF                                              ;Save to QUEUE
16FC   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02147                 count = count + 1
16FD   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FE   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FF   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
1700   0080           02145                 movwf INDF                                              ;Save to QUEUE
1701   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02147                 count = count + 1
1702   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1703   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1704   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1705   0080           02145                 movwf INDF                                              ;Save to QUEUE
1706   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02147                 count = count + 1
1707   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1708   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1709   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
170A   0080           02145                 movwf INDF                                              ;Save to QUEUE
170B   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02147                 count = count + 1
170C   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170D   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
170E   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
170F   0080           02145                 movwf INDF                                              ;Save to QUEUE
1710   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02147                 count = count + 1
1711   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1712   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1713   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
1714   0080           02145                 movwf INDF                                              ;Save to QUEUE
1715   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02147                 count = count + 1
1716   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1717   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1718   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
1719   0080           02145                 movwf INDF                                              ;Save to QUEUE
171A   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02147                 count = count + 1
171B   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171C   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171D   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
171E   0080           02145                 movwf INDF                                              ;Save to QUEUE
171F   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02147                 count = count + 1
1720   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1721   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1722   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
1723   0080           02145                 movwf INDF                                              ;Save to QUEUE
1724   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02147                 count = count + 1
1725   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1726   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1727   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
1728   0080           02145                 movwf INDF                                              ;Save to QUEUE
1729   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02147                 count = count + 1
172A   1409           02142                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
172B   1009           02143                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
172C   0808           02144                 movf ADC_DATAPORT, W                    ;Save Sample
172D   0080           02145                 movwf INDF                                              ;Save to QUEUE
172E   0A84           02146                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02147                 count = count + 1
                      02148         endw
172F   1409           02149         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1730   1009           02150         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1731   0808           02151         movf ADC_DATAPORT, W                            ;Sample
1732   0080           02152         movwf INDF
1733   1784           02153         bsf FSR, 7                                                      ;goto bank 2
  00000001            02154         count = 1
                      02155         while count < D'39'
1734   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1735   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1736   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1737   0080           02159                 movwf INDF                                              ;Save to QUEUE
1738   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02161                 count = count + 1
1739   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173A   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
173B   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
173C   0080           02159                 movwf INDF                                              ;Save to QUEUE
173D   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02161                 count = count + 1
173E   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173F   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1740   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1741   0080           02159                 movwf INDF                                              ;Save to QUEUE
1742   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02161                 count = count + 1
1743   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1744   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1745   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1746   0080           02159                 movwf INDF                                              ;Save to QUEUE
1747   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02161                 count = count + 1
1748   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1749   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174A   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
174B   0080           02159                 movwf INDF                                              ;Save to QUEUE
174C   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02161                 count = count + 1
174D   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174E   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174F   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1750   0080           02159                 movwf INDF                                              ;Save to QUEUE
1751   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02161                 count = count + 1
1752   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1753   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1754   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1755   0080           02159                 movwf INDF                                              ;Save to QUEUE
1756   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02161                 count = count + 1
1757   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1758   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1759   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
175A   0080           02159                 movwf INDF                                              ;Save to QUEUE
175B   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            02161                 count = count + 1
175C   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175D   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175E   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
175F   0080           02159                 movwf INDF                                              ;Save to QUEUE
1760   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02161                 count = count + 1
1761   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1762   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1763   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1764   0080           02159                 movwf INDF                                              ;Save to QUEUE
1765   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02161                 count = count + 1
1766   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1767   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1768   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1769   0080           02159                 movwf INDF                                              ;Save to QUEUE
176A   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02161                 count = count + 1
176B   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176C   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176D   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
176E   0080           02159                 movwf INDF                                              ;Save to QUEUE
176F   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02161                 count = count + 1
1770   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1771   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1772   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1773   0080           02159                 movwf INDF                                              ;Save to QUEUE
1774   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02161                 count = count + 1
1775   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1776   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1777   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1778   0080           02159                 movwf INDF                                              ;Save to QUEUE
1779   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02161                 count = count + 1
177A   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177B   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177C   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
177D   0080           02159                 movwf INDF                                              ;Save to QUEUE
177E   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02161                 count = count + 1
177F   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1780   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1781   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1782   0080           02159                 movwf INDF                                              ;Save to QUEUE
1783   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02161                 count = count + 1
1784   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1785   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1786   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1787   0080           02159                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1788   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02161                 count = count + 1
1789   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178A   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178B   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
178C   0080           02159                 movwf INDF                                              ;Save to QUEUE
178D   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02161                 count = count + 1
178E   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178F   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1790   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1791   0080           02159                 movwf INDF                                              ;Save to QUEUE
1792   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02161                 count = count + 1
1793   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1794   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1795   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
1796   0080           02159                 movwf INDF                                              ;Save to QUEUE
1797   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02161                 count = count + 1
1798   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1799   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179A   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
179B   0080           02159                 movwf INDF                                              ;Save to QUEUE
179C   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02161                 count = count + 1
179D   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179E   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179F   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17A0   0080           02159                 movwf INDF                                              ;Save to QUEUE
17A1   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02161                 count = count + 1
17A2   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A3   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A4   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17A5   0080           02159                 movwf INDF                                              ;Save to QUEUE
17A6   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02161                 count = count + 1
17A7   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A8   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A9   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17AA   0080           02159                 movwf INDF                                              ;Save to QUEUE
17AB   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02161                 count = count + 1
17AC   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AD   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AE   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17AF   0080           02159                 movwf INDF                                              ;Save to QUEUE
17B0   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02161                 count = count + 1
17B1   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B2   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B3   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17B4   0080           02159                 movwf INDF                                              ;Save to QUEUE
17B5   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02161                 count = count + 1
17B6   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B7   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B8   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17B9   0080           02159                 movwf INDF                                              ;Save to QUEUE
17BA   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02161                 count = count + 1
17BB   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BC   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BD   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17BE   0080           02159                 movwf INDF                                              ;Save to QUEUE
17BF   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02161                 count = count + 1
17C0   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C1   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C2   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17C3   0080           02159                 movwf INDF                                              ;Save to QUEUE
17C4   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02161                 count = count + 1
17C5   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C6   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C7   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17C8   0080           02159                 movwf INDF                                              ;Save to QUEUE
17C9   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02161                 count = count + 1
17CA   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CB   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CC   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17CD   0080           02159                 movwf INDF                                              ;Save to QUEUE
17CE   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02161                 count = count + 1
17CF   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D0   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D1   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17D2   0080           02159                 movwf INDF                                              ;Save to QUEUE
17D3   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02161                 count = count + 1
17D4   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D5   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D6   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17D7   0080           02159                 movwf INDF                                              ;Save to QUEUE
17D8   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02161                 count = count + 1
17D9   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DA   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17DB   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17DC   0080           02159                 movwf INDF                                              ;Save to QUEUE
17DD   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02161                 count = count + 1
17DE   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DF   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17E0   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17E1   0080           02159                 movwf INDF                                              ;Save to QUEUE
17E2   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02161                 count = count + 1
17E3   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E4   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E5   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17E6   0080           02159                 movwf INDF                                              ;Save to QUEUE
17E7   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02161                 count = count + 1
17E8   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E9   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EA   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17EB   0080           02159                 movwf INDF                                              ;Save to QUEUE
17EC   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02161                 count = count + 1
17ED   1409           02156                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EE   1009           02157                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EF   0808           02158                 movf ADC_DATAPORT, W                    ;Sample
17F0   0080           02159                 movwf INDF                                              ;Save to QUEUE
17F1   0384           02160                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02161                 count = count + 1
                      02162         endw
17F2   1409           02163         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17F3   0808           02164         movf ADC_DATAPORT, W                            ;Sample
                      02165         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
17F4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17F5   118A               M                 bcf PCLATH, 3
                          M         endif
17F6   2EEC               M         goto SampleRep5MEndC
                      02166         
17F7                  02167 SampleRep5MStep3
17F7   2FF8           02168         goto $ + 1
17F8   1009           02169         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17F9   2FFA           02170         goto $ + 1
17FA   0000           02171         nop
  0000                02172         local count
  00000001            02173         count = 1
                      02174         while count < D'25'
17FB   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FC   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FD   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
17FE   0080           02178                 movwf INDF                                              ;Save to QUEUE
17FF   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02180                 count = count + 1
1800   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1801   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1802   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1803   0080           02178                 movwf INDF                                              ;Save to QUEUE
1804   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02180                 count = count + 1
1805   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1806   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1807   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1808   0080           02178                 movwf INDF                                              ;Save to QUEUE
1809   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02180                 count = count + 1
180A   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180B   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180C   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
180D   0080           02178                 movwf INDF                                              ;Save to QUEUE
180E   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02180                 count = count + 1
180F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1810   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1811   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1812   0080           02178                 movwf INDF                                              ;Save to QUEUE
1813   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02180                 count = count + 1
1814   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1815   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1816   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1817   0080           02178                 movwf INDF                                              ;Save to QUEUE
1818   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02180                 count = count + 1
1819   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181B   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
181C   0080           02178                 movwf INDF                                              ;Save to QUEUE
181D   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02180                 count = count + 1
181E   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181F   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1820   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1821   0080           02178                 movwf INDF                                              ;Save to QUEUE
1822   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02180                 count = count + 1
1823   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1824   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1825   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1826   0080           02178                 movwf INDF                                              ;Save to QUEUE
1827   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02180                 count = count + 1
1828   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1829   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182A   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
182B   0080           02178                 movwf INDF                                              ;Save to QUEUE
182C   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02180                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

182D   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182E   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182F   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1830   0080           02178                 movwf INDF                                              ;Save to QUEUE
1831   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02180                 count = count + 1
1832   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1833   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1834   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1835   0080           02178                 movwf INDF                                              ;Save to QUEUE
1836   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02180                 count = count + 1
1837   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1838   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1839   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
183A   0080           02178                 movwf INDF                                              ;Save to QUEUE
183B   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02180                 count = count + 1
183C   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183D   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183E   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
183F   0080           02178                 movwf INDF                                              ;Save to QUEUE
1840   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02180                 count = count + 1
1841   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1842   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1843   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1844   0080           02178                 movwf INDF                                              ;Save to QUEUE
1845   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02180                 count = count + 1
1846   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1847   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1848   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1849   0080           02178                 movwf INDF                                              ;Save to QUEUE
184A   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02180                 count = count + 1
184B   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184C   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184D   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
184E   0080           02178                 movwf INDF                                              ;Save to QUEUE
184F   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02180                 count = count + 1
1850   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1851   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1852   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1853   0080           02178                 movwf INDF                                              ;Save to QUEUE
1854   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02180                 count = count + 1
1855   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1856   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1857   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1858   0080           02178                 movwf INDF                                              ;Save to QUEUE
1859   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            02180                 count = count + 1
185A   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185B   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185C   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
185D   0080           02178                 movwf INDF                                              ;Save to QUEUE
185E   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02180                 count = count + 1
185F   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1860   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1861   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1862   0080           02178                 movwf INDF                                              ;Save to QUEUE
1863   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02180                 count = count + 1
1864   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1865   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1866   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1867   0080           02178                 movwf INDF                                              ;Save to QUEUE
1868   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02180                 count = count + 1
1869   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186A   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186B   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
186C   0080           02178                 movwf INDF                                              ;Save to QUEUE
186D   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02180                 count = count + 1
186E   1409           02175                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186F   1009           02176                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1870   0808           02177                 movf ADC_DATAPORT, W                    ;Sample
1871   0080           02178                 movwf INDF                                              ;Save to QUEUE
1872   0384           02179                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02180                 count = count + 1
                      02181         endw
1873   1409           02182         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1874   1009           02183         bcf ADC_CONTROLPORT, RDD
1875   0808           02184         movf ADC_DATAPORT, W                            ;Sample
1876   0080           02185         movwf INDF
1877   1783           02186         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02187         count = 1
                      02188         while count < D'26'
1878   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1879   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187A   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
187B   0080           02192                 movwf INDF                                              ;Save to QUEUE
187C   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02194                 count = count + 1
187D   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187E   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187F   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
1880   0080           02192                 movwf INDF                                              ;Save to QUEUE
1881   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02194                 count = count + 1
1882   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1883   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1884   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
1885   0080           02192                 movwf INDF                                              ;Save to QUEUE
1886   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02194                 count = count + 1
1887   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1888   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1889   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
188A   0080           02192                 movwf INDF                                              ;Save to QUEUE
188B   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02194                 count = count + 1
188C   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188D   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188E   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
188F   0080           02192                 movwf INDF                                              ;Save to QUEUE
1890   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02194                 count = count + 1
1891   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1892   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1893   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
1894   0080           02192                 movwf INDF                                              ;Save to QUEUE
1895   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02194                 count = count + 1
1896   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1897   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1898   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
1899   0080           02192                 movwf INDF                                              ;Save to QUEUE
189A   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02194                 count = count + 1
189B   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189C   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189D   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
189E   0080           02192                 movwf INDF                                              ;Save to QUEUE
189F   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02194                 count = count + 1
18A0   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A1   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A2   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18A3   0080           02192                 movwf INDF                                              ;Save to QUEUE
18A4   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02194                 count = count + 1
18A5   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A6   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A7   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18A8   0080           02192                 movwf INDF                                              ;Save to QUEUE
18A9   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02194                 count = count + 1
18AA   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AB   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AC   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18AD   0080           02192                 movwf INDF                                              ;Save to QUEUE
18AE   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02194                 count = count + 1
18AF   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18B0   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B1   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18B2   0080           02192                 movwf INDF                                              ;Save to QUEUE
18B3   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02194                 count = count + 1
18B4   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B5   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B6   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18B7   0080           02192                 movwf INDF                                              ;Save to QUEUE
18B8   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02194                 count = count + 1
18B9   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BA   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BB   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18BC   0080           02192                 movwf INDF                                              ;Save to QUEUE
18BD   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02194                 count = count + 1
18BE   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BF   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C0   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18C1   0080           02192                 movwf INDF                                              ;Save to QUEUE
18C2   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02194                 count = count + 1
18C3   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C4   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C5   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18C6   0080           02192                 movwf INDF                                              ;Save to QUEUE
18C7   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02194                 count = count + 1
18C8   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C9   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CA   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18CB   0080           02192                 movwf INDF                                              ;Save to QUEUE
18CC   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02194                 count = count + 1
18CD   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CE   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CF   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18D0   0080           02192                 movwf INDF                                              ;Save to QUEUE
18D1   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02194                 count = count + 1
18D2   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D3   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D4   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18D5   0080           02192                 movwf INDF                                              ;Save to QUEUE
18D6   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02194                 count = count + 1
18D7   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D8   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D9   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18DA   0080           02192                 movwf INDF                                              ;Save to QUEUE
18DB   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02194                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18DC   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DD   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DE   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18DF   0080           02192                 movwf INDF                                              ;Save to QUEUE
18E0   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02194                 count = count + 1
18E1   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E2   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E3   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18E4   0080           02192                 movwf INDF                                              ;Save to QUEUE
18E5   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02194                 count = count + 1
18E6   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E7   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E8   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18E9   0080           02192                 movwf INDF                                              ;Save to QUEUE
18EA   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02194                 count = count + 1
18EB   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18EC   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18ED   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18EE   0080           02192                 movwf INDF                                              ;Save to QUEUE
18EF   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02194                 count = count + 1
18F0   1409           02189                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F1   1009           02190                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F2   0808           02191                 movf ADC_DATAPORT, W                    ;Sample
18F3   0080           02192                 movwf INDF                                              ;Save to QUEUE
18F4   0A84           02193                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02194                 count = count + 1
                      02195         endw
18F5   1409           02196         bsf ADC_CONTROLPORT, RDD
18F6   0808           02197         movf ADC_DATAPORT, W                            ;Sample
                      02198         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
18F7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18F8   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18F9   2EE9               M         goto SampleRep5MEndA
                      02199         
18FA                  02200 SampleRep5MStep4
18FA   28FB           02201         goto $ + 1
18FB   0000           02202         nop
18FC   1009           02203         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18FD   28FE           02204         goto $ + 1
18FE   0000           02205         nop
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                02206         local count
  00000001            02207         count = 1
                      02208         while count < D'38'
18FF   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1900   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1901   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1902   0080           02212                 movwf INDF                                              ;Save to QUEUE
1903   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02214                 count = count + 1
1904   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1905   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1906   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1907   0080           02212                 movwf INDF                                              ;Save to QUEUE
1908   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02214                 count = count + 1
1909   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190A   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190B   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
190C   0080           02212                 movwf INDF                                              ;Save to QUEUE
190D   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02214                 count = count + 1
190E   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190F   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1910   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1911   0080           02212                 movwf INDF                                              ;Save to QUEUE
1912   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02214                 count = count + 1
1913   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1914   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1915   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1916   0080           02212                 movwf INDF                                              ;Save to QUEUE
1917   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02214                 count = count + 1
1918   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1919   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191A   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
191B   0080           02212                 movwf INDF                                              ;Save to QUEUE
191C   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02214                 count = count + 1
191D   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191E   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191F   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1920   0080           02212                 movwf INDF                                              ;Save to QUEUE
1921   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02214                 count = count + 1
1922   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1923   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1924   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1925   0080           02212                 movwf INDF                                              ;Save to QUEUE
1926   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02214                 count = count + 1
1927   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1928   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1929   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
192A   0080           02212                 movwf INDF                                              ;Save to QUEUE
192B   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02214                 count = count + 1
192C   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192D   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192E   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
192F   0080           02212                 movwf INDF                                              ;Save to QUEUE
1930   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02214                 count = count + 1
1931   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1932   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1933   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1934   0080           02212                 movwf INDF                                              ;Save to QUEUE
1935   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02214                 count = count + 1
1936   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1937   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1938   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1939   0080           02212                 movwf INDF                                              ;Save to QUEUE
193A   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02214                 count = count + 1
193B   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193C   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193D   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
193E   0080           02212                 movwf INDF                                              ;Save to QUEUE
193F   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02214                 count = count + 1
1940   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1941   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1942   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1943   0080           02212                 movwf INDF                                              ;Save to QUEUE
1944   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02214                 count = count + 1
1945   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1946   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1947   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1948   0080           02212                 movwf INDF                                              ;Save to QUEUE
1949   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02214                 count = count + 1
194A   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194B   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194C   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
194D   0080           02212                 movwf INDF                                              ;Save to QUEUE
194E   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02214                 count = count + 1
194F   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1950   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1951   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1952   0080           02212                 movwf INDF                                              ;Save to QUEUE
1953   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02214                 count = count + 1
1954   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1955   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1956   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1957   0080           02212                 movwf INDF                                              ;Save to QUEUE
1958   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02214                 count = count + 1
1959   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195A   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195B   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
195C   0080           02212                 movwf INDF                                              ;Save to QUEUE
195D   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02214                 count = count + 1
195E   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195F   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1960   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1961   0080           02212                 movwf INDF                                              ;Save to QUEUE
1962   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02214                 count = count + 1
1963   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1964   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1965   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1966   0080           02212                 movwf INDF                                              ;Save to QUEUE
1967   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02214                 count = count + 1
1968   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1969   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196A   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
196B   0080           02212                 movwf INDF                                              ;Save to QUEUE
196C   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02214                 count = count + 1
196D   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196E   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196F   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1970   0080           02212                 movwf INDF                                              ;Save to QUEUE
1971   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02214                 count = count + 1
1972   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1973   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1974   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1975   0080           02212                 movwf INDF                                              ;Save to QUEUE
1976   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02214                 count = count + 1
1977   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1978   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1979   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
197A   0080           02212                 movwf INDF                                              ;Save to QUEUE
197B   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02214                 count = count + 1
197C   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197D   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197E   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
197F   0080           02212                 movwf INDF                                              ;Save to QUEUE
1980   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02214                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1981   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1982   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1983   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1984   0080           02212                 movwf INDF                                              ;Save to QUEUE
1985   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02214                 count = count + 1
1986   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1987   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1988   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1989   0080           02212                 movwf INDF                                              ;Save to QUEUE
198A   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02214                 count = count + 1
198B   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198C   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198D   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
198E   0080           02212                 movwf INDF                                              ;Save to QUEUE
198F   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02214                 count = count + 1
1990   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1991   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1992   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1993   0080           02212                 movwf INDF                                              ;Save to QUEUE
1994   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02214                 count = count + 1
1995   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1996   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1997   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
1998   0080           02212                 movwf INDF                                              ;Save to QUEUE
1999   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02214                 count = count + 1
199A   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199B   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199C   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
199D   0080           02212                 movwf INDF                                              ;Save to QUEUE
199E   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02214                 count = count + 1
199F   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A0   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A1   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
19A2   0080           02212                 movwf INDF                                              ;Save to QUEUE
19A3   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02214                 count = count + 1
19A4   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A5   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A6   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
19A7   0080           02212                 movwf INDF                                              ;Save to QUEUE
19A8   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02214                 count = count + 1
19A9   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AA   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19AB   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
19AC   0080           02212                 movwf INDF                                              ;Save to QUEUE
19AD   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000024            02214                 count = count + 1
19AE   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AF   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B0   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
19B1   0080           02212                 movwf INDF                                              ;Save to QUEUE
19B2   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02214                 count = count + 1
19B3   1409           02209                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B4   1009           02210                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B5   0808           02211                 movf ADC_DATAPORT, W                    ;Sample
19B6   0080           02212                 movwf INDF                                              ;Save to QUEUE
19B7   0A84           02213                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02214                 count = count + 1
                      02215         endw
19B8   1409           02216         bsf ADC_CONTROLPORT, RDD
19B9   1009           02217         bcf ADC_CONTROLPORT, RDD
19BA   0808           02218         movf ADC_DATAPORT, W                            ;Sample
19BB   0080           02219         movwf INDF
19BC   1384           02220         bcf FSR, 7                                                      ;goto bank 3
  00000001            02221         count = 1
                      02222         while count < D'13'
19BD   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BE   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BF   0808           02225                 movf ADC_DATAPORT, W
19C0   0080           02226                 movwf INDF                                              ;Save to QUEUE
19C1   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02228                 count = count + 1
19C2   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C3   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C4   0808           02225                 movf ADC_DATAPORT, W
19C5   0080           02226                 movwf INDF                                              ;Save to QUEUE
19C6   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02228                 count = count + 1
19C7   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C8   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C9   0808           02225                 movf ADC_DATAPORT, W
19CA   0080           02226                 movwf INDF                                              ;Save to QUEUE
19CB   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02228                 count = count + 1
19CC   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CD   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19CE   0808           02225                 movf ADC_DATAPORT, W
19CF   0080           02226                 movwf INDF                                              ;Save to QUEUE
19D0   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02228                 count = count + 1
19D1   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D2   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D3   0808           02225                 movf ADC_DATAPORT, W
19D4   0080           02226                 movwf INDF                                              ;Save to QUEUE
19D5   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02228                 count = count + 1
19D6   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D7   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19D8   0808           02225                 movf ADC_DATAPORT, W
19D9   0080           02226                 movwf INDF                                              ;Save to QUEUE
19DA   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02228                 count = count + 1
19DB   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DC   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DD   0808           02225                 movf ADC_DATAPORT, W
19DE   0080           02226                 movwf INDF                                              ;Save to QUEUE
19DF   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02228                 count = count + 1
19E0   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E1   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E2   0808           02225                 movf ADC_DATAPORT, W
19E3   0080           02226                 movwf INDF                                              ;Save to QUEUE
19E4   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02228                 count = count + 1
19E5   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E6   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E7   0808           02225                 movf ADC_DATAPORT, W
19E8   0080           02226                 movwf INDF                                              ;Save to QUEUE
19E9   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02228                 count = count + 1
19EA   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19EB   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19EC   0808           02225                 movf ADC_DATAPORT, W
19ED   0080           02226                 movwf INDF                                              ;Save to QUEUE
19EE   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02228                 count = count + 1
19EF   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F0   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F1   0808           02225                 movf ADC_DATAPORT, W
19F2   0080           02226                 movwf INDF                                              ;Save to QUEUE
19F3   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02228                 count = count + 1
19F4   1409           02223                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19F5   1009           02224                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19F6   0808           02225                 movf ADC_DATAPORT, W
19F7   0080           02226                 movwf INDF                                              ;Save to QUEUE
19F8   0384           02227                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02228                 count = count + 1
                      02229         endw
19F9   1409           02230         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
19FA   0808           02231         movf ADC_DATAPORT, W                            ;Sample
                      02232         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
19FB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19FC   118A               M                 bcf PCLATH, 3
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19FD   2EEC               M         goto SampleRep5MEndC
                      02233 
19FE                  02234 SampleRep5MStep5
19FE   29FF           02235         goto $ + 1
                      02236         if (Sample1MhzEnd & (0x1000))
                      02237                 bsf PCLATH, 4
                      02238         else
19FF   120A           02239                 bcf PCLATH, 4
                      02240         endif
                      02241         if (Sample1MhzEnd & (0x800))
1A00   158A           02242                 bsf PCLATH, 3
                      02243         else
                      02244                 bcf PCLATH, 3
                      02245         endif
1A01   1009           02246         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1A02   0000           02247         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1A03   28CC           02248         goto Sample1MhzEnd
                      02249         
                      02250 ;Repetitive sample
                      02251 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02252 ;-----------------------------------------------------------------------------
1A04                  02253 SampleRep2M
1A04   301A           02254         movlw high SampleRep2MPickSt
1A05   008A           02255         movwf PCLATH
1A06   0877           02256         movf gbl_modetempb, w
1A07   0782           02257         addwf PCL, f
1A08                  02258 SampleRep2MPickSt
                      02259         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
1A08   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
1A09   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A0A   2A11               M         goto SampleRep2MStep1
                      02260         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
1A0B   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
1A0C   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A0D   2C18               M         goto SampleRep2MStep2
                      02261         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
1A0E   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1A0F   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A10   2E19               M         goto SampleRep2MStep3
1A11                  02262 SampleRep2MPickEn
1A11                  02263 SampleRep2MStep1
1A11   1009           02264         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02265         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1A12   3020               M     movlw BUFFERMIN
1A13   0084               M     movwf FSR
1A14   0000           02266         nop
  0000                02267         local count
  00000001            02268         count = 1
                      02269         while count < BUFFERSIZE
1A15   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A16   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A17   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A18   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A19   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A1A   0000           02275                 nop
  00000002            02276                 count = count + 1
1A1B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A1C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A1D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A1E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A1F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A20   0000           02275                 nop
  00000003            02276                 count = count + 1
1A21   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A22   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A23   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A24   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A25   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A26   0000           02275                 nop
  00000004            02276                 count = count + 1
1A27   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A28   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A29   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A2A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A2B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A2C   0000           02275                 nop
  00000005            02276                 count = count + 1
1A2D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A2E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A2F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A30   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A31   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A32   0000           02275                 nop
  00000006            02276                 count = count + 1
1A33   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A34   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A35   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A36   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A37   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A38   0000           02275                 nop
  00000007            02276                 count = count + 1
1A39   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A3A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A3C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A3D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A3E   0000           02275                 nop
  00000008            02276                 count = count + 1
1A3F   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A40   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A41   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A42   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A43   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A44   0000           02275                 nop
  00000009            02276                 count = count + 1
1A45   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A46   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A47   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A48   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A49   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A4A   0000           02275                 nop
  0000000A            02276                 count = count + 1
1A4B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A4C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A4F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A50   0000           02275                 nop
  0000000B            02276                 count = count + 1
1A51   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A52   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A53   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A54   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A55   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A56   0000           02275                 nop
  0000000C            02276                 count = count + 1
1A57   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A58   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A59   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A5B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A5C   0000           02275                 nop
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000D            02276                 count = count + 1
1A5D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A5E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A60   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A61   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A62   0000           02275                 nop
  0000000E            02276                 count = count + 1
1A63   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A64   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A65   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A66   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A67   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A68   0000           02275                 nop
  0000000F            02276                 count = count + 1
1A69   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A6A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A6B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A6C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A6D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A6E   0000           02275                 nop
  00000010            02276                 count = count + 1
1A6F   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A70   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A71   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A72   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A73   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A74   0000           02275                 nop
  00000011            02276                 count = count + 1
1A75   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A76   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A77   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A78   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A79   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A7A   0000           02275                 nop
  00000012            02276                 count = count + 1
1A7B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A7C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A7D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A7E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A7F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A80   0000           02275                 nop
  00000013            02276                 count = count + 1
1A81   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A82   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A83   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A84   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A85   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A86   0000           02275                 nop
  00000014            02276                 count = count + 1
1A87   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A88   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A89   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A8A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A8B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A8C   0000           02275                 nop
  00000015            02276                 count = count + 1
1A8D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A8E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A8F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A90   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A91   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A92   0000           02275                 nop
  00000016            02276                 count = count + 1
1A93   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A94   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A95   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A96   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A97   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A98   0000           02275                 nop
  00000017            02276                 count = count + 1
1A99   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1A9A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A9B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A9C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1A9D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1A9E   0000           02275                 nop
  00000018            02276                 count = count + 1
1A9F   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AA0   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA1   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA2   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AA3   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AA4   0000           02275                 nop
  00000019            02276                 count = count + 1
1AA5   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AA6   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA7   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA8   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AA9   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AAA   0000           02275                 nop
  0000001A            02276                 count = count + 1
1AAB   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AAC   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AAD   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AAE   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AAF   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AB0   0000           02275                 nop
  0000001B            02276                 count = count + 1
1AB1   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AB2   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB3   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB4   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AB5   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AB6   0000           02275                 nop
  0000001C            02276                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AB7   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AB8   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB9   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ABA   0080           02273                 movwf INDF                                              ;Save to QUEUE
1ABB   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1ABC   0000           02275                 nop
  0000001D            02276                 count = count + 1
1ABD   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1ABE   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ABF   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC0   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AC1   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AC2   0000           02275                 nop
  0000001E            02276                 count = count + 1
1AC3   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AC4   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC5   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC6   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AC7   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AC8   0000           02275                 nop
  0000001F            02276                 count = count + 1
1AC9   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1ACA   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ACB   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ACC   0080           02273                 movwf INDF                                              ;Save to QUEUE
1ACD   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1ACE   0000           02275                 nop
  00000020            02276                 count = count + 1
1ACF   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AD0   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD1   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD2   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AD3   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AD4   0000           02275                 nop
  00000021            02276                 count = count + 1
1AD5   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AD6   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD7   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD8   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AD9   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1ADA   0000           02275                 nop
  00000022            02276                 count = count + 1
1ADB   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1ADC   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ADD   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ADE   0080           02273                 movwf INDF                                              ;Save to QUEUE
1ADF   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AE0   0000           02275                 nop
  00000023            02276                 count = count + 1
1AE1   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AE2   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE3   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE4   0080           02273                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AE5   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AE6   0000           02275                 nop
  00000024            02276                 count = count + 1
1AE7   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AE8   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE9   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AEA   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AEB   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AEC   0000           02275                 nop
  00000025            02276                 count = count + 1
1AED   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AEE   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEF   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF0   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AF1   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AF2   0000           02275                 nop
  00000026            02276                 count = count + 1
1AF3   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AF4   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF5   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF6   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AF7   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AF8   0000           02275                 nop
  00000027            02276                 count = count + 1
1AF9   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1AFA   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFB   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFC   0080           02273                 movwf INDF                                              ;Save to QUEUE
1AFD   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1AFE   0000           02275                 nop
  00000028            02276                 count = count + 1
1AFF   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B00   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B01   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B02   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B03   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B04   0000           02275                 nop
  00000029            02276                 count = count + 1
1B05   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B06   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B07   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B08   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B09   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B0A   0000           02275                 nop
  0000002A            02276                 count = count + 1
1B0B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B0C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B0F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B10   0000           02275                 nop
  0000002B            02276                 count = count + 1
1B11   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B12   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B13   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B14   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B15   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B16   0000           02275                 nop
  0000002C            02276                 count = count + 1
1B17   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B18   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B19   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B1B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B1C   0000           02275                 nop
  0000002D            02276                 count = count + 1
1B1D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B1E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B20   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B21   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B22   0000           02275                 nop
  0000002E            02276                 count = count + 1
1B23   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B24   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B25   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B26   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B27   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B28   0000           02275                 nop
  0000002F            02276                 count = count + 1
1B29   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B2A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B2D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B2E   0000           02275                 nop
  00000030            02276                 count = count + 1
1B2F   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B30   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B31   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B32   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B33   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B34   0000           02275                 nop
  00000031            02276                 count = count + 1
1B35   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B36   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B37   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B38   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B39   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B3A   0000           02275                 nop
  00000032            02276                 count = count + 1
1B3B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B3C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B3F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B40   0000           02275                 nop
  00000033            02276                 count = count + 1
1B41   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B42   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B43   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B44   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B45   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B46   0000           02275                 nop
  00000034            02276                 count = count + 1
1B47   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B48   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B49   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B4B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B4C   0000           02275                 nop
  00000035            02276                 count = count + 1
1B4D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B4E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B50   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B51   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B52   0000           02275                 nop
  00000036            02276                 count = count + 1
1B53   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B54   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B55   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B56   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B57   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B58   0000           02275                 nop
  00000037            02276                 count = count + 1
1B59   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B5A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B5D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B5E   0000           02275                 nop
  00000038            02276                 count = count + 1
1B5F   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B60   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B61   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B62   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B63   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B64   0000           02275                 nop
  00000039            02276                 count = count + 1
1B65   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B66   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B67   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B68   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B69   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B6A   0000           02275                 nop
  0000003A            02276                 count = count + 1
1B6B   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B6C   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B6D   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6E   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B6F   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B70   0000           02275                 nop
  0000003B            02276                 count = count + 1
1B71   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B72   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B73   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B74   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B75   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B76   0000           02275                 nop
  0000003C            02276                 count = count + 1
1B77   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B78   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B79   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7A   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B7B   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B7C   0000           02275                 nop
  0000003D            02276                 count = count + 1
1B7D   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B7E   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7F   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B80   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B81   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B82   0000           02275                 nop
  0000003E            02276                 count = count + 1
1B83   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B84   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B85   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B86   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B87   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B88   0000           02275                 nop
  0000003F            02276                 count = count + 1
1B89   0808           02270                 movf ADC_DATAPORT, W                    ;Save Sample
1B8A   1409           02271                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B8B   1009           02272                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B8C   0080           02273                 movwf INDF                                              ;Save to QUEUE
1B8D   0A84           02274                 incf FSR, F                                             ;Increment QUEUE pointer
1B8E   0000           02275                 nop
  00000040            02276                 count = count + 1
                      02277         endw
1B8F   0808           02278         movf ADC_DATAPORT, W
1B90   1409           02279         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1B91   1009           02280         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1B92   0080           02281         movwf INDF
1B93   1784           02282         bsf FSR, 7                                                      ;goto bank 2
1B94   0000           02283         nop
  00000001            02284         count = 1
                      02285         while count < D'22'
1B95   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1B96   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B97   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B98   0080           02289                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B99   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1B9A   0000           02291                 nop
  00000002            02292                 count = count + 1
1B9B   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1B9C   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B9D   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B9E   0080           02289                 movwf INDF                                              ;Save to QUEUE
1B9F   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BA0   0000           02291                 nop
  00000003            02292                 count = count + 1
1BA1   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BA2   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA3   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA4   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BA5   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BA6   0000           02291                 nop
  00000004            02292                 count = count + 1
1BA7   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BA8   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA9   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BAA   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BAB   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BAC   0000           02291                 nop
  00000005            02292                 count = count + 1
1BAD   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BAE   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BAF   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB0   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BB1   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BB2   0000           02291                 nop
  00000006            02292                 count = count + 1
1BB3   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BB4   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB5   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB6   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BB7   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BB8   0000           02291                 nop
  00000007            02292                 count = count + 1
1BB9   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BBA   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBB   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBC   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BBD   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BBE   0000           02291                 nop
  00000008            02292                 count = count + 1
1BBF   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BC0   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC1   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC2   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BC3   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BC4   0000           02291                 nop
  00000009            02292                 count = count + 1
1BC5   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BC6   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC7   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC8   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BC9   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BCA   0000           02291                 nop
  0000000A            02292                 count = count + 1
1BCB   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BCC   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCD   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCE   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BCF   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BD0   0000           02291                 nop
  0000000B            02292                 count = count + 1
1BD1   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BD2   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD3   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD4   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BD5   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BD6   0000           02291                 nop
  0000000C            02292                 count = count + 1
1BD7   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BD8   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD9   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDA   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BDB   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BDC   0000           02291                 nop
  0000000D            02292                 count = count + 1
1BDD   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BDE   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDF   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE0   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BE1   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BE2   0000           02291                 nop
  0000000E            02292                 count = count + 1
1BE3   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BE4   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE5   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE6   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BE7   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BE8   0000           02291                 nop
  0000000F            02292                 count = count + 1
1BE9   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BEA   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BEB   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BEC   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BED   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BEE   0000           02291                 nop
  00000010            02292                 count = count + 1
1BEF   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BF0   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF1   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF2   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BF3   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BF4   0000           02291                 nop
  00000011            02292                 count = count + 1
1BF5   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BF6   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF7   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF8   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BF9   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1BFA   0000           02291                 nop
  00000012            02292                 count = count + 1
1BFB   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1BFC   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BFD   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BFE   0080           02289                 movwf INDF                                              ;Save to QUEUE
1BFF   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1C00   0000           02291                 nop
  00000013            02292                 count = count + 1
1C01   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1C02   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C03   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C04   0080           02289                 movwf INDF                                              ;Save to QUEUE
1C05   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1C06   0000           02291                 nop
  00000014            02292                 count = count + 1
1C07   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1C08   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C09   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C0A   0080           02289                 movwf INDF                                              ;Save to QUEUE
1C0B   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1C0C   0000           02291                 nop
  00000015            02292                 count = count + 1
1C0D   0808           02286                 movf ADC_DATAPORT, W                    ;Sample
1C0E   1409           02287                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C0F   1009           02288                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C10   0080           02289                 movwf INDF                                              ;Save to QUEUE
1C11   0384           02290                 decf FSR, F                                             ;Increment QUEUE pointer
1C12   0000           02291                 nop
  00000016            02292                 count = count + 1
                      02293         endw
1C13   0808           02294         movf ADC_DATAPORT, W                            ;Sample
1C14   1409           02295         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02296         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1C15   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1C16   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1C17   2EEC               M         goto SampleRep5MEndC
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02297 
1C18                  02298 SampleRep2MStep2
1C18   2C19           02299         goto $ + 1                                                      ;Delay 2
1C19   1009           02300         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1C1A   2C1B           02301         goto $ + 1                                                      ;Wait three cycles
1C1B   0000           02302         nop
  0000                02303         local count
  00000001            02304         count = 1
                      02305         while count < D'42'
1C1C   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C1D   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1E   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1F   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C20   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C21   0000           02311                 nop
  00000002            02312                 count = count + 1
1C22   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C23   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C24   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C25   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C26   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C27   0000           02311                 nop
  00000003            02312                 count = count + 1
1C28   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C29   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C2A   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C2B   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C2C   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C2D   0000           02311                 nop
  00000004            02312                 count = count + 1
1C2E   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C2F   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C30   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C31   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C32   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C33   0000           02311                 nop
  00000005            02312                 count = count + 1
1C34   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C35   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C36   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C37   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C38   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C39   0000           02311                 nop
  00000006            02312                 count = count + 1
1C3A   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C3B   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3C   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3D   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C3E   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C3F   0000           02311                 nop
  00000007            02312                 count = count + 1
1C40   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C41   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C42   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C43   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C44   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C45   0000           02311                 nop
  00000008            02312                 count = count + 1
1C46   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C47   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C48   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C49   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C4A   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C4B   0000           02311                 nop
  00000009            02312                 count = count + 1
1C4C   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C4D   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4E   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C4F   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C50   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C51   0000           02311                 nop
  0000000A            02312                 count = count + 1
1C52   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C53   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C54   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C55   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C56   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C57   0000           02311                 nop
  0000000B            02312                 count = count + 1
1C58   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C59   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5A   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5B   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C5C   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C5D   0000           02311                 nop
  0000000C            02312                 count = count + 1
1C5E   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C5F   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C60   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C61   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C62   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C63   0000           02311                 nop
  0000000D            02312                 count = count + 1
1C64   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C65   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C66   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C67   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C68   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C69   0000           02311                 nop
  0000000E            02312                 count = count + 1
1C6A   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C6B   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6C   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6D   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C6E   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C6F   0000           02311                 nop
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F            02312                 count = count + 1
1C70   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C71   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C72   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C73   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C74   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C75   0000           02311                 nop
  00000010            02312                 count = count + 1
1C76   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C77   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C78   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C79   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C7A   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C7B   0000           02311                 nop
  00000011            02312                 count = count + 1
1C7C   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C7D   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7E   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7F   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C80   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C81   0000           02311                 nop
  00000012            02312                 count = count + 1
1C82   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C83   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C84   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C85   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C86   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C87   0000           02311                 nop
  00000013            02312                 count = count + 1
1C88   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C89   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8A   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8B   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C8C   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C8D   0000           02311                 nop
  00000014            02312                 count = count + 1
1C8E   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C8F   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C90   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C91   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C92   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C93   0000           02311                 nop
  00000015            02312                 count = count + 1
1C94   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C95   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C96   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C97   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C98   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C99   0000           02311                 nop
  00000016            02312                 count = count + 1
1C9A   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1C9B   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9C   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C9D   0080           02309                 movwf INDF                                              ;Save to QUEUE
1C9E   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1C9F   0000           02311                 nop
  00000017            02312                 count = count + 1
1CA0   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CA1   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA2   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA3   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CA4   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CA5   0000           02311                 nop
  00000018            02312                 count = count + 1
1CA6   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CA7   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA8   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA9   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CAA   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CAB   0000           02311                 nop
  00000019            02312                 count = count + 1
1CAC   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CAD   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAE   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAF   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CB0   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CB1   0000           02311                 nop
  0000001A            02312                 count = count + 1
1CB2   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CB3   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB4   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB5   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CB6   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CB7   0000           02311                 nop
  0000001B            02312                 count = count + 1
1CB8   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CB9   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBA   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBB   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CBC   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CBD   0000           02311                 nop
  0000001C            02312                 count = count + 1
1CBE   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CBF   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC0   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC1   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CC2   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CC3   0000           02311                 nop
  0000001D            02312                 count = count + 1
1CC4   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CC5   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC6   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC7   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CC8   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CC9   0000           02311                 nop
  0000001E            02312                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CCA   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CCB   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCC   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCD   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CCE   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CCF   0000           02311                 nop
  0000001F            02312                 count = count + 1
1CD0   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CD1   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD2   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD3   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CD4   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CD5   0000           02311                 nop
  00000020            02312                 count = count + 1
1CD6   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CD7   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD8   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD9   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CDA   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CDB   0000           02311                 nop
  00000021            02312                 count = count + 1
1CDC   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CDD   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDE   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDF   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CE0   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CE1   0000           02311                 nop
  00000022            02312                 count = count + 1
1CE2   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CE3   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE4   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE5   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CE6   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CE7   0000           02311                 nop
  00000023            02312                 count = count + 1
1CE8   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CE9   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CEA   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEB   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CEC   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CED   0000           02311                 nop
  00000024            02312                 count = count + 1
1CEE   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CEF   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF0   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF1   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CF2   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CF3   0000           02311                 nop
  00000025            02312                 count = count + 1
1CF4   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CF5   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF6   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF7   0080           02309                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CF8   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CF9   0000           02311                 nop
  00000026            02312                 count = count + 1
1CFA   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1CFB   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFC   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CFD   0080           02309                 movwf INDF                                              ;Save to QUEUE
1CFE   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1CFF   0000           02311                 nop
  00000027            02312                 count = count + 1
1D00   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1D01   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D02   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D03   0080           02309                 movwf INDF                                              ;Save to QUEUE
1D04   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1D05   0000           02311                 nop
  00000028            02312                 count = count + 1
1D06   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1D07   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D08   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D09   0080           02309                 movwf INDF                                              ;Save to QUEUE
1D0A   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1D0B   0000           02311                 nop
  00000029            02312                 count = count + 1
1D0C   0808           02306                 movf ADC_DATAPORT, W                    ;Sample
1D0D   1409           02307                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0E   1009           02308                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0F   0080           02309                 movwf INDF                                              ;Save to QUEUE
1D10   0384           02310                 decf FSR, F                                             ;Increment QUEUE pointer
1D11   0000           02311                 nop
  0000002A            02312                 count = count + 1
                      02313         endw
1D12   0808           02314         movf ADC_DATAPORT, W
1D13   1409           02315         bsf ADC_CONTROLPORT, RDD
1D14   1009           02316         bcf ADC_CONTROLPORT, RDD
1D15   0080           02317         movwf INDF
1D16   1783           02318         bsf STATUS, IRP                                         ;goto bank 4
1D17   0000           02319         nop
  00000001            02320         count = 1
                      02321         while count < D'43'
1D18   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D19   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1A   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1B   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D1C   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D1D   0000           02327                 nop
  00000002            02328                 count = count + 1
1D1E   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D1F   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D20   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D21   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D22   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D23   0000           02327                 nop
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            02328                 count = count + 1
1D24   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D25   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D26   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D27   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D28   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D29   0000           02327                 nop
  00000004            02328                 count = count + 1
1D2A   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D2B   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2C   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2D   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D2E   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D2F   0000           02327                 nop
  00000005            02328                 count = count + 1
1D30   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D31   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D32   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D33   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D34   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D35   0000           02327                 nop
  00000006            02328                 count = count + 1
1D36   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D37   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D38   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D39   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D3A   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D3B   0000           02327                 nop
  00000007            02328                 count = count + 1
1D3C   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D3D   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3E   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3F   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D40   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D41   0000           02327                 nop
  00000008            02328                 count = count + 1
1D42   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D43   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D44   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D45   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D46   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D47   0000           02327                 nop
  00000009            02328                 count = count + 1
1D48   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D49   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4A   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4B   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D4C   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D4D   0000           02327                 nop
  0000000A            02328                 count = count + 1
1D4E   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D4F   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D50   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D51   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D52   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D53   0000           02327                 nop
  0000000B            02328                 count = count + 1
1D54   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D55   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D56   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D57   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D58   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D59   0000           02327                 nop
  0000000C            02328                 count = count + 1
1D5A   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D5B   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5C   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5D   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D5E   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D5F   0000           02327                 nop
  0000000D            02328                 count = count + 1
1D60   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D61   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D62   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D63   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D64   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D65   0000           02327                 nop
  0000000E            02328                 count = count + 1
1D66   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D67   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D68   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D69   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D6A   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D6B   0000           02327                 nop
  0000000F            02328                 count = count + 1
1D6C   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D6D   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6E   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6F   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D70   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D71   0000           02327                 nop
  00000010            02328                 count = count + 1
1D72   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D73   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D74   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D75   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D76   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D77   0000           02327                 nop
  00000011            02328                 count = count + 1
1D78   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D79   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7A   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7B   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D7C   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D7D   0000           02327                 nop
  00000012            02328                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D7E   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D7F   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D80   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D81   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D82   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D83   0000           02327                 nop
  00000013            02328                 count = count + 1
1D84   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D85   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D86   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D87   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D88   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D89   0000           02327                 nop
  00000014            02328                 count = count + 1
1D8A   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D8B   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8C   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8D   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D8E   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D8F   0000           02327                 nop
  00000015            02328                 count = count + 1
1D90   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D91   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D92   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D93   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D94   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D95   0000           02327                 nop
  00000016            02328                 count = count + 1
1D96   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D97   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D98   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D99   0080           02325                 movwf INDF                                              ;Save to QUEUE
1D9A   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1D9B   0000           02327                 nop
  00000017            02328                 count = count + 1
1D9C   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1D9D   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9E   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9F   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DA0   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DA1   0000           02327                 nop
  00000018            02328                 count = count + 1
1DA2   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DA3   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA4   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA5   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DA6   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DA7   0000           02327                 nop
  00000019            02328                 count = count + 1
1DA8   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DA9   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAA   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAB   0080           02325                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DAC   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DAD   0000           02327                 nop
  0000001A            02328                 count = count + 1
1DAE   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DAF   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB0   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB1   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DB2   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DB3   0000           02327                 nop
  0000001B            02328                 count = count + 1
1DB4   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DB5   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB6   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB7   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DB8   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DB9   0000           02327                 nop
  0000001C            02328                 count = count + 1
1DBA   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DBB   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBC   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBD   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DBE   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DBF   0000           02327                 nop
  0000001D            02328                 count = count + 1
1DC0   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DC1   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC2   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC3   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DC4   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DC5   0000           02327                 nop
  0000001E            02328                 count = count + 1
1DC6   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DC7   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC8   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC9   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DCA   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DCB   0000           02327                 nop
  0000001F            02328                 count = count + 1
1DCC   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DCD   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCE   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCF   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DD0   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DD1   0000           02327                 nop
  00000020            02328                 count = count + 1
1DD2   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DD3   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD4   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD5   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DD6   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DD7   0000           02327                 nop
  00000021            02328                 count = count + 1
1DD8   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DD9   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDA   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDB   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DDC   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DDD   0000           02327                 nop
  00000022            02328                 count = count + 1
1DDE   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DDF   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE0   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE1   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DE2   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DE3   0000           02327                 nop
  00000023            02328                 count = count + 1
1DE4   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DE5   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE6   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE7   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DE8   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DE9   0000           02327                 nop
  00000024            02328                 count = count + 1
1DEA   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DEB   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DEC   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DED   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DEE   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DEF   0000           02327                 nop
  00000025            02328                 count = count + 1
1DF0   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DF1   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF2   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF3   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DF4   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DF5   0000           02327                 nop
  00000026            02328                 count = count + 1
1DF6   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DF7   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF8   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF9   0080           02325                 movwf INDF                                              ;Save to QUEUE
1DFA   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1DFB   0000           02327                 nop
  00000027            02328                 count = count + 1
1DFC   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1DFD   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFE   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFF   0080           02325                 movwf INDF                                              ;Save to QUEUE
1E00   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1E01   0000           02327                 nop
  00000028            02328                 count = count + 1
1E02   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1E03   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E04   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E05   0080           02325                 movwf INDF                                              ;Save to QUEUE
1E06   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E07   0000           02327                 nop
  00000029            02328                 count = count + 1
1E08   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1E09   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E0A   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E0B   0080           02325                 movwf INDF                                              ;Save to QUEUE
1E0C   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1E0D   0000           02327                 nop
  0000002A            02328                 count = count + 1
1E0E   0808           02322                 movf ADC_DATAPORT, W                    ;Sample
1E0F   1409           02323                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E10   1009           02324                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E11   0080           02325                 movwf INDF                                              ;Save to QUEUE
1E12   0A84           02326                 incf FSR, F                                             ;Increment QUEUE pointer
1E13   0000           02327                 nop
  0000002B            02328                 count = count + 1
                      02329         endw
1E14   0808           02330         movf ADC_DATAPORT, W                            ;Sample
1E15   1409           02331         bsf ADC_CONTROLPORT, RDD
                      02332         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1E16   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1E17   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1E18   2EE9               M         goto SampleRep5MEndA
                      02333 
1E19                  02334 SampleRep2MStep3
1E19   2E1A           02335         goto $ + 1                                                      ;Delay 4
                      02336         if (Sample833kEnd & (0x1000))
1E1A   160A           02337                 bsf PCLATH, 4
                      02338         else
                      02339                 bcf PCLATH, 4
                      02340         endif
                      02341         if (Sample833kEnd & (0x800))
                      02342                 bsf PCLATH, 3
                      02343         else
1E1B   118A           02344                 bcf PCLATH, 3
                      02345         endif
1E1C   1009           02346         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1E1D   0000           02347         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1E1E   2BD4           02348         goto Sample833kEnd
                      02349 
                      02350 
                      02351 ;=============================================================================
                      02352 end             ;end of program
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       00000123
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BANK0                             00000000
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1SEL                            00000001
CH1SELG                           00000004
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   00000237
ChannelConfStore                  00000243
ConfReceive                       000001FA
ConfReceiveRateOnly               00000211
ConfSend                          0000021C
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             00000118
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

DelayFive                         00000431
DelayLoop                         00000119
DelaySeven                        00000430
DelayTwo                          00000433
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           00000102
GetByteB                          00000104
GetByteC                          00000108
GetByteD                          0000010C
GetByteE                          00000110
HTS                               00000002
I2C_DATA                          00000005
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000050
IntHandler                        00000004
IrqServiceTimer1                  00000128
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000079
MainB                             00000088
MainSelect                        00000011
MainWTrigB                        000000A6
MainWaitTrig                      00000095
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           00000113
PutByteSerial                     00000113
R                                 00000002
RBIE                              00000003
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000004C7
Sample1MhzEnd                     000008CC
Sample250kA                       000003E1
Sample250kB                       000003F8
Sample250kC                       0000040F
Sample250kD                       00000426
Sample417k250k                    000003D1
Sample417kA                       000003E2
Sample417kB                       000003F9
Sample417kC                       00000410
Sample417kD                       00000427
Sample417kLoopA                   000003DA
Sample417kLoopB                   000003F1
Sample417kLoopC                   00000408
Sample417kLoopD                   0000041F
Sample625k                        0000038E
Sample625kLoopA                   00000394
Sample625kLoopB                   000003A4
Sample625kLoopC                   000003B4
Sample625kLoopD                   000003C4
Sample833k                        00000FCE
Sample833kEnd                     000013D4
SampleDelayed                     00000280
SampleDelayedLoopA                0000028B
SampleDelayedLoopB                000002A5
SampleDelayedLoopC                000002BF
SampleDelayedLoopD                000002D9
SampleIntDrvn                     00000177
SampleRealTime                    000001F9
SampleRep2M                       00001A04
SampleRep2MPickEn                 00001A11
SampleRep2MPickSt                 00001A08
SampleRep2MStep1                  00001A11
SampleRep2MStep2                  00001C18
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2MStep3                  00001E19
SampleRep5M                       000015D1
SampleRep5MEndA                   000016E9
SampleRep5MEndB                   000016EE
SampleRep5MEndC                   000016EC
SampleRep5MPickEn                 000015E4
SampleRep5MPickSt                 000015D5
SampleRep5MStep1                  000015E4
SampleRep5MStep2                  000016F4
SampleRep5MStep3                  000017F7
SampleRep5MStep4                  000018FA
SampleRep5MStep5                  000019FE
SampleXY250k192k                  00000434
SampleXY250kLA                    00000443
SampleXY250kLB                    00000467
SampleXY250kLC                    0000048B
SampleXY250kLD                    000004AF
SampleXY417k                      000009CB
SampleXYDelayed                   000002EB
SampleXYDelayedLA                 000002FD
SampleXYDelayedLB                 00000325
SampleXYDelayedLC                 0000034D
SampleXYDelayedLD                 00000375
StSample417kLoopB                 000003F6
StSample417kLoopC                 0000040D
StSample417kLoopD                 00000424
StSampleDelayedLoopA              00000290
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000B1
WaitComm_Break                    000000FA
WaitComm_Conf                     000000E4
WaitComm_Data                     000000B2
WaitComm_Rec                      000000ED
WaitComm_SendDataA                000000BD
WaitComm_SendDataB                000000C7
WaitComm_SendDataC                000000D1
WaitComm_SendDataD                000000DB
WaitComm_SendDataExit             000000E1
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000066
b0_sampleAddr                     00000064
b0_sampleBank                     00000065
b0_triggerDelay1                  00000060
b0_triggerDelay2                  00000061
b0_triggerDelay3                  00000062
b0_triggerLevel                   00000063
b0_unused0                        0000006F
b0_unused1                        0000006E
b0_unused2                        0000006D
b0_unused3                        0000006C
b0_unused4                        0000006B
b0_unused5                        0000006A
b0_unused6                        00000069
b0_unused7                        00000068
b0_unused8                        00000067
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

b1_unusedD                        000000E2
b1_unusedE                        000000E1
b1_unusedF                        000000E0
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused10                       0000011F
b2_unused11                       0000011E
b2_unused12                       0000011D
b2_unused13                       0000011C
b2_unused14                       0000011B
b2_unused15                       0000011A
b2_unused16                       00000119
b2_unused17                       00000118
b2_unused18                       00000117
b2_unused19                       00000116
b2_unused1A                       00000115
b2_unused1B                       00000114
b2_unused1C                       00000113
b2_unused1D                       00000112
b2_unused1E                       00000111
b2_unused1F                       00000110
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused10                       0000019F
b3_unused11                       0000019E
b3_unused12                       0000019D
b3_unused13                       0000019C
b3_unused14                       0000019B
b3_unused15                       0000019A
b3_unused16                       00000199
b3_unused17                       00000198
b3_unused18                       00000197
b3_unused19                       00000196
b3_unused1A                       00000195
b3_unused1B                       00000194
b3_unused1C                       00000193
b3_unused1D                       00000192
b3_unused1E                       00000191
b3_unused1F                       00000190
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000073
gbl_cntrb                         00000074
gbl_cntrc                         00000075
gbl_configLoc1                    00000070
gbl_dataConfig                    00000079
gbl_modetemp                      00000076
gbl_modetempb                     00000077
gbl_pclath_temp                   0000007C
gbl_sampleRate1                   00000071
gbl_sampleRate2                   00000072
gbl_spdata                        00000078
gbl_status_temp                   0000007B
gbl_unused0                       0000007F
gbl_unused1                       0000007E
gbl_unused2                       0000007D
gbl_w_temp                        0000007A
ih_1                              0000000A
ih_2                              00000042
ih_3                              0000004B
irqst1_5                          00000172
irqst1_6                          00000166
irqst1_7                          00000168
sid_Exit                          000001EF
sid_GetByte                       0000018C
sid_GetByteB                      00000194
sid_GetByteC                      00000198
sid_GetByteD                      0000019C
sid_GetByteE                      000001A0
sid_WaitComm_Break                000001E7
sid_WaitComm_Conf                 000001D5
sid_WaitComm_Data                 000001A2
sid_WaitComm_Rec                  000001DE
sid_WaitComm_SendDataA            000001AE
sid_WaitComm_SendDataB            000001B8
sid_WaitComm_SendDataC            000001C2
sid_WaitComm_SendDataD            000001CC
sid_WaitComm_SendDataExit         000001D2
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 221


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 222


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120926.ASM   9-28-2012  10:18:58         PAGE 223


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXX- ---------------- ----------------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7711
Program Memory Words Free:   481


Errors   :     0
Warnings :     0 reported,  1133 suppressed
Messages :    16 reported,    26 suppressed

