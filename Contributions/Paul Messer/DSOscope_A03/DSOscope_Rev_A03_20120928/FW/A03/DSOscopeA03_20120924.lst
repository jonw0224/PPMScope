MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;
                      00071 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00072 ;
                      00073 ;
                      00074 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00075 ;
                      00076 ;This program is free software; you can redistribute it and/or modify it under
                      00077 ;the terms of the GNU General Public License as published by the Free Software
                      00078 ;Foundation; either version 2 of the License, or (at your option) any later
                      00079 ;version.
                      00080 ;
                      00081 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00082 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00083 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00084 ;details.
                      00085 ;
                      00086 ;You should have received a copy of the GNU General Public License along with
                      00087 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00088 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00089 ;
                      00090 ;==============================================================================
                      00091 
                      00092 ;=============================================================================
                      00093 ; C O N F I G U R A T I O N
                      00094 ;=============================================================================
                      00095 
                      00096         LIST P=16F887
                      00097 
                      00098         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00099 
                      00100 
                      00101 ;*****************************************************
                      00102 ;       === Configuration Word Definitions ===
                      00103 ;*****************************************************
                      00104 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00105 
                      00106 ; '__CONFIG' directive is used to embed configuration data within .asm file.
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; The labels following the directive are located in the respective .inc file.
                      00108 ; See respective data sheet for additional information on configuration word.
                      00109 
2007   20F2           00110         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00111         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00112 
                      00113 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00114 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00115 
2000   0001 0002 0003 00116         __idlocs        0x1234
       0004 
                      00117 
  00000020            00118         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00119 
                      00120 ;=============================================================================
                      00121 ; C O N S T A N T S
                      00122 ;=============================================================================
                      00123 
  00000000            00124 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00125 BANK1                   equ     0x0080
  00000100            00126 BANK2                   equ     0x0100
  00000180            00127 BANK3                   equ     0x0180
                      00128 
  00000020            00129 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00130 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00131                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00132                                                         ;the data points alternate between channel 1 and
                      00133                                                         ;channel 2
  0000005F            00134 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00135 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00136 
                      00137 ;I/O Pin maps
                      00138 ;-----------------------------------------------------------------------------
  00000007            00139         SERIALPORT      set     PORTC
  00000007            00140                 RX              equ     0x07
  00000006            00141                 TX              equ     0x06
                      00142 
  00000009            00143         ADC_CONTROLPORT set     PORTE
  00000000            00144                 RDD             equ     0x00
  00000001            00145                 ADDR0   equ     0x01
                      00146 
  00000006            00147         TRIGGERPORT     set     PORTB
  00000000            00148                 TRIGGER equ     0x00
                      00149 
  00000006            00150         ADC_PORT        set     PORTB
  00000003            00151                 ADDR2   equ     0x03
  00000002            00152                 ADDR1   equ     0x02
  00000001            00153                 CS              equ     0x01
                      00154 
  00000008            00155         ADC_DATAPORT    set     PORTD
                      00156 
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00157         ANALOG_SEL      set     PORTC
  00000001            00158                 CH1SEL  equ     0x01
  00000002            00159                 CH2SEL  equ     0x02
                      00160 
  00000005            00161         ANALOG_GAIN     set     PORTA
  00000000            00162                 GAIN1   equ     0x00
  00000001            00163                 GAIN5   equ     0x01
  00000004            00164                 CH1SELG equ     0x04
  00000005            00165                 CH2SELG equ     0x05
                      00166 
  00000007            00167         ANALOG_ACDC     set     PORTC
  00000000            00168                 ACDCMODE        equ     0x00
                      00169 
                      00170 ;Configuration memory map
                      00171 ;-----------------------------------------------------------------------------
                      00172 ;Bit map for gbl_configLoc1
  00000007            00173         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00174         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00175         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00176         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00177         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00178         FREQMODEBIT2            equ     0x02
  00000001            00179         FREQMODEBIT1            equ     0x01
  00000000            00180         FREQMODEBIT0            equ     0x00
                      00181 
                      00182 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00183         SAMPLEBANK3                     equ     0x02
  00000003            00184         SAMPLEBANK2                     equ     0x03
  00000001            00185         SAMPLEBANK1                     equ     0x01
  00000000            00186         SAMPLEBANK0                     equ     0x00
                      00187 
                      00188 
                      00189 ;Table of frequency modes, 0 to 15
  00000000            00190         FREQSAMPLE1M            equ     D'0'
  00000001            00191         FREQSAMPLE833K          equ     D'1'
  00000002            00192         FREQSAMPLE625K          equ     D'2'
  00000003            00193         FREQSAMPLE417K          equ     D'3'
  00000004            00194         FREQSAMPLE250K          equ     D'4'
  00000005            00195         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00196         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00197         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00198         FREQSAMPLEXY417K        equ     D'8'
  00000009            00199         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00200         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00201         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00202         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
                      00203 
                      00204 
                      00205 ;=============================================================================
                      00206 ; V A R I A B L E S
                      00207 ;=============================================================================
                      00208 
                      00209 CBLOCK  0x70            ;Global General Purpose Registers, accessible anywhere
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000070            00210         gbl_configLoc1                  ;Configuration mode
  00000071            00211         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000072            00212         gbl_sampleRate2
  00000073            00213         gbl_cntra                               ;general use counter
  00000074            00214         gbl_cntrb                               ;second counter
  00000075            00215         gbl_cntrc                               ;third counter
  00000076            00216         gbl_modetemp                    ;temporary mode variable
  00000077            00217         gbl_modetempb                   ;temporary mode for repetitive sampling
  00000078            00218         gbl_spdata                              ;data to/from serial port
  00000079            00219         gbl_dataConfig                  ;the data configuration
  0000007A            00220         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007B            00221         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007C            00222         gbl_pclath_temp                 ;temp storage for pclath register during interrupt handling
  0000007D            00223         gbl_unused2
  0000007E            00224         gbl_unused1
  0000007F            00225         gbl_unused0
                      00226 ENDC
                      00227 
                      00228 CBLOCK  0x60            ;Bank0 General Purpose Registers
  00000060            00229         b0_triggerDelay1                ;trigger delay (3 bytes)
  00000061            00230         b0_triggerDelay2
  00000062            00231         b0_triggerDelay3
  00000063            00232         b0_triggerLevel                 ;the trigger level
  00000064            00233         b0_sampleAddr                   ;address to store ADC sampled value
  00000065            00234         b0_sampleBank                   ;bank to store ADC sampled value
  00000066            00235         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000067            00236         b0_unused8
  00000068            00237         b0_unused7
  00000069            00238         b0_unused6
  0000006A            00239         b0_unused5
  0000006B            00240         b0_unused4
  0000006C            00241         b0_unused3
  0000006D            00242         b0_unused2
  0000006E            00243         b0_unused1
  0000006F            00244         b0_unused0
                      00245 ENDC
                      00246 
                      00247 CBLOCK  0xE0            ;Bank1 General Purpose Registers
  000000E0            00248         b1_unusedF
  000000E1            00249         b1_unusedE
  000000E2            00250         b1_unusedD
  000000E3            00251         b1_unusedC
  000000E4            00252         b1_unusedB
  000000E5            00253         b1_unusedA
  000000E6            00254         b1_unused9
  000000E7            00255         b1_unused8
  000000E8            00256         b1_unused7
  000000E9            00257         b1_unused6
  000000EA            00258         b1_unused5
  000000EB            00259         b1_unused4
  000000EC            00260         b1_unused3
  000000ED            00261         b1_unused2
  000000EE            00262         b1_unused1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000EF            00263         b1_unused0
                      00264 ENDC
                      00265 
                      00266 CBLOCK  0x160           ;Bank2 General Purpose Registers
  00000160            00267         b2_unusedF
  00000161            00268         b2_unusedE
  00000162            00269         b2_unusedD
  00000163            00270         b2_unusedC
  00000164            00271         b2_unusedB
  00000165            00272         b2_unusedA
  00000166            00273         b2_unused9
  00000167            00274         b2_unused8
  00000168            00275         b2_unused7
  00000169            00276         b2_unused6
  0000016A            00277         b2_unused5
  0000016B            00278         b2_unused4
  0000016C            00279         b2_unused3
  0000016D            00280         b2_unused2
  0000016E            00281         b2_unused1
  0000016F            00282         b2_unused0
                      00283 ENDC
                      00284 
                      00285 CBLOCK  0x1E0           ;Bank3 General Purpose Registers
  000001E0            00286         b3_unusedF
  000001E1            00287         b3_unusedE
  000001E2            00288         b3_unusedD
  000001E3            00289         b3_unusedC
  000001E4            00290         b3_unusedB
  000001E5            00291         b3_unusedA
  000001E6            00292         b3_unused9
  000001E7            00293         b3_unused8
  000001E8            00294         b3_unused7
  000001E9            00295         b3_unused6
  000001EA            00296         b3_unused5
  000001EB            00297         b3_unused4
  000001EC            00298         b3_unused3
  000001ED            00299         b3_unused2
  000001EE            00300         b3_unused1
  000001EF            00301         b3_unused0
                      00302 ENDC
                      00303 
                      00304 ;=============================================================================
                      00305 ; I N C L U D E S
                      00306 ;=============================================================================
                      00307         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00308         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00309         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00310 
                      00311 
                      00312 ;=============================================================================
                      00313 ; M A C R O S
                      00314 ;=============================================================================
                      00315 
                      00316 MGOTO macro address
                      00317         if (address & (0x1000))
                      00318                 bsf PCLATH, 4
                      00319         else
                      00320                 bcf PCLATH, 4
                      00321         endif
                      00322         if (address & (0x800))
                      00323                 bsf PCLATH, 3
                      00324         else
                      00325                 bcf PCLATH, 3
                      00326         endif
                      00327         goto address
                      00328         endm
                      00329 
                      00330 
                      00331 
                      00332 
                      00333 ;=============================================================================
                      00334 ; I N T E R R U P T S
                      00335 ;=============================================================================
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00336 
0000                  00337 org 0x0000      ;Reset Vector
                      00338 ;First three lines of initialization included here to save on memory.
                      00339         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00340         clrf ADC_DATAPORT
0003   2850           00341         goto Initial
                      00342 
0004                  00343 org 0x0004      ;Interrupt Vector
0004                  00344 IntHandler
                      00345         ;Save the current state
0004   00FA           00346     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00347         swapf   STATUS,W                                        ;Move status register into W register
0006   00FB           00348         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00349 
                      00350         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00351         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00352         ; the interrupt is truly enabled before acting on the flag state.
                      00353 ;       comf    INTCON, W                                       ;Check for trigger interrupt and its ena
                            ble bit
                      00354 ;       andlw   (1<<INTF)|(1<<INTE)
                      00355 ;       btfss   STATUS, Z
                      00356 ;               goto ih_2
                      00357 
                      00358         ;HOWEVER, we can shorten/speed up this interrupt check!  Since we only enable the trigger
                      00359         ; interrupt when we are actually looking for it, and since we only enter this routine if
                      00360         ; we have an interrupt, we can shorten the trigger interrupt check to just look at the
                      00361         ; enable being active:
0007   1E0B           00362         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   2842           00363                 goto    ih_2
0009   120B           00364         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00365                                                                                 ; for the duration of th
                            e acquisition
000A                  00366 ih_1
000A   0BF3           00367         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0xfff imp
                            lies minimum delay
000B   280A           00368                 goto ih_1
000C   0BF4           00369         decfsz gbl_cntrb, f
000D   280A           00370                 goto ih_1
000E   0BF5           00371         decfsz gbl_cntrc, f
000F   280A           00372                 goto ih_1
0010   0876           00373         movf gbl_modetemp, w
                      00374 
0011                  00375 MainSelect
0011   0782           00376         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00377         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0013   118A               M                 bcf PCLATH, 3
                          M         endif
0014   2CB0               M         goto Sample1M
                      00378         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0015   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0016   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0017   2FB7               M         goto Sample833k
                      00379         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2B77               M         goto Sample625k
                      00380         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001B   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
001D   2BBA               M         goto Sample417k250k
                      00381         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2BBA               M         goto Sample417k250k
                      00382         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2A69               M         goto SampleDelayed
                      00383         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0024   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0026   2DBA               M         goto SampleRep5M
                      00384         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0027   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
0028   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0029   29ED               M         goto SampleRep2M
                      00385         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
002B   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[306]: Crossing page boundary -- ensure page bits are set.
002C   29B4               M         goto SampleXY417k
                      00386         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002E   118A               M                 bcf PCLATH, 3
                          M         endif
002F   2C1D               M         goto SampleXY250k192k
                      00387         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0031   118A               M                 bcf PCLATH, 3
                          M         endif
0032   2C1D               M         goto SampleXY250k192k
                      00388         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2AD4               M         goto SampleXYDelayed
                      00389         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   2965               M         goto SampleIntDrvn
                      00390         MGOTO SampleRealTime                            ;FreqMode = 13
                          M         if (SampleRealTime & (0x1000))
                          M                 bsf PCLATH, 4
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRealTime & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   29E2               M         goto SampleRealTime
                      00391         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   2875               M         goto Main
                      00392         MGOTO Main                                                      ;Invalid FreqMode = 15
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2875               M         goto Main
                      00393 
                      00394 
0042                  00395 ih_2
0042   1283 1303      00396         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0044   1C0C           00397         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0045   284B           00398                 goto    ih_3                                    ;It wasn't, so restore registers and the
                            n return from interrupt
0046   1683 1303      00399         banksel BANK1
0048   1C0C           00400         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0049   284B           00401                 goto    ih_3
004A   2114           00402         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00403 
004B                  00404 ih_3
                      00405         ;restore previous state 
004B   0E7B           00406     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
004C   0083           00407     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   0EFA           00408     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
004E   0E7A           00409     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
004F   0009           00410     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00411 
                      00412 
                      00413 ;=============================================================================
                      00414 ; M A I N
                      00415 ;=============================================================================
                      00416 ;Initalize for the program
                      00417 ;-----------------------------------------------------------------------------
0050                  00418 Initial
0050   0185           00419         clrf PORTA
0051   1683 1303      00420         banksel TRISA
                      00421         MOVLF B'00010111', TRISA                        ;Configure PORTA
0053   3017               M     movlw B'00010111'
0054   0085               M     movwf TRISA
                      00422         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0055   30C0               M     movlw B'11000000'
0056   0081               M     movwf OPTION_REG
                      00423         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0057   3010               M     movlw B'00010000'
0058   008B               M     movwf INTCON
                      00424         MOVLF B'00110001', TRISB
0059   3031               M     movlw B'00110001'
005A   0086               M     movwf TRISB
                      00425         MOVLF B'11111111', TRISD
005B   30FF               M     movlw B'11111111'
005C   0088               M     movwf TRISD
                      00426         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
005D   3004               M     movlw B'00000100'
005E   0089               M     movwf TRISE
                      00427         MOVLF B'10111001', TRISC                        ;Configure PORTC
005F   30B9               M     movlw B'10111001'
0060   0087               M     movwf TRISC
                      00428 
0061   1683 1703      00429         banksel ANSEL                   ;Access bank 3
0063   0188           00430         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0064   0189           00431         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00432 
                      00433         ;Initialize Serial Port
                      00434 
0065   3008           00435         movlw   0x08                    ;Set the Serial Port baud rate generators
0066   0087           00436         movwf   BAUDCTL
0067   1683 1303      00437         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0069   3056           00438         movlw   0x56                    ; for 57.6K baud
006A   0099           00439         movwf   SPBRG
006B   3000           00440         movlw   0x00
006C   009A           00441         movwf   SPBRGH
006D   3024           00442         movlw   0x24                    ;Set the Serial Port Transmitter configuration
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   0098           00443         movwf   TXSTA
006F   1283 1303      00444         banksel RCSTA                   ;Access bank 0
0071   3090           00445         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0072   0098           00446         movwf   RCSTA
                      00447 
0073   1383           00448         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
0074   019F           00449         clrf    ADCON0                  ;Make sure PIC's ADC is off
                      00450         
0075                  00451 Main
0075   20A0           00452         call    WaitComm                ;Call WaitComm and stay there until we have
                      00453                                                         ; received a Configuration Information Field
                      00454 
0076   01F7           00455         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00456         
0077                  00457 MainB
0077   1089           00458         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
0078   1A70           00459         btfsc   gbl_configLoc1, CHANNELBIT
0079   1489           00460                 bsf             ADC_CONTROLPORT, ADDR0
                      00461         if (high MainSelect)
                      00462                 movlw   high MainSelect                 ;Prepare for jump
                      00463                 movwf   PCLATH
                      00464         else
007A   018A           00465                 clrf PCLATH
                      00466         endif
007B   0870           00467         movf    gbl_configLoc1, w                       ;Put configuration in WREG
007C   390F           00468         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
007D   00F6           00469         movwf   gbl_modetemp                            ;Multiply by 3
007E   1003           00470         bcf             STATUS, C
007F   0DF6           00471         rlf             gbl_modetemp, f
0080   0776           00472         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0081   1086           00473         bcf             ADC_PORT, CS                            ;Select MAX118
0082   1F70           00474         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
0083   2811           00475                 goto    MainSelect
0084                  00476 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0084   00F6           00477         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
0085   0A62           00478         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
0086   00F3           00479         movwf   gbl_cntra
0087   0A61           00480         incf    b0_triggerDelay2, w     
0088   00F4           00481         movwf   gbl_cntrb
0089   0A60           00482         incf    b0_triggerDelay1, w
008A   00F5           00483         movwf   gbl_cntrc
008B   1683 1303      00484         banksel OPTION_REG                                      ;Access bank 1
008D   1301           00485         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
008E   1BF0           00486         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
008F   1701           00487                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
0090   1283 1303      00488         banksel BANK0                                           ;Access bank 0
0092   108B           00489         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
0093   160B           00490         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0094   178B           00491         bsf             INTCON, GIE                                     ;Enable interrupts
                      00492 
0095                  00493 MainWTrigB
0095   20EE           00494         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
                      00495         skipEqLF B'11110011', gbl_spdata        ;message is received
0096   0878               M         movf gbl_spdata, w
0097   3AF3               M         xorlw B'11110011'
0098   1D03               M         btfss STATUS, Z
0099   2895           00496                 goto    MainWTrigB
                      00497         MOVLF B'11011100', gbl_spdata           ;Respond
009A   30DC               M     movlw B'11011100'
009B   00F8               M     movwf gbl_spdata
009C   20FF           00498         call    PutByte
009D   120B           00499         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
009E   138B           00500         bcf             INTCON, GIE                                     ;Disable interrupts
009F   2875           00501         goto    Main                                            ;Abort
                      00502 
                      00503                                                                                 ;Note that the jitter on
                             the interrupt is
                      00504                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00505                                                                                 ;on the PIC running at 2
                            0 MHz
                      00506 
                      00507 ;=============================================================================
                      00508 ; S U B R O U T I N E S
                      00509 ;=============================================================================
                      00510 
                      00511 ;Wait for command from computer and respond accordingly
                      00512 
                      00513         ; Received Commands are:
                      00514         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00515         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00516         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00517         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00518 
                      00519 ;-----------------------------------------------------------------------------
00A0                  00520 WaitComm
00A0   20EE           00521         call GetByte                                            ;Wait for receive
                      00522 
00A1                  00523 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00524         skipEqLF B'11111000', gbl_spdata
00A1   0878               M         movf gbl_spdata, w
00A2   3AF8               M         xorlw B'11111000'
00A3   1D03               M         btfss STATUS, Z
00A4   28D4           00525                 goto WaitComm_Conf
                      00526         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00A5   30DC               M     movlw B'11011100'
00A6   00F8               M     movwf gbl_spdata
00A7   20FF           00527         call PutByte
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00528         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue
00A8   3020               M     movlw BUFFERMIN
00A9   0084               M     movwf FSR
                      00529         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00AA   3040               M     movlw BUFFERSIZE
00AB   00F4               M     movwf gbl_cntrb
00AC                  00530 WaitComm_SendDataA
                      00531         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00AC   0800               M     movf INDF, w
00AD   00F8               M     movwf gbl_spdata
00AE   0A84           00532         incf FSR, F                                                     ;Increment pointer
00AF   20FF           00533         call PutByte                                            ;Send data
00B0   0BF4           00534         decfsz gbl_cntrb, f
00B1   28AC           00535                 goto WaitComm_SendDataA
                      00536         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00B2   3040               M     movlw BUFFERSIZE
00B3   00F4               M     movwf gbl_cntrb
00B4   1784           00537         bsf FSR, 7                                                      ;Bank 1
00B5   0384           00538         decf FSR, f
00B6                  00539 WaitComm_SendDataB
                      00540         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00B6   0800               M     movf INDF, w
00B7   00F8               M     movwf gbl_spdata
00B8   0384           00541         decf FSR, F                                                     ;Increment pointer
00B9   20FF           00542         call PutByte                                            ;Send data
00BA   0BF4           00543         decfsz gbl_cntrb, f
00BB   28B6           00544                 goto WaitComm_SendDataB
                      00545         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00BC   3040               M     movlw BUFFERSIZE
00BD   00F4               M     movwf gbl_cntrb
00BE   1783           00546         bsf STATUS, IRP                                         ;Bank 3
00BF   0A84           00547         incf FSR, f
00C0                  00548 WaitComm_SendDataC
                      00549         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00C0   0800               M     movf INDF, w
00C1   00F8               M     movwf gbl_spdata
00C2   0A84           00550         incf FSR, F                                                     ;Increment pointer
00C3   20FF           00551         call PutByte                                            ;Send data
00C4   0BF4           00552         decfsz gbl_cntrb, f
00C5   28C0           00553                 goto WaitComm_SendDataC
                      00554         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00C6   3040               M     movlw BUFFERSIZE
00C7   00F4               M     movwf gbl_cntrb
00C8   1384           00555         bcf FSR, 7                                                      ;Bank 2
00C9   0384           00556         decf FSR, f
00CA                  00557 WaitComm_SendDataD
                      00558         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00CA   0800               M     movf INDF, w
00CB   00F8               M     movwf gbl_spdata
00CC   0384           00559         decf FSR, F                                                     ;Increment pointer
00CD   20FF           00560         call PutByte                                            ;Send data
00CE   0BF4           00561         decfsz gbl_cntrb, f
00CF   28CA           00562                 goto WaitComm_SendDataD
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D0                  00563 WaitComm_SendDataExit
00D0   1384           00564         bcf FSR, 7                                                      ;Set indirection back to Bank 0
00D1   1383           00565         bcf STATUS, IRP
00D2   2220           00566         call    ChannelConfSend
00D3   28A0           00567         goto    WaitComm
                      00568 
00D4                  00569 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00570         skipEqLF B'11111001', gbl_spdata
00D4   0878               M         movf gbl_spdata, w
00D5   3AF9               M         xorlw B'11111001'
00D6   1D03               M         btfss STATUS, Z
00D7   28DD           00571                 goto WaitComm_Rec
                      00572         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00D8   30DD               M     movlw B'11011101'
00D9   00F8               M     movwf gbl_spdata
00DA   20FF           00573         call    PutByte
00DB   2205           00574         call    ConfSend
00DC   28A0           00575         goto    WaitComm
                      00576 
00DD                  00577 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00578         skipEqLF B'11111010', gbl_spdata
00DD   0878               M         movf gbl_spdata, w
00DE   3AFA               M         xorlw B'11111010'
00DF   1D03               M         btfss STATUS, Z
00E0   28E6           00579                 goto WaitComm_Break
                      00580         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
00E1   30DE               M     movlw B'11011110'
00E2   00F8               M     movwf gbl_spdata
00E3   20FF           00581         call    PutByte
00E4   21E3           00582         call    ConfReceive
00E5   0008           00583         return
                      00584 
00E6                  00585 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00586         skipEqLF B'11110011', gbl_spdata
00E6   0878               M         movf gbl_spdata, w
00E7   3AF3               M         xorlw B'11110011'
00E8   1D03               M         btfss STATUS, Z
00E9   28A0           00587                 goto WaitComm                                   ;No valid message sent
                      00588         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
00EA   30DC               M     movlw B'11011100'
00EB   00F8               M     movwf gbl_spdata
00EC   20FF           00589         call    PutByte
00ED   28A0           00590         goto    WaitComm
                      00591 
                      00592 
                      00593 
                      00594 ;GetByte is used to receive a byte on the serial port
                      00595 ;------------------------------------------------------------------------------
00EE                  00596 GetByte
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EE   1E8C           00597         btfss PIR1, RCIF                        
00EF   28EE           00598                 goto GetByte
00F0                  00599 GetByteB
00F0   1D18           00600         btfss RCSTA, FERR                                       ;Handle the frame error
00F1   28F4           00601                 goto GetByteC
00F2   081A           00602         movf RCREG, w                                           ;Throw away data with errors
00F3   28EE           00603         goto GetByte
00F4                  00604 GetByteC
00F4   1C98           00605         btfss RCSTA, OERR                                       ;Handle the over run error
00F5   28FC           00606                 goto GetByteE
00F6   1218           00607         bcf RCSTA, CREN                                         ;Reset the receive logic
00F7   1618           00608         bsf RCSTA, CREN
00F8                  00609 GetByteD
00F8   081A           00610         movf RCREG, w                                           ;Throw away data with errors
00F9   1A8C           00611         btfsc PIR1, RCIF
00FA   28F8           00612                 goto GetByteD
00FB   28EE           00613         goto GetByte
00FC                  00614 GetByteE                                                                ;No errors if we got here       
                      00615         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
00FC   081A               M     movf RCREG, w
00FD   00F8               M     movwf gbl_spdata
00FE   3400           00616         retlw 0
                      00617         
                      00618 ;PutByte is used to put a byte on the serial port
                      00619 ;------------------------------------------------------------------------------
00FF                  00620 PutByte
00FF                  00621 PutByteSerial
00FF   1E0C           00622         btfss PIR1, TXIF
0100   28FF           00623                 goto PutByteSerial
                      00624         MOVFF gbl_spdata, TXREG
0101   0878               M     movf gbl_spdata, w
0102   0099               M     movwf TXREG
0103   3400           00625         retlw 0
                      00626 
                      00627 ;Delay used to adjust sample rate
                      00628 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00629 ;statement)
                      00630 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00631 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00632 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00633 ;-----------------------------------------------------------------------------
0104                  00634 Delay
0104   3001           00635         movlw 0x01
0105                  00636 DelayLoop
0105   02F3           00637         subwf gbl_cntra, F
0106   1C03           00638         btfss STATUS, C
0107   02F4           00639                 subwf gbl_cntrb, F
0108   08F3           00640         movf gbl_cntra, F
                      00641         skipZero
0109   1D03               M         btfss STATUS, Z
010A   2905           00642                 goto DelayLoop
010B   08F4           00643         movf gbl_cntrb, F
                      00644         skipZero
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010C   1D03               M         btfss STATUS, Z
010D   2905           00645                 goto DelayLoop
010E   0008           00646         return
                      00647 
                      00648 ;ADCShutdown, shutsdown the MAX118
                      00649 ;-----------------------------------------------------------------------------
010F                  00650 ADCShutdown
010F   0080           00651         movwf   INDF                                            ;Save to QUEUE
0110   1486           00652         bsf             ADC_PORT, CS                            ;Unselect MAX118
0111   1383           00653         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
0112   222C           00654         call    ChannelConfStore
0113   2875           00655         goto Main
                      00656 
                      00657 ;=============================================================================
                      00658 ;*****************************************************************************
                      00659 ;=============================================================================
                      00660 
                      00661 ;Interrupt Driven Sampling with Command Responder
                      00662 ;This code section consists of two routines:
                      00663 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00664 ; (2) A looping routine that responds to PC commands while we are waiting for sampling interrupts
                      00665 
                      00666 ;Sampling rate ~= 5000000/8/(SAMPLERATE1:SAMPLERATE2) with 20 MHz clock
                      00667 ;Note!  There is an xx instruction count between the actual Timer 1 interrupt
                      00668 ; being "detected/vectored to" and the Timer 1 counter being reloaded.
                      00669 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00670 ; when it rolls over to 0x0000, the interrupt is generated.
                      00671 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00672 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00673 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00674 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00675 ;-----------------------------------------------------------------------------
                      00676 
0114                  00677 IrqServiceTimer1
                      00678         ;reload timer for next interrupt and clear the interrupt flag
                      00679         ;sample ADC and store into appropriate location
                      00680         ;increment location and maybe the bank to store into for next time around
                      00681         ;turn off interrupt if done acquiring
                      00682         ;return from call
0114   1283 1303      00683         banksel BANK0
0116   1010           00684         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0117   0971           00685         comf    gbl_sampleRate1, W                      ;MSB of sampling rate
0118   008F           00686         movwf   TMR1H
0119   0972           00687         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
011A   008E           00688         movwf   TMR1L
011B   100C           00689         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
011C   1410           00690         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
011D   0804           00691         movf    FSR, W                                          ;Save the current FSR
011E   00E6           00692         movwf   b0_fsr_temp
                      00693 
                      00694                                                         ;Setup the indirection register with the acquisi
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            tion memory address pointer
                      00695                                                         ;Note!: This is a bit strange, as the other samp
                            ling methods use an
                      00696                                                         ; acquisition memory loading technique of inc-de
                            c-inc-dec for
                      00697                                                         ; bank0-bank1-bank3-bank2 ... so, we have to acc
                            omodate!
011F   0864           00698         movf    b0_sampleAddr, W                                ;Get the acquisition memory address poin
                            ter
0120   18E5           00699         btfsc   b0_sampleBank, SAMPLEBANK1              ;Check for it being the "decrementing bank1"
0121   3A7F           00700                 xorlw   0x7f                                            ;Its the "decrementing bank 1", 
                            so invert the address pointer
0122   19E5           00701         btfsc   b0_sampleBank, SAMPLEBANK2              ;Check for it being the "decrementing bank2"
0123   3A7F           00702                 xorlw   0x7f                                            ;Its the "decrementing bank2", s
                            o invert the address pointer
                      00703 
0124   0084           00704         movwf   FSR                                                     ;Put the acquisition memory poin
                            ter into the indirection register
                      00705 
                      00706                                                         ;Setup the indirection bank bits IRP and FSR7
0125   1C65           00707         btfss   b0_sampleBank, SAMPLEBANK0      ;Instruction cycle count for balancing act starts here
0126   292A           00708                 goto $+4                                                ;
0127   1384           00709         bcf             FSR, 7                                          ;
0128   1383           00710         bcf             STATUS, IRP                                     ;
0129   2939           00711         goto    irqst1_1                                        ;takes 4 to get here +2 to jump
012A   1CE5           00712         btfss   b0_sampleBank, SAMPLEBANK1      ;
012B   292F           00713                 goto $+4                                                ;
012C   1784           00714         bsf             FSR, 7                                          ;
012D   1383           00715         bcf             STATUS, IRP                                     ;
012E   293B           00716         goto    irqst1_2                                        ;takes 7 to get here +2 to jump
012F   1D65           00717         btfss   b0_sampleBank, SAMPLEBANK3      ;
0130   2934           00718                 goto $+4                                                ;
0131   1784           00719         bsf             FSR, 7                                          ;
0132   1783           00720         bsf             STATUS, IRP                                     ;
0133   293D           00721         goto    irqst1_3                                        ;takes 10 to get here + 2 to jump
0134   1DE5           00722         btfss   b0_sampleBank, SAMPLEBANK2      ;
0135   2939           00723                 goto $+4                                                ;
0136   1384           00724         bcf             FSR, 7                                          ;
0137   1783           00725         bsf             STATUS, IRP                                     ;
0138   293F           00726         goto    irqst1_4                                        ;takes 13 to get here + 2 to jump
                      00727 
                      00728                                                         ;Instruction time balancer for above indirection
                             bank bit setting/clearing
0139                  00729 irqst1_1
0139   293A           00730         goto    $+1
013A   0000           00731         nop
013B                  00732 irqst1_2
013B   293C           00733         goto    $+1
013C   0000           00734         nop
013D                  00735 irqst1_3
013D   293E           00736         goto    $+1
013E   0000           00737         nop
013F                  00738 irqst1_4
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00739 
013F   1089           00740         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
0140   1009           00741         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
0141   2942           00742         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
0142   2943           00743         goto    $+1
0143   0000           00744         nop
0144   0808           00745         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0145   1409           00746         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
0146   1489           00747         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
0147   1009           00748         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
0148   0080           00749         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
0149   0A84           00750         incf    FSR, F                                          ;Increment acquistion memory pointer
014A   294B           00751         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
014B   0000           00752         nop
014C   0808           00753         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
                      00754                                                                                 ;After this point, no ne
                            ed for instruction cycle balancing
014D   1409           00755         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
014E   0080           00756         movwf   INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00757 
                      00758 
014F   0AE4           00759         incf    b0_sampleAddr, F                        ;Increment acquisition memory pointer...
0150   0AE4           00760         incf    b0_sampleAddr, F                        ; ...2 times for 2 samples taken
0151   3060           00761         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
0152   0664           00762         xorwf   b0_sampleAddr, W
0153   1D03           00763         btfss   STATUS, Z
0154   2960           00764                 goto    irqst1_5                                ;Jump, we are not done filling the curre
                            nt bank
0155   3020           00765         movlw   BUFFERMIN                                       ;Reset the acquistion memory pointer to 
                            its start
0156   00E4           00766         movwf   b0_sampleAddr
0157   1003           00767         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
0158   0DE5           00768         rlf     b0_sampleBank, F
0159   1E65           00769         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
015A   2960           00770                 goto    irqst1_5                                ;Not done, so keep going...
015B   1010           00771         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
015C   1683 1303      00772         banksel BANK1
015E   100C           00773         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
015F   130B           00774         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
0160                  00775 irqst1_5
0160   1283 1303      00776         banksel BANK0
0162   0866           00777         movf    b0_fsr_temp, W                          ;Restore FSR register
0163   0084           00778         movwf   FSR
0164   0008           00779         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00780                                                                                 ; state and does the ret
                            fie
                      00781 
                      00782 
                      00783 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
0165                  00784 SampleIntDrvn
                      00785         ;Setup the sample write location and sample bank variables
                      00786         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      00787         ;Turn on Timer 1
                      00788         ;Enable the Timer 1 interrupt
0165   1283 1303      00789         banksel BANK0
0167   3020           00790         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
0168   00E4           00791         movwf   b0_sampleAddr
0169   3001           00792         movlw   0x01                                            ;Initialize sample bank pointer
016A   00E5           00793         movwf   b0_sampleBank
016B   1010           00794         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
016C   1690           00795         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
016D   1610           00796         bsf             T1CON, T1CKPS0
016E   30FF           00797         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
016F   008F           00798         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
0170   008E           00799         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
0171   100C           00800         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0172   1683 1303      00801         banksel BANK1
0174   140C           00802         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
0175   170B           00803         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
0176   178B           00804         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
0177   1283 1303      00805         banksel BANK0
0179   1410           00806         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
                      00807 
                      00808         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      00809         ; Received Commands are:
                      00810         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00811         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00812         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00813         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00814         ;
                      00815         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      00816         ; routine after the sample memory buffer has been fully filled), leave this
                      00817         ; routine and go back to Main
                      00818 
017A                  00819 sid_GetByte
017A   1683 1303      00820         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
017C   1C0C           00821         btfss   PIE1, TMR1IE
017D   29DC           00822                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017E   1283 1303      00823         banksel BANK0
0180   1E8C           00824         btfss   PIR1, RCIF                      
0181   297A           00825                 goto sid_GetByte
0182                  00826 sid_GetByteB
0182   1D18           00827         btfss   RCSTA, FERR                                     ;Handle the frame error
0183   2986           00828                 goto sid_GetByteC
0184   081A           00829         movf    RCREG, w                                        ;Throw away data with errors
0185   297A           00830         goto    sid_GetByte
0186                  00831 sid_GetByteC
0186   1C98           00832         btfss   RCSTA, OERR                                     ;Handle the over run error
0187   298E           00833                 goto sid_GetByteE
0188   1218           00834         bcf             RCSTA, CREN                                     ;Reset the receive logic
0189   1618           00835         bsf             RCSTA, CREN
018A                  00836 sid_GetByteD
018A   081A           00837         movf    RCREG, w                                        ;Throw away data with errors
018B   1A8C           00838         btfsc   PIR1, RCIF
018C   298A           00839                 goto sid_GetByteD
018D   297A           00840         goto    sid_GetByte
018E                  00841 sid_GetByteE                                                    ;No errors if we got here       
                      00842         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
018E   081A               M     movf RCREG, w
018F   00F8               M     movwf gbl_spdata
                      00843 
                      00844 
0190                  00845 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00846         skipEqLF B'11111000', gbl_spdata
0190   0878               M         movf gbl_spdata, w
0191   3AF8               M         xorlw B'11111000'
0192   1D03               M         btfss STATUS, Z
0193   29C2           00847                 goto sid_WaitComm_Conf
                      00848         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
0194   30DC               M     movlw B'11011100'
0195   00F8               M     movwf gbl_spdata
0196   20FF           00849         call    PutByte
                      00850         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
0197   3020               M     movlw BUFFERMIN
0198   0084               M     movwf FSR
                      00851         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
0199   3040               M     movlw BUFFERSIZE
019A   00F4               M     movwf gbl_cntrb
019B   1383           00852         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
019C                  00853 sid_WaitComm_SendDataA                                  ;In Bank 0
                      00854         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
019C   0800               M     movf INDF, w
019D   00F8               M     movwf gbl_spdata
019E   0A84           00855         incf    FSR, F                                          ;Increment pointer
019F   20FF           00856         call    PutByte                                         ;Send data
01A0   0BF4           00857         decfsz  gbl_cntrb, f
01A1   299C           00858                 goto sid_WaitComm_SendDataA
                      00859         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A2   3040               M     movlw BUFFERSIZE
01A3   00F4               M     movwf gbl_cntrb
01A4   1784           00860         bsf             FSR, 7                                          ;Set Bank 1
01A5   0384           00861         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 1 
01A6                  00862 sid_WaitComm_SendDataB
                      00863         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01A6   0800               M     movf INDF, w
01A7   00F8               M     movwf gbl_spdata
01A8   0384           00864         decf    FSR, F                                          ;Increment pointer
01A9   20FF           00865         call    PutByte                                         ;Send data
01AA   0BF4           00866         decfsz  gbl_cntrb, f
01AB   29A6           00867                 goto sid_WaitComm_SendDataB
                      00868         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01AC   3040               M     movlw BUFFERSIZE
01AD   00F4               M     movwf gbl_cntrb
01AE   1783           00869         bsf             STATUS, IRP                                     ;Set Bank 3
01AF   0A84           00870         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
01B0                  00871 sid_WaitComm_SendDataC
                      00872         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01B0   0800               M     movf INDF, w
01B1   00F8               M     movwf gbl_spdata
01B2   0A84           00873         incf    FSR, F                                          ;Increment pointer
01B3   20FF           00874         call    PutByte                                         ;Send data
01B4   0BF4           00875         decfsz  gbl_cntrb, f
01B5   29B0           00876                 goto sid_WaitComm_SendDataC
                      00877         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01B6   3040               M     movlw BUFFERSIZE
01B7   00F4               M     movwf gbl_cntrb
01B8   1384           00878         bcf             FSR, 7                                          ;Bank 2
01B9   0384           00879         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 2
01BA                  00880 sid_WaitComm_SendDataD
                      00881         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01BA   0800               M     movf INDF, w
01BB   00F8               M     movwf gbl_spdata
01BC   0384           00882         decf    FSR, F                                          ;Increment pointer
01BD   20FF           00883         call    PutByte                                         ;Send data
01BE   0BF4           00884         decfsz  gbl_cntrb, f
01BF   29BA           00885                 goto sid_WaitComm_SendDataD
01C0                  00886 sid_WaitComm_SendDataExit
01C0   2220           00887         call    ChannelConfSend
01C1   297A           00888         goto    sid_GetByte
                      00889 
01C2                  00890 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00891         skipEqLF B'11111001', gbl_spdata
01C2   0878               M         movf gbl_spdata, w
01C3   3AF9               M         xorlw B'11111001'
01C4   1D03               M         btfss STATUS, Z
01C5   29CB           00892                 goto sid_WaitComm_Rec
                      00893         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C6   30DD               M     movlw B'11011101'
01C7   00F8               M     movwf gbl_spdata
01C8   20FF           00894         call    PutByte
01C9   2205           00895         call    ConfSend
01CA   297A           00896         goto    sid_GetByte
                      00897 
01CB                  00898 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00899         skipEqLF B'11111010', gbl_spdata
01CB   0878               M         movf gbl_spdata, w
01CC   3AFA               M         xorlw B'11111010'
01CD   1D03               M         btfss STATUS, Z
01CE   29D4           00900                 goto sid_WaitComm_Break
                      00901         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
01CF   30DE               M     movlw B'11011110'
01D0   00F8               M     movwf gbl_spdata
01D1   20FF           00902         call    PutByte
01D2   21FA           00903         call    ConfReceiveRateOnly
01D3   297A           00904         goto    sid_GetByte
                      00905 
01D4                  00906 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00907         skipEqLF B'11110011', gbl_spdata
01D4   0878               M         movf gbl_spdata, w
01D5   3AF3               M         xorlw B'11110011'
01D6   1D03               M         btfss STATUS, Z
01D7   297A           00908                 goto sid_GetByte                                ;No valid message sent
                      00909         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
01D8   30DC               M     movlw B'11011100'
01D9   00F8               M     movwf gbl_spdata
01DA   20FF           00910         call    PutByte
01DB   297A           00911         goto    sid_GetByte
                      00912 
                      00913 
01DC                  00914 sid_Exit
01DC   1283 1303      00915         banksel BANK0
01DE   1486           00916         bsf ADC_PORT, CS                                        ;Unselect MAX118
01DF   1383           00917         bcf STATUS, IRP                                         ;Set indirection to bank 0 and/or bank 1
01E0   222C           00918         call    ChannelConfStore                        ;Update state of front panel switches/knobs
01E1   2875           00919         goto    Main
                      00920 
                      00921 
                      00922 
                      00923 
                      00924 ;SampleRealTime is used to send a continuous stream of ADC samples to the PC app.
                      00925 ;The sample pairs for channel 0 and channel 1 are sent as acquired at the rate
                      00926 ; determined by the Timer 1 interrupt.  The sampling rate can not be higher than
                      00927 ; the interface character rate divide by 2, or samples will be lost!  Be sure to keep
                      00928 ; the interrupt rate, determined by sampleRate1:sampleRate2, below the effective
                      00929 ; character rate divided by 2 on the interface.  57.6K baud would support a maximum sample
                      00930 ; rate of approximately 2000Hz, or a 500uSec interrupt period.  Remember, there are
                      00931 ; two data characters for each interrupt, channel 0's ADC byte and channel 1's ADC byte.
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00932 ;-----------------------------------------------------------------------------
01E2                  00933 SampleRealTime
01E2   2875           00934         goto    Main                                            ;Not implemented yet
                      00935 
                      00936 
                      00937 
                      00938 ;Receive and store the user settings from the PC application
                      00939 ;-----------------------------------------------------------------------------
01E3                  00940 ConfReceive
01E3   20EE           00941         call GetByte                                            ;Receive ConfigLoc1
01E4   0878           00942         movf gbl_spdata, w
01E5   39DF           00943         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      00944         if clockFreq == 20                                      ;if necessary
01E6   3820           00945                 iorlw 1 << CLOCKFREQBIT
                      00946         endif
01E7   00F0           00947         movwf gbl_configLoc1
01E8   1283 1303      00948         banksel BANK0
01EA   20EE           00949         call GetByte                                            ;Receive trigger delay
                      00950         MOVFF gbl_spdata, b0_triggerDelay1
01EB   0878               M     movf gbl_spdata, w
01EC   00E0               M     movwf b0_triggerDelay1
01ED   20EE           00951         call GetByte
                      00952         MOVFF gbl_spdata, b0_triggerDelay2
01EE   0878               M     movf gbl_spdata, w
01EF   00E1               M     movwf b0_triggerDelay2
01F0   20EE           00953         call GetByte
                      00954         MOVFF gbl_spdata, b0_triggerDelay3
01F1   0878               M     movf gbl_spdata, w
01F2   00E2               M     movwf b0_triggerDelay3
01F3   20EE           00955         call GetByte                                            ;Receive sample rate
                      00956         MOVFF gbl_spdata, gbl_sampleRate1
01F4   0878               M     movf gbl_spdata, w
01F5   00F1               M     movwf gbl_sampleRate1
01F6   20EE           00957         call GetByte
                      00958         MOVFF gbl_spdata, gbl_sampleRate2
01F7   0878               M     movf gbl_spdata, w
01F8   00F2               M     movwf gbl_sampleRate2
01F9   0008           00959         return
                      00960 
                      00961 ;Receive user settings from the PC application. BUT, throw most of them away!
                      00962 ;This is used during the SampleIntDrvn routine to prevent changing
                      00963 ;of state during an interrupt driven acquisition that is in progress.
                      00964 ;However, allow the sampleRate1:2 variable to be changed.  This allows
                      00965 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      00966 ;the user might have to wait a long time before the sampling completed and
                      00967 ;the user would again get control.
                      00968 ;-----------------------------------------------------------------------------
01FA                  00969 ConfReceiveRateOnly
01FA   20EE           00970         call GetByte                                            ;Receive ConfigLoc1
01FB   20EE           00971         call GetByte                                            ;Receive trigger delay
01FC   20EE           00972         call GetByte
01FD   20EE           00973         call GetByte
01FE   20EE           00974         call GetByte                                            ;Receive sample rate
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00975         MOVFF gbl_spdata, gbl_sampleRate1
01FF   0878               M     movf gbl_spdata, w
0200   00F1               M     movwf gbl_sampleRate1
0201   20EE           00976         call GetByte
                      00977         MOVFF gbl_spdata, gbl_sampleRate2
0202   0878               M     movf gbl_spdata, w
0203   00F2               M     movwf gbl_sampleRate2
0204   0008           00978         return
                      00979 
                      00980 ;Send the current DSOscope configuration to the PC application
                      00981 ;-----------------------------------------------------------------------------
0205                  00982 ConfSend
                      00983         ;Send number of datapoints (2 bytes)
                      00984         MOVLF high TOTALBUFFERSIZE, gbl_spdata
0205   3001               M     movlw high TOTALBUFFERSIZE
0206   00F8               M     movwf gbl_spdata
0207   20FF           00985         call PutByte
                      00986         MOVLF low TOTALBUFFERSIZE, gbl_spdata
0208   3000               M     movlw low TOTALBUFFERSIZE
0209   00F8               M     movwf gbl_spdata
020A   20FF           00987         call PutByte
                      00988         ;Send clock frequency configuration
                      00989         MOVFF gbl_configLoc1, gbl_spdata
020B   0870               M     movf gbl_configLoc1, w
020C   00F8               M     movwf gbl_spdata
020D   20FF           00990         call PutByte
020E   1283 1303      00991         banksel BANK0
                      00992         MOVFF b0_triggerDelay1, gbl_spdata
0210   0860               M     movf b0_triggerDelay1, w
0211   00F8               M     movwf gbl_spdata
0212   20FF           00993         call PutByte
                      00994         MOVFF b0_triggerDelay2, gbl_spdata
0213   0861               M     movf b0_triggerDelay2, w
0214   00F8               M     movwf gbl_spdata
0215   20FF           00995         call PutByte
                      00996         MOVFF b0_triggerDelay3, gbl_spdata
0216   0862               M     movf b0_triggerDelay3, w
0217   00F8               M     movwf gbl_spdata
0218   20FF           00997         call PutByte
                      00998         MOVFF gbl_sampleRate1, gbl_spdata
0219   0871               M     movf gbl_sampleRate1, w
021A   00F8               M     movwf gbl_spdata
021B   20FF           00999         call PutByte
                      01000         MOVFF gbl_sampleRate2, gbl_spdata
021C   0872               M     movf gbl_sampleRate2, w
021D   00F8               M     movwf gbl_spdata
021E   20FF           01001         call PutByte
021F   0008           01002         return
                      01003 
                      01004 ;Send the current DSOscope channel settings to the PC application
                      01005 ;-----------------------------------------------------------------------------
0220                  01006 ChannelConfSend
                      01007         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0220   0879               M     movf gbl_dataConfig, w
0221   00F8               M     movwf gbl_spdata
0222   20FF           01008         call PutByte
0223   01F8           01009         clrf gbl_spdata
0224   20FF           01010         call PutByte                                            ;Channel 1 offset
0225   20FF           01011         call PutByte                                            ;Channel 2 offset
0226   1283 1303      01012         banksel BANK0
                      01013         MOVFF b0_triggerLevel, gbl_spdata
0228   0863               M     movf b0_triggerLevel, w
0229   00F8               M     movwf gbl_spdata
022A   20FF           01014         call PutByte                                            ;Triggerlevel
022B   0008           01015         return
                      01016 
                      01017 
                      01018 ;Read and store the current front panel settings of the DSOscope
                      01019 ;-----------------------------------------------------------------------------
022C                  01020 ChannelConfStore
                      01021         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                      01022         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                      01023         ;                                                                               Channel 2 Scale 
                            (2) bits
                      01024         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                      01025         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                      01026         ;                                                                               Two least signif
                            icant bits = 0
022C   01F9           01027         clrf gbl_dataConfig
022D   1683 1303      01028         banksel TRISC                                   ;Access Bank1
022F   1507           01029         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
0230   1087           01030         bcf TRISC, CH1SEL                                       ;Ch1Sel output
0231   1685           01031         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
0232   1205           01032         bcf TRISA, CH1SELG                                      ;Ch1Sel output
0233   1283 1303      01033         banksel ANALOG_SEL                              ;Access Bank0
0235   1087           01034         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
0236   1205           01035         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
0237   1779           01036         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
0238   1C05           01037         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0239   1379           01038                 bcf gbl_dataConfig, 6
023A   1C85           01039         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
023B   1379           01040                 bcf gbl_dataConfig, 6
023C   1C85           01041         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
023D   17F9           01042                 bsf gbl_dataConfig, 7
023E   1807           01043         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
023F   15F9           01044                 bsf gbl_dataConfig, 3
0240   1487           01045         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0241   1605           01046         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01047 
0242   1683 1303      01048         banksel TRISC                                   ;Access Bank1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   1487           01049         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
0245   1107           01050         bcf TRISC, CH2SEL                                       ;Ch2Sel output
0246   1605           01051         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
0247   1285           01052         bcf TRISA, CH2SELG                                      ;Ch2Sel output
0248   1283 1303      01053         banksel ANALOG_SEL                              ;Access Bank0
024A   1107           01054         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
024B   1285           01055         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
024C   1679           01056         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
024D   1C05           01057         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
024E   1279           01058                 bcf gbl_dataConfig, 4
024F   1C85           01059         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0250   1279           01060                 bcf gbl_dataConfig, 4
0251   1C85           01061         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0252   16F9           01062                 bsf gbl_dataConfig, 5
0253   1807           01063         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0254   1579           01064                 bsf gbl_dataConfig, 2
0255   1507           01065         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0256   1685           01066         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01067 
                      01068         ;Next byte is Trigger Level
0257   1089           01069         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0258   1506           01070         bsf ADC_PORT, ADDR1
0259   1186           01071         bcf ADC_PORT, ADDR2
025A   1086           01072         bcf ADC_PORT, CS                                        ;Select maxim ADC
025B   1009           01073         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
025C   0000           01074         nop                                                                     ;Wait 5
025D   0000           01075         nop
025E   0000           01076         nop
025F   0000           01077         nop
0260   0000           01078         nop
0261   0808           01079         movf ADC_DATAPORT, W                            ;Save trigger level
0262   1409           01080         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0263   1486           01081         bsf ADC_PORT, CS                                        ;unselect maxim ADC
0264   1089           01082         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
0265   1106           01083         bcf ADC_PORT, ADDR1
0266   1186           01084         bcf ADC_PORT, ADDR2
0267   00E3           01085         movwf b0_triggerLevel
0268   0008           01086         return
                      01087 
                      01088 
                      01089 ;=============================================================================
                      01090 ;*****************************************************************************
                      01091 ;=============================================================================
                      01092 
                      01093 
                      01094 ;Sample Delayed
                      01095 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01096 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01097 ;-----------------------------------------------------------------------------
0269                  01098 SampleDelayed
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0269   1009           01099         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01100         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
026A   303F               M     movlw BUFFERSIZE-1
026B   00F5               M     movwf gbl_cntrc
                      01101         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
026C   3020               M     movlw BUFFERMIN
026D   0084               M     movwf FSR
                      01102         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
026E   0872               M     movf gbl_sampleRate2, w
026F   00F3               M     movwf gbl_cntra
                      01103         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0270   0871               M     movf gbl_sampleRate1, w
0271   00F4               M     movwf gbl_cntrb
0272   0000           01104         nop
0273   2104           01105         call Delay
0274                  01106 SampleDelayedLoopA
0274   0808           01107         movf ADC_DATAPORT, W                            ;Sample
0275   1409           01108         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0276   1009           01109         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0277   0080           01110         movwf INDF                                                      ;Save to QUEUE
0278   0A84           01111         incf FSR, F                                                     ;Increment QUEUE pointer
0279                  01112 StSampleDelayedLoopA
                      01113         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0279   0872               M     movf gbl_sampleRate2, w
027A   00F3               M     movwf gbl_cntra
                      01114         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
027B   0871               M     movf gbl_sampleRate1, w
027C   00F4               M     movwf gbl_cntrb
027D   2104           01115         call Delay
027E   0BF5           01116         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
027F   2A74           01117                 goto SampleDelayedLoopA
0280   0000           01118         nop
0281   0808           01119         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
0282   1409           01120         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0283   1009           01121         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0284   0080           01122         movwf INDF                                                      ;Save to QUEUE
0285   1784           01123         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01124         MOVLF BUFFERSIZE-1, gbl_cntrc
0286   303F               M     movlw BUFFERSIZE-1
0287   00F5               M     movwf gbl_cntrc
                      01125         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0288   0872               M     movf gbl_sampleRate2, w
0289   00F3               M     movwf gbl_cntra
                      01126         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
028A   0871               M     movf gbl_sampleRate1, w
028B   00F4               M     movwf gbl_cntrb
028C   2104           01127         call Delay
028D   0000           01128         nop
028E                  01129 SampleDelayedLoopB
028E   0808           01130         movf ADC_DATAPORT, W                            ;Sample
028F   1409           01131         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0290   1009           01132         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0291   0080           01133         movwf INDF                                                      ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0292   0384           01134         decf FSR, F                                                     ;Increment QUEUE pointer
                      01135         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0293   0872               M     movf gbl_sampleRate2, w
0294   00F3               M     movwf gbl_cntra
                      01136         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0295   0871               M     movf gbl_sampleRate1, w
0296   00F4               M     movwf gbl_cntrb
0297   2104           01137         call Delay
0298   0BF5           01138         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0299   2A8E           01139                 goto SampleDelayedLoopB
029A   0000           01140         nop
029B   0808           01141         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
029C   1409           01142         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
029D   1009           01143         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
029E   0080           01144         movwf INDF                                                      ;Save to QUEUE
029F   1783           01145         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01146         MOVLF BUFFERSIZE-1, gbl_cntrc
02A0   303F               M     movlw BUFFERSIZE-1
02A1   00F5               M     movwf gbl_cntrc
                      01147         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02A2   0872               M     movf gbl_sampleRate2, w
02A3   00F3               M     movwf gbl_cntra
                      01148         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02A4   0871               M     movf gbl_sampleRate1, w
02A5   00F4               M     movwf gbl_cntrb
02A6   2104           01149         call Delay
02A7   0000           01150         nop
02A8                  01151 SampleDelayedLoopC
02A8   0808           01152         movf ADC_DATAPORT, W                            ;Sample
02A9   1409           01153         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02AA   1009           01154         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02AB   0080           01155         movwf INDF                                                      ;Save to QUEUE
02AC   0A84           01156         incf FSR, F                                                     ;Increment QUEUE pointer
                      01157         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02AD   0872               M     movf gbl_sampleRate2, w
02AE   00F3               M     movwf gbl_cntra
                      01158         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02AF   0871               M     movf gbl_sampleRate1, w
02B0   00F4               M     movwf gbl_cntrb
02B1   2104           01159         call Delay
02B2   0BF5           01160         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02B3   2AA8           01161                 goto SampleDelayedLoopC
02B4   0000           01162         nop
02B5   0808           01163         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
02B6   1409           01164         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02B7   1009           01165         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02B8   0080           01166         movwf INDF                                                      ;Save to QUEUE
02B9   1384           01167         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01168         MOVLF BUFFERSIZE-1, gbl_cntrc
02BA   303F               M     movlw BUFFERSIZE-1
02BB   00F5               M     movwf gbl_cntrc
                      01169         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02BC   0872               M     movf gbl_sampleRate2, w
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BD   00F3               M     movwf gbl_cntra
                      01170         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02BE   0871               M     movf gbl_sampleRate1, w
02BF   00F4               M     movwf gbl_cntrb
02C0   2104           01171         call Delay
02C1   0000           01172         nop
02C2                  01173 SampleDelayedLoopD
02C2   0808           01174         movf ADC_DATAPORT, W                            ;Sample
02C3   1409           01175         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02C4   1009           01176         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02C5   0080           01177         movwf INDF                                                      ;Save to QUEUE
02C6   0384           01178         decf FSR, F                                                     ;Increment QUEUE pointer
                      01179         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02C7   0872               M     movf gbl_sampleRate2, w
02C8   00F3               M     movwf gbl_cntra
                      01180         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02C9   0871               M     movf gbl_sampleRate1, w
02CA   00F4               M     movwf gbl_cntrb
02CB   2104           01181         call Delay
02CC   0BF5           01182         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02CD   2AC2           01183                 goto SampleDelayedLoopD
02CE   0000           01184         nop
02CF   0808           01185         movf ADC_DATAPORT, W                            ;Last sample
02D0   1409           01186         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02D1   118A           01187         bcf PCLATH, 3                                           ;insure correct program memory page
02D2   120A           01188         bcf PCLATH, 4
02D3   290F           01189         goto ADCShutdown
                      01190 
                      01191 ;SampleXYDelayed
                      01192 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01193 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01194 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01195 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01196 ;-----------------------------------------------------------------------------
02D4                  01197 SampleXYDelayed
02D4   1009           01198         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
02D5   1489           01199         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01200         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
02D6   3020               M     movlw BUFFERMIN
02D7   0084               M     movwf FSR
02D8   0808           01201         movf ADC_DATAPORT, W                            ;Sample X
02D9   1409           01202         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02DA   1009           01203         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02DB   1089           01204         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02DC   0080           01205         movwf INDF                                                      ;Save to QUEUE
02DD   0A84           01206         incf FSR, F                                                     ;Increment QUEUE pointer
                      01207         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
02DE   301F               M     movlw BUFFERSIZE/2-1
02DF   00F5               M     movwf gbl_cntrc
                      01208         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02E0   0872               M     movf gbl_sampleRate2, w
02E1   00F3               M     movwf gbl_cntra
                      01209         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E2   0871               M     movf gbl_sampleRate1, w
02E3   00F4               M     movwf gbl_cntrb
02E4   2104           01210         call Delay
02E5   0000           01211         nop
02E6                  01212 SampleXYDelayedLA
02E6   0808           01213         movf ADC_DATAPORT, W                            ;Sample Y
02E7   1409           01214         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02E8   1009           01215         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02E9   1489           01216         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
02EA   0080           01217         movwf INDF                                                      ;Save to QUEUE
02EB   0A84           01218         incf FSR, F                                                     ;Increment QUEUE pointer
02EC   0808           01219         movf ADC_DATAPORT, W                            ;Sample X
02ED   1409           01220         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02EE   1009           01221         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02EF   1089           01222         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02F0   0080           01223         movwf INDF                                                      ;Save to QUEUE
02F1   0A84           01224         incf FSR, F                                                     ;Increment QUEUE pointer
                      01225         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02F2   0872               M     movf gbl_sampleRate2, w
02F3   00F3               M     movwf gbl_cntra
                      01226         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02F4   0871               M     movf gbl_sampleRate1, w
02F5   00F4               M     movwf gbl_cntrb
02F6   2104           01227         call Delay
02F7   0BF5           01228         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02F8   2AE6           01229                 goto SampleXYDelayedLA
02F9   0000           01230         nop
02FA   0808           01231         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
02FB   1409           01232         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02FC   1009           01233         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02FD   1489           01234         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
02FE   0080           01235         movwf INDF                                                      ;Save to QUEUE
02FF   1784           01236         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0300   0808           01237         movf ADC_DATAPORT, W                            ;Sample X
0301   1409           01238         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0302   1009           01239         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0303   1089           01240         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0304   0080           01241         movwf INDF                                                      ;Save to QUEUE
0305   0384           01242         decf FSR, f                                                     ;Increment QUEUE pointer
                      01243         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0306   301F               M     movlw BUFFERSIZE/2-1
0307   00F5               M     movwf gbl_cntrc
                      01244         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0308   0872               M     movf gbl_sampleRate2, w
0309   00F3               M     movwf gbl_cntra
                      01245         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
030A   0871               M     movf gbl_sampleRate1, w
030B   00F4               M     movwf gbl_cntrb
030C   2104           01246         call Delay
030D   0000           01247         nop
030E                  01248 SampleXYDelayedLB
030E   0808           01249         movf ADC_DATAPORT, W                            ;Sample Y
030F   1409           01250         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0310   1009           01251         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0311   1489           01252         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0312   0080           01253         movwf INDF                                                      ;Save to QUEUE
0313   0384           01254         decf FSR, F                                                     ;Increment QUEUE pointer
0314   0808           01255         movf ADC_DATAPORT, W                            ;Sample X
0315   1409           01256         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0316   1009           01257         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0317   1089           01258         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0318   0080           01259         movwf INDF                                                      ;Save to QUEUE
0319   0384           01260         decf FSR, F                                                     ;Increment QUEUE pointer
                      01261         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
031A   0872               M     movf gbl_sampleRate2, w
031B   00F3               M     movwf gbl_cntra
                      01262         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
031C   0871               M     movf gbl_sampleRate1, w
031D   00F4               M     movwf gbl_cntrb
031E   2104           01263         call Delay
031F   0BF5           01264         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0320   2B0E           01265                 goto SampleXYDelayedLB
0321   0000           01266         nop
0322   0808           01267         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0323   1409           01268         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0324   1009           01269         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0325   1489           01270         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0326   0080           01271         movwf INDF                                                      ;Save to QUEUE
0327   1783           01272         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0328   0808           01273         movf ADC_DATAPORT, W                            ;Sample X
0329   1409           01274         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
032A   1009           01275         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
032B   1089           01276         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
032C   0080           01277         movwf INDF                                                      ;Save to QUEUE
032D   0A84           01278         incf FSR, f                                                     ;Increment QUEUE pointer
                      01279         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
032E   301F               M     movlw BUFFERSIZE/2-1
032F   00F5               M     movwf gbl_cntrc
                      01280         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0330   0872               M     movf gbl_sampleRate2, w
0331   00F3               M     movwf gbl_cntra
                      01281         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0332   0871               M     movf gbl_sampleRate1, w
0333   00F4               M     movwf gbl_cntrb
0334   2104           01282         call Delay
0335   0000           01283         nop
0336                  01284 SampleXYDelayedLC
0336   0808           01285         movf ADC_DATAPORT, W                            ;Sample Y
0337   1409           01286         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0338   1009           01287         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0339   1489           01288         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
033A   0080           01289         movwf INDF                                                      ;Save to QUEUE
033B   0A84           01290         incf FSR, F                                                     ;Increment QUEUE pointer
033C   0808           01291         movf ADC_DATAPORT, W                            ;Sample X
033D   1409           01292         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
033E   1009           01293         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033F   1089           01294         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0340   0080           01295         movwf INDF                                                      ;Save to QUEUE
0341   0A84           01296         incf FSR, F                                                     ;Increment QUEUE pointer
                      01297         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0342   0872               M     movf gbl_sampleRate2, w
0343   00F3               M     movwf gbl_cntra
                      01298         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0344   0871               M     movf gbl_sampleRate1, w
0345   00F4               M     movwf gbl_cntrb
0346   2104           01299         call Delay
0347   0BF5           01300         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0348   2B36           01301                 goto SampleXYDelayedLC
0349   0000           01302         nop
034A   0808           01303         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
034B   1409           01304         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
034C   1009           01305         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
034D   1489           01306         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
034E   0080           01307         movwf INDF                                                      ;Save to QUEUE
034F   1384           01308         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0350   0808           01309         movf ADC_DATAPORT, W                            ;Sample X
0351   1409           01310         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0352   1009           01311         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0353   1089           01312         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0354   0080           01313         movwf INDF                                                      ;Save to QUEUE
0355   0384           01314         decf FSR, f                                                     ;Increment QUEUE pointer
                      01315         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0356   301F               M     movlw BUFFERSIZE/2-1
0357   00F5               M     movwf gbl_cntrc
                      01316         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0358   0872               M     movf gbl_sampleRate2, w
0359   00F3               M     movwf gbl_cntra
                      01317         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
035A   0871               M     movf gbl_sampleRate1, w
035B   00F4               M     movwf gbl_cntrb
035C   2104           01318         call Delay
035D   0000           01319         nop
035E                  01320 SampleXYDelayedLD
035E   0808           01321         movf ADC_DATAPORT, W                            ;Sample Y
035F   1409           01322         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0360   1009           01323         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0361   1489           01324         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0362   0080           01325         movwf INDF                                                      ;Save to QUEUE
0363   0384           01326         decf FSR, F                                                     ;Increment QUEUE pointer
0364   0808           01327         movf ADC_DATAPORT, W                            ;Sample X
0365   1409           01328         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0366   1009           01329         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0367   1089           01330         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0368   0080           01331         movwf INDF                                                      ;Save to QUEUE
0369   0384           01332         decf FSR, F                                                     ;Increment QUEUE pointer
                      01333         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
036A   0872               M     movf gbl_sampleRate2, w
036B   00F3               M     movwf gbl_cntra
                      01334         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036C   0871               M     movf gbl_sampleRate1, w
036D   00F4               M     movwf gbl_cntrb
036E   2104           01335         call Delay
036F   0BF5           01336         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0370   2B5E           01337                 goto SampleXYDelayedLD
0371   0000           01338         nop
0372   0808           01339         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0373   1409           01340         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0374   118A           01341         bcf PCLATH, 3                                           ;insure correct program memory page
0375   120A           01342         bcf PCLATH, 4
0376   290F           01343         goto ADCShutdown
                      01344 
                      01345 ;Fast sample
                      01346 ;Sampling rate = 625 kHz with 20 MHz clock
                      01347 ;Sampling rate = 125 kHz with 4 MHz clock
                      01348 ;-----------------------------------------------------------------------------
0377                  01349 Sample625k
0377   1009           01350         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01351         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
0378   303F               M     movlw BUFFERSIZE-1
0379   00F3               M     movwf gbl_cntra
                      01352         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
037A   3020               M     movlw BUFFERMIN
037B   0084               M     movwf FSR
037C   0000           01353         nop
037D                  01354 Sample625kLoopA
037D   0808           01355         movf ADC_DATAPORT, W                            ;Sample
037E   1409           01356         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037F   1009           01357         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0380   0080           01358         movwf INDF                                                      ;Save to QUEUE
0381   0A84           01359         incf FSR, F                                                     ;Increment QUEUE pointer
0382   0BF3           01360         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0383   2B7D           01361                 goto Sample625kLoopA
0384   0000           01362         nop
0385   0808           01363         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
0386   1409           01364         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0387   1009           01365         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0388   0080           01366         movwf INDF                                                      ;Save to QUEUE
0389   1784           01367         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01368         MOVLF BUFFERSIZE-1, gbl_cntra
038A   303F               M     movlw BUFFERSIZE-1
038B   00F3               M     movwf gbl_cntra
038C   0000           01369         nop
038D                  01370 Sample625kLoopB
038D   0808           01371         movf ADC_DATAPORT, W                            ;Sample
038E   1409           01372         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
038F   1009           01373         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0390   0080           01374         movwf INDF                                                      ;Save to QUEUE
0391   0384           01375         decf FSR, F                                                     ;Increment QUEUE pointer
0392   0BF3           01376         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0393   2B8D           01377                 goto Sample625kLoopB
0394   0000           01378         nop
0395   0808           01379         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0396   1409           01380         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0397   1009           01381         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0398   0080           01382         movwf INDF                                                      ;Save to QUEUE
0399   1783           01383         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01384         MOVLF BUFFERSIZE-1, gbl_cntra
039A   303F               M     movlw BUFFERSIZE-1
039B   00F3               M     movwf gbl_cntra
039C   0000           01385         nop
039D                  01386 Sample625kLoopC
039D   0808           01387         movf ADC_DATAPORT, W                            ;Sample
039E   1409           01388         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
039F   1009           01389         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03A0   0080           01390         movwf INDF                                                      ;Save to QUEUE
03A1   0A84           01391         incf FSR, F                                                     ;Increment QUEUE pointer
03A2   0BF3           01392         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03A3   2B9D           01393                 goto Sample625kLoopC
03A4   0000           01394         nop
03A5   0808           01395         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
03A6   1409           01396         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03A7   1009           01397         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03A8   0080           01398         movwf INDF                                                      ;Save to QUEUE
03A9   1384           01399         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01400         MOVLF BUFFERSIZE-1, gbl_cntra
03AA   303F               M     movlw BUFFERSIZE-1
03AB   00F3               M     movwf gbl_cntra
03AC   0000           01401         nop
03AD                  01402 Sample625kLoopD
03AD   0808           01403         movf ADC_DATAPORT, W                            ;Sample
03AE   1409           01404         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03AF   1009           01405         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03B0   0080           01406         movwf INDF                                                      ;Save to QUEUE
03B1   0384           01407         decf FSR, F                                                     ;Increment QUEUE pointer
03B2   0BF3           01408         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03B3   2BAD           01409                 goto Sample625kLoopD
03B4   0000           01410         nop
03B5   0808           01411         movf ADC_DATAPORT, W                            ;Last sample
03B6   1409           01412         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03B7   118A           01413         bcf PCLATH, 3                                           ;insure correct program memory page
03B8   120A           01414         bcf PCLATH, 4
03B9   290F           01415         goto ADCShutdown
                      01416 
                      01417 ;Fast sample
                      01418 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01419 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01420 ;or
                      01421 ;Sampling rate = 250 kHz with 20 MHz clock
                      01422 ;Sampling rate =  50 kHz with 4 MHz clock
                      01423 ;-----------------------------------------------------------------------------
03BA                  01424 Sample417k250k
03BA   1009           01425         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01426         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
03BB   303F               M     movlw BUFFERSIZE - 1
03BC   00F3               M     movwf gbl_cntra
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01427         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03BD   3020               M     movlw BUFFERMIN
03BE   0084               M     movwf FSR
03BF   2BC0           01428         goto $ + 1                                                      ;Delay 3
03C0   1D70           01429         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
03C1   2BC3           01430                 goto Sample417kLoopA
03C2   2419           01431         call DelaySeven                                         ;Delay 9 cycles
03C3                  01432 Sample417kLoopA
03C3   0808           01433         movf ADC_DATAPORT, W                            ;Sample
03C4   1409           01434         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03C5   1009           01435         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03C6   0080           01436         movwf INDF                                                      ;Save to QUEUE
03C7   0A84           01437         incf FSR, F                                                     ;Increment QUEUE pointer
03C8   1D70           01438         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03C9   2BCB           01439                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
03CA                  01440 Sample250kA
03CA   2419           01441         call DelaySeven                                         ;Delay 9 cycles
03CB                  01442 Sample417kA
03CB   0000           01443         nop
03CC   0BF3           01444         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03CD   2BC3           01445                 goto Sample417kLoopA
03CE   0000           01446         nop
03CF   0808           01447         movf ADC_DATAPORT, W                            ;Last sample bank 1
03D0   1409           01448         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03D1   1009           01449         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D2   0080           01450         movwf INDF                                                      ;Save to QUEUE
03D3   1784           01451         bsf FSR, 7                                                      ;Goto bank 2
                      01452         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03D4   303F               M     movlw BUFFERSIZE - 1
03D5   00F3               M     movwf gbl_cntra
03D6   2BD7           01453         goto $ + 1
03D7   1D70           01454         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03D8   2BDA           01455                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
03D9   2419           01456         call DelaySeven                                         ;Delay 9 cycles
03DA                  01457 Sample417kLoopB
03DA   0808           01458         movf ADC_DATAPORT, W                            ;Sample
03DB   1409           01459         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03DC   1009           01460         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03DD   0080           01461         movwf INDF                                                      ;Save to QUEUE
03DE   0384           01462         decf FSR, F                                                     ;Increment QUEUE pointer
03DF                  01463 StSample417kLoopB
03DF   1D70           01464         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03E0   2BE2           01465                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
03E1                  01466 Sample250kB
03E1   2419           01467         call DelaySeven                                         ;Delay 9 cycles
03E2                  01468 Sample417kB
03E2   0000           01469         nop
03E3   0BF3           01470         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03E4   2BDA           01471                 goto Sample417kLoopB
03E5   0000           01472         nop
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E6   0808           01473         movf ADC_DATAPORT, W                            ;Last sample bank 2
03E7   1409           01474         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03E8   1009           01475         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03E9   0080           01476         movwf INDF                                                      ;Save to QUEUE
03EA   1783           01477         bsf STATUS, IRP                                         ;Goto bank 4
                      01478         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03EB   303F               M     movlw BUFFERSIZE - 1
03EC   00F3               M     movwf gbl_cntra
03ED   2BEE           01479         goto $ + 1
03EE   1D70           01480         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03EF   2BF1           01481                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
03F0   2419           01482         call DelaySeven                                         ;Delay 9 cycles
03F1                  01483 Sample417kLoopC
03F1   0808           01484         movf ADC_DATAPORT, W                            ;Sample
03F2   1409           01485         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F3   1009           01486         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F4   0080           01487         movwf INDF                                                      ;Save to QUEUE
03F5   0A84           01488         incf FSR, F                                                     ;Increment QUEUE pointer
03F6                  01489 StSample417kLoopC
03F6   1D70           01490         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03F7   2BF9           01491                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
03F8                  01492 Sample250kC
03F8   2419           01493         call DelaySeven                                         ;Delay 9 cycles
03F9                  01494 Sample417kC
03F9   0000           01495         nop
03FA   0BF3           01496         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03FB   2BF1           01497                 goto Sample417kLoopC
03FC   0000           01498         nop
03FD   0808           01499         movf ADC_DATAPORT, W                            ;Last sample bank 4
03FE   1409           01500         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FF   1009           01501         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0400   0080           01502         movwf INDF                                                      ;Save to QUEUE
0401   1384           01503         bcf FSR, 7                                                      ;Goto bank 3
                      01504         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
0402   303F               M     movlw BUFFERSIZE - 1
0403   00F3               M     movwf gbl_cntra
0404   2C05           01505         goto $ + 1
0405   1D70           01506         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
0406   2C08           01507                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
0407   2419           01508         call DelaySeven                                         ;Delay 9 cycles
0408                  01509 Sample417kLoopD
0408   0808           01510         movf ADC_DATAPORT, W                            ;Sample
0409   1409           01511         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
040A   1009           01512         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
040B   0080           01513         movwf INDF                                                      ;Save to QUEUE
040C   0384           01514         decf FSR, F                                                     ;Increment QUEUE pointer
040D                  01515 StSample417kLoopD
040D   1D70           01516         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
040E   2C10           01517                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

040F                  01518 Sample250kD
040F   2419           01519         call DelaySeven                                         ;Delay 9 cycles
0410                  01520 Sample417kD
0410   0000           01521         nop
0411   0BF3           01522         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0412   2C08           01523                 goto Sample417kLoopD
0413   0000           01524         nop
0414   0808           01525         movf ADC_DATAPORT, W                            ;Last sample
0415   1409           01526         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0416   118A           01527         bcf PCLATH, 3                                           ;insure correct program memory page
0417   120A           01528         bcf PCLATH, 4
0418   290F           01529         goto ADCShutdown
                      01530 
                      01531 ;Delay Seven Cycles, helper to Sample417k250k
0419                  01532 DelaySeven
0419   2C1A           01533         goto $ + 1                                                      ;7
                      01534 ;Delay Five Cycles, helper to SampleXY250k192k
041A                  01535 DelayFive
041A   0000           01536         nop                                                                     ;5
041B   2C1C           01537         goto $ + 1                                              
                      01538 ;Delay Two Cycles, helper to SampleXY250k192k
041C                  01539 DelayTwo
041C   0008           01540         return                                                          ;2
                      01541 
                      01542 
                      01543 ;Fast sample XY
                      01544 ;Sampling rate = 250 kHz with 20 MHz clock
041D                  01545 SampleXY250k192k
041D   1009           01546         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
041E   1489           01547         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01548         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
041F   3020               M     movlw BUFFERMIN
0420   0084               M     movwf FSR
0421   0808           01549         movf ADC_DATAPORT, W                            ;Sample X
0422   1409           01550         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0423   1009           01551         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0424   1089           01552         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0425   0080           01553         movwf INDF                                                      ;Save to QUEUE
0426   0A84           01554         incf FSR, F                                                     ;Increment QUEUE pointer
                      01555         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0427   301F               M     movlw BUFFERSIZE/2-1
0428   00F5               M     movwf gbl_cntrc
0429   1C70           01556         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
042A   241A           01557                 call DelayFive                                  ;192k
042B   241C           01558         call DelayTwo
042C                  01559 SampleXY250kLA
042C   0808           01560         movf ADC_DATAPORT, W                            ;Sample Y
042D   1409           01561         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
042E   1009           01562         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
042F   1489           01563         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0430   0080           01564         movwf INDF                                                      ;Save to QUEUE
0431   0A84           01565         incf FSR, F                                                     ;Increment QUEUE pointer
0432   0808           01566         movf ADC_DATAPORT, W                            ;Sample X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0433   1409           01567         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0434   1009           01568         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0435   1089           01569         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0436   0080           01570         movwf INDF                                                      ;Save to QUEUE
0437   0A84           01571         incf FSR, F                                                     ;Increment QUEUE pointer
0438   1C70           01572         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0439   241A           01573                 call DelayFive                                  ;192k
043A   2C3B           01574         goto $ + 1
043B   0000           01575         nop
043C   0BF5           01576         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
043D   2C2C           01577                 goto SampleXY250kLA
043E   0000           01578         nop
043F   0808           01579         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0440   1409           01580         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0441   1009           01581         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0442   1489           01582         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0443   0080           01583         movwf INDF                                                      ;Save to QUEUE
0444   1784           01584         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0445   0808           01585         movf ADC_DATAPORT, W                            ;Sample X
0446   1409           01586         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0447   1009           01587         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0448   1089           01588         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0449   0080           01589         movwf INDF                                                      ;Save to QUEUE
044A   0384           01590         decf FSR, f                                                     ;Increment QUEUE pointer
                      01591         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
044B   301F               M     movlw BUFFERSIZE/2-1
044C   00F5               M     movwf gbl_cntrc
044D   1C70           01592         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
044E   241A           01593                 call DelayFive                                  ;192k
044F   241C           01594         call DelayTwo
0450                  01595 SampleXY250kLB
0450   0808           01596         movf ADC_DATAPORT, W                            ;Sample Y
0451   1409           01597         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0452   1009           01598         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0453   1489           01599         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0454   0080           01600         movwf INDF                                                      ;Save to QUEUE
0455   0384           01601         decf FSR, F                                                     ;Increment QUEUE pointer
0456   0808           01602         movf ADC_DATAPORT, W                            ;Sample X
0457   1409           01603         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0458   1009           01604         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0459   1089           01605         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
045A   0080           01606         movwf INDF                                                      ;Save to QUEUE
045B   0384           01607         decf FSR, F                                                     ;Increment QUEUE pointer
045C   1C70           01608         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
045D   241A           01609                 call DelayFive                                  ;192k
045E   2C5F           01610         goto $ + 1
045F   0000           01611         nop
0460   0BF5           01612         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0461   2C50           01613                 goto SampleXY250kLB
0462   0000           01614         nop
0463   0808           01615         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0464   1409           01616         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0465   1009           01617         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0466   1489           01618         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0467   0080           01619         movwf INDF                                                      ;Save to QUEUE
0468   1783           01620         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0469   0808           01621         movf ADC_DATAPORT, W                            ;Sample X
046A   1409           01622         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
046B   1009           01623         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
046C   1089           01624         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
046D   0080           01625         movwf INDF                                                      ;Save to QUEUE
046E   0A84           01626         incf FSR, f                                                     ;Increment QUEUE pointer
                      01627         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
046F   301F               M     movlw BUFFERSIZE/2-1
0470   00F5               M     movwf gbl_cntrc
0471   1C70           01628         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0472   241A           01629                 call DelayFive                                  ;192k
0473   241C           01630         call DelayTwo
0474                  01631 SampleXY250kLC
0474   0808           01632         movf ADC_DATAPORT, W                            ;Sample Y
0475   1409           01633         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0476   1009           01634         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0477   1489           01635         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0478   0080           01636         movwf INDF                                                      ;Save to QUEUE
0479   0A84           01637         incf FSR, F                                                     ;Increment QUEUE pointer
047A   0808           01638         movf ADC_DATAPORT, W                            ;Sample X
047B   1409           01639         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
047C   1009           01640         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
047D   1089           01641         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
047E   0080           01642         movwf INDF                                                      ;Save to QUEUE
047F   0A84           01643         incf FSR, F                                                     ;Increment QUEUE pointer
0480   1C70           01644         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0481   241A           01645                 call DelayFive                                  ;192k
0482   2C83           01646         goto $ + 1
0483   0000           01647         nop
0484   0BF5           01648         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0485   2C74           01649                 goto SampleXY250kLC
0486   0000           01650         nop
0487   0808           01651         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0488   1409           01652         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0489   1009           01653         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
048A   1489           01654         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
048B   0080           01655         movwf INDF                                                      ;Save to QUEUE
048C   1384           01656         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
048D   0808           01657         movf ADC_DATAPORT, W                            ;Sample X
048E   1409           01658         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
048F   1009           01659         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0490   1089           01660         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0491   0080           01661         movwf INDF                                                      ;Save to QUEUE
0492   0384           01662         decf FSR, f                                                     ;Increment QUEUE pointer
                      01663         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0493   301F               M     movlw BUFFERSIZE/2-1
0494   00F5               M     movwf gbl_cntrc
0495   1C70           01664         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0496   241A           01665                 call DelayFive                                  ;192k
0497   241C           01666         call DelayTwo
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0498                  01667 SampleXY250kLD
0498   0808           01668         movf ADC_DATAPORT, W                            ;Sample Y
0499   1409           01669         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
049A   1009           01670         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
049B   1489           01671         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
049C   0080           01672         movwf INDF                                                      ;Save to QUEUE
049D   0384           01673         decf FSR, F                                                     ;Increment QUEUE pointer
049E   0808           01674         movf ADC_DATAPORT, W                            ;Sample X
049F   1409           01675         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A0   1009           01676         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A1   1089           01677         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04A2   0080           01678         movwf INDF                                                      ;Save to QUEUE
04A3   0384           01679         decf FSR, F                                                     ;Increment QUEUE pointer
04A4   1C70           01680         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04A5   241A           01681                 call DelayFive                                  ;192k
04A6   2CA7           01682         goto $ + 1
04A7   0000           01683         nop
04A8   0BF5           01684         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04A9   2C98           01685                 goto SampleXY250kLD
04AA   0000           01686         nop
04AB   0808           01687         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
04AC   1409           01688         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04AD   118A           01689         bcf PCLATH, 3                                           ;insure correct program memory page
04AE   120A           01690         bcf PCLATH, 4
04AF   290F           01691         goto ADCShutdown
                      01692 
                      01693 ;Fastest sample
                      01694 ;Sampling rate = 1 MHz with 20 MHz clock
                      01695 ;Sampling rate = 200 kHz with 4 MHz clock
                      01696 ;-----------------------------------------------------------------------------
04B0                  01697 Sample1M
04B0   1009           01698         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01699         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04B1   3020               M     movlw BUFFERMIN
04B2   0084               M     movwf FSR
04B3   0000           01700         nop
  0000                01701         local count
  00000001            01702         count = 1
                      01703         while count < BUFFERSIZE
04B4   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04B5   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04B6   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04B7   0080           01707                 movwf INDF                                              ;Save to QUEUE
04B8   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01709                 count = count + 1
04B9   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04BA   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04BB   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04BC   0080           01707                 movwf INDF                                              ;Save to QUEUE
04BD   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01709                 count = count + 1
04BE   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04BF   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C0   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04C1   0080           01707                 movwf INDF                                              ;Save to QUEUE
04C2   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01709                 count = count + 1
04C3   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C4   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C5   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04C6   0080           01707                 movwf INDF                                              ;Save to QUEUE
04C7   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01709                 count = count + 1
04C8   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C9   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CA   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04CB   0080           01707                 movwf INDF                                              ;Save to QUEUE
04CC   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01709                 count = count + 1
04CD   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04CE   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CF   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04D0   0080           01707                 movwf INDF                                              ;Save to QUEUE
04D1   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01709                 count = count + 1
04D2   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D3   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D4   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04D5   0080           01707                 movwf INDF                                              ;Save to QUEUE
04D6   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01709                 count = count + 1
04D7   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D8   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D9   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04DA   0080           01707                 movwf INDF                                              ;Save to QUEUE
04DB   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01709                 count = count + 1
04DC   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04DD   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04DE   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04DF   0080           01707                 movwf INDF                                              ;Save to QUEUE
04E0   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01709                 count = count + 1
04E1   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E2   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E3   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04E4   0080           01707                 movwf INDF                                              ;Save to QUEUE
04E5   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01709                 count = count + 1
04E6   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E7   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E8   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04E9   0080           01707                 movwf INDF                                              ;Save to QUEUE
04EA   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01709                 count = count + 1
04EB   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04EC   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04ED   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04EE   0080           01707                 movwf INDF                                              ;Save to QUEUE
04EF   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01709                 count = count + 1
04F0   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F1   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F2   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04F3   0080           01707                 movwf INDF                                              ;Save to QUEUE
04F4   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01709                 count = count + 1
04F5   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F6   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F7   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04F8   0080           01707                 movwf INDF                                              ;Save to QUEUE
04F9   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01709                 count = count + 1
04FA   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04FB   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FC   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
04FD   0080           01707                 movwf INDF                                              ;Save to QUEUE
04FE   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01709                 count = count + 1
04FF   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0500   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0501   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0502   0080           01707                 movwf INDF                                              ;Save to QUEUE
0503   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01709                 count = count + 1
0504   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0505   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0506   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0507   0080           01707                 movwf INDF                                              ;Save to QUEUE
0508   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01709                 count = count + 1
0509   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050A   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
050B   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
050C   0080           01707                 movwf INDF                                              ;Save to QUEUE
050D   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01709                 count = count + 1
050E   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050F   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0510   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0511   0080           01707                 movwf INDF                                              ;Save to QUEUE
0512   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01709                 count = count + 1
0513   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0514   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0515   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0516   0080           01707                 movwf INDF                                              ;Save to QUEUE
0517   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01709                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0518   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0519   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051A   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
051B   0080           01707                 movwf INDF                                              ;Save to QUEUE
051C   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01709                 count = count + 1
051D   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
051E   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051F   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0520   0080           01707                 movwf INDF                                              ;Save to QUEUE
0521   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01709                 count = count + 1
0522   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0523   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0524   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0525   0080           01707                 movwf INDF                                              ;Save to QUEUE
0526   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01709                 count = count + 1
0527   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0528   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0529   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
052A   0080           01707                 movwf INDF                                              ;Save to QUEUE
052B   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01709                 count = count + 1
052C   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
052D   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
052E   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
052F   0080           01707                 movwf INDF                                              ;Save to QUEUE
0530   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01709                 count = count + 1
0531   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0532   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0533   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0534   0080           01707                 movwf INDF                                              ;Save to QUEUE
0535   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01709                 count = count + 1
0536   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0537   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0538   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0539   0080           01707                 movwf INDF                                              ;Save to QUEUE
053A   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01709                 count = count + 1
053B   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053C   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
053D   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
053E   0080           01707                 movwf INDF                                              ;Save to QUEUE
053F   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01709                 count = count + 1
0540   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0541   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0542   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0543   0080           01707                 movwf INDF                                              ;Save to QUEUE
0544   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            01709                 count = count + 1
0545   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0546   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0547   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0548   0080           01707                 movwf INDF                                              ;Save to QUEUE
0549   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01709                 count = count + 1
054A   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
054B   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054C   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
054D   0080           01707                 movwf INDF                                              ;Save to QUEUE
054E   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01709                 count = count + 1
054F   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0550   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0551   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0552   0080           01707                 movwf INDF                                              ;Save to QUEUE
0553   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01709                 count = count + 1
0554   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0555   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0556   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0557   0080           01707                 movwf INDF                                              ;Save to QUEUE
0558   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01709                 count = count + 1
0559   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055A   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
055B   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
055C   0080           01707                 movwf INDF                                              ;Save to QUEUE
055D   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01709                 count = count + 1
055E   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055F   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0560   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0561   0080           01707                 movwf INDF                                              ;Save to QUEUE
0562   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01709                 count = count + 1
0563   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0564   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0565   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0566   0080           01707                 movwf INDF                                              ;Save to QUEUE
0567   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01709                 count = count + 1
0568   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0569   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056A   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
056B   0080           01707                 movwf INDF                                              ;Save to QUEUE
056C   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01709                 count = count + 1
056D   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
056E   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056F   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0570   0080           01707                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0571   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01709                 count = count + 1
0572   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0573   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0574   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0575   0080           01707                 movwf INDF                                              ;Save to QUEUE
0576   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01709                 count = count + 1
0577   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0578   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0579   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
057A   0080           01707                 movwf INDF                                              ;Save to QUEUE
057B   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01709                 count = count + 1
057C   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
057D   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
057E   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
057F   0080           01707                 movwf INDF                                              ;Save to QUEUE
0580   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01709                 count = count + 1
0581   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0582   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0583   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0584   0080           01707                 movwf INDF                                              ;Save to QUEUE
0585   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01709                 count = count + 1
0586   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0587   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0588   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0589   0080           01707                 movwf INDF                                              ;Save to QUEUE
058A   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01709                 count = count + 1
058B   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058C   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
058D   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
058E   0080           01707                 movwf INDF                                              ;Save to QUEUE
058F   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01709                 count = count + 1
0590   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0591   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0592   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0593   0080           01707                 movwf INDF                                              ;Save to QUEUE
0594   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01709                 count = count + 1
0595   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0596   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0597   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
0598   0080           01707                 movwf INDF                                              ;Save to QUEUE
0599   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01709                 count = count + 1
059A   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
059B   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059C   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

059D   0080           01707                 movwf INDF                                              ;Save to QUEUE
059E   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01709                 count = count + 1
059F   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A0   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A1   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05A2   0080           01707                 movwf INDF                                              ;Save to QUEUE
05A3   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01709                 count = count + 1
05A4   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A5   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A6   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05A7   0080           01707                 movwf INDF                                              ;Save to QUEUE
05A8   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01709                 count = count + 1
05A9   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AA   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AB   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05AC   0080           01707                 movwf INDF                                              ;Save to QUEUE
05AD   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01709                 count = count + 1
05AE   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AF   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B0   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05B1   0080           01707                 movwf INDF                                              ;Save to QUEUE
05B2   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01709                 count = count + 1
05B3   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B4   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B5   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05B6   0080           01707                 movwf INDF                                              ;Save to QUEUE
05B7   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01709                 count = count + 1
05B8   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B9   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BA   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05BB   0080           01707                 movwf INDF                                              ;Save to QUEUE
05BC   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01709                 count = count + 1
05BD   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BE   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BF   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05C0   0080           01707                 movwf INDF                                              ;Save to QUEUE
05C1   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01709                 count = count + 1
05C2   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C3   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C4   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05C5   0080           01707                 movwf INDF                                              ;Save to QUEUE
05C6   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01709                 count = count + 1
05C7   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C8   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C9   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05CA   0080           01707                 movwf INDF                                              ;Save to QUEUE
05CB   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01709                 count = count + 1
05CC   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CD   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CE   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05CF   0080           01707                 movwf INDF                                              ;Save to QUEUE
05D0   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01709                 count = count + 1
05D1   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D2   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D3   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05D4   0080           01707                 movwf INDF                                              ;Save to QUEUE
05D5   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01709                 count = count + 1
05D6   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D7   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D8   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05D9   0080           01707                 movwf INDF                                              ;Save to QUEUE
05DA   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01709                 count = count + 1
05DB   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DC   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DD   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05DE   0080           01707                 movwf INDF                                              ;Save to QUEUE
05DF   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01709                 count = count + 1
05E0   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E1   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E2   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05E3   0080           01707                 movwf INDF                                              ;Save to QUEUE
05E4   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01709                 count = count + 1
05E5   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E6   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E7   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05E8   0080           01707                 movwf INDF                                              ;Save to QUEUE
05E9   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01709                 count = count + 1
05EA   1409           01704                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EB   1009           01705                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EC   0808           01706                 movf ADC_DATAPORT, W                    ;Save Sample
05ED   0080           01707                 movwf INDF                                              ;Save to QUEUE
05EE   0A84           01708                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01709                 count = count + 1
                      01710         endw
05EF   1409           01711         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
05F0   1009           01712         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
05F1   0808           01713         movf ADC_DATAPORT, W
05F2   0080           01714         movwf INDF
05F3   1784           01715         bsf FSR, 7                                                      ;goto bank 2
  00000001            01716         count = 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01717         while count < BUFFERSIZE
05F4   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05F5   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05F6   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
05F7   0080           01721                 movwf INDF                                              ;Save to QUEUE
05F8   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01723                 count = count + 1
05F9   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FA   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05FB   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
05FC   0080           01721                 movwf INDF                                              ;Save to QUEUE
05FD   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01723                 count = count + 1
05FE   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FF   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0600   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0601   0080           01721                 movwf INDF                                              ;Save to QUEUE
0602   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01723                 count = count + 1
0603   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0604   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0605   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0606   0080           01721                 movwf INDF                                              ;Save to QUEUE
0607   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01723                 count = count + 1
0608   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0609   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060A   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
060B   0080           01721                 movwf INDF                                              ;Save to QUEUE
060C   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01723                 count = count + 1
060D   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
060E   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060F   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0610   0080           01721                 movwf INDF                                              ;Save to QUEUE
0611   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01723                 count = count + 1
0612   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0613   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0614   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0615   0080           01721                 movwf INDF                                              ;Save to QUEUE
0616   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01723                 count = count + 1
0617   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0618   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0619   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
061A   0080           01721                 movwf INDF                                              ;Save to QUEUE
061B   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01723                 count = count + 1
061C   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
061D   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
061E   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
061F   0080           01721                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0620   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01723                 count = count + 1
0621   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0622   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0623   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0624   0080           01721                 movwf INDF                                              ;Save to QUEUE
0625   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01723                 count = count + 1
0626   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0627   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0628   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0629   0080           01721                 movwf INDF                                              ;Save to QUEUE
062A   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01723                 count = count + 1
062B   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062C   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
062D   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
062E   0080           01721                 movwf INDF                                              ;Save to QUEUE
062F   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01723                 count = count + 1
0630   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0631   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0632   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0633   0080           01721                 movwf INDF                                              ;Save to QUEUE
0634   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01723                 count = count + 1
0635   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0636   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0637   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0638   0080           01721                 movwf INDF                                              ;Save to QUEUE
0639   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01723                 count = count + 1
063A   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
063B   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063C   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
063D   0080           01721                 movwf INDF                                              ;Save to QUEUE
063E   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01723                 count = count + 1
063F   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0640   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0641   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0642   0080           01721                 movwf INDF                                              ;Save to QUEUE
0643   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01723                 count = count + 1
0644   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0645   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0646   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0647   0080           01721                 movwf INDF                                              ;Save to QUEUE
0648   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01723                 count = count + 1
0649   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064A   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064B   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064C   0080           01721                 movwf INDF                                              ;Save to QUEUE
064D   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01723                 count = count + 1
064E   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064F   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0650   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0651   0080           01721                 movwf INDF                                              ;Save to QUEUE
0652   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01723                 count = count + 1
0653   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0654   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0655   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0656   0080           01721                 movwf INDF                                              ;Save to QUEUE
0657   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01723                 count = count + 1
0658   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0659   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065A   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
065B   0080           01721                 movwf INDF                                              ;Save to QUEUE
065C   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01723                 count = count + 1
065D   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065E   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065F   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0660   0080           01721                 movwf INDF                                              ;Save to QUEUE
0661   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01723                 count = count + 1
0662   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0663   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0664   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0665   0080           01721                 movwf INDF                                              ;Save to QUEUE
0666   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01723                 count = count + 1
0667   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0668   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0669   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
066A   0080           01721                 movwf INDF                                              ;Save to QUEUE
066B   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01723                 count = count + 1
066C   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
066D   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066E   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
066F   0080           01721                 movwf INDF                                              ;Save to QUEUE
0670   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01723                 count = count + 1
0671   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0672   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0673   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0674   0080           01721                 movwf INDF                                              ;Save to QUEUE
0675   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01723                 count = count + 1
0676   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0677   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0678   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0679   0080           01721                 movwf INDF                                              ;Save to QUEUE
067A   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01723                 count = count + 1
067B   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067C   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067D   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
067E   0080           01721                 movwf INDF                                              ;Save to QUEUE
067F   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01723                 count = count + 1
0680   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0681   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0682   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0683   0080           01721                 movwf INDF                                              ;Save to QUEUE
0684   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01723                 count = count + 1
0685   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0686   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0687   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0688   0080           01721                 movwf INDF                                              ;Save to QUEUE
0689   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01723                 count = count + 1
068A   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068B   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068C   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
068D   0080           01721                 movwf INDF                                              ;Save to QUEUE
068E   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01723                 count = count + 1
068F   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0690   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0691   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0692   0080           01721                 movwf INDF                                              ;Save to QUEUE
0693   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01723                 count = count + 1
0694   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0695   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0696   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0697   0080           01721                 movwf INDF                                              ;Save to QUEUE
0698   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01723                 count = count + 1
0699   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069A   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069B   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
069C   0080           01721                 movwf INDF                                              ;Save to QUEUE
069D   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01723                 count = count + 1
069E   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069F   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A0   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06A1   0080           01721                 movwf INDF                                              ;Save to QUEUE
06A2   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01723                 count = count + 1
06A3   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06A4   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A5   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06A6   0080           01721                 movwf INDF                                              ;Save to QUEUE
06A7   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01723                 count = count + 1
06A8   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A9   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AA   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06AB   0080           01721                 movwf INDF                                              ;Save to QUEUE
06AC   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01723                 count = count + 1
06AD   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AE   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AF   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06B0   0080           01721                 movwf INDF                                              ;Save to QUEUE
06B1   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01723                 count = count + 1
06B2   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B3   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B4   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06B5   0080           01721                 movwf INDF                                              ;Save to QUEUE
06B6   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01723                 count = count + 1
06B7   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B8   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B9   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06BA   0080           01721                 movwf INDF                                              ;Save to QUEUE
06BB   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01723                 count = count + 1
06BC   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BD   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BE   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06BF   0080           01721                 movwf INDF                                              ;Save to QUEUE
06C0   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01723                 count = count + 1
06C1   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C2   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C3   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06C4   0080           01721                 movwf INDF                                              ;Save to QUEUE
06C5   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01723                 count = count + 1
06C6   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C7   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C8   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06C9   0080           01721                 movwf INDF                                              ;Save to QUEUE
06CA   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01723                 count = count + 1
06CB   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CC   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CD   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06CE   0080           01721                 movwf INDF                                              ;Save to QUEUE
06CF   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01723                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06D0   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D1   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D2   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06D3   0080           01721                 movwf INDF                                              ;Save to QUEUE
06D4   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01723                 count = count + 1
06D5   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D6   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D7   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06D8   0080           01721                 movwf INDF                                              ;Save to QUEUE
06D9   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01723                 count = count + 1
06DA   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DB   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DC   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06DD   0080           01721                 movwf INDF                                              ;Save to QUEUE
06DE   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01723                 count = count + 1
06DF   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E0   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E1   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06E2   0080           01721                 movwf INDF                                              ;Save to QUEUE
06E3   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01723                 count = count + 1
06E4   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E5   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E6   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06E7   0080           01721                 movwf INDF                                              ;Save to QUEUE
06E8   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01723                 count = count + 1
06E9   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EA   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EB   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06EC   0080           01721                 movwf INDF                                              ;Save to QUEUE
06ED   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01723                 count = count + 1
06EE   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EF   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F0   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06F1   0080           01721                 movwf INDF                                              ;Save to QUEUE
06F2   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01723                 count = count + 1
06F3   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F4   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F5   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06F6   0080           01721                 movwf INDF                                              ;Save to QUEUE
06F7   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01723                 count = count + 1
06F8   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F9   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FA   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
06FB   0080           01721                 movwf INDF                                              ;Save to QUEUE
06FC   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000036            01723                 count = count + 1
06FD   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FE   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FF   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0700   0080           01721                 movwf INDF                                              ;Save to QUEUE
0701   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01723                 count = count + 1
0702   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0703   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0704   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0705   0080           01721                 movwf INDF                                              ;Save to QUEUE
0706   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01723                 count = count + 1
0707   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0708   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0709   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
070A   0080           01721                 movwf INDF                                              ;Save to QUEUE
070B   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01723                 count = count + 1
070C   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070D   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070E   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
070F   0080           01721                 movwf INDF                                              ;Save to QUEUE
0710   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01723                 count = count + 1
0711   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0712   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0713   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0714   0080           01721                 movwf INDF                                              ;Save to QUEUE
0715   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01723                 count = count + 1
0716   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0717   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0718   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0719   0080           01721                 movwf INDF                                              ;Save to QUEUE
071A   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01723                 count = count + 1
071B   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071C   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071D   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
071E   0080           01721                 movwf INDF                                              ;Save to QUEUE
071F   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01723                 count = count + 1
0720   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0721   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0722   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0723   0080           01721                 movwf INDF                                              ;Save to QUEUE
0724   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01723                 count = count + 1
0725   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0726   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0727   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
0728   0080           01721                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0729   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01723                 count = count + 1
072A   1409           01718                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072B   1009           01719                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072C   0808           01720                 movf ADC_DATAPORT, W                    ;Sample
072D   0080           01721                 movwf INDF                                              ;Save to QUEUE
072E   0384           01722                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01723                 count = count + 1
                      01724         endw
072F   1409           01725         bsf ADC_CONTROLPORT, RDD
0730   1009           01726         bcf ADC_CONTROLPORT, RDD
0731   0808           01727         movf ADC_DATAPORT, W
0732   0080           01728         movwf INDF
0733   1783           01729         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01730         count = 1
                      01731         while count < BUFFERSIZE
0734   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0735   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0736   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0737   0080           01735                 movwf INDF                                              ;Save to QUEUE
0738   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01737                 count = count + 1
0739   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073A   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073B   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
073C   0080           01735                 movwf INDF                                              ;Save to QUEUE
073D   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01737                 count = count + 1
073E   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073F   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0740   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0741   0080           01735                 movwf INDF                                              ;Save to QUEUE
0742   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01737                 count = count + 1
0743   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0744   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0745   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0746   0080           01735                 movwf INDF                                              ;Save to QUEUE
0747   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01737                 count = count + 1
0748   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0749   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074A   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
074B   0080           01735                 movwf INDF                                              ;Save to QUEUE
074C   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01737                 count = count + 1
074D   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074E   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074F   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0750   0080           01735                 movwf INDF                                              ;Save to QUEUE
0751   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01737                 count = count + 1
0752   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0753   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0754   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0755   0080           01735                 movwf INDF                                              ;Save to QUEUE
0756   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01737                 count = count + 1
0757   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0758   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0759   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
075A   0080           01735                 movwf INDF                                              ;Save to QUEUE
075B   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01737                 count = count + 1
075C   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075D   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075E   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
075F   0080           01735                 movwf INDF                                              ;Save to QUEUE
0760   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01737                 count = count + 1
0761   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0762   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0763   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0764   0080           01735                 movwf INDF                                              ;Save to QUEUE
0765   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01737                 count = count + 1
0766   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0767   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0768   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0769   0080           01735                 movwf INDF                                              ;Save to QUEUE
076A   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01737                 count = count + 1
076B   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076C   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076D   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
076E   0080           01735                 movwf INDF                                              ;Save to QUEUE
076F   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01737                 count = count + 1
0770   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0771   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0772   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0773   0080           01735                 movwf INDF                                              ;Save to QUEUE
0774   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01737                 count = count + 1
0775   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0776   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0777   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0778   0080           01735                 movwf INDF                                              ;Save to QUEUE
0779   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01737                 count = count + 1
077A   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077B   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077C   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
077D   0080           01735                 movwf INDF                                              ;Save to QUEUE
077E   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01737                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

077F   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0780   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0781   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0782   0080           01735                 movwf INDF                                              ;Save to QUEUE
0783   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01737                 count = count + 1
0784   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0785   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0786   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0787   0080           01735                 movwf INDF                                              ;Save to QUEUE
0788   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01737                 count = count + 1
0789   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078A   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078B   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
078C   0080           01735                 movwf INDF                                              ;Save to QUEUE
078D   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01737                 count = count + 1
078E   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078F   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0790   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0791   0080           01735                 movwf INDF                                              ;Save to QUEUE
0792   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01737                 count = count + 1
0793   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0794   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0795   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0796   0080           01735                 movwf INDF                                              ;Save to QUEUE
0797   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01737                 count = count + 1
0798   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0799   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079A   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
079B   0080           01735                 movwf INDF                                              ;Save to QUEUE
079C   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01737                 count = count + 1
079D   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079E   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079F   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07A0   0080           01735                 movwf INDF                                              ;Save to QUEUE
07A1   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01737                 count = count + 1
07A2   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A3   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A4   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07A5   0080           01735                 movwf INDF                                              ;Save to QUEUE
07A6   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01737                 count = count + 1
07A7   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A8   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A9   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07AA   0080           01735                 movwf INDF                                              ;Save to QUEUE
07AB   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            01737                 count = count + 1
07AC   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AD   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AE   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07AF   0080           01735                 movwf INDF                                              ;Save to QUEUE
07B0   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01737                 count = count + 1
07B1   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B2   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B3   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07B4   0080           01735                 movwf INDF                                              ;Save to QUEUE
07B5   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01737                 count = count + 1
07B6   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B7   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B8   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07B9   0080           01735                 movwf INDF                                              ;Save to QUEUE
07BA   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01737                 count = count + 1
07BB   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BC   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BD   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07BE   0080           01735                 movwf INDF                                              ;Save to QUEUE
07BF   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01737                 count = count + 1
07C0   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C1   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C2   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07C3   0080           01735                 movwf INDF                                              ;Save to QUEUE
07C4   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01737                 count = count + 1
07C5   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C6   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C7   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07C8   0080           01735                 movwf INDF                                              ;Save to QUEUE
07C9   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01737                 count = count + 1
07CA   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CB   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CC   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07CD   0080           01735                 movwf INDF                                              ;Save to QUEUE
07CE   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01737                 count = count + 1
07CF   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D0   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D1   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07D2   0080           01735                 movwf INDF                                              ;Save to QUEUE
07D3   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01737                 count = count + 1
07D4   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D5   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D6   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07D7   0080           01735                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07D8   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01737                 count = count + 1
07D9   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DA   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DB   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07DC   0080           01735                 movwf INDF                                              ;Save to QUEUE
07DD   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01737                 count = count + 1
07DE   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DF   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E0   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07E1   0080           01735                 movwf INDF                                              ;Save to QUEUE
07E2   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01737                 count = count + 1
07E3   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E4   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E5   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07E6   0080           01735                 movwf INDF                                              ;Save to QUEUE
07E7   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01737                 count = count + 1
07E8   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E9   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EA   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07EB   0080           01735                 movwf INDF                                              ;Save to QUEUE
07EC   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01737                 count = count + 1
07ED   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EE   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EF   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07F0   0080           01735                 movwf INDF                                              ;Save to QUEUE
07F1   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01737                 count = count + 1
07F2   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F3   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F4   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07F5   0080           01735                 movwf INDF                                              ;Save to QUEUE
07F6   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01737                 count = count + 1
07F7   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F8   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F9   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07FA   0080           01735                 movwf INDF                                              ;Save to QUEUE
07FB   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01737                 count = count + 1
07FC   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FD   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FE   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
07FF   0080           01735                 movwf INDF                                              ;Save to QUEUE
0800   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01737                 count = count + 1
0801   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0802   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0803   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0804   0080           01735                 movwf INDF                                              ;Save to QUEUE
0805   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01737                 count = count + 1
0806   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0807   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0808   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0809   0080           01735                 movwf INDF                                              ;Save to QUEUE
080A   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01737                 count = count + 1
080B   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080C   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080D   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
080E   0080           01735                 movwf INDF                                              ;Save to QUEUE
080F   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01737                 count = count + 1
0810   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0811   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0812   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0813   0080           01735                 movwf INDF                                              ;Save to QUEUE
0814   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01737                 count = count + 1
0815   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0816   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0817   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0818   0080           01735                 movwf INDF                                              ;Save to QUEUE
0819   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01737                 count = count + 1
081A   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081B   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081C   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
081D   0080           01735                 movwf INDF                                              ;Save to QUEUE
081E   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01737                 count = count + 1
081F   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0820   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0821   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0822   0080           01735                 movwf INDF                                              ;Save to QUEUE
0823   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01737                 count = count + 1
0824   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0825   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0826   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0827   0080           01735                 movwf INDF                                              ;Save to QUEUE
0828   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01737                 count = count + 1
0829   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082A   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082B   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
082C   0080           01735                 movwf INDF                                              ;Save to QUEUE
082D   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01737                 count = count + 1
082E   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082F   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0830   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0831   0080           01735                 movwf INDF                                              ;Save to QUEUE
0832   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01737                 count = count + 1
0833   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0834   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0835   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0836   0080           01735                 movwf INDF                                              ;Save to QUEUE
0837   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01737                 count = count + 1
0838   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0839   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083A   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
083B   0080           01735                 movwf INDF                                              ;Save to QUEUE
083C   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01737                 count = count + 1
083D   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083E   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083F   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0840   0080           01735                 movwf INDF                                              ;Save to QUEUE
0841   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01737                 count = count + 1
0842   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0843   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0844   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0845   0080           01735                 movwf INDF                                              ;Save to QUEUE
0846   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01737                 count = count + 1
0847   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0848   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0849   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
084A   0080           01735                 movwf INDF                                              ;Save to QUEUE
084B   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01737                 count = count + 1
084C   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084D   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084E   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
084F   0080           01735                 movwf INDF                                              ;Save to QUEUE
0850   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01737                 count = count + 1
0851   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0852   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0853   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0854   0080           01735                 movwf INDF                                              ;Save to QUEUE
0855   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01737                 count = count + 1
0856   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0857   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0858   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0859   0080           01735                 movwf INDF                                              ;Save to QUEUE
085A   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01737                 count = count + 1
085B   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

085C   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085D   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
085E   0080           01735                 movwf INDF                                              ;Save to QUEUE
085F   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01737                 count = count + 1
0860   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0861   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0862   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0863   0080           01735                 movwf INDF                                              ;Save to QUEUE
0864   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01737                 count = count + 1
0865   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0866   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0867   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
0868   0080           01735                 movwf INDF                                              ;Save to QUEUE
0869   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01737                 count = count + 1
086A   1409           01732                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086B   1009           01733                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086C   0808           01734                 movf ADC_DATAPORT, W                    ;Sample
086D   0080           01735                 movwf INDF                                              ;Save to QUEUE
086E   0A84           01736                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01737                 count = count + 1
                      01738         endw
086F   1409           01739         bsf ADC_CONTROLPORT, RDD
0870   1009           01740         bcf ADC_CONTROLPORT, RDD
0871   0808           01741         movf ADC_DATAPORT, W                            ;Sample
0872   0080           01742         movwf INDF
0873   1384           01743         bcf FSR, 7                                                      ;goto bank 3
  00000001            01744         count = 1
                      01745         while count < D'14'
0874   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0875   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0876   0808           01748                 movf ADC_DATAPORT, W
0877   0080           01749                 movwf INDF                                              ;Save to QUEUE
0878   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01751                 count = count + 1
0879   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087A   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087B   0808           01748                 movf ADC_DATAPORT, W
087C   0080           01749                 movwf INDF                                              ;Save to QUEUE
087D   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01751                 count = count + 1
087E   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087F   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0880   0808           01748                 movf ADC_DATAPORT, W
0881   0080           01749                 movwf INDF                                              ;Save to QUEUE
0882   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01751                 count = count + 1
0883   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0884   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0885   0808           01748                 movf ADC_DATAPORT, W
0886   0080           01749                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0887   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01751                 count = count + 1
0888   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0889   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088A   0808           01748                 movf ADC_DATAPORT, W
088B   0080           01749                 movwf INDF                                              ;Save to QUEUE
088C   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01751                 count = count + 1
088D   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088E   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088F   0808           01748                 movf ADC_DATAPORT, W
0890   0080           01749                 movwf INDF                                              ;Save to QUEUE
0891   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01751                 count = count + 1
0892   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0893   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0894   0808           01748                 movf ADC_DATAPORT, W
0895   0080           01749                 movwf INDF                                              ;Save to QUEUE
0896   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01751                 count = count + 1
0897   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0898   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0899   0808           01748                 movf ADC_DATAPORT, W
089A   0080           01749                 movwf INDF                                              ;Save to QUEUE
089B   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01751                 count = count + 1
089C   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089D   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089E   0808           01748                 movf ADC_DATAPORT, W
089F   0080           01749                 movwf INDF                                              ;Save to QUEUE
08A0   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01751                 count = count + 1
08A1   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A2   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A3   0808           01748                 movf ADC_DATAPORT, W
08A4   0080           01749                 movwf INDF                                              ;Save to QUEUE
08A5   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01751                 count = count + 1
08A6   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A7   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A8   0808           01748                 movf ADC_DATAPORT, W
08A9   0080           01749                 movwf INDF                                              ;Save to QUEUE
08AA   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01751                 count = count + 1
08AB   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AC   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AD   0808           01748                 movf ADC_DATAPORT, W
08AE   0080           01749                 movwf INDF                                              ;Save to QUEUE
08AF   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01751                 count = count + 1
08B0   1409           01746                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B1   1009           01747                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B2   0808           01748                 movf ADC_DATAPORT, W
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08B3   0080           01749                 movwf INDF                                              ;Save to QUEUE
08B4   0384           01750                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01751                 count = count + 1
                      01752         endw
08B5                  01753 Sample1MhzEnd
                      01754         while count < BUFFERSIZE
08B5   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B6   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B7   0808           01757                 movf ADC_DATAPORT, W
08B8   0080           01758                 movwf INDF                                              ;Save to QUEUE
08B9   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01760                 count = count + 1
08BA   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BB   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BC   0808           01757                 movf ADC_DATAPORT, W
08BD   0080           01758                 movwf INDF                                              ;Save to QUEUE
08BE   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01760                 count = count + 1
08BF   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C0   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C1   0808           01757                 movf ADC_DATAPORT, W
08C2   0080           01758                 movwf INDF                                              ;Save to QUEUE
08C3   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01760                 count = count + 1
08C4   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C5   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C6   0808           01757                 movf ADC_DATAPORT, W
08C7   0080           01758                 movwf INDF                                              ;Save to QUEUE
08C8   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01760                 count = count + 1
08C9   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CA   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CB   0808           01757                 movf ADC_DATAPORT, W
08CC   0080           01758                 movwf INDF                                              ;Save to QUEUE
08CD   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01760                 count = count + 1
08CE   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CF   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D0   0808           01757                 movf ADC_DATAPORT, W
08D1   0080           01758                 movwf INDF                                              ;Save to QUEUE
08D2   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01760                 count = count + 1
08D3   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D4   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D5   0808           01757                 movf ADC_DATAPORT, W
08D6   0080           01758                 movwf INDF                                              ;Save to QUEUE
08D7   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01760                 count = count + 1
08D8   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D9   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DA   0808           01757                 movf ADC_DATAPORT, W
08DB   0080           01758                 movwf INDF                                              ;Save to QUEUE
08DC   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            01760                 count = count + 1
08DD   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DE   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DF   0808           01757                 movf ADC_DATAPORT, W
08E0   0080           01758                 movwf INDF                                              ;Save to QUEUE
08E1   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01760                 count = count + 1
08E2   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E3   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E4   0808           01757                 movf ADC_DATAPORT, W
08E5   0080           01758                 movwf INDF                                              ;Save to QUEUE
08E6   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01760                 count = count + 1
08E7   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E8   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E9   0808           01757                 movf ADC_DATAPORT, W
08EA   0080           01758                 movwf INDF                                              ;Save to QUEUE
08EB   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01760                 count = count + 1
08EC   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08ED   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EE   0808           01757                 movf ADC_DATAPORT, W
08EF   0080           01758                 movwf INDF                                              ;Save to QUEUE
08F0   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01760                 count = count + 1
08F1   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F2   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F3   0808           01757                 movf ADC_DATAPORT, W
08F4   0080           01758                 movwf INDF                                              ;Save to QUEUE
08F5   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01760                 count = count + 1
08F6   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F7   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F8   0808           01757                 movf ADC_DATAPORT, W
08F9   0080           01758                 movwf INDF                                              ;Save to QUEUE
08FA   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01760                 count = count + 1
08FB   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FC   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FD   0808           01757                 movf ADC_DATAPORT, W
08FE   0080           01758                 movwf INDF                                              ;Save to QUEUE
08FF   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01760                 count = count + 1
0900   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0901   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0902   0808           01757                 movf ADC_DATAPORT, W
0903   0080           01758                 movwf INDF                                              ;Save to QUEUE
0904   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01760                 count = count + 1
0905   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0906   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0907   0808           01757                 movf ADC_DATAPORT, W
0908   0080           01758                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0909   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01760                 count = count + 1
090A   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090B   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090C   0808           01757                 movf ADC_DATAPORT, W
090D   0080           01758                 movwf INDF                                              ;Save to QUEUE
090E   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01760                 count = count + 1
090F   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0910   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0911   0808           01757                 movf ADC_DATAPORT, W
0912   0080           01758                 movwf INDF                                              ;Save to QUEUE
0913   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01760                 count = count + 1
0914   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0915   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0916   0808           01757                 movf ADC_DATAPORT, W
0917   0080           01758                 movwf INDF                                              ;Save to QUEUE
0918   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01760                 count = count + 1
0919   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091A   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091B   0808           01757                 movf ADC_DATAPORT, W
091C   0080           01758                 movwf INDF                                              ;Save to QUEUE
091D   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01760                 count = count + 1
091E   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091F   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0920   0808           01757                 movf ADC_DATAPORT, W
0921   0080           01758                 movwf INDF                                              ;Save to QUEUE
0922   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01760                 count = count + 1
0923   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0924   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0925   0808           01757                 movf ADC_DATAPORT, W
0926   0080           01758                 movwf INDF                                              ;Save to QUEUE
0927   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01760                 count = count + 1
0928   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0929   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092A   0808           01757                 movf ADC_DATAPORT, W
092B   0080           01758                 movwf INDF                                              ;Save to QUEUE
092C   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01760                 count = count + 1
092D   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092E   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092F   0808           01757                 movf ADC_DATAPORT, W
0930   0080           01758                 movwf INDF                                              ;Save to QUEUE
0931   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01760                 count = count + 1
0932   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0933   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0934   0808           01757                 movf ADC_DATAPORT, W
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0935   0080           01758                 movwf INDF                                              ;Save to QUEUE
0936   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01760                 count = count + 1
0937   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0938   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0939   0808           01757                 movf ADC_DATAPORT, W
093A   0080           01758                 movwf INDF                                              ;Save to QUEUE
093B   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01760                 count = count + 1
093C   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093D   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093E   0808           01757                 movf ADC_DATAPORT, W
093F   0080           01758                 movwf INDF                                              ;Save to QUEUE
0940   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01760                 count = count + 1
0941   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0942   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0943   0808           01757                 movf ADC_DATAPORT, W
0944   0080           01758                 movwf INDF                                              ;Save to QUEUE
0945   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01760                 count = count + 1
0946   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0947   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0948   0808           01757                 movf ADC_DATAPORT, W
0949   0080           01758                 movwf INDF                                              ;Save to QUEUE
094A   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01760                 count = count + 1
094B   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094C   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094D   0808           01757                 movf ADC_DATAPORT, W
094E   0080           01758                 movwf INDF                                              ;Save to QUEUE
094F   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01760                 count = count + 1
0950   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0951   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0952   0808           01757                 movf ADC_DATAPORT, W
0953   0080           01758                 movwf INDF                                              ;Save to QUEUE
0954   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01760                 count = count + 1
0955   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0956   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0957   0808           01757                 movf ADC_DATAPORT, W
0958   0080           01758                 movwf INDF                                              ;Save to QUEUE
0959   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01760                 count = count + 1
095A   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095B   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095C   0808           01757                 movf ADC_DATAPORT, W
095D   0080           01758                 movwf INDF                                              ;Save to QUEUE
095E   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01760                 count = count + 1
095F   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0960   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0961   0808           01757                 movf ADC_DATAPORT, W
0962   0080           01758                 movwf INDF                                              ;Save to QUEUE
0963   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01760                 count = count + 1
0964   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0965   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0966   0808           01757                 movf ADC_DATAPORT, W
0967   0080           01758                 movwf INDF                                              ;Save to QUEUE
0968   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01760                 count = count + 1
0969   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096A   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096B   0808           01757                 movf ADC_DATAPORT, W
096C   0080           01758                 movwf INDF                                              ;Save to QUEUE
096D   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01760                 count = count + 1
096E   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096F   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0970   0808           01757                 movf ADC_DATAPORT, W
0971   0080           01758                 movwf INDF                                              ;Save to QUEUE
0972   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01760                 count = count + 1
0973   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0974   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0975   0808           01757                 movf ADC_DATAPORT, W
0976   0080           01758                 movwf INDF                                              ;Save to QUEUE
0977   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01760                 count = count + 1
0978   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0979   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097A   0808           01757                 movf ADC_DATAPORT, W
097B   0080           01758                 movwf INDF                                              ;Save to QUEUE
097C   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01760                 count = count + 1
097D   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097E   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097F   0808           01757                 movf ADC_DATAPORT, W
0980   0080           01758                 movwf INDF                                              ;Save to QUEUE
0981   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01760                 count = count + 1
0982   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0983   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0984   0808           01757                 movf ADC_DATAPORT, W
0985   0080           01758                 movwf INDF                                              ;Save to QUEUE
0986   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01760                 count = count + 1
0987   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0988   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0989   0808           01757                 movf ADC_DATAPORT, W
098A   0080           01758                 movwf INDF                                              ;Save to QUEUE
098B   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01760                 count = count + 1
098C   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

098D   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098E   0808           01757                 movf ADC_DATAPORT, W
098F   0080           01758                 movwf INDF                                              ;Save to QUEUE
0990   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01760                 count = count + 1
0991   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0992   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0993   0808           01757                 movf ADC_DATAPORT, W
0994   0080           01758                 movwf INDF                                              ;Save to QUEUE
0995   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01760                 count = count + 1
0996   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0997   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0998   0808           01757                 movf ADC_DATAPORT, W
0999   0080           01758                 movwf INDF                                              ;Save to QUEUE
099A   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01760                 count = count + 1
099B   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099C   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099D   0808           01757                 movf ADC_DATAPORT, W
099E   0080           01758                 movwf INDF                                              ;Save to QUEUE
099F   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01760                 count = count + 1
09A0   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A1   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A2   0808           01757                 movf ADC_DATAPORT, W
09A3   0080           01758                 movwf INDF                                              ;Save to QUEUE
09A4   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01760                 count = count + 1
09A5   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A6   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A7   0808           01757                 movf ADC_DATAPORT, W
09A8   0080           01758                 movwf INDF                                              ;Save to QUEUE
09A9   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01760                 count = count + 1
09AA   1409           01755                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AB   1009           01756                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AC   0808           01757                 movf ADC_DATAPORT, W
09AD   0080           01758                 movwf INDF                                              ;Save to QUEUE
09AE   0384           01759                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01760                 count = count + 1
                      01761         endw
09AF   1409           01762         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09B0   0808           01763         movf ADC_DATAPORT, W                            ;Sample
09B1   118A           01764         bcf PCLATH, 3                                           ;insure correct program memory page
09B2   120A           01765         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
09B3   290F           01766         goto ADCShutdown
                      01767 
                      01768 ;Fastest XY sample
                      01769 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01770 ;Sampling rate =  83.333 kHz with 4 MHz clock
09B4                  01771 SampleXY417k
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09B4   1009           01772         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
09B5   1489           01773         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01774         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
09B6   3020               M     movlw BUFFERMIN
09B7   0084               M     movwf FSR
09B8   0808           01775         movf ADC_DATAPORT, W                            ;Sample X
09B9   1409           01776         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09BA   1009           01777         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
09BB   1089           01778         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
09BC   0080           01779         movwf INDF                                                      ;Save to QUEUE
09BD   0A84           01780         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            01781         count = 1
                      01782         while count < BUFFERSIZE / 2
09BE   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
09BF   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C0   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C1   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09C2   0080           01787                 movwf INDF                                              ;Save to QUEUE
09C3   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
09C4   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
09C5   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C6   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C7   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09C8   0080           01793                 movwf INDF                                              ;Save to QUEUE
09C9   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01795                 count = count + 1
09CA   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
09CB   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CC   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CD   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09CE   0080           01787                 movwf INDF                                              ;Save to QUEUE
09CF   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
09D0   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
09D1   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D2   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D3   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09D4   0080           01793                 movwf INDF                                              ;Save to QUEUE
09D5   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01795                 count = count + 1
09D6   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
09D7   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D8   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D9   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09DA   0080           01787                 movwf INDF                                              ;Save to QUEUE
09DB   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
09DC   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
09DD   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DE   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DF   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09E0   0080           01793                 movwf INDF                                              ;Save to QUEUE
09E1   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01795                 count = count + 1
09E2   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09E3   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E4   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E5   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09E6   0080           01787                 movwf INDF                                              ;Save to QUEUE
09E7   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
09E8   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
09E9   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EA   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EB   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09EC   0080           01793                 movwf INDF                                              ;Save to QUEUE
09ED   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01795                 count = count + 1
09EE   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
09EF   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F0   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F1   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09F2   0080           01787                 movwf INDF                                              ;Save to QUEUE
09F3   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
09F4   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
09F5   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F6   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F7   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F8   0080           01793                 movwf INDF                                              ;Save to QUEUE
09F9   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01795                 count = count + 1
09FA   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
09FB   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FC   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FD   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09FE   0080           01787                 movwf INDF                                              ;Save to QUEUE
09FF   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A00   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A01   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A02   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A03   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A04   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A05   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01795                 count = count + 1
0A06   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A07   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A08   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A09   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A0A   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A0B   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A0C   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A0D   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0E   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0F   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A10   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A11   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01795                 count = count + 1
0A12   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A13   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A14   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A15   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A16   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A17   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A18   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A19   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1A   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1B   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A1C   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A1D   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01795                 count = count + 1
0A1E   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A1F   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A20   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A21   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A22   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A23   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A24   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A25   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A26   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A27   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A28   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A29   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01795                 count = count + 1
0A2A   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A2B   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2C   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2D   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A2E   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A2F   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A30   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A31   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A32   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A33   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A34   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A35   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01795                 count = count + 1
0A36   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A37   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A38   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A39   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A3A   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A3B   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A3C   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A3D   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3E   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3F   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A40   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A41   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01795                 count = count + 1
0A42   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A43   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A44   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A45   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A46   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A47   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A48   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A49   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4A   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4B   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A4C   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A4D   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01795                 count = count + 1
0A4E   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A4F   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A50   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A51   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A52   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A53   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A54   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A55   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A56   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A57   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A58   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A59   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01795                 count = count + 1
0A5A   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A5B   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5C   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5D   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A5E   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A5F   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A60   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A61   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A62   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A63   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A64   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A65   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01795                 count = count + 1
0A66   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A67   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A68   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A69   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A6A   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A6B   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A6C   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A6D   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6E   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6F   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A70   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A71   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01795                 count = count + 1
0A72   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A73   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A74   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A75   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A76   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A77   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A78   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A79   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7A   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7B   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A7C   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A7D   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01795                 count = count + 1
0A7E   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A7F   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A80   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A81   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A82   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A83   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A84   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A85   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A86   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A87   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A88   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A89   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01795                 count = count + 1
0A8A   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A8B   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8C   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8D   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A8E   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A8F   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A90   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A91   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A92   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A93   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A94   0080           01793                 movwf INDF                                              ;Save to QUEUE
0A95   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01795                 count = count + 1
0A96   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0A97   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A98   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A99   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A9A   0080           01787                 movwf INDF                                              ;Save to QUEUE
0A9B   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0A9C   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0A9D   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9E   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9F   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AA0   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AA1   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01795                 count = count + 1
0AA2   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AA3   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA4   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA5   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AA6   0080           01787                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AA7   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AA8   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AA9   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAA   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAB   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AAC   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AAD   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01795                 count = count + 1
0AAE   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AAF   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB0   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB1   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB2   0080           01787                 movwf INDF                                              ;Save to QUEUE
0AB3   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AB4   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AB5   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB6   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB7   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB8   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AB9   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01795                 count = count + 1
0ABA   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0ABB   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABC   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABD   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABE   0080           01787                 movwf INDF                                              ;Save to QUEUE
0ABF   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AC0   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AC1   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC2   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC3   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC4   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AC5   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01795                 count = count + 1
0AC6   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AC7   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC8   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC9   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ACA   0080           01787                 movwf INDF                                              ;Save to QUEUE
0ACB   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0ACC   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0ACD   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACE   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACF   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD0   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AD1   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01795                 count = count + 1
0AD2   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AD3   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD4   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD5   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD6   0080           01787                 movwf INDF                                              ;Save to QUEUE
0AD7   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AD8   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AD9   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADA   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADB   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ADC   0080           01793                 movwf INDF                                              ;Save to QUEUE
0ADD   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01795                 count = count + 1
0ADE   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0ADF   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE0   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE1   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE2   0080           01787                 movwf INDF                                              ;Save to QUEUE
0AE3   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AE4   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AE5   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE6   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE7   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE8   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AE9   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01795                 count = count + 1
0AEA   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AEB   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEC   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AED   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AEE   0080           01787                 movwf INDF                                              ;Save to QUEUE
0AEF   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AF0   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AF1   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF2   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF3   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF4   0080           01793                 movwf INDF                                              ;Save to QUEUE
0AF5   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01795                 count = count + 1
0AF6   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0AF7   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF8   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF9   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AFA   0080           01787                 movwf INDF                                              ;Save to QUEUE
0AFB   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0AFC   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0AFD   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFE   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFF   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B00   0080           01793                 movwf INDF                                              ;Save to QUEUE
0B01   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01795                 count = count + 1
0B02   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0B03   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B04   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B05   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B06   0080           01787                 movwf INDF                                              ;Save to QUEUE
0B07   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0B08   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B09   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0A   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0B   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B0C   0080           01793                 movwf INDF                                              ;Save to QUEUE
0B0D   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01795                 count = count + 1
0B0E   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0B0F   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B10   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B11   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B12   0080           01787                 movwf INDF                                              ;Save to QUEUE
0B13   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0B14   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0B15   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B16   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B17   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B18   0080           01793                 movwf INDF                                              ;Save to QUEUE
0B19   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01795                 count = count + 1
0B1A   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0B1B   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1C   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1D   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1E   0080           01787                 movwf INDF                                              ;Save to QUEUE
0B1F   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0B20   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0B21   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B22   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B23   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B24   0080           01793                 movwf INDF                                              ;Save to QUEUE
0B25   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01795                 count = count + 1
0B26   0808           01783                 movf ADC_DATAPORT, W                    ;Sample Y
0B27   1409           01784                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B28   1009           01785                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B29   1489           01786                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B2A   0080           01787                 movwf INDF                                              ;Save to QUEUE
0B2B   0A84           01788                 incf FSR, F                                             ;Increment QUEUE pointer
0B2C   0808           01789                 movf ADC_DATAPORT, W                    ;Sample X
0B2D   1409           01790                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2E   1009           01791                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2F   1089           01792                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B30   0080           01793                 movwf INDF                                              ;Save to QUEUE
0B31   0A84           01794                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01795                 count = count + 1
                      01796         endw
0B32   0808           01797         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0B33   1409           01798         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B34   1009           01799         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B35   1489           01800         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0B36   0080           01801         movwf INDF                                                      ;Save to QUEUE
0B37   1784           01802         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0B38   0808           01803         movf ADC_DATAPORT, W                            ;Sample X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B39   1409           01804         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B3A   1009           01805         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B3B   1089           01806         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0B3C   0080           01807         movwf INDF                                                      ;Save to QUEUE
0B3D   0384           01808         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01809         count = 1
                      01810         while count < BUFFERSIZE / 2
0B3E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B3F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B40   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B41   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B42   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B43   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B44   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B45   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B46   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B47   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B48   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B49   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01823                 count = count + 1
0B4A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B4B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B4E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B4F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B50   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B51   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B52   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B53   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B54   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B55   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01823                 count = count + 1
0B56   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B57   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B58   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B59   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B5A   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B5B   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B5C   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B5D   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5E   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5F   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B60   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B61   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01823                 count = count + 1
0B62   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B63   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B64   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B65   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B66   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B67   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B68   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B69   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6A   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6B   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B6C   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B6D   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01823                 count = count + 1
0B6E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B6F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B70   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B71   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B72   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B73   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B74   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B75   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B76   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B77   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B78   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B79   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01823                 count = count + 1
0B7A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B7B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B7F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B80   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B81   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B82   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B83   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B84   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B85   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01823                 count = count + 1
0B86   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B87   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B88   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B89   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B8A   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B8B   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B8C   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B8D   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8E   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8F   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B90   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B91   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01823                 count = count + 1
0B92   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B93   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B94   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B95   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B96   0080           01815                 movwf INDF                                              ;Save to QUEUE
0B97   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0B98   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0B99   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B9A   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9B   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B9C   0080           01821                 movwf INDF                                              ;Save to QUEUE
0B9D   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01823                 count = count + 1
0B9E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0B9F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA0   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA1   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA2   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BA3   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BA4   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BA5   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA6   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA7   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA8   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BA9   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01823                 count = count + 1
0BAA   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BAB   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAC   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAD   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAE   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BAF   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BB0   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BB1   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB2   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB3   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB4   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BB5   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01823                 count = count + 1
0BB6   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BB7   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB8   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB9   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BBA   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BBB   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BBC   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BBD   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBE   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBF   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BC0   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BC1   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01823                 count = count + 1
0BC2   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BC3   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC4   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC5   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC6   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BC7   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BC8   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BC9   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCA   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BCB   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BCC   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BCD   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01823                 count = count + 1
0BCE   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BCF   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD0   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD1   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD2   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BD3   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BD4   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BD5   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD6   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD7   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD8   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BD9   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01823                 count = count + 1
0BDA   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BDB   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDC   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDD   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDE   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BDF   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BE0   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BE1   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE2   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE3   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE4   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BE5   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01823                 count = count + 1
0BE6   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BE7   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE8   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE9   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BEA   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BEB   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BEC   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BED   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEE   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEF   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BF0   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BF1   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01823                 count = count + 1
0BF2   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BF3   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF4   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF5   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF6   0080           01815                 movwf INDF                                              ;Save to QUEUE
0BF7   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0BF8   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0BF9   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFA   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFB   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BFC   0080           01821                 movwf INDF                                              ;Save to QUEUE
0BFD   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01823                 count = count + 1
0BFE   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0BFF   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C00   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C01   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C02   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C03   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C04   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C05   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C06   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C07   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C08   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C09   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01823                 count = count + 1
0C0A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C0B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C0F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C10   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C11   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C12   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C13   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C14   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C15   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01823                 count = count + 1
0C16   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C17   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C18   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C19   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C1A   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C1B   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C1C   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C1D   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1E   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1F   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C20   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C21   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01823                 count = count + 1
0C22   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C23   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C24   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C25   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C26   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C27   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C28   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C29   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2A   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2B   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C2C   0080           01821                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C2D   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01823                 count = count + 1
0C2E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C2F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C30   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C31   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C32   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C33   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C34   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C35   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C36   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C37   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C38   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C39   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01823                 count = count + 1
0C3A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C3B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C3F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C40   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C41   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C42   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C43   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C44   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C45   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01823                 count = count + 1
0C46   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C47   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C48   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C49   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C4A   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C4B   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C4C   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C4D   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4E   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4F   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C50   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C51   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01823                 count = count + 1
0C52   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C53   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C54   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C55   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C56   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C57   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C58   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C59   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5A   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5B   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C5C   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C5D   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            01823                 count = count + 1
0C5E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C5F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C60   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C61   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C62   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C63   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C64   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C65   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C66   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C67   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C68   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C69   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01823                 count = count + 1
0C6A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C6B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C6F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C70   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C71   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C72   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C73   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C74   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C75   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01823                 count = count + 1
0C76   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C77   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C78   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C79   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C7A   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C7B   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C7C   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C7D   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7E   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7F   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C80   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C81   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01823                 count = count + 1
0C82   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C83   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C84   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C85   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C86   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C87   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C88   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C89   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8A   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8B   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C8C   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C8D   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01823                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C8E   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C8F   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C90   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C91   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C92   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C93   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0C94   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0C95   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C96   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C97   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C98   0080           01821                 movwf INDF                                              ;Save to QUEUE
0C99   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01823                 count = count + 1
0C9A   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0C9B   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9C   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9D   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9E   0080           01815                 movwf INDF                                              ;Save to QUEUE
0C9F   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0CA0   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0CA1   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA2   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA3   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA4   0080           01821                 movwf INDF                                              ;Save to QUEUE
0CA5   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01823                 count = count + 1
0CA6   0808           01811                 movf ADC_DATAPORT, W                    ;Sample Y
0CA7   1409           01812                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA8   1009           01813                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA9   1489           01814                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CAA   0080           01815                 movwf INDF                                              ;Save to QUEUE
0CAB   0384           01816                 decf FSR, F                                             ;Increment QUEUE pointer
0CAC   0808           01817                 movf ADC_DATAPORT, W                    ;Sample X
0CAD   1409           01818                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAE   1009           01819                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAF   1089           01820                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB0   0080           01821                 movwf INDF                                              ;Save to QUEUE
0CB1   0384           01822                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01823                 count = count + 1
                      01824         endw
0CB2   0808           01825         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0CB3   1409           01826         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CB4   1009           01827         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CB5   1489           01828         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0CB6   0080           01829         movwf INDF                                                      ;Save to QUEUE
0CB7   1783           01830         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0CB8   0808           01831         movf ADC_DATAPORT, W                            ;Sample X
0CB9   1409           01832         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CBA   1009           01833         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CBB   1089           01834         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0CBC   0080           01835         movwf INDF                                                      ;Save to QUEUE
0CBD   0A84           01836         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01837         count = 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01838         while count < BUFFERSIZE / 2
0CBE   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CBF   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC0   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC1   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CC2   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CC3   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0CC4   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0CC5   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC6   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC7   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC8   0080           01849                 movwf INDF                                              ;Save to QUEUE
0CC9   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01851                 count = count + 1
0CCA   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CCB   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCC   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCD   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CCE   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CCF   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0CD0   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0CD1   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD2   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD3   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD4   0080           01849                 movwf INDF                                              ;Save to QUEUE
0CD5   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01851                 count = count + 1
0CD6   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CD7   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD8   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD9   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CDA   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CDB   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0CDC   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0CDD   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDE   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDF   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE0   0080           01849                 movwf INDF                                              ;Save to QUEUE
0CE1   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01851                 count = count + 1
0CE2   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CE3   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE4   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE5   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE6   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CE7   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0CE8   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0CE9   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEA   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CEB   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CEC   0080           01849                 movwf INDF                                              ;Save to QUEUE
0CED   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01851                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CEE   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CEF   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF0   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF1   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF2   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CF3   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0CF4   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0CF5   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF6   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF7   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF8   0080           01849                 movwf INDF                                              ;Save to QUEUE
0CF9   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01851                 count = count + 1
0CFA   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0CFB   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFC   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFD   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFE   0080           01843                 movwf INDF                                              ;Save to QUEUE
0CFF   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D00   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D01   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D02   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D03   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D04   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D05   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01851                 count = count + 1
0D06   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D07   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D08   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D09   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D0A   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D0B   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D0C   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D0D   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0E   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0F   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D10   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D11   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01851                 count = count + 1
0D12   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D13   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D14   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D15   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D16   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D17   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D18   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D19   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1A   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1B   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D1C   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D1D   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01851                 count = count + 1
0D1E   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D1F   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D20   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D21   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D22   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D23   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D24   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D25   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D26   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D27   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D28   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D29   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01851                 count = count + 1
0D2A   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D2B   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2C   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2D   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2E   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D2F   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D30   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D31   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D32   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D33   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D34   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D35   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01851                 count = count + 1
0D36   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D37   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D38   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D39   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D3A   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D3B   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D3C   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D3D   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3E   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3F   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D40   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D41   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01851                 count = count + 1
0D42   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D43   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D44   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D45   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D46   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D47   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D48   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D49   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4A   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4B   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D4C   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D4D   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01851                 count = count + 1
0D4E   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D4F   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D50   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D51   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D52   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D53   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D54   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D55   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D56   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D57   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D58   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D59   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01851                 count = count + 1
0D5A   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D5B   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5C   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5D   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5E   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D5F   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D60   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D61   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D62   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D63   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D64   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D65   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01851                 count = count + 1
0D66   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D67   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D68   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D69   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D6A   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D6B   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D6C   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D6D   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6E   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6F   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D70   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D71   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01851                 count = count + 1
0D72   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D73   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D74   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D75   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D76   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D77   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D78   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D79   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7A   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7B   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D7C   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D7D   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01851                 count = count + 1
0D7E   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D7F   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D80   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D81   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D82   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D83   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D84   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D85   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D86   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D87   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D88   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D89   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01851                 count = count + 1
0D8A   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D8B   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8C   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8D   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8E   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D8F   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D90   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D91   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D92   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D93   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D94   0080           01849                 movwf INDF                                              ;Save to QUEUE
0D95   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01851                 count = count + 1
0D96   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0D97   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D98   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D99   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D9A   0080           01843                 movwf INDF                                              ;Save to QUEUE
0D9B   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0D9C   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0D9D   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9E   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9F   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DA0   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DA1   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01851                 count = count + 1
0DA2   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DA3   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA4   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA5   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA6   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DA7   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DA8   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DA9   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAA   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAB   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DAC   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DAD   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01851                 count = count + 1
0DAE   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DAF   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB0   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB1   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DB2   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DB3   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DB4   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DB5   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB6   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB7   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB8   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DB9   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01851                 count = count + 1
0DBA   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DBB   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBC   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBD   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBE   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DBF   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DC0   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DC1   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC2   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC3   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC4   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DC5   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01851                 count = count + 1
0DC6   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DC7   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC8   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC9   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DCA   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DCB   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DCC   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DCD   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCE   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCF   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD0   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DD1   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01851                 count = count + 1
0DD2   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DD3   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD4   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD5   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD6   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DD7   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DD8   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DD9   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDA   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDB   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DDC   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DDD   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01851                 count = count + 1
0DDE   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DDF   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE0   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE1   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DE2   0080           01843                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DE3   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DE4   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DE5   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE6   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE7   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE8   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DE9   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01851                 count = count + 1
0DEA   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DEB   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEC   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DED   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DEE   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DEF   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DF0   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DF1   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF2   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF3   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF4   0080           01849                 movwf INDF                                              ;Save to QUEUE
0DF5   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01851                 count = count + 1
0DF6   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0DF7   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF8   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF9   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DFA   0080           01843                 movwf INDF                                              ;Save to QUEUE
0DFB   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0DFC   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0DFD   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFE   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFF   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E00   0080           01849                 movwf INDF                                              ;Save to QUEUE
0E01   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01851                 count = count + 1
0E02   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0E03   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E04   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E05   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E06   0080           01843                 movwf INDF                                              ;Save to QUEUE
0E07   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0E08   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0E09   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0A   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0B   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E0C   0080           01849                 movwf INDF                                              ;Save to QUEUE
0E0D   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01851                 count = count + 1
0E0E   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0E0F   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E10   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E11   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E12   0080           01843                 movwf INDF                                              ;Save to QUEUE
0E13   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E14   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0E15   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E16   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E17   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E18   0080           01849                 movwf INDF                                              ;Save to QUEUE
0E19   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01851                 count = count + 1
0E1A   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0E1B   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1C   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1D   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1E   0080           01843                 movwf INDF                                              ;Save to QUEUE
0E1F   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0E20   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0E21   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E22   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E23   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E24   0080           01849                 movwf INDF                                              ;Save to QUEUE
0E25   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01851                 count = count + 1
0E26   0808           01839                 movf ADC_DATAPORT, W                    ;Sample Y
0E27   1409           01840                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E28   1009           01841                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E29   1489           01842                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E2A   0080           01843                 movwf INDF                                              ;Save to QUEUE
0E2B   0A84           01844                 incf FSR, F                                             ;Increment QUEUE pointer
0E2C   0808           01845                 movf ADC_DATAPORT, W                    ;Sample X
0E2D   1409           01846                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2E   1009           01847                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2F   1089           01848                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E30   0080           01849                 movwf INDF                                              ;Save to QUEUE
0E31   0A84           01850                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01851                 count = count + 1
                      01852         endw
0E32   0808           01853         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0E33   1409           01854         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E34   1009           01855         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E35   1489           01856         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0E36   0080           01857         movwf INDF                                                      ;Save to QUEUE
0E37   1384           01858         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0E38   0808           01859         movf ADC_DATAPORT, W                            ;Sample X
0E39   1409           01860         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E3A   1009           01861         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E3B   1089           01862         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0E3C   0080           01863         movwf INDF                                                      ;Save to QUEUE
0E3D   0384           01864         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01865         count = 1
                      01866         while count < BUFFERSIZE / 2
0E3E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E3F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E40   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E41   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E42   0080           01871                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E43   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E44   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E45   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E46   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E47   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E48   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E49   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01879                 count = count + 1
0E4A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E4B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E4E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E4F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E50   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E51   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E52   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E53   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E54   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E55   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01879                 count = count + 1
0E56   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E57   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E58   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E59   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E5A   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E5B   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E5C   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E5D   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5E   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5F   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E60   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E61   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01879                 count = count + 1
0E62   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E63   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E64   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E65   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E66   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E67   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E68   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E69   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6A   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6B   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E6C   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E6D   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01879                 count = count + 1
0E6E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E6F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E70   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E71   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E72   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E73   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E74   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E75   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E76   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E77   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E78   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E79   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01879                 count = count + 1
0E7A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E7B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E7F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E80   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E81   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E82   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E83   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E84   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E85   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01879                 count = count + 1
0E86   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E87   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E88   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E89   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E8A   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E8B   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E8C   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E8D   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8E   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8F   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E90   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E91   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01879                 count = count + 1
0E92   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E93   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E94   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E95   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E96   0080           01871                 movwf INDF                                              ;Save to QUEUE
0E97   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0E98   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0E99   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9A   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9B   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E9C   0080           01877                 movwf INDF                                              ;Save to QUEUE
0E9D   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01879                 count = count + 1
0E9E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0E9F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA0   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA1   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EA2   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EA3   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EA4   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EA5   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA6   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA7   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA8   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EA9   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01879                 count = count + 1
0EAA   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EAB   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAC   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAD   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAE   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EAF   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EB0   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EB1   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB2   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB3   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB4   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EB5   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01879                 count = count + 1
0EB6   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EB7   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB8   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB9   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EBA   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EBB   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EBC   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EBD   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBE   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBF   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EC0   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EC1   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01879                 count = count + 1
0EC2   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EC3   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC4   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC5   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EC6   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EC7   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EC8   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EC9   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECA   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECB   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ECC   0080           01877                 movwf INDF                                              ;Save to QUEUE
0ECD   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01879                 count = count + 1
0ECE   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0ECF   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED0   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED1   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ED2   0080           01871                 movwf INDF                                              ;Save to QUEUE
0ED3   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0ED4   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0ED5   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0ED6   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED7   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED8   0080           01877                 movwf INDF                                              ;Save to QUEUE
0ED9   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01879                 count = count + 1
0EDA   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EDB   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDC   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDD   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDE   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EDF   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EE0   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EE1   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE2   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE3   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE4   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EE5   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01879                 count = count + 1
0EE6   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EE7   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE8   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE9   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EEA   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EEB   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EEC   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EED   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEE   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEF   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EF0   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EF1   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01879                 count = count + 1
0EF2   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EF3   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF4   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF5   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF6   0080           01871                 movwf INDF                                              ;Save to QUEUE
0EF7   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0EF8   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0EF9   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFA   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFB   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EFC   0080           01877                 movwf INDF                                              ;Save to QUEUE
0EFD   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01879                 count = count + 1
0EFE   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0EFF   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F00   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F01   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F02   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F03   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F04   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F05   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F06   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F07   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F08   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F09   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01879                 count = count + 1
0F0A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F0B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F0F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F10   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F11   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F12   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F13   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F14   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F15   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01879                 count = count + 1
0F16   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F17   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F18   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F19   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F1A   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F1B   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F1C   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F1D   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1E   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1F   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F20   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F21   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01879                 count = count + 1
0F22   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F23   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F24   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F25   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F26   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F27   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F28   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F29   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2A   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2B   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F2C   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F2D   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01879                 count = count + 1
0F2E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F2F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F30   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F31   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F32   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F33   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F34   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F35   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F36   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F37   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F38   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F39   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01879                 count = count + 1
0F3A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F3B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F3F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F40   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F41   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F42   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F43   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F44   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F45   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01879                 count = count + 1
0F46   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F47   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F48   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F49   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F4A   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F4B   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F4C   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F4D   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4E   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4F   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F50   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F51   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01879                 count = count + 1
0F52   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F53   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F54   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F55   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F56   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F57   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F58   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F59   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5A   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5B   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F5C   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F5D   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01879                 count = count + 1
0F5E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F5F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F60   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F61   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F62   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F63   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F64   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F65   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F66   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F67   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F68   0080           01877                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F69   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01879                 count = count + 1
0F6A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F6B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F6F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F70   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F71   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F72   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F73   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F74   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F75   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01879                 count = count + 1
0F76   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F77   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F78   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F79   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F7A   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F7B   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F7C   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F7D   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7E   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7F   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F80   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F81   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01879                 count = count + 1
0F82   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F83   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F84   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F85   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F86   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F87   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F88   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F89   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8A   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8B   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F8C   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F8D   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01879                 count = count + 1
0F8E   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F8F   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F90   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F91   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F92   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F93   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0F94   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0F95   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F96   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F97   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F98   0080           01877                 movwf INDF                                              ;Save to QUEUE
0F99   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            01879                 count = count + 1
0F9A   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0F9B   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9C   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9D   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F9E   0080           01871                 movwf INDF                                              ;Save to QUEUE
0F9F   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0FA0   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0FA1   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA2   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA3   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA4   0080           01877                 movwf INDF                                              ;Save to QUEUE
0FA5   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01879                 count = count + 1
0FA6   0808           01867                 movf ADC_DATAPORT, W                    ;Sample Y
0FA7   1409           01868                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA8   1009           01869                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA9   1489           01870                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FAA   0080           01871                 movwf INDF                                              ;Save to QUEUE
0FAB   0384           01872                 decf FSR, F                                             ;Increment QUEUE pointer
0FAC   0808           01873                 movf ADC_DATAPORT, W                    ;Sample X
0FAD   1409           01874                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAE   1009           01875                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAF   1089           01876                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FB0   0080           01877                 movwf INDF                                              ;Save to QUEUE
0FB1   0384           01878                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01879                 count = count + 1
                      01880         endw
0FB2   0808           01881         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0FB3   1409           01882         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0FB4   118A           01883         bcf PCLATH, 3                                           ;insure correct program memory page
0FB5   120A           01884         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0FB6   290F           01885         goto ADCShutdown
                      01886         
                      01887 ;Fast sample
                      01888 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      01889 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      01890 ;-----------------------------------------------------------------------------
0FB7                  01891 Sample833k
0FB7   1009           01892         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01893         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0FB8   3020               M     movlw BUFFERMIN
0FB9   0084               M     movwf FSR
0FBA   0000           01894         nop
  0000                01895         local count
  00000001            01896         count = 1
                      01897         while count < BUFFERSIZE
0FBB   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FBC   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBD   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FBE   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FBF   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FC0   0000           01903                 nop                                                             ;Wait a cycle
  00000002            01904                 count = count + 1
0FC1   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FC2   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC3   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC4   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FC5   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FC6   0000           01903                 nop                                                             ;Wait a cycle
  00000003            01904                 count = count + 1
0FC7   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FC8   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC9   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCA   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FCB   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FCC   0000           01903                 nop                                                             ;Wait a cycle
  00000004            01904                 count = count + 1
0FCD   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FCE   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCF   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD0   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FD1   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FD2   0000           01903                 nop                                                             ;Wait a cycle
  00000005            01904                 count = count + 1
0FD3   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FD4   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD5   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD6   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FD7   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FD8   0000           01903                 nop                                                             ;Wait a cycle
  00000006            01904                 count = count + 1
0FD9   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FDA   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDB   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDC   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FDD   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FDE   0000           01903                 nop                                                             ;Wait a cycle
  00000007            01904                 count = count + 1
0FDF   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FE0   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE1   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE2   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FE3   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FE4   0000           01903                 nop                                                             ;Wait a cycle
  00000008            01904                 count = count + 1
0FE5   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FE6   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE7   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE8   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FE9   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FEA   0000           01903                 nop                                                             ;Wait a cycle
  00000009            01904                 count = count + 1
0FEB   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FEC   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FED   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEE   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FEF   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FF0   0000           01903                 nop                                                             ;Wait a cycle
  0000000A            01904                 count = count + 1
0FF1   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FF2   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF3   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF4   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FF5   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FF6   0000           01903                 nop                                                             ;Wait a cycle
  0000000B            01904                 count = count + 1
0FF7   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FF8   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF9   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFA   0080           01901                 movwf INDF                                              ;Save to QUEUE
0FFB   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
0FFC   0000           01903                 nop                                                             ;Wait a cycle
  0000000C            01904                 count = count + 1
0FFD   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
0FFE   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFF   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1000   0080           01901                 movwf INDF                                              ;Save to QUEUE
1001   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1002   0000           01903                 nop                                                             ;Wait a cycle
  0000000D            01904                 count = count + 1
1003   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1004   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1005   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1006   0080           01901                 movwf INDF                                              ;Save to QUEUE
1007   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1008   0000           01903                 nop                                                             ;Wait a cycle
  0000000E            01904                 count = count + 1
1009   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
100A   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100B   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100C   0080           01901                 movwf INDF                                              ;Save to QUEUE
100D   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
100E   0000           01903                 nop                                                             ;Wait a cycle
  0000000F            01904                 count = count + 1
100F   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1010   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1011   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1012   0080           01901                 movwf INDF                                              ;Save to QUEUE
1013   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1014   0000           01903                 nop                                                             ;Wait a cycle
  00000010            01904                 count = count + 1
1015   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1016   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1017   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1018   0080           01901                 movwf INDF                                              ;Save to QUEUE
1019   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
101A   0000           01903                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000011            01904                 count = count + 1
101B   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
101C   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101D   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101E   0080           01901                 movwf INDF                                              ;Save to QUEUE
101F   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1020   0000           01903                 nop                                                             ;Wait a cycle
  00000012            01904                 count = count + 1
1021   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1022   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1023   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1024   0080           01901                 movwf INDF                                              ;Save to QUEUE
1025   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1026   0000           01903                 nop                                                             ;Wait a cycle
  00000013            01904                 count = count + 1
1027   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1028   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1029   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102A   0080           01901                 movwf INDF                                              ;Save to QUEUE
102B   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
102C   0000           01903                 nop                                                             ;Wait a cycle
  00000014            01904                 count = count + 1
102D   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
102E   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102F   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1030   0080           01901                 movwf INDF                                              ;Save to QUEUE
1031   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1032   0000           01903                 nop                                                             ;Wait a cycle
  00000015            01904                 count = count + 1
1033   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1034   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1035   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1036   0080           01901                 movwf INDF                                              ;Save to QUEUE
1037   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1038   0000           01903                 nop                                                             ;Wait a cycle
  00000016            01904                 count = count + 1
1039   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
103A   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103B   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103C   0080           01901                 movwf INDF                                              ;Save to QUEUE
103D   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
103E   0000           01903                 nop                                                             ;Wait a cycle
  00000017            01904                 count = count + 1
103F   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1040   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1041   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1042   0080           01901                 movwf INDF                                              ;Save to QUEUE
1043   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1044   0000           01903                 nop                                                             ;Wait a cycle
  00000018            01904                 count = count + 1
1045   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1046   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1047   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1048   0080           01901                 movwf INDF                                              ;Save to QUEUE
1049   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
104A   0000           01903                 nop                                                             ;Wait a cycle
  00000019            01904                 count = count + 1
104B   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
104C   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104D   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104E   0080           01901                 movwf INDF                                              ;Save to QUEUE
104F   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1050   0000           01903                 nop                                                             ;Wait a cycle
  0000001A            01904                 count = count + 1
1051   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1052   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1053   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1054   0080           01901                 movwf INDF                                              ;Save to QUEUE
1055   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1056   0000           01903                 nop                                                             ;Wait a cycle
  0000001B            01904                 count = count + 1
1057   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1058   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1059   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105A   0080           01901                 movwf INDF                                              ;Save to QUEUE
105B   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
105C   0000           01903                 nop                                                             ;Wait a cycle
  0000001C            01904                 count = count + 1
105D   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
105E   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105F   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1060   0080           01901                 movwf INDF                                              ;Save to QUEUE
1061   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1062   0000           01903                 nop                                                             ;Wait a cycle
  0000001D            01904                 count = count + 1
1063   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1064   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1065   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1066   0080           01901                 movwf INDF                                              ;Save to QUEUE
1067   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1068   0000           01903                 nop                                                             ;Wait a cycle
  0000001E            01904                 count = count + 1
1069   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
106A   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106B   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106C   0080           01901                 movwf INDF                                              ;Save to QUEUE
106D   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
106E   0000           01903                 nop                                                             ;Wait a cycle
  0000001F            01904                 count = count + 1
106F   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1070   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1071   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1072   0080           01901                 movwf INDF                                              ;Save to QUEUE
1073   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1074   0000           01903                 nop                                                             ;Wait a cycle
  00000020            01904                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1075   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1076   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1077   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1078   0080           01901                 movwf INDF                                              ;Save to QUEUE
1079   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
107A   0000           01903                 nop                                                             ;Wait a cycle
  00000021            01904                 count = count + 1
107B   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
107C   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107D   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107E   0080           01901                 movwf INDF                                              ;Save to QUEUE
107F   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1080   0000           01903                 nop                                                             ;Wait a cycle
  00000022            01904                 count = count + 1
1081   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1082   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1083   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1084   0080           01901                 movwf INDF                                              ;Save to QUEUE
1085   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1086   0000           01903                 nop                                                             ;Wait a cycle
  00000023            01904                 count = count + 1
1087   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1088   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1089   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108A   0080           01901                 movwf INDF                                              ;Save to QUEUE
108B   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
108C   0000           01903                 nop                                                             ;Wait a cycle
  00000024            01904                 count = count + 1
108D   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
108E   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108F   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1090   0080           01901                 movwf INDF                                              ;Save to QUEUE
1091   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1092   0000           01903                 nop                                                             ;Wait a cycle
  00000025            01904                 count = count + 1
1093   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1094   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1095   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1096   0080           01901                 movwf INDF                                              ;Save to QUEUE
1097   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1098   0000           01903                 nop                                                             ;Wait a cycle
  00000026            01904                 count = count + 1
1099   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
109A   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109B   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109C   0080           01901                 movwf INDF                                              ;Save to QUEUE
109D   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
109E   0000           01903                 nop                                                             ;Wait a cycle
  00000027            01904                 count = count + 1
109F   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10A0   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A1   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A2   0080           01901                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10A3   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10A4   0000           01903                 nop                                                             ;Wait a cycle
  00000028            01904                 count = count + 1
10A5   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10A6   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A7   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A8   0080           01901                 movwf INDF                                              ;Save to QUEUE
10A9   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10AA   0000           01903                 nop                                                             ;Wait a cycle
  00000029            01904                 count = count + 1
10AB   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10AC   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AD   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AE   0080           01901                 movwf INDF                                              ;Save to QUEUE
10AF   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10B0   0000           01903                 nop                                                             ;Wait a cycle
  0000002A            01904                 count = count + 1
10B1   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10B2   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B3   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B4   0080           01901                 movwf INDF                                              ;Save to QUEUE
10B5   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10B6   0000           01903                 nop                                                             ;Wait a cycle
  0000002B            01904                 count = count + 1
10B7   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10B8   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B9   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BA   0080           01901                 movwf INDF                                              ;Save to QUEUE
10BB   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10BC   0000           01903                 nop                                                             ;Wait a cycle
  0000002C            01904                 count = count + 1
10BD   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10BE   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BF   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C0   0080           01901                 movwf INDF                                              ;Save to QUEUE
10C1   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10C2   0000           01903                 nop                                                             ;Wait a cycle
  0000002D            01904                 count = count + 1
10C3   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10C4   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C5   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C6   0080           01901                 movwf INDF                                              ;Save to QUEUE
10C7   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10C8   0000           01903                 nop                                                             ;Wait a cycle
  0000002E            01904                 count = count + 1
10C9   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10CA   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CB   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CC   0080           01901                 movwf INDF                                              ;Save to QUEUE
10CD   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10CE   0000           01903                 nop                                                             ;Wait a cycle
  0000002F            01904                 count = count + 1
10CF   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10D0   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D1   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D2   0080           01901                 movwf INDF                                              ;Save to QUEUE
10D3   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10D4   0000           01903                 nop                                                             ;Wait a cycle
  00000030            01904                 count = count + 1
10D5   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10D6   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D7   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D8   0080           01901                 movwf INDF                                              ;Save to QUEUE
10D9   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10DA   0000           01903                 nop                                                             ;Wait a cycle
  00000031            01904                 count = count + 1
10DB   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10DC   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DD   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DE   0080           01901                 movwf INDF                                              ;Save to QUEUE
10DF   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10E0   0000           01903                 nop                                                             ;Wait a cycle
  00000032            01904                 count = count + 1
10E1   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10E2   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E3   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E4   0080           01901                 movwf INDF                                              ;Save to QUEUE
10E5   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10E6   0000           01903                 nop                                                             ;Wait a cycle
  00000033            01904                 count = count + 1
10E7   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10E8   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E9   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EA   0080           01901                 movwf INDF                                              ;Save to QUEUE
10EB   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10EC   0000           01903                 nop                                                             ;Wait a cycle
  00000034            01904                 count = count + 1
10ED   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10EE   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EF   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F0   0080           01901                 movwf INDF                                              ;Save to QUEUE
10F1   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10F2   0000           01903                 nop                                                             ;Wait a cycle
  00000035            01904                 count = count + 1
10F3   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10F4   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F5   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F6   0080           01901                 movwf INDF                                              ;Save to QUEUE
10F7   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
10F8   0000           01903                 nop                                                             ;Wait a cycle
  00000036            01904                 count = count + 1
10F9   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
10FA   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FB   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FC   0080           01901                 movwf INDF                                              ;Save to QUEUE
10FD   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10FE   0000           01903                 nop                                                             ;Wait a cycle
  00000037            01904                 count = count + 1
10FF   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1100   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1101   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1102   0080           01901                 movwf INDF                                              ;Save to QUEUE
1103   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1104   0000           01903                 nop                                                             ;Wait a cycle
  00000038            01904                 count = count + 1
1105   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1106   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1107   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1108   0080           01901                 movwf INDF                                              ;Save to QUEUE
1109   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
110A   0000           01903                 nop                                                             ;Wait a cycle
  00000039            01904                 count = count + 1
110B   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
110C   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110D   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110E   0080           01901                 movwf INDF                                              ;Save to QUEUE
110F   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1110   0000           01903                 nop                                                             ;Wait a cycle
  0000003A            01904                 count = count + 1
1111   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1112   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1113   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1114   0080           01901                 movwf INDF                                              ;Save to QUEUE
1115   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1116   0000           01903                 nop                                                             ;Wait a cycle
  0000003B            01904                 count = count + 1
1117   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1118   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1119   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111A   0080           01901                 movwf INDF                                              ;Save to QUEUE
111B   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
111C   0000           01903                 nop                                                             ;Wait a cycle
  0000003C            01904                 count = count + 1
111D   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
111E   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111F   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1120   0080           01901                 movwf INDF                                              ;Save to QUEUE
1121   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1122   0000           01903                 nop                                                             ;Wait a cycle
  0000003D            01904                 count = count + 1
1123   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1124   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1125   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1126   0080           01901                 movwf INDF                                              ;Save to QUEUE
1127   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1128   0000           01903                 nop                                                             ;Wait a cycle
  0000003E            01904                 count = count + 1
1129   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
112A   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

112B   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112C   0080           01901                 movwf INDF                                              ;Save to QUEUE
112D   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
112E   0000           01903                 nop                                                             ;Wait a cycle
  0000003F            01904                 count = count + 1
112F   0808           01898                 movf ADC_DATAPORT, W                    ;Sample
1130   1409           01899                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1131   1009           01900                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1132   0080           01901                 movwf INDF                                              ;Save to QUEUE
1133   0A84           01902                 incf FSR, F                                             ;Increment QUEUE pointer
1134   0000           01903                 nop                                                             ;Wait a cycle
  00000040            01904                 count = count + 1
                      01905         endw
1135   0808           01906         movf ADC_DATAPORT, W
1136   1409           01907         bsf ADC_CONTROLPORT, RDD
1137   1009           01908         bcf ADC_CONTROLPORT, RDD
1138   0080           01909         movwf INDF
1139   1784           01910         bsf FSR, 7                                                      ;goto bank 2
113A   0000           01911         nop                                                                     ;Wait a cycle
  00000001            01912         count = 1
                      01913         while count < BUFFERSIZE
113B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
113C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113E   0080           01917                 movwf INDF                                              ;Save to QUEUE
113F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1140   0000           01919                 nop                                                             ;Wait a cycle
  00000002            01920                 count = count + 1
1141   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1142   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1143   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1144   0080           01917                 movwf INDF                                              ;Save to QUEUE
1145   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1146   0000           01919                 nop                                                             ;Wait a cycle
  00000003            01920                 count = count + 1
1147   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1148   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1149   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114A   0080           01917                 movwf INDF                                              ;Save to QUEUE
114B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
114C   0000           01919                 nop                                                             ;Wait a cycle
  00000004            01920                 count = count + 1
114D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
114E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1150   0080           01917                 movwf INDF                                              ;Save to QUEUE
1151   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1152   0000           01919                 nop                                                             ;Wait a cycle
  00000005            01920                 count = count + 1
1153   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1154   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1155   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1156   0080           01917                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1157   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1158   0000           01919                 nop                                                             ;Wait a cycle
  00000006            01920                 count = count + 1
1159   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
115A   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115B   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115C   0080           01917                 movwf INDF                                              ;Save to QUEUE
115D   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
115E   0000           01919                 nop                                                             ;Wait a cycle
  00000007            01920                 count = count + 1
115F   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1160   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1161   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1162   0080           01917                 movwf INDF                                              ;Save to QUEUE
1163   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1164   0000           01919                 nop                                                             ;Wait a cycle
  00000008            01920                 count = count + 1
1165   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1166   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1167   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1168   0080           01917                 movwf INDF                                              ;Save to QUEUE
1169   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
116A   0000           01919                 nop                                                             ;Wait a cycle
  00000009            01920                 count = count + 1
116B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
116C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116E   0080           01917                 movwf INDF                                              ;Save to QUEUE
116F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1170   0000           01919                 nop                                                             ;Wait a cycle
  0000000A            01920                 count = count + 1
1171   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1172   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1173   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1174   0080           01917                 movwf INDF                                              ;Save to QUEUE
1175   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1176   0000           01919                 nop                                                             ;Wait a cycle
  0000000B            01920                 count = count + 1
1177   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1178   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1179   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117A   0080           01917                 movwf INDF                                              ;Save to QUEUE
117B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
117C   0000           01919                 nop                                                             ;Wait a cycle
  0000000C            01920                 count = count + 1
117D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
117E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1180   0080           01917                 movwf INDF                                              ;Save to QUEUE
1181   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1182   0000           01919                 nop                                                             ;Wait a cycle
  0000000D            01920                 count = count + 1
1183   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1184   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1185   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1186   0080           01917                 movwf INDF                                              ;Save to QUEUE
1187   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1188   0000           01919                 nop                                                             ;Wait a cycle
  0000000E            01920                 count = count + 1
1189   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
118A   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118B   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118C   0080           01917                 movwf INDF                                              ;Save to QUEUE
118D   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
118E   0000           01919                 nop                                                             ;Wait a cycle
  0000000F            01920                 count = count + 1
118F   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1190   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1191   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1192   0080           01917                 movwf INDF                                              ;Save to QUEUE
1193   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1194   0000           01919                 nop                                                             ;Wait a cycle
  00000010            01920                 count = count + 1
1195   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1196   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1197   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1198   0080           01917                 movwf INDF                                              ;Save to QUEUE
1199   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
119A   0000           01919                 nop                                                             ;Wait a cycle
  00000011            01920                 count = count + 1
119B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
119C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119E   0080           01917                 movwf INDF                                              ;Save to QUEUE
119F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11A0   0000           01919                 nop                                                             ;Wait a cycle
  00000012            01920                 count = count + 1
11A1   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11A2   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A3   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A4   0080           01917                 movwf INDF                                              ;Save to QUEUE
11A5   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11A6   0000           01919                 nop                                                             ;Wait a cycle
  00000013            01920                 count = count + 1
11A7   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11A8   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A9   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AA   0080           01917                 movwf INDF                                              ;Save to QUEUE
11AB   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11AC   0000           01919                 nop                                                             ;Wait a cycle
  00000014            01920                 count = count + 1
11AD   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11AE   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AF   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B0   0080           01917                 movwf INDF                                              ;Save to QUEUE
11B1   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11B2   0000           01919                 nop                                                             ;Wait a cycle
  00000015            01920                 count = count + 1
11B3   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11B4   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B5   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B6   0080           01917                 movwf INDF                                              ;Save to QUEUE
11B7   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11B8   0000           01919                 nop                                                             ;Wait a cycle
  00000016            01920                 count = count + 1
11B9   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11BA   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BB   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BC   0080           01917                 movwf INDF                                              ;Save to QUEUE
11BD   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11BE   0000           01919                 nop                                                             ;Wait a cycle
  00000017            01920                 count = count + 1
11BF   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11C0   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C1   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C2   0080           01917                 movwf INDF                                              ;Save to QUEUE
11C3   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11C4   0000           01919                 nop                                                             ;Wait a cycle
  00000018            01920                 count = count + 1
11C5   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11C6   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C7   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C8   0080           01917                 movwf INDF                                              ;Save to QUEUE
11C9   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11CA   0000           01919                 nop                                                             ;Wait a cycle
  00000019            01920                 count = count + 1
11CB   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11CC   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CD   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CE   0080           01917                 movwf INDF                                              ;Save to QUEUE
11CF   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11D0   0000           01919                 nop                                                             ;Wait a cycle
  0000001A            01920                 count = count + 1
11D1   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11D2   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D3   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D4   0080           01917                 movwf INDF                                              ;Save to QUEUE
11D5   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11D6   0000           01919                 nop                                                             ;Wait a cycle
  0000001B            01920                 count = count + 1
11D7   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11D8   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D9   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DA   0080           01917                 movwf INDF                                              ;Save to QUEUE
11DB   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11DC   0000           01919                 nop                                                             ;Wait a cycle
  0000001C            01920                 count = count + 1
11DD   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11DE   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11DF   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E0   0080           01917                 movwf INDF                                              ;Save to QUEUE
11E1   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11E2   0000           01919                 nop                                                             ;Wait a cycle
  0000001D            01920                 count = count + 1
11E3   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11E4   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E5   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E6   0080           01917                 movwf INDF                                              ;Save to QUEUE
11E7   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11E8   0000           01919                 nop                                                             ;Wait a cycle
  0000001E            01920                 count = count + 1
11E9   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11EA   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EB   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EC   0080           01917                 movwf INDF                                              ;Save to QUEUE
11ED   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11EE   0000           01919                 nop                                                             ;Wait a cycle
  0000001F            01920                 count = count + 1
11EF   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11F0   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F1   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F2   0080           01917                 movwf INDF                                              ;Save to QUEUE
11F3   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11F4   0000           01919                 nop                                                             ;Wait a cycle
  00000020            01920                 count = count + 1
11F5   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11F6   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F7   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F8   0080           01917                 movwf INDF                                              ;Save to QUEUE
11F9   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
11FA   0000           01919                 nop                                                             ;Wait a cycle
  00000021            01920                 count = count + 1
11FB   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
11FC   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FD   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FE   0080           01917                 movwf INDF                                              ;Save to QUEUE
11FF   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1200   0000           01919                 nop                                                             ;Wait a cycle
  00000022            01920                 count = count + 1
1201   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1202   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1203   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1204   0080           01917                 movwf INDF                                              ;Save to QUEUE
1205   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1206   0000           01919                 nop                                                             ;Wait a cycle
  00000023            01920                 count = count + 1
1207   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1208   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1209   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120A   0080           01917                 movwf INDF                                              ;Save to QUEUE
120B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
120C   0000           01919                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000024            01920                 count = count + 1
120D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
120E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1210   0080           01917                 movwf INDF                                              ;Save to QUEUE
1211   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1212   0000           01919                 nop                                                             ;Wait a cycle
  00000025            01920                 count = count + 1
1213   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1214   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1215   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1216   0080           01917                 movwf INDF                                              ;Save to QUEUE
1217   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1218   0000           01919                 nop                                                             ;Wait a cycle
  00000026            01920                 count = count + 1
1219   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
121A   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121B   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121C   0080           01917                 movwf INDF                                              ;Save to QUEUE
121D   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
121E   0000           01919                 nop                                                             ;Wait a cycle
  00000027            01920                 count = count + 1
121F   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1220   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1221   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1222   0080           01917                 movwf INDF                                              ;Save to QUEUE
1223   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1224   0000           01919                 nop                                                             ;Wait a cycle
  00000028            01920                 count = count + 1
1225   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1226   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1227   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1228   0080           01917                 movwf INDF                                              ;Save to QUEUE
1229   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
122A   0000           01919                 nop                                                             ;Wait a cycle
  00000029            01920                 count = count + 1
122B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
122C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122E   0080           01917                 movwf INDF                                              ;Save to QUEUE
122F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1230   0000           01919                 nop                                                             ;Wait a cycle
  0000002A            01920                 count = count + 1
1231   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1232   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1233   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1234   0080           01917                 movwf INDF                                              ;Save to QUEUE
1235   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1236   0000           01919                 nop                                                             ;Wait a cycle
  0000002B            01920                 count = count + 1
1237   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1238   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1239   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

123A   0080           01917                 movwf INDF                                              ;Save to QUEUE
123B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
123C   0000           01919                 nop                                                             ;Wait a cycle
  0000002C            01920                 count = count + 1
123D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
123E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1240   0080           01917                 movwf INDF                                              ;Save to QUEUE
1241   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1242   0000           01919                 nop                                                             ;Wait a cycle
  0000002D            01920                 count = count + 1
1243   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1244   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1245   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1246   0080           01917                 movwf INDF                                              ;Save to QUEUE
1247   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1248   0000           01919                 nop                                                             ;Wait a cycle
  0000002E            01920                 count = count + 1
1249   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
124A   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124B   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124C   0080           01917                 movwf INDF                                              ;Save to QUEUE
124D   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
124E   0000           01919                 nop                                                             ;Wait a cycle
  0000002F            01920                 count = count + 1
124F   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1250   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1251   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1252   0080           01917                 movwf INDF                                              ;Save to QUEUE
1253   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1254   0000           01919                 nop                                                             ;Wait a cycle
  00000030            01920                 count = count + 1
1255   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1256   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1257   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1258   0080           01917                 movwf INDF                                              ;Save to QUEUE
1259   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
125A   0000           01919                 nop                                                             ;Wait a cycle
  00000031            01920                 count = count + 1
125B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
125C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125E   0080           01917                 movwf INDF                                              ;Save to QUEUE
125F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1260   0000           01919                 nop                                                             ;Wait a cycle
  00000032            01920                 count = count + 1
1261   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1262   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1263   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1264   0080           01917                 movwf INDF                                              ;Save to QUEUE
1265   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1266   0000           01919                 nop                                                             ;Wait a cycle
  00000033            01920                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1267   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1268   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1269   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126A   0080           01917                 movwf INDF                                              ;Save to QUEUE
126B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
126C   0000           01919                 nop                                                             ;Wait a cycle
  00000034            01920                 count = count + 1
126D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
126E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1270   0080           01917                 movwf INDF                                              ;Save to QUEUE
1271   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1272   0000           01919                 nop                                                             ;Wait a cycle
  00000035            01920                 count = count + 1
1273   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1274   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1275   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1276   0080           01917                 movwf INDF                                              ;Save to QUEUE
1277   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1278   0000           01919                 nop                                                             ;Wait a cycle
  00000036            01920                 count = count + 1
1279   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
127A   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127B   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127C   0080           01917                 movwf INDF                                              ;Save to QUEUE
127D   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
127E   0000           01919                 nop                                                             ;Wait a cycle
  00000037            01920                 count = count + 1
127F   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1280   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1281   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1282   0080           01917                 movwf INDF                                              ;Save to QUEUE
1283   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1284   0000           01919                 nop                                                             ;Wait a cycle
  00000038            01920                 count = count + 1
1285   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1286   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1287   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1288   0080           01917                 movwf INDF                                              ;Save to QUEUE
1289   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
128A   0000           01919                 nop                                                             ;Wait a cycle
  00000039            01920                 count = count + 1
128B   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
128C   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128D   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128E   0080           01917                 movwf INDF                                              ;Save to QUEUE
128F   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1290   0000           01919                 nop                                                             ;Wait a cycle
  0000003A            01920                 count = count + 1
1291   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1292   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1293   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1294   0080           01917                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1295   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
1296   0000           01919                 nop                                                             ;Wait a cycle
  0000003B            01920                 count = count + 1
1297   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
1298   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1299   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129A   0080           01917                 movwf INDF                                              ;Save to QUEUE
129B   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
129C   0000           01919                 nop                                                             ;Wait a cycle
  0000003C            01920                 count = count + 1
129D   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
129E   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129F   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A0   0080           01917                 movwf INDF                                              ;Save to QUEUE
12A1   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
12A2   0000           01919                 nop                                                             ;Wait a cycle
  0000003D            01920                 count = count + 1
12A3   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
12A4   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A5   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A6   0080           01917                 movwf INDF                                              ;Save to QUEUE
12A7   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
12A8   0000           01919                 nop                                                             ;Wait a cycle
  0000003E            01920                 count = count + 1
12A9   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
12AA   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AB   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AC   0080           01917                 movwf INDF                                              ;Save to QUEUE
12AD   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
12AE   0000           01919                 nop                                                             ;Wait a cycle
  0000003F            01920                 count = count + 1
12AF   0808           01914                 movf ADC_DATAPORT, W                    ;Sample
12B0   1409           01915                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B1   1009           01916                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B2   0080           01917                 movwf INDF                                              ;Save to QUEUE
12B3   0384           01918                 decf FSR, F                                             ;Increment QUEUE pointer
12B4   0000           01919                 nop                                                             ;Wait a cycle
  00000040            01920                 count = count + 1
                      01921         endw
12B5   0808           01922         movf ADC_DATAPORT, W
12B6   1409           01923         bsf ADC_CONTROLPORT, RDD
12B7   1009           01924         bcf ADC_CONTROLPORT, RDD
12B8   0080           01925         movwf INDF
12B9   1783           01926         bsf STATUS, IRP                                         ;goto bank 4
12BA   0000           01927         nop                                                                     ;Wait a cycle
  00000001            01928         count = 1
                      01929         while count < D'44'
12BB   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12BC   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BD   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BE   0080           01933                 movwf INDF                                              ;Save to QUEUE
12BF   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12C0   0000           01935                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            01936                 count = count + 1
12C1   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12C2   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C3   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C4   0080           01933                 movwf INDF                                              ;Save to QUEUE
12C5   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12C6   0000           01935                 nop                                                             ;Wait a cycle
  00000003            01936                 count = count + 1
12C7   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12C8   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C9   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CA   0080           01933                 movwf INDF                                              ;Save to QUEUE
12CB   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12CC   0000           01935                 nop                                                             ;Wait a cycle
  00000004            01936                 count = count + 1
12CD   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12CE   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CF   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D0   0080           01933                 movwf INDF                                              ;Save to QUEUE
12D1   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12D2   0000           01935                 nop                                                             ;Wait a cycle
  00000005            01936                 count = count + 1
12D3   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12D4   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D5   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D6   0080           01933                 movwf INDF                                              ;Save to QUEUE
12D7   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12D8   0000           01935                 nop                                                             ;Wait a cycle
  00000006            01936                 count = count + 1
12D9   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12DA   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DB   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DC   0080           01933                 movwf INDF                                              ;Save to QUEUE
12DD   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12DE   0000           01935                 nop                                                             ;Wait a cycle
  00000007            01936                 count = count + 1
12DF   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12E0   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E1   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E2   0080           01933                 movwf INDF                                              ;Save to QUEUE
12E3   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12E4   0000           01935                 nop                                                             ;Wait a cycle
  00000008            01936                 count = count + 1
12E5   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12E6   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E7   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E8   0080           01933                 movwf INDF                                              ;Save to QUEUE
12E9   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12EA   0000           01935                 nop                                                             ;Wait a cycle
  00000009            01936                 count = count + 1
12EB   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12EC   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12ED   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12EE   0080           01933                 movwf INDF                                              ;Save to QUEUE
12EF   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12F0   0000           01935                 nop                                                             ;Wait a cycle
  0000000A            01936                 count = count + 1
12F1   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12F2   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F3   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F4   0080           01933                 movwf INDF                                              ;Save to QUEUE
12F5   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12F6   0000           01935                 nop                                                             ;Wait a cycle
  0000000B            01936                 count = count + 1
12F7   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12F8   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F9   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FA   0080           01933                 movwf INDF                                              ;Save to QUEUE
12FB   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
12FC   0000           01935                 nop                                                             ;Wait a cycle
  0000000C            01936                 count = count + 1
12FD   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
12FE   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FF   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1300   0080           01933                 movwf INDF                                              ;Save to QUEUE
1301   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1302   0000           01935                 nop                                                             ;Wait a cycle
  0000000D            01936                 count = count + 1
1303   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1304   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1305   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1306   0080           01933                 movwf INDF                                              ;Save to QUEUE
1307   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1308   0000           01935                 nop                                                             ;Wait a cycle
  0000000E            01936                 count = count + 1
1309   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
130A   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130B   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130C   0080           01933                 movwf INDF                                              ;Save to QUEUE
130D   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
130E   0000           01935                 nop                                                             ;Wait a cycle
  0000000F            01936                 count = count + 1
130F   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1310   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1311   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1312   0080           01933                 movwf INDF                                              ;Save to QUEUE
1313   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1314   0000           01935                 nop                                                             ;Wait a cycle
  00000010            01936                 count = count + 1
1315   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1316   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1317   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1318   0080           01933                 movwf INDF                                              ;Save to QUEUE
1319   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
131A   0000           01935                 nop                                                             ;Wait a cycle
  00000011            01936                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

131B   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
131C   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131D   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131E   0080           01933                 movwf INDF                                              ;Save to QUEUE
131F   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1320   0000           01935                 nop                                                             ;Wait a cycle
  00000012            01936                 count = count + 1
1321   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1322   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1323   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1324   0080           01933                 movwf INDF                                              ;Save to QUEUE
1325   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1326   0000           01935                 nop                                                             ;Wait a cycle
  00000013            01936                 count = count + 1
1327   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1328   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1329   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132A   0080           01933                 movwf INDF                                              ;Save to QUEUE
132B   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
132C   0000           01935                 nop                                                             ;Wait a cycle
  00000014            01936                 count = count + 1
132D   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
132E   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132F   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1330   0080           01933                 movwf INDF                                              ;Save to QUEUE
1331   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1332   0000           01935                 nop                                                             ;Wait a cycle
  00000015            01936                 count = count + 1
1333   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1334   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1335   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1336   0080           01933                 movwf INDF                                              ;Save to QUEUE
1337   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1338   0000           01935                 nop                                                             ;Wait a cycle
  00000016            01936                 count = count + 1
1339   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
133A   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133B   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133C   0080           01933                 movwf INDF                                              ;Save to QUEUE
133D   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
133E   0000           01935                 nop                                                             ;Wait a cycle
  00000017            01936                 count = count + 1
133F   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1340   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1341   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1342   0080           01933                 movwf INDF                                              ;Save to QUEUE
1343   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1344   0000           01935                 nop                                                             ;Wait a cycle
  00000018            01936                 count = count + 1
1345   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1346   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1347   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1348   0080           01933                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1349   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
134A   0000           01935                 nop                                                             ;Wait a cycle
  00000019            01936                 count = count + 1
134B   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
134C   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134D   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134E   0080           01933                 movwf INDF                                              ;Save to QUEUE
134F   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1350   0000           01935                 nop                                                             ;Wait a cycle
  0000001A            01936                 count = count + 1
1351   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1352   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1353   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1354   0080           01933                 movwf INDF                                              ;Save to QUEUE
1355   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1356   0000           01935                 nop                                                             ;Wait a cycle
  0000001B            01936                 count = count + 1
1357   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1358   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1359   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135A   0080           01933                 movwf INDF                                              ;Save to QUEUE
135B   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
135C   0000           01935                 nop                                                             ;Wait a cycle
  0000001C            01936                 count = count + 1
135D   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
135E   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135F   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1360   0080           01933                 movwf INDF                                              ;Save to QUEUE
1361   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1362   0000           01935                 nop                                                             ;Wait a cycle
  0000001D            01936                 count = count + 1
1363   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1364   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1365   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1366   0080           01933                 movwf INDF                                              ;Save to QUEUE
1367   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1368   0000           01935                 nop                                                             ;Wait a cycle
  0000001E            01936                 count = count + 1
1369   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
136A   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136B   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136C   0080           01933                 movwf INDF                                              ;Save to QUEUE
136D   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
136E   0000           01935                 nop                                                             ;Wait a cycle
  0000001F            01936                 count = count + 1
136F   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1370   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1371   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1372   0080           01933                 movwf INDF                                              ;Save to QUEUE
1373   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1374   0000           01935                 nop                                                             ;Wait a cycle
  00000020            01936                 count = count + 1
1375   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1376   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1377   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1378   0080           01933                 movwf INDF                                              ;Save to QUEUE
1379   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
137A   0000           01935                 nop                                                             ;Wait a cycle
  00000021            01936                 count = count + 1
137B   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
137C   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137D   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137E   0080           01933                 movwf INDF                                              ;Save to QUEUE
137F   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1380   0000           01935                 nop                                                             ;Wait a cycle
  00000022            01936                 count = count + 1
1381   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1382   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1383   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1384   0080           01933                 movwf INDF                                              ;Save to QUEUE
1385   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1386   0000           01935                 nop                                                             ;Wait a cycle
  00000023            01936                 count = count + 1
1387   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1388   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1389   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138A   0080           01933                 movwf INDF                                              ;Save to QUEUE
138B   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
138C   0000           01935                 nop                                                             ;Wait a cycle
  00000024            01936                 count = count + 1
138D   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
138E   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138F   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1390   0080           01933                 movwf INDF                                              ;Save to QUEUE
1391   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1392   0000           01935                 nop                                                             ;Wait a cycle
  00000025            01936                 count = count + 1
1393   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
1394   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1395   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1396   0080           01933                 movwf INDF                                              ;Save to QUEUE
1397   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
1398   0000           01935                 nop                                                             ;Wait a cycle
  00000026            01936                 count = count + 1
1399   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
139A   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139B   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139C   0080           01933                 movwf INDF                                              ;Save to QUEUE
139D   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
139E   0000           01935                 nop                                                             ;Wait a cycle
  00000027            01936                 count = count + 1
139F   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
13A0   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A1   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A2   0080           01933                 movwf INDF                                              ;Save to QUEUE
13A3   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13A4   0000           01935                 nop                                                             ;Wait a cycle
  00000028            01936                 count = count + 1
13A5   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
13A6   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A7   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A8   0080           01933                 movwf INDF                                              ;Save to QUEUE
13A9   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
13AA   0000           01935                 nop                                                             ;Wait a cycle
  00000029            01936                 count = count + 1
13AB   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
13AC   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AD   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AE   0080           01933                 movwf INDF                                              ;Save to QUEUE
13AF   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
13B0   0000           01935                 nop                                                             ;Wait a cycle
  0000002A            01936                 count = count + 1
13B1   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
13B2   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B3   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B4   0080           01933                 movwf INDF                                              ;Save to QUEUE
13B5   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
13B6   0000           01935                 nop                                                             ;Wait a cycle
  0000002B            01936                 count = count + 1
13B7   0808           01930                 movf ADC_DATAPORT, W                    ;Sample
13B8   1409           01931                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B9   1009           01932                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BA   0080           01933                 movwf INDF                                              ;Save to QUEUE
13BB   0A84           01934                 incf FSR, F                                             ;Increment QUEUE pointer
13BC   0000           01935                 nop                                                             ;Wait a cycle
  0000002C            01936                 count = count + 1
                      01937         endw
13BD                  01938 Sample833kEnd
                      01939         while count < BUFFERSIZE
13BD   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13BE   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BF   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C0   0080           01943                 movwf INDF                                              ;Save to QUEUE
13C1   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13C2   0000           01945                 nop                                                             ;Wait a cycle
  0000002D            01946                 count = count + 1
13C3   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13C4   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C5   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C6   0080           01943                 movwf INDF                                              ;Save to QUEUE
13C7   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13C8   0000           01945                 nop                                                             ;Wait a cycle
  0000002E            01946                 count = count + 1
13C9   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13CA   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CB   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CC   0080           01943                 movwf INDF                                              ;Save to QUEUE
13CD   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13CE   0000           01945                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002F            01946                 count = count + 1
13CF   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13D0   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D1   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D2   0080           01943                 movwf INDF                                              ;Save to QUEUE
13D3   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13D4   0000           01945                 nop                                                             ;Wait a cycle
  00000030            01946                 count = count + 1
13D5   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13D6   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D7   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D8   0080           01943                 movwf INDF                                              ;Save to QUEUE
13D9   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13DA   0000           01945                 nop                                                             ;Wait a cycle
  00000031            01946                 count = count + 1
13DB   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13DC   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DD   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DE   0080           01943                 movwf INDF                                              ;Save to QUEUE
13DF   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13E0   0000           01945                 nop                                                             ;Wait a cycle
  00000032            01946                 count = count + 1
13E1   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13E2   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E3   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E4   0080           01943                 movwf INDF                                              ;Save to QUEUE
13E5   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13E6   0000           01945                 nop                                                             ;Wait a cycle
  00000033            01946                 count = count + 1
13E7   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13E8   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E9   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EA   0080           01943                 movwf INDF                                              ;Save to QUEUE
13EB   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13EC   0000           01945                 nop                                                             ;Wait a cycle
  00000034            01946                 count = count + 1
13ED   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13EE   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EF   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F0   0080           01943                 movwf INDF                                              ;Save to QUEUE
13F1   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13F2   0000           01945                 nop                                                             ;Wait a cycle
  00000035            01946                 count = count + 1
13F3   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13F4   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F5   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F6   0080           01943                 movwf INDF                                              ;Save to QUEUE
13F7   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13F8   0000           01945                 nop                                                             ;Wait a cycle
  00000036            01946                 count = count + 1
13F9   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
13FA   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FB   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13FC   0080           01943                 movwf INDF                                              ;Save to QUEUE
13FD   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
13FE   0000           01945                 nop                                                             ;Wait a cycle
  00000037            01946                 count = count + 1
13FF   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1400   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1401   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1402   0080           01943                 movwf INDF                                              ;Save to QUEUE
1403   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1404   0000           01945                 nop                                                             ;Wait a cycle
  00000038            01946                 count = count + 1
1405   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1406   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1407   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1408   0080           01943                 movwf INDF                                              ;Save to QUEUE
1409   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
140A   0000           01945                 nop                                                             ;Wait a cycle
  00000039            01946                 count = count + 1
140B   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
140C   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140D   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140E   0080           01943                 movwf INDF                                              ;Save to QUEUE
140F   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1410   0000           01945                 nop                                                             ;Wait a cycle
  0000003A            01946                 count = count + 1
1411   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1412   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1413   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1414   0080           01943                 movwf INDF                                              ;Save to QUEUE
1415   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1416   0000           01945                 nop                                                             ;Wait a cycle
  0000003B            01946                 count = count + 1
1417   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1418   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1419   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141A   0080           01943                 movwf INDF                                              ;Save to QUEUE
141B   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
141C   0000           01945                 nop                                                             ;Wait a cycle
  0000003C            01946                 count = count + 1
141D   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
141E   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141F   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1420   0080           01943                 movwf INDF                                              ;Save to QUEUE
1421   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1422   0000           01945                 nop                                                             ;Wait a cycle
  0000003D            01946                 count = count + 1
1423   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1424   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1425   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1426   0080           01943                 movwf INDF                                              ;Save to QUEUE
1427   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1428   0000           01945                 nop                                                             ;Wait a cycle
  0000003E            01946                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1429   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
142A   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142B   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142C   0080           01943                 movwf INDF                                              ;Save to QUEUE
142D   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
142E   0000           01945                 nop                                                             ;Wait a cycle
  0000003F            01946                 count = count + 1
142F   0808           01940                 movf ADC_DATAPORT, W                    ;Sample
1430   1409           01941                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1431   1009           01942                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1432   0080           01943                 movwf INDF                                              ;Save to QUEUE
1433   0A84           01944                 incf FSR, F                                             ;Increment QUEUE pointer
1434   0000           01945                 nop                                                             ;Wait a cycle
  00000040            01946                 count = count + 1
                      01947         endw
1435   0808           01948         movf ADC_DATAPORT, W
1436   1409           01949         bsf ADC_CONTROLPORT, RDD
1437   1009           01950         bcf ADC_CONTROLPORT, RDD
1438   0080           01951         movwf INDF
1439   1384           01952         bcf FSR, 7                                                      ;goto bank 3
143A   0000           01953         nop                                                                     ;Wait a cycle
  00000001            01954         count = 1
                      01955         while count < BUFFERSIZE
143B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
143C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143E   0080           01959                 movwf INDF                                              ;Save to QUEUE
143F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1440   0000           01961                 nop                                                             ;Wait a cycle
  00000002            01962                 count = count + 1
1441   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1442   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1443   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1444   0080           01959                 movwf INDF                                              ;Save to QUEUE
1445   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1446   0000           01961                 nop                                                             ;Wait a cycle
  00000003            01962                 count = count + 1
1447   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1448   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1449   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144A   0080           01959                 movwf INDF                                              ;Save to QUEUE
144B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
144C   0000           01961                 nop                                                             ;Wait a cycle
  00000004            01962                 count = count + 1
144D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
144E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1450   0080           01959                 movwf INDF                                              ;Save to QUEUE
1451   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1452   0000           01961                 nop                                                             ;Wait a cycle
  00000005            01962                 count = count + 1
1453   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1454   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1455   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1456   0080           01959                 movwf INDF                                              ;Save to QUEUE
1457   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1458   0000           01961                 nop                                                             ;Wait a cycle
  00000006            01962                 count = count + 1
1459   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
145A   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145B   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145C   0080           01959                 movwf INDF                                              ;Save to QUEUE
145D   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
145E   0000           01961                 nop                                                             ;Wait a cycle
  00000007            01962                 count = count + 1
145F   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1460   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1461   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1462   0080           01959                 movwf INDF                                              ;Save to QUEUE
1463   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1464   0000           01961                 nop                                                             ;Wait a cycle
  00000008            01962                 count = count + 1
1465   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1466   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1467   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1468   0080           01959                 movwf INDF                                              ;Save to QUEUE
1469   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
146A   0000           01961                 nop                                                             ;Wait a cycle
  00000009            01962                 count = count + 1
146B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
146C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146E   0080           01959                 movwf INDF                                              ;Save to QUEUE
146F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1470   0000           01961                 nop                                                             ;Wait a cycle
  0000000A            01962                 count = count + 1
1471   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1472   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1473   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1474   0080           01959                 movwf INDF                                              ;Save to QUEUE
1475   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1476   0000           01961                 nop                                                             ;Wait a cycle
  0000000B            01962                 count = count + 1
1477   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1478   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1479   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147A   0080           01959                 movwf INDF                                              ;Save to QUEUE
147B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
147C   0000           01961                 nop                                                             ;Wait a cycle
  0000000C            01962                 count = count + 1
147D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
147E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1480   0080           01959                 movwf INDF                                              ;Save to QUEUE
1481   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1482   0000           01961                 nop                                                             ;Wait a cycle
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000D            01962                 count = count + 1
1483   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1484   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1485   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1486   0080           01959                 movwf INDF                                              ;Save to QUEUE
1487   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1488   0000           01961                 nop                                                             ;Wait a cycle
  0000000E            01962                 count = count + 1
1489   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
148A   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148B   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148C   0080           01959                 movwf INDF                                              ;Save to QUEUE
148D   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
148E   0000           01961                 nop                                                             ;Wait a cycle
  0000000F            01962                 count = count + 1
148F   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1490   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1491   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1492   0080           01959                 movwf INDF                                              ;Save to QUEUE
1493   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1494   0000           01961                 nop                                                             ;Wait a cycle
  00000010            01962                 count = count + 1
1495   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1496   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1497   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1498   0080           01959                 movwf INDF                                              ;Save to QUEUE
1499   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
149A   0000           01961                 nop                                                             ;Wait a cycle
  00000011            01962                 count = count + 1
149B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
149C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149E   0080           01959                 movwf INDF                                              ;Save to QUEUE
149F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14A0   0000           01961                 nop                                                             ;Wait a cycle
  00000012            01962                 count = count + 1
14A1   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14A2   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A3   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A4   0080           01959                 movwf INDF                                              ;Save to QUEUE
14A5   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14A6   0000           01961                 nop                                                             ;Wait a cycle
  00000013            01962                 count = count + 1
14A7   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14A8   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A9   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14AA   0080           01959                 movwf INDF                                              ;Save to QUEUE
14AB   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14AC   0000           01961                 nop                                                             ;Wait a cycle
  00000014            01962                 count = count + 1
14AD   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14AE   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AF   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14B0   0080           01959                 movwf INDF                                              ;Save to QUEUE
14B1   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14B2   0000           01961                 nop                                                             ;Wait a cycle
  00000015            01962                 count = count + 1
14B3   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14B4   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B5   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B6   0080           01959                 movwf INDF                                              ;Save to QUEUE
14B7   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14B8   0000           01961                 nop                                                             ;Wait a cycle
  00000016            01962                 count = count + 1
14B9   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14BA   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BB   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BC   0080           01959                 movwf INDF                                              ;Save to QUEUE
14BD   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14BE   0000           01961                 nop                                                             ;Wait a cycle
  00000017            01962                 count = count + 1
14BF   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14C0   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C1   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C2   0080           01959                 movwf INDF                                              ;Save to QUEUE
14C3   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14C4   0000           01961                 nop                                                             ;Wait a cycle
  00000018            01962                 count = count + 1
14C5   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14C6   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C7   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C8   0080           01959                 movwf INDF                                              ;Save to QUEUE
14C9   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14CA   0000           01961                 nop                                                             ;Wait a cycle
  00000019            01962                 count = count + 1
14CB   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14CC   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CD   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CE   0080           01959                 movwf INDF                                              ;Save to QUEUE
14CF   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14D0   0000           01961                 nop                                                             ;Wait a cycle
  0000001A            01962                 count = count + 1
14D1   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14D2   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D3   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D4   0080           01959                 movwf INDF                                              ;Save to QUEUE
14D5   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14D6   0000           01961                 nop                                                             ;Wait a cycle
  0000001B            01962                 count = count + 1
14D7   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14D8   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D9   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DA   0080           01959                 movwf INDF                                              ;Save to QUEUE
14DB   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14DC   0000           01961                 nop                                                             ;Wait a cycle
  0000001C            01962                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14DD   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14DE   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DF   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E0   0080           01959                 movwf INDF                                              ;Save to QUEUE
14E1   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14E2   0000           01961                 nop                                                             ;Wait a cycle
  0000001D            01962                 count = count + 1
14E3   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14E4   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E5   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E6   0080           01959                 movwf INDF                                              ;Save to QUEUE
14E7   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14E8   0000           01961                 nop                                                             ;Wait a cycle
  0000001E            01962                 count = count + 1
14E9   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14EA   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EB   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EC   0080           01959                 movwf INDF                                              ;Save to QUEUE
14ED   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14EE   0000           01961                 nop                                                             ;Wait a cycle
  0000001F            01962                 count = count + 1
14EF   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14F0   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F1   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F2   0080           01959                 movwf INDF                                              ;Save to QUEUE
14F3   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14F4   0000           01961                 nop                                                             ;Wait a cycle
  00000020            01962                 count = count + 1
14F5   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14F6   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F7   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F8   0080           01959                 movwf INDF                                              ;Save to QUEUE
14F9   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
14FA   0000           01961                 nop                                                             ;Wait a cycle
  00000021            01962                 count = count + 1
14FB   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
14FC   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FD   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FE   0080           01959                 movwf INDF                                              ;Save to QUEUE
14FF   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1500   0000           01961                 nop                                                             ;Wait a cycle
  00000022            01962                 count = count + 1
1501   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1502   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1503   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1504   0080           01959                 movwf INDF                                              ;Save to QUEUE
1505   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1506   0000           01961                 nop                                                             ;Wait a cycle
  00000023            01962                 count = count + 1
1507   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1508   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1509   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150A   0080           01959                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

150B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
150C   0000           01961                 nop                                                             ;Wait a cycle
  00000024            01962                 count = count + 1
150D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
150E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1510   0080           01959                 movwf INDF                                              ;Save to QUEUE
1511   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1512   0000           01961                 nop                                                             ;Wait a cycle
  00000025            01962                 count = count + 1
1513   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1514   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1515   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1516   0080           01959                 movwf INDF                                              ;Save to QUEUE
1517   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1518   0000           01961                 nop                                                             ;Wait a cycle
  00000026            01962                 count = count + 1
1519   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
151A   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151B   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151C   0080           01959                 movwf INDF                                              ;Save to QUEUE
151D   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
151E   0000           01961                 nop                                                             ;Wait a cycle
  00000027            01962                 count = count + 1
151F   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1520   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1521   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1522   0080           01959                 movwf INDF                                              ;Save to QUEUE
1523   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1524   0000           01961                 nop                                                             ;Wait a cycle
  00000028            01962                 count = count + 1
1525   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1526   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1527   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1528   0080           01959                 movwf INDF                                              ;Save to QUEUE
1529   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
152A   0000           01961                 nop                                                             ;Wait a cycle
  00000029            01962                 count = count + 1
152B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
152C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152E   0080           01959                 movwf INDF                                              ;Save to QUEUE
152F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1530   0000           01961                 nop                                                             ;Wait a cycle
  0000002A            01962                 count = count + 1
1531   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1532   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1533   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1534   0080           01959                 movwf INDF                                              ;Save to QUEUE
1535   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1536   0000           01961                 nop                                                             ;Wait a cycle
  0000002B            01962                 count = count + 1
1537   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1538   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1539   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153A   0080           01959                 movwf INDF                                              ;Save to QUEUE
153B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
153C   0000           01961                 nop                                                             ;Wait a cycle
  0000002C            01962                 count = count + 1
153D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
153E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1540   0080           01959                 movwf INDF                                              ;Save to QUEUE
1541   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1542   0000           01961                 nop                                                             ;Wait a cycle
  0000002D            01962                 count = count + 1
1543   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1544   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1545   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1546   0080           01959                 movwf INDF                                              ;Save to QUEUE
1547   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1548   0000           01961                 nop                                                             ;Wait a cycle
  0000002E            01962                 count = count + 1
1549   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
154A   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154B   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154C   0080           01959                 movwf INDF                                              ;Save to QUEUE
154D   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
154E   0000           01961                 nop                                                             ;Wait a cycle
  0000002F            01962                 count = count + 1
154F   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1550   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1551   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1552   0080           01959                 movwf INDF                                              ;Save to QUEUE
1553   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1554   0000           01961                 nop                                                             ;Wait a cycle
  00000030            01962                 count = count + 1
1555   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1556   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1557   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1558   0080           01959                 movwf INDF                                              ;Save to QUEUE
1559   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
155A   0000           01961                 nop                                                             ;Wait a cycle
  00000031            01962                 count = count + 1
155B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
155C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155E   0080           01959                 movwf INDF                                              ;Save to QUEUE
155F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1560   0000           01961                 nop                                                             ;Wait a cycle
  00000032            01962                 count = count + 1
1561   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1562   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1563   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1564   0080           01959                 movwf INDF                                              ;Save to QUEUE
1565   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1566   0000           01961                 nop                                                             ;Wait a cycle
  00000033            01962                 count = count + 1
1567   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1568   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1569   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156A   0080           01959                 movwf INDF                                              ;Save to QUEUE
156B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
156C   0000           01961                 nop                                                             ;Wait a cycle
  00000034            01962                 count = count + 1
156D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
156E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1570   0080           01959                 movwf INDF                                              ;Save to QUEUE
1571   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1572   0000           01961                 nop                                                             ;Wait a cycle
  00000035            01962                 count = count + 1
1573   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1574   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1575   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1576   0080           01959                 movwf INDF                                              ;Save to QUEUE
1577   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1578   0000           01961                 nop                                                             ;Wait a cycle
  00000036            01962                 count = count + 1
1579   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
157A   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157B   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157C   0080           01959                 movwf INDF                                              ;Save to QUEUE
157D   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
157E   0000           01961                 nop                                                             ;Wait a cycle
  00000037            01962                 count = count + 1
157F   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1580   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1581   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1582   0080           01959                 movwf INDF                                              ;Save to QUEUE
1583   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1584   0000           01961                 nop                                                             ;Wait a cycle
  00000038            01962                 count = count + 1
1585   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1586   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1587   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1588   0080           01959                 movwf INDF                                              ;Save to QUEUE
1589   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
158A   0000           01961                 nop                                                             ;Wait a cycle
  00000039            01962                 count = count + 1
158B   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
158C   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158D   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158E   0080           01959                 movwf INDF                                              ;Save to QUEUE
158F   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1590   0000           01961                 nop                                                             ;Wait a cycle
  0000003A            01962                 count = count + 1
1591   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1592   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1593   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1594   0080           01959                 movwf INDF                                              ;Save to QUEUE
1595   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
1596   0000           01961                 nop                                                             ;Wait a cycle
  0000003B            01962                 count = count + 1
1597   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
1598   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1599   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159A   0080           01959                 movwf INDF                                              ;Save to QUEUE
159B   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
159C   0000           01961                 nop                                                             ;Wait a cycle
  0000003C            01962                 count = count + 1
159D   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
159E   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159F   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A0   0080           01959                 movwf INDF                                              ;Save to QUEUE
15A1   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
15A2   0000           01961                 nop                                                             ;Wait a cycle
  0000003D            01962                 count = count + 1
15A3   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
15A4   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A5   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A6   0080           01959                 movwf INDF                                              ;Save to QUEUE
15A7   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
15A8   0000           01961                 nop                                                             ;Wait a cycle
  0000003E            01962                 count = count + 1
15A9   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
15AA   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AB   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AC   0080           01959                 movwf INDF                                              ;Save to QUEUE
15AD   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
15AE   0000           01961                 nop                                                             ;Wait a cycle
  0000003F            01962                 count = count + 1
15AF   0808           01956                 movf ADC_DATAPORT, W                    ;Sample
15B0   1409           01957                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B1   1009           01958                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B2   0080           01959                 movwf INDF                                              ;Save to QUEUE
15B3   0384           01960                 decf FSR, F                                             ;Increment QUEUE pointer
15B4   0000           01961                 nop                                                             ;Wait a cycle
  00000040            01962                 count = count + 1
                      01963         endw
15B5   0808           01964         movf ADC_DATAPORT, W                            ;Last sample
15B6   1409           01965         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15B7   118A           01966         bcf PCLATH, 3                                           ;insure correct program memory page
15B8   120A           01967         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
15B9   290F           01968         goto ADCShutdown
                      01969 
                      01970 ;Repetitive sample
                      01971 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      01972 ;-----------------------------------------------------------------------------
15BA                  01973 SampleRep5M
15BA   3015           01974         movlw high SampleRep5MPickSt
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15BB   008A           01975         movwf PCLATH
15BC   0877           01976         movf gbl_modetempb, w
15BD   0782           01977         addwf PCL, f
15BE                  01978 SampleRep5MPickSt
                      01979         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
15BE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15BF   118A               M                 bcf PCLATH, 3
                          M         endif
15C0   2DCD               M         goto SampleRep5MStep1
                      01980         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
15C1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15C2   118A               M                 bcf PCLATH, 3
                          M         endif
15C3   2EDD               M         goto SampleRep5MStep2
                      01981         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
15C4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15C5   118A               M                 bcf PCLATH, 3
                          M         endif
15C6   2FE0               M         goto SampleRep5MStep3
                      01982         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
15C7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
15C8   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15C9   28E3               M         goto SampleRep5MStep4
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01983         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
15CA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
15CB   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15CC   29E7               M         goto SampleRep5MStep5
15CD                  01984 SampleRep5MPickEn
15CD                  01985 SampleRep5MStep1
15CD   1009           01986         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01987         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
15CE   3020               M     movlw BUFFERMIN
15CF   0084               M     movwf FSR
15D0   0000           01988         nop
  0000                01989         local count
  00000001            01990         count = 1
                      01991         while count < D'52'
15D1   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15D2   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15D3   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15D4   0080           01995                 movwf INDF                                              ;Save to QUEUE
15D5   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01997                 count = count + 1
15D6   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15D7   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15D8   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15D9   0080           01995                 movwf INDF                                              ;Save to QUEUE
15DA   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01997                 count = count + 1
15DB   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15DC   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15DD   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15DE   0080           01995                 movwf INDF                                              ;Save to QUEUE
15DF   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01997                 count = count + 1
15E0   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E1   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E2   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15E3   0080           01995                 movwf INDF                                              ;Save to QUEUE
15E4   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01997                 count = count + 1
15E5   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E6   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E7   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15E8   0080           01995                 movwf INDF                                              ;Save to QUEUE
15E9   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01997                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15EA   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15EB   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EC   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15ED   0080           01995                 movwf INDF                                              ;Save to QUEUE
15EE   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01997                 count = count + 1
15EF   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F0   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F1   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15F2   0080           01995                 movwf INDF                                              ;Save to QUEUE
15F3   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01997                 count = count + 1
15F4   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F5   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F6   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15F7   0080           01995                 movwf INDF                                              ;Save to QUEUE
15F8   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01997                 count = count + 1
15F9   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FA   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15FB   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
15FC   0080           01995                 movwf INDF                                              ;Save to QUEUE
15FD   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01997                 count = count + 1
15FE   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FF   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1600   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1601   0080           01995                 movwf INDF                                              ;Save to QUEUE
1602   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01997                 count = count + 1
1603   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1604   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1605   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1606   0080           01995                 movwf INDF                                              ;Save to QUEUE
1607   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01997                 count = count + 1
1608   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1609   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160A   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
160B   0080           01995                 movwf INDF                                              ;Save to QUEUE
160C   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01997                 count = count + 1
160D   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
160E   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160F   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1610   0080           01995                 movwf INDF                                              ;Save to QUEUE
1611   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01997                 count = count + 1
1612   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1613   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1614   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1615   0080           01995                 movwf INDF                                              ;Save to QUEUE
1616   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F            01997                 count = count + 1
1617   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1618   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1619   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
161A   0080           01995                 movwf INDF                                              ;Save to QUEUE
161B   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01997                 count = count + 1
161C   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
161D   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
161E   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
161F   0080           01995                 movwf INDF                                              ;Save to QUEUE
1620   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01997                 count = count + 1
1621   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1622   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1623   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1624   0080           01995                 movwf INDF                                              ;Save to QUEUE
1625   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01997                 count = count + 1
1626   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1627   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1628   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1629   0080           01995                 movwf INDF                                              ;Save to QUEUE
162A   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01997                 count = count + 1
162B   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162C   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
162D   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
162E   0080           01995                 movwf INDF                                              ;Save to QUEUE
162F   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01997                 count = count + 1
1630   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1631   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1632   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1633   0080           01995                 movwf INDF                                              ;Save to QUEUE
1634   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01997                 count = count + 1
1635   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1636   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1637   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1638   0080           01995                 movwf INDF                                              ;Save to QUEUE
1639   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01997                 count = count + 1
163A   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
163B   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163C   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
163D   0080           01995                 movwf INDF                                              ;Save to QUEUE
163E   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01997                 count = count + 1
163F   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1640   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1641   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1642   0080           01995                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1643   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01997                 count = count + 1
1644   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1645   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1646   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1647   0080           01995                 movwf INDF                                              ;Save to QUEUE
1648   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01997                 count = count + 1
1649   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164A   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
164B   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
164C   0080           01995                 movwf INDF                                              ;Save to QUEUE
164D   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01997                 count = count + 1
164E   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164F   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1650   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1651   0080           01995                 movwf INDF                                              ;Save to QUEUE
1652   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01997                 count = count + 1
1653   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1654   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1655   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1656   0080           01995                 movwf INDF                                              ;Save to QUEUE
1657   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01997                 count = count + 1
1658   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1659   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165A   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
165B   0080           01995                 movwf INDF                                              ;Save to QUEUE
165C   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01997                 count = count + 1
165D   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
165E   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165F   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1660   0080           01995                 movwf INDF                                              ;Save to QUEUE
1661   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01997                 count = count + 1
1662   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1663   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1664   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1665   0080           01995                 movwf INDF                                              ;Save to QUEUE
1666   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01997                 count = count + 1
1667   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1668   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1669   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
166A   0080           01995                 movwf INDF                                              ;Save to QUEUE
166B   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01997                 count = count + 1
166C   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
166D   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
166E   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

166F   0080           01995                 movwf INDF                                              ;Save to QUEUE
1670   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01997                 count = count + 1
1671   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1672   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1673   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1674   0080           01995                 movwf INDF                                              ;Save to QUEUE
1675   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01997                 count = count + 1
1676   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1677   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1678   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1679   0080           01995                 movwf INDF                                              ;Save to QUEUE
167A   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01997                 count = count + 1
167B   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167C   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
167D   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
167E   0080           01995                 movwf INDF                                              ;Save to QUEUE
167F   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01997                 count = count + 1
1680   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1681   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1682   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1683   0080           01995                 movwf INDF                                              ;Save to QUEUE
1684   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01997                 count = count + 1
1685   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1686   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1687   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1688   0080           01995                 movwf INDF                                              ;Save to QUEUE
1689   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01997                 count = count + 1
168A   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
168B   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168C   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
168D   0080           01995                 movwf INDF                                              ;Save to QUEUE
168E   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01997                 count = count + 1
168F   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1690   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1691   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1692   0080           01995                 movwf INDF                                              ;Save to QUEUE
1693   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01997                 count = count + 1
1694   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1695   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1696   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
1697   0080           01995                 movwf INDF                                              ;Save to QUEUE
1698   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01997                 count = count + 1
1699   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169A   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

169B   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
169C   0080           01995                 movwf INDF                                              ;Save to QUEUE
169D   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01997                 count = count + 1
169E   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169F   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A0   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16A1   0080           01995                 movwf INDF                                              ;Save to QUEUE
16A2   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01997                 count = count + 1
16A3   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A4   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A5   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16A6   0080           01995                 movwf INDF                                              ;Save to QUEUE
16A7   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01997                 count = count + 1
16A8   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A9   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AA   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16AB   0080           01995                 movwf INDF                                              ;Save to QUEUE
16AC   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01997                 count = count + 1
16AD   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16AE   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AF   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16B0   0080           01995                 movwf INDF                                              ;Save to QUEUE
16B1   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01997                 count = count + 1
16B2   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B3   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B4   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16B5   0080           01995                 movwf INDF                                              ;Save to QUEUE
16B6   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01997                 count = count + 1
16B7   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B8   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B9   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16BA   0080           01995                 movwf INDF                                              ;Save to QUEUE
16BB   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01997                 count = count + 1
16BC   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BD   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BE   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16BF   0080           01995                 movwf INDF                                              ;Save to QUEUE
16C0   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01997                 count = count + 1
16C1   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C2   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C3   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16C4   0080           01995                 movwf INDF                                              ;Save to QUEUE
16C5   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01997                 count = count + 1
16C6   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16C7   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C8   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16C9   0080           01995                 movwf INDF                                              ;Save to QUEUE
16CA   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01997                 count = count + 1
16CB   1409           01992                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CC   1009           01993                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CD   0808           01994                 movf ADC_DATAPORT, W                    ;Save Sample
16CE   0080           01995                 movwf INDF                                              ;Save to QUEUE
16CF   0A84           01996                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01997                 count = count + 1
                      01998         endw
16D0   1409           01999         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16D1   0808           02000         movf ADC_DATAPORT, W                            ;Sample
16D2                  02001 SampleRep5MEndA
16D2   0080           02002         movwf INDF
16D3   0A84           02003         incf FSR, F
16D4   2ED7           02004         goto SampleRep5MEndB
16D5                  02005 SampleRep5MEndC
16D5   0080           02006         movwf INDF
16D6   0384           02007         decf FSR, F
16D7                  02008 SampleRep5MEndB
                      02009         ADDLF D'3', gbl_modetempb, f
16D7   3003               M     movlw D'3'
16D8   07F7               M     addwf gbl_modetempb, f
16D9   1486           02010         bsf ADC_PORT, CS
                      02011         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
16DA   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16DB   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16DC   2877               M         goto MainB
                      02012         
16DD                  02013 SampleRep5MStep2
16DD   0000           02014         nop
16DE   1009           02015         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
16DF   2EE0           02016         goto $ + 1
16E0   0000           02017         nop
  0000                02018         local count
  00000001            02019         count = 1
                      02020         while count < D'12'
16E1   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E2   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E3   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16E4   0080           02024                 movwf INDF                                              ;Save to QUEUE
16E5   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            02026                 count = count + 1
16E6   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16E7   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16E8   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16E9   0080           02024                 movwf INDF                                              ;Save to QUEUE
16EA   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02026                 count = count + 1
16EB   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16EC   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16ED   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16EE   0080           02024                 movwf INDF                                              ;Save to QUEUE
16EF   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02026                 count = count + 1
16F0   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F1   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F2   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16F3   0080           02024                 movwf INDF                                              ;Save to QUEUE
16F4   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02026                 count = count + 1
16F5   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F6   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F7   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16F8   0080           02024                 movwf INDF                                              ;Save to QUEUE
16F9   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02026                 count = count + 1
16FA   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FB   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FC   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
16FD   0080           02024                 movwf INDF                                              ;Save to QUEUE
16FE   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02026                 count = count + 1
16FF   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1700   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1701   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
1702   0080           02024                 movwf INDF                                              ;Save to QUEUE
1703   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02026                 count = count + 1
1704   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1705   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1706   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
1707   0080           02024                 movwf INDF                                              ;Save to QUEUE
1708   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02026                 count = count + 1
1709   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170A   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
170B   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
170C   0080           02024                 movwf INDF                                              ;Save to QUEUE
170D   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02026                 count = count + 1
170E   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170F   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1710   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
1711   0080           02024                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1712   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02026                 count = count + 1
1713   1409           02021                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1714   1009           02022                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1715   0808           02023                 movf ADC_DATAPORT, W                    ;Save Sample
1716   0080           02024                 movwf INDF                                              ;Save to QUEUE
1717   0A84           02025                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02026                 count = count + 1
                      02027         endw
1718   1409           02028         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1719   1009           02029         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
171A   0808           02030         movf ADC_DATAPORT, W                            ;Sample
171B   0080           02031         movwf INDF
171C   1784           02032         bsf FSR, 7                                                      ;goto bank 2
  00000001            02033         count = 1
                      02034         while count < D'39'
171D   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
171E   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
171F   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1720   0080           02038                 movwf INDF                                              ;Save to QUEUE
1721   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02040                 count = count + 1
1722   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1723   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1724   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1725   0080           02038                 movwf INDF                                              ;Save to QUEUE
1726   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02040                 count = count + 1
1727   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1728   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1729   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
172A   0080           02038                 movwf INDF                                              ;Save to QUEUE
172B   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02040                 count = count + 1
172C   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
172D   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
172E   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
172F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1730   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02040                 count = count + 1
1731   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1732   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1733   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1734   0080           02038                 movwf INDF                                              ;Save to QUEUE
1735   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02040                 count = count + 1
1736   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1737   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1738   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1739   0080           02038                 movwf INDF                                              ;Save to QUEUE
173A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02040                 count = count + 1
173B   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

173C   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
173D   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
173E   0080           02038                 movwf INDF                                              ;Save to QUEUE
173F   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02040                 count = count + 1
1740   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1741   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1742   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1743   0080           02038                 movwf INDF                                              ;Save to QUEUE
1744   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02040                 count = count + 1
1745   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1746   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1747   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1748   0080           02038                 movwf INDF                                              ;Save to QUEUE
1749   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02040                 count = count + 1
174A   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174B   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174C   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
174D   0080           02038                 movwf INDF                                              ;Save to QUEUE
174E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02040                 count = count + 1
174F   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1750   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1751   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1752   0080           02038                 movwf INDF                                              ;Save to QUEUE
1753   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02040                 count = count + 1
1754   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1755   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1756   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1757   0080           02038                 movwf INDF                                              ;Save to QUEUE
1758   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02040                 count = count + 1
1759   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175A   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175B   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
175C   0080           02038                 movwf INDF                                              ;Save to QUEUE
175D   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02040                 count = count + 1
175E   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175F   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1760   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1761   0080           02038                 movwf INDF                                              ;Save to QUEUE
1762   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02040                 count = count + 1
1763   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1764   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1765   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1766   0080           02038                 movwf INDF                                              ;Save to QUEUE
1767   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02040                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1768   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1769   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176A   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
176B   0080           02038                 movwf INDF                                              ;Save to QUEUE
176C   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02040                 count = count + 1
176D   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176E   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176F   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1770   0080           02038                 movwf INDF                                              ;Save to QUEUE
1771   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02040                 count = count + 1
1772   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1773   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1774   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1775   0080           02038                 movwf INDF                                              ;Save to QUEUE
1776   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02040                 count = count + 1
1777   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1778   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1779   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
177A   0080           02038                 movwf INDF                                              ;Save to QUEUE
177B   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02040                 count = count + 1
177C   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177D   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177E   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
177F   0080           02038                 movwf INDF                                              ;Save to QUEUE
1780   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02040                 count = count + 1
1781   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1782   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1783   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1784   0080           02038                 movwf INDF                                              ;Save to QUEUE
1785   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02040                 count = count + 1
1786   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1787   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1788   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1789   0080           02038                 movwf INDF                                              ;Save to QUEUE
178A   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02040                 count = count + 1
178B   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178C   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178D   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
178E   0080           02038                 movwf INDF                                              ;Save to QUEUE
178F   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02040                 count = count + 1
1790   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1791   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1792   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1793   0080           02038                 movwf INDF                                              ;Save to QUEUE
1794   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            02040                 count = count + 1
1795   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1796   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1797   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
1798   0080           02038                 movwf INDF                                              ;Save to QUEUE
1799   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02040                 count = count + 1
179A   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179B   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179C   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
179D   0080           02038                 movwf INDF                                              ;Save to QUEUE
179E   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02040                 count = count + 1
179F   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A0   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A1   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17A2   0080           02038                 movwf INDF                                              ;Save to QUEUE
17A3   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02040                 count = count + 1
17A4   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A5   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A6   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17A7   0080           02038                 movwf INDF                                              ;Save to QUEUE
17A8   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02040                 count = count + 1
17A9   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AA   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AB   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17AC   0080           02038                 movwf INDF                                              ;Save to QUEUE
17AD   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02040                 count = count + 1
17AE   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AF   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B0   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17B1   0080           02038                 movwf INDF                                              ;Save to QUEUE
17B2   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02040                 count = count + 1
17B3   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B4   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B5   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17B6   0080           02038                 movwf INDF                                              ;Save to QUEUE
17B7   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02040                 count = count + 1
17B8   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B9   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BA   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17BB   0080           02038                 movwf INDF                                              ;Save to QUEUE
17BC   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02040                 count = count + 1
17BD   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BE   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BF   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17C0   0080           02038                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17C1   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02040                 count = count + 1
17C2   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C3   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C4   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17C5   0080           02038                 movwf INDF                                              ;Save to QUEUE
17C6   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02040                 count = count + 1
17C7   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C8   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C9   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17CA   0080           02038                 movwf INDF                                              ;Save to QUEUE
17CB   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02040                 count = count + 1
17CC   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CD   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CE   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17CF   0080           02038                 movwf INDF                                              ;Save to QUEUE
17D0   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02040                 count = count + 1
17D1   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D2   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D3   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17D4   0080           02038                 movwf INDF                                              ;Save to QUEUE
17D5   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02040                 count = count + 1
17D6   1409           02035                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D7   1009           02036                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D8   0808           02037                 movf ADC_DATAPORT, W                    ;Sample
17D9   0080           02038                 movwf INDF                                              ;Save to QUEUE
17DA   0384           02039                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02040                 count = count + 1
                      02041         endw
17DB   1409           02042         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17DC   0808           02043         movf ADC_DATAPORT, W                            ;Sample
                      02044         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
17DD   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17DE   118A               M                 bcf PCLATH, 3
                          M         endif
17DF   2ED5               M         goto SampleRep5MEndC
                      02045         
17E0                  02046 SampleRep5MStep3
17E0   2FE1           02047         goto $ + 1
17E1   1009           02048         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17E2   2FE3           02049         goto $ + 1
17E3   0000           02050         nop
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                02051         local count
  00000001            02052         count = 1
                      02053         while count < D'25'
17E4   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E5   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E6   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
17E7   0080           02057                 movwf INDF                                              ;Save to QUEUE
17E8   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02059                 count = count + 1
17E9   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EA   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EB   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
17EC   0080           02057                 movwf INDF                                              ;Save to QUEUE
17ED   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02059                 count = count + 1
17EE   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EF   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F0   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
17F1   0080           02057                 movwf INDF                                              ;Save to QUEUE
17F2   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02059                 count = count + 1
17F3   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F4   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F5   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
17F6   0080           02057                 movwf INDF                                              ;Save to QUEUE
17F7   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02059                 count = count + 1
17F8   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F9   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FA   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
17FB   0080           02057                 movwf INDF                                              ;Save to QUEUE
17FC   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02059                 count = count + 1
17FD   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FE   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FF   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1800   0080           02057                 movwf INDF                                              ;Save to QUEUE
1801   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02059                 count = count + 1
1802   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1803   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1804   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1805   0080           02057                 movwf INDF                                              ;Save to QUEUE
1806   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02059                 count = count + 1
1807   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1808   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1809   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
180A   0080           02057                 movwf INDF                                              ;Save to QUEUE
180B   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02059                 count = count + 1
180C   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180D   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

180E   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
180F   0080           02057                 movwf INDF                                              ;Save to QUEUE
1810   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02059                 count = count + 1
1811   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1812   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1813   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1814   0080           02057                 movwf INDF                                              ;Save to QUEUE
1815   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02059                 count = count + 1
1816   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1817   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1818   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1819   0080           02057                 movwf INDF                                              ;Save to QUEUE
181A   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02059                 count = count + 1
181B   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181C   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181D   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
181E   0080           02057                 movwf INDF                                              ;Save to QUEUE
181F   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02059                 count = count + 1
1820   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1821   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1822   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1823   0080           02057                 movwf INDF                                              ;Save to QUEUE
1824   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02059                 count = count + 1
1825   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1826   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1827   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1828   0080           02057                 movwf INDF                                              ;Save to QUEUE
1829   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02059                 count = count + 1
182A   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182B   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182C   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
182D   0080           02057                 movwf INDF                                              ;Save to QUEUE
182E   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02059                 count = count + 1
182F   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1830   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1831   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1832   0080           02057                 movwf INDF                                              ;Save to QUEUE
1833   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02059                 count = count + 1
1834   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1835   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1836   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1837   0080           02057                 movwf INDF                                              ;Save to QUEUE
1838   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02059                 count = count + 1
1839   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

183A   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183B   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
183C   0080           02057                 movwf INDF                                              ;Save to QUEUE
183D   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02059                 count = count + 1
183E   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183F   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1840   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1841   0080           02057                 movwf INDF                                              ;Save to QUEUE
1842   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02059                 count = count + 1
1843   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1844   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1845   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1846   0080           02057                 movwf INDF                                              ;Save to QUEUE
1847   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02059                 count = count + 1
1848   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1849   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184A   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
184B   0080           02057                 movwf INDF                                              ;Save to QUEUE
184C   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02059                 count = count + 1
184D   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184E   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184F   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1850   0080           02057                 movwf INDF                                              ;Save to QUEUE
1851   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02059                 count = count + 1
1852   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1853   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1854   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
1855   0080           02057                 movwf INDF                                              ;Save to QUEUE
1856   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02059                 count = count + 1
1857   1409           02054                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1858   1009           02055                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1859   0808           02056                 movf ADC_DATAPORT, W                    ;Sample
185A   0080           02057                 movwf INDF                                              ;Save to QUEUE
185B   0384           02058                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02059                 count = count + 1
                      02060         endw
185C   1409           02061         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
185D   1009           02062         bcf ADC_CONTROLPORT, RDD
185E   0808           02063         movf ADC_DATAPORT, W                            ;Sample
185F   0080           02064         movwf INDF
1860   1783           02065         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02066         count = 1
                      02067         while count < D'26'
1861   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1862   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1863   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1864   0080           02071                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1865   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02073                 count = count + 1
1866   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1867   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1868   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1869   0080           02071                 movwf INDF                                              ;Save to QUEUE
186A   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02073                 count = count + 1
186B   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186C   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186D   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
186E   0080           02071                 movwf INDF                                              ;Save to QUEUE
186F   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02073                 count = count + 1
1870   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1871   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1872   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1873   0080           02071                 movwf INDF                                              ;Save to QUEUE
1874   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02073                 count = count + 1
1875   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1876   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1877   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1878   0080           02071                 movwf INDF                                              ;Save to QUEUE
1879   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02073                 count = count + 1
187A   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187B   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187C   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
187D   0080           02071                 movwf INDF                                              ;Save to QUEUE
187E   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02073                 count = count + 1
187F   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1880   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1881   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1882   0080           02071                 movwf INDF                                              ;Save to QUEUE
1883   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02073                 count = count + 1
1884   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1885   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1886   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1887   0080           02071                 movwf INDF                                              ;Save to QUEUE
1888   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02073                 count = count + 1
1889   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188A   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188B   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
188C   0080           02071                 movwf INDF                                              ;Save to QUEUE
188D   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02073                 count = count + 1
188E   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188F   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1890   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1891   0080           02071                 movwf INDF                                              ;Save to QUEUE
1892   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02073                 count = count + 1
1893   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1894   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1895   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
1896   0080           02071                 movwf INDF                                              ;Save to QUEUE
1897   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02073                 count = count + 1
1898   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1899   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189A   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
189B   0080           02071                 movwf INDF                                              ;Save to QUEUE
189C   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02073                 count = count + 1
189D   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189E   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189F   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18A0   0080           02071                 movwf INDF                                              ;Save to QUEUE
18A1   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02073                 count = count + 1
18A2   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A3   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A4   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18A5   0080           02071                 movwf INDF                                              ;Save to QUEUE
18A6   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02073                 count = count + 1
18A7   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A8   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A9   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18AA   0080           02071                 movwf INDF                                              ;Save to QUEUE
18AB   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02073                 count = count + 1
18AC   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AD   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AE   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18AF   0080           02071                 movwf INDF                                              ;Save to QUEUE
18B0   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02073                 count = count + 1
18B1   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B2   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B3   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18B4   0080           02071                 movwf INDF                                              ;Save to QUEUE
18B5   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02073                 count = count + 1
18B6   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B7   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B8   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18B9   0080           02071                 movwf INDF                                              ;Save to QUEUE
18BA   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02073                 count = count + 1
18BB   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BC   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18BD   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18BE   0080           02071                 movwf INDF                                              ;Save to QUEUE
18BF   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02073                 count = count + 1
18C0   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C1   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C2   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18C3   0080           02071                 movwf INDF                                              ;Save to QUEUE
18C4   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02073                 count = count + 1
18C5   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C6   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C7   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18C8   0080           02071                 movwf INDF                                              ;Save to QUEUE
18C9   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02073                 count = count + 1
18CA   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CB   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CC   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18CD   0080           02071                 movwf INDF                                              ;Save to QUEUE
18CE   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02073                 count = count + 1
18CF   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D0   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D1   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18D2   0080           02071                 movwf INDF                                              ;Save to QUEUE
18D3   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02073                 count = count + 1
18D4   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D5   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D6   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18D7   0080           02071                 movwf INDF                                              ;Save to QUEUE
18D8   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02073                 count = count + 1
18D9   1409           02068                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DA   1009           02069                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DB   0808           02070                 movf ADC_DATAPORT, W                    ;Sample
18DC   0080           02071                 movwf INDF                                              ;Save to QUEUE
18DD   0A84           02072                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02073                 count = count + 1
                      02074         endw
18DE   1409           02075         bsf ADC_CONTROLPORT, RDD
18DF   0808           02076         movf ADC_DATAPORT, W                            ;Sample
                      02077         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
18E0   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18E1   118A               M                 bcf PCLATH, 3
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18E2   2ED2               M         goto SampleRep5MEndA
                      02078         
18E3                  02079 SampleRep5MStep4
18E3   28E4           02080         goto $ + 1
18E4   0000           02081         nop
18E5   1009           02082         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18E6   28E7           02083         goto $ + 1
18E7   0000           02084         nop
  0000                02085         local count
  00000001            02086         count = 1
                      02087         while count < D'38'
18E8   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E9   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18EA   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
18EB   0080           02091                 movwf INDF                                              ;Save to QUEUE
18EC   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02093                 count = count + 1
18ED   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18EE   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18EF   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
18F0   0080           02091                 movwf INDF                                              ;Save to QUEUE
18F1   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02093                 count = count + 1
18F2   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F3   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F4   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
18F5   0080           02091                 movwf INDF                                              ;Save to QUEUE
18F6   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02093                 count = count + 1
18F7   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F8   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F9   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
18FA   0080           02091                 movwf INDF                                              ;Save to QUEUE
18FB   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02093                 count = count + 1
18FC   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FD   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FE   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
18FF   0080           02091                 movwf INDF                                              ;Save to QUEUE
1900   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02093                 count = count + 1
1901   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1902   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1903   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1904   0080           02091                 movwf INDF                                              ;Save to QUEUE
1905   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02093                 count = count + 1
1906   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1907   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1908   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1909   0080           02091                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

190A   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02093                 count = count + 1
190B   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190C   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190D   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
190E   0080           02091                 movwf INDF                                              ;Save to QUEUE
190F   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02093                 count = count + 1
1910   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1911   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1912   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1913   0080           02091                 movwf INDF                                              ;Save to QUEUE
1914   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02093                 count = count + 1
1915   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1916   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1917   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1918   0080           02091                 movwf INDF                                              ;Save to QUEUE
1919   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02093                 count = count + 1
191A   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191B   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191C   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
191D   0080           02091                 movwf INDF                                              ;Save to QUEUE
191E   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02093                 count = count + 1
191F   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1920   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1921   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1922   0080           02091                 movwf INDF                                              ;Save to QUEUE
1923   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02093                 count = count + 1
1924   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1925   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1926   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1927   0080           02091                 movwf INDF                                              ;Save to QUEUE
1928   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02093                 count = count + 1
1929   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192A   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192B   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
192C   0080           02091                 movwf INDF                                              ;Save to QUEUE
192D   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02093                 count = count + 1
192E   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192F   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1930   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1931   0080           02091                 movwf INDF                                              ;Save to QUEUE
1932   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02093                 count = count + 1
1933   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1934   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1935   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1936   0080           02091                 movwf INDF                                              ;Save to QUEUE
1937   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02093                 count = count + 1
1938   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1939   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193A   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
193B   0080           02091                 movwf INDF                                              ;Save to QUEUE
193C   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02093                 count = count + 1
193D   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193E   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193F   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1940   0080           02091                 movwf INDF                                              ;Save to QUEUE
1941   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02093                 count = count + 1
1942   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1943   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1944   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1945   0080           02091                 movwf INDF                                              ;Save to QUEUE
1946   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02093                 count = count + 1
1947   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1948   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1949   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
194A   0080           02091                 movwf INDF                                              ;Save to QUEUE
194B   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02093                 count = count + 1
194C   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194D   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194E   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
194F   0080           02091                 movwf INDF                                              ;Save to QUEUE
1950   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02093                 count = count + 1
1951   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1952   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1953   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1954   0080           02091                 movwf INDF                                              ;Save to QUEUE
1955   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02093                 count = count + 1
1956   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1957   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1958   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1959   0080           02091                 movwf INDF                                              ;Save to QUEUE
195A   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02093                 count = count + 1
195B   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195C   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195D   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
195E   0080           02091                 movwf INDF                                              ;Save to QUEUE
195F   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02093                 count = count + 1
1960   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1961   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1962   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1963   0080           02091                 movwf INDF                                              ;Save to QUEUE
1964   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02093                 count = count + 1
1965   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1966   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1967   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1968   0080           02091                 movwf INDF                                              ;Save to QUEUE
1969   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02093                 count = count + 1
196A   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196B   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196C   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
196D   0080           02091                 movwf INDF                                              ;Save to QUEUE
196E   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02093                 count = count + 1
196F   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1970   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1971   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1972   0080           02091                 movwf INDF                                              ;Save to QUEUE
1973   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02093                 count = count + 1
1974   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1975   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1976   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1977   0080           02091                 movwf INDF                                              ;Save to QUEUE
1978   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02093                 count = count + 1
1979   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197A   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197B   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
197C   0080           02091                 movwf INDF                                              ;Save to QUEUE
197D   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02093                 count = count + 1
197E   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197F   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1980   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1981   0080           02091                 movwf INDF                                              ;Save to QUEUE
1982   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02093                 count = count + 1
1983   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1984   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1985   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1986   0080           02091                 movwf INDF                                              ;Save to QUEUE
1987   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02093                 count = count + 1
1988   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1989   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198A   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
198B   0080           02091                 movwf INDF                                              ;Save to QUEUE
198C   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02093                 count = count + 1
198D   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

198E   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198F   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1990   0080           02091                 movwf INDF                                              ;Save to QUEUE
1991   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02093                 count = count + 1
1992   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1993   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1994   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
1995   0080           02091                 movwf INDF                                              ;Save to QUEUE
1996   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02093                 count = count + 1
1997   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1998   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1999   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
199A   0080           02091                 movwf INDF                                              ;Save to QUEUE
199B   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02093                 count = count + 1
199C   1409           02088                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199D   1009           02089                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199E   0808           02090                 movf ADC_DATAPORT, W                    ;Sample
199F   0080           02091                 movwf INDF                                              ;Save to QUEUE
19A0   0A84           02092                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02093                 count = count + 1
                      02094         endw
19A1   1409           02095         bsf ADC_CONTROLPORT, RDD
19A2   1009           02096         bcf ADC_CONTROLPORT, RDD
19A3   0808           02097         movf ADC_DATAPORT, W                            ;Sample
19A4   0080           02098         movwf INDF
19A5   1384           02099         bcf FSR, 7                                                      ;goto bank 3
  00000001            02100         count = 1
                      02101         while count < D'13'
19A6   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A7   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A8   0808           02104                 movf ADC_DATAPORT, W
19A9   0080           02105                 movwf INDF                                              ;Save to QUEUE
19AA   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02107                 count = count + 1
19AB   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19AC   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19AD   0808           02104                 movf ADC_DATAPORT, W
19AE   0080           02105                 movwf INDF                                              ;Save to QUEUE
19AF   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02107                 count = count + 1
19B0   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B1   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B2   0808           02104                 movf ADC_DATAPORT, W
19B3   0080           02105                 movwf INDF                                              ;Save to QUEUE
19B4   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02107                 count = count + 1
19B5   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B6   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B7   0808           02104                 movf ADC_DATAPORT, W
19B8   0080           02105                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19B9   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02107                 count = count + 1
19BA   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BB   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BC   0808           02104                 movf ADC_DATAPORT, W
19BD   0080           02105                 movwf INDF                                              ;Save to QUEUE
19BE   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02107                 count = count + 1
19BF   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C0   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C1   0808           02104                 movf ADC_DATAPORT, W
19C2   0080           02105                 movwf INDF                                              ;Save to QUEUE
19C3   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02107                 count = count + 1
19C4   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C5   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C6   0808           02104                 movf ADC_DATAPORT, W
19C7   0080           02105                 movwf INDF                                              ;Save to QUEUE
19C8   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02107                 count = count + 1
19C9   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CA   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19CB   0808           02104                 movf ADC_DATAPORT, W
19CC   0080           02105                 movwf INDF                                              ;Save to QUEUE
19CD   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02107                 count = count + 1
19CE   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CF   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D0   0808           02104                 movf ADC_DATAPORT, W
19D1   0080           02105                 movwf INDF                                              ;Save to QUEUE
19D2   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02107                 count = count + 1
19D3   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D4   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D5   0808           02104                 movf ADC_DATAPORT, W
19D6   0080           02105                 movwf INDF                                              ;Save to QUEUE
19D7   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02107                 count = count + 1
19D8   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D9   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DA   0808           02104                 movf ADC_DATAPORT, W
19DB   0080           02105                 movwf INDF                                              ;Save to QUEUE
19DC   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02107                 count = count + 1
19DD   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DE   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DF   0808           02104                 movf ADC_DATAPORT, W
19E0   0080           02105                 movwf INDF                                              ;Save to QUEUE
19E1   0384           02106                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02107                 count = count + 1
                      02108         endw
19E2   1409           02109         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
19E3   0808           02110         movf ADC_DATAPORT, W                            ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02111         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
19E4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19E5   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19E6   2ED5               M         goto SampleRep5MEndC
                      02112 
19E7                  02113 SampleRep5MStep5
19E7   29E8           02114         goto $ + 1
                      02115         if (Sample1MhzEnd & (0x1000))
                      02116                 bsf PCLATH, 4
                      02117         else
19E8   120A           02118                 bcf PCLATH, 4
                      02119         endif
                      02120         if (Sample1MhzEnd & (0x800))
19E9   158A           02121                 bsf PCLATH, 3
                      02122         else
                      02123                 bcf PCLATH, 3
                      02124         endif
19EA   1009           02125         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
19EB   0000           02126         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
19EC   28B5           02127         goto Sample1MhzEnd
                      02128         
                      02129 ;Repetitive sample
                      02130 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02131 ;-----------------------------------------------------------------------------
19ED                  02132 SampleRep2M
19ED   3019           02133         movlw high SampleRep2MPickSt
19EE   008A           02134         movwf PCLATH
19EF   0877           02135         movf gbl_modetempb, w
19F0   0782           02136         addwf PCL, f
19F1                  02137 SampleRep2MPickSt
                      02138         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
19F1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
19F2   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19F3   29FA               M         goto SampleRep2MStep1
                      02139         MGOTO SampleRep2MStep2
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (SampleRep2MStep2 & (0x1000))
19F4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
19F5   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19F6   2C01               M         goto SampleRep2MStep2
                      02140         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
19F7   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
19F8   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19F9   2E02               M         goto SampleRep2MStep3
19FA                  02141 SampleRep2MPickEn
19FA                  02142 SampleRep2MStep1
19FA   1009           02143         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02144         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
19FB   3020               M     movlw BUFFERMIN
19FC   0084               M     movwf FSR
19FD   0000           02145         nop
  0000                02146         local count
  00000001            02147         count = 1
                      02148         while count < BUFFERSIZE
19FE   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
19FF   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A00   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A01   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A02   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A03   0000           02154                 nop
  00000002            02155                 count = count + 1
1A04   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A05   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A06   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A07   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A08   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A09   0000           02154                 nop
  00000003            02155                 count = count + 1
1A0A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A0B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A0C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A0D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A0E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A0F   0000           02154                 nop
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            02155                 count = count + 1
1A10   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A11   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A12   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A13   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A14   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A15   0000           02154                 nop
  00000005            02155                 count = count + 1
1A16   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A17   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A18   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A19   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A1A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A1B   0000           02154                 nop
  00000006            02155                 count = count + 1
1A1C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A1D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A1E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A1F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A20   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A21   0000           02154                 nop
  00000007            02155                 count = count + 1
1A22   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A23   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A24   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A25   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A26   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A27   0000           02154                 nop
  00000008            02155                 count = count + 1
1A28   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A29   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A2A   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A2B   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A2C   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A2D   0000           02154                 nop
  00000009            02155                 count = count + 1
1A2E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A2F   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A30   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A31   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A32   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A33   0000           02154                 nop
  0000000A            02155                 count = count + 1
1A34   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A35   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A36   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A37   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A38   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A39   0000           02154                 nop
  0000000B            02155                 count = count + 1
1A3A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A3B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A3D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A3E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A3F   0000           02154                 nop
  0000000C            02155                 count = count + 1
1A40   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A41   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A42   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A43   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A44   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A45   0000           02154                 nop
  0000000D            02155                 count = count + 1
1A46   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A47   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A48   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A49   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A4A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A4B   0000           02154                 nop
  0000000E            02155                 count = count + 1
1A4C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A4D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A50   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A51   0000           02154                 nop
  0000000F            02155                 count = count + 1
1A52   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A53   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A54   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A55   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A56   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A57   0000           02154                 nop
  00000010            02155                 count = count + 1
1A58   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A59   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5A   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5B   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A5C   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A5D   0000           02154                 nop
  00000011            02155                 count = count + 1
1A5E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A5F   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A60   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A61   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A62   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A63   0000           02154                 nop
  00000012            02155                 count = count + 1
1A64   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A65   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A66   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A67   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A68   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A69   0000           02154                 nop
  00000013            02155                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A6A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A6B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A6C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A6D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A6E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A6F   0000           02154                 nop
  00000014            02155                 count = count + 1
1A70   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A71   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A72   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A73   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A74   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A75   0000           02154                 nop
  00000015            02155                 count = count + 1
1A76   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A77   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A78   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A79   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A7A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A7B   0000           02154                 nop
  00000016            02155                 count = count + 1
1A7C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A7D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A7E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A7F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A80   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A81   0000           02154                 nop
  00000017            02155                 count = count + 1
1A82   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A83   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A84   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A85   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A86   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A87   0000           02154                 nop
  00000018            02155                 count = count + 1
1A88   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A89   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A8A   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A8B   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A8C   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A8D   0000           02154                 nop
  00000019            02155                 count = count + 1
1A8E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A8F   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A90   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A91   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A92   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A93   0000           02154                 nop
  0000001A            02155                 count = count + 1
1A94   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A95   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A96   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A97   0080           02152                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A98   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A99   0000           02154                 nop
  0000001B            02155                 count = count + 1
1A9A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1A9B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A9C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A9D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1A9E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1A9F   0000           02154                 nop
  0000001C            02155                 count = count + 1
1AA0   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AA1   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA2   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA3   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AA4   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AA5   0000           02154                 nop
  0000001D            02155                 count = count + 1
1AA6   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AA7   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA8   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA9   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AAA   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AAB   0000           02154                 nop
  0000001E            02155                 count = count + 1
1AAC   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AAD   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AAE   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AAF   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AB0   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AB1   0000           02154                 nop
  0000001F            02155                 count = count + 1
1AB2   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AB3   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB4   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB5   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AB6   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AB7   0000           02154                 nop
  00000020            02155                 count = count + 1
1AB8   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AB9   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ABA   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ABB   0080           02152                 movwf INDF                                              ;Save to QUEUE
1ABC   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1ABD   0000           02154                 nop
  00000021            02155                 count = count + 1
1ABE   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1ABF   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC0   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC1   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AC2   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AC3   0000           02154                 nop
  00000022            02155                 count = count + 1
1AC4   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AC5   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC6   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC7   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AC8   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AC9   0000           02154                 nop
  00000023            02155                 count = count + 1
1ACA   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1ACB   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ACC   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ACD   0080           02152                 movwf INDF                                              ;Save to QUEUE
1ACE   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1ACF   0000           02154                 nop
  00000024            02155                 count = count + 1
1AD0   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AD1   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD2   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD3   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AD4   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AD5   0000           02154                 nop
  00000025            02155                 count = count + 1
1AD6   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AD7   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD8   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD9   0080           02152                 movwf INDF                                              ;Save to QUEUE
1ADA   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1ADB   0000           02154                 nop
  00000026            02155                 count = count + 1
1ADC   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1ADD   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ADE   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ADF   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AE0   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AE1   0000           02154                 nop
  00000027            02155                 count = count + 1
1AE2   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AE3   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE4   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE5   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AE6   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AE7   0000           02154                 nop
  00000028            02155                 count = count + 1
1AE8   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AE9   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEA   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AEB   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AEC   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AED   0000           02154                 nop
  00000029            02155                 count = count + 1
1AEE   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AEF   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF0   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF1   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AF2   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AF3   0000           02154                 nop
  0000002A            02155                 count = count + 1
1AF4   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AF5   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF6   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF7   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AF8   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AF9   0000           02154                 nop
  0000002B            02155                 count = count + 1
1AFA   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1AFB   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFC   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFD   0080           02152                 movwf INDF                                              ;Save to QUEUE
1AFE   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1AFF   0000           02154                 nop
  0000002C            02155                 count = count + 1
1B00   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B01   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B02   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B03   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B04   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B05   0000           02154                 nop
  0000002D            02155                 count = count + 1
1B06   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B07   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B08   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B09   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B0A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B0B   0000           02154                 nop
  0000002E            02155                 count = count + 1
1B0C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B0D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B10   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B11   0000           02154                 nop
  0000002F            02155                 count = count + 1
1B12   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B13   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B14   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B15   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B16   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B17   0000           02154                 nop
  00000030            02155                 count = count + 1
1B18   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B19   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B1A   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1B   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B1C   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B1D   0000           02154                 nop
  00000031            02155                 count = count + 1
1B1E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B1F   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B20   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B21   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B22   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B23   0000           02154                 nop
  00000032            02155                 count = count + 1
1B24   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B25   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B26   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B27   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B28   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B29   0000           02154                 nop
  00000033            02155                 count = count + 1
1B2A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B2B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B2E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B2F   0000           02154                 nop
  00000034            02155                 count = count + 1
1B30   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B31   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B32   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B33   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B34   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B35   0000           02154                 nop
  00000035            02155                 count = count + 1
1B36   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B37   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B38   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B39   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B3A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B3B   0000           02154                 nop
  00000036            02155                 count = count + 1
1B3C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B3D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B40   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B41   0000           02154                 nop
  00000037            02155                 count = count + 1
1B42   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B43   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B44   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B45   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B46   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B47   0000           02154                 nop
  00000038            02155                 count = count + 1
1B48   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B49   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4A   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4B   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B4C   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B4D   0000           02154                 nop
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            02155                 count = count + 1
1B4E   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B4F   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B50   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B51   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B52   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B53   0000           02154                 nop
  0000003A            02155                 count = count + 1
1B54   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B55   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B56   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B57   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B58   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B59   0000           02154                 nop
  0000003B            02155                 count = count + 1
1B5A   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B5B   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5C   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5D   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B5E   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B5F   0000           02154                 nop
  0000003C            02155                 count = count + 1
1B60   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B61   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B62   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B63   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B64   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B65   0000           02154                 nop
  0000003D            02155                 count = count + 1
1B66   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B67   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B68   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B69   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B6A   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B6B   0000           02154                 nop
  0000003E            02155                 count = count + 1
1B6C   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B6D   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6E   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6F   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B70   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B71   0000           02154                 nop
  0000003F            02155                 count = count + 1
1B72   0808           02149                 movf ADC_DATAPORT, W                    ;Save Sample
1B73   1409           02150                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B74   1009           02151                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B75   0080           02152                 movwf INDF                                              ;Save to QUEUE
1B76   0A84           02153                 incf FSR, F                                             ;Increment QUEUE pointer
1B77   0000           02154                 nop
  00000040            02155                 count = count + 1
                      02156         endw
1B78   0808           02157         movf ADC_DATAPORT, W
1B79   1409           02158         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B7A   1009           02159         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1B7B   0080           02160         movwf INDF
1B7C   1784           02161         bsf FSR, 7                                                      ;goto bank 2
1B7D   0000           02162         nop
  00000001            02163         count = 1
                      02164         while count < D'22'
1B7E   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B7F   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B80   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B81   0080           02168                 movwf INDF                                              ;Save to QUEUE
1B82   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1B83   0000           02170                 nop
  00000002            02171                 count = count + 1
1B84   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B85   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B86   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B87   0080           02168                 movwf INDF                                              ;Save to QUEUE
1B88   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1B89   0000           02170                 nop
  00000003            02171                 count = count + 1
1B8A   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B8B   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B8C   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B8D   0080           02168                 movwf INDF                                              ;Save to QUEUE
1B8E   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1B8F   0000           02170                 nop
  00000004            02171                 count = count + 1
1B90   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B91   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B92   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B93   0080           02168                 movwf INDF                                              ;Save to QUEUE
1B94   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1B95   0000           02170                 nop
  00000005            02171                 count = count + 1
1B96   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B97   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B98   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B99   0080           02168                 movwf INDF                                              ;Save to QUEUE
1B9A   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1B9B   0000           02170                 nop
  00000006            02171                 count = count + 1
1B9C   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1B9D   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B9E   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B9F   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BA0   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BA1   0000           02170                 nop
  00000007            02171                 count = count + 1
1BA2   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BA3   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA4   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA5   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BA6   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BA7   0000           02170                 nop
  00000008            02171                 count = count + 1
1BA8   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BA9   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BAA   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BAB   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BAC   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BAD   0000           02170                 nop
  00000009            02171                 count = count + 1
1BAE   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BAF   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB0   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB1   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BB2   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BB3   0000           02170                 nop
  0000000A            02171                 count = count + 1
1BB4   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BB5   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB6   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB7   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BB8   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BB9   0000           02170                 nop
  0000000B            02171                 count = count + 1
1BBA   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BBB   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBC   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBD   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BBE   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BBF   0000           02170                 nop
  0000000C            02171                 count = count + 1
1BC0   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BC1   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC2   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC3   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BC4   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BC5   0000           02170                 nop
  0000000D            02171                 count = count + 1
1BC6   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BC7   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC8   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC9   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BCA   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BCB   0000           02170                 nop
  0000000E            02171                 count = count + 1
1BCC   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BCD   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCE   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCF   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BD0   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BD1   0000           02170                 nop
  0000000F            02171                 count = count + 1
1BD2   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BD3   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BD4   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD5   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BD6   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BD7   0000           02170                 nop
  00000010            02171                 count = count + 1
1BD8   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BD9   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDA   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDB   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BDC   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BDD   0000           02170                 nop
  00000011            02171                 count = count + 1
1BDE   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BDF   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE0   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE1   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BE2   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BE3   0000           02170                 nop
  00000012            02171                 count = count + 1
1BE4   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BE5   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE6   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE7   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BE8   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BE9   0000           02170                 nop
  00000013            02171                 count = count + 1
1BEA   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BEB   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BEC   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BED   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BEE   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BEF   0000           02170                 nop
  00000014            02171                 count = count + 1
1BF0   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BF1   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF2   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF3   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BF4   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BF5   0000           02170                 nop
  00000015            02171                 count = count + 1
1BF6   0808           02165                 movf ADC_DATAPORT, W                    ;Sample
1BF7   1409           02166                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF8   1009           02167                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF9   0080           02168                 movwf INDF                                              ;Save to QUEUE
1BFA   0384           02169                 decf FSR, F                                             ;Increment QUEUE pointer
1BFB   0000           02170                 nop
  00000016            02171                 count = count + 1
                      02172         endw
1BFC   0808           02173         movf ADC_DATAPORT, W                            ;Sample
1BFD   1409           02174         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02175         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1BFE   160A               M                 bsf PCLATH, 4
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1BFF   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1C00   2ED5               M         goto SampleRep5MEndC
                      02176 
1C01                  02177 SampleRep2MStep2
1C01   2C02           02178         goto $ + 1                                                      ;Delay 2
1C02   1009           02179         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1C03   2C04           02180         goto $ + 1                                                      ;Wait three cycles
1C04   0000           02181         nop
  0000                02182         local count
  00000001            02183         count = 1
                      02184         while count < D'42'
1C05   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C06   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C07   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C08   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C09   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C0A   0000           02190                 nop
  00000002            02191                 count = count + 1
1C0B   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C0C   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C0D   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C0E   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C0F   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C10   0000           02190                 nop
  00000003            02191                 count = count + 1
1C11   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C12   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C13   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C14   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C15   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C16   0000           02190                 nop
  00000004            02191                 count = count + 1
1C17   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C18   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C19   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1A   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C1B   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C1C   0000           02190                 nop
  00000005            02191                 count = count + 1
1C1D   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C1E   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1F   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C20   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C21   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C22   0000           02190                 nop
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            02191                 count = count + 1
1C23   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C24   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C25   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C26   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C27   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C28   0000           02190                 nop
  00000007            02191                 count = count + 1
1C29   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C2A   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C2B   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C2C   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C2D   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C2E   0000           02190                 nop
  00000008            02191                 count = count + 1
1C2F   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C30   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C31   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C32   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C33   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C34   0000           02190                 nop
  00000009            02191                 count = count + 1
1C35   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C36   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C37   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C38   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C39   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C3A   0000           02190                 nop
  0000000A            02191                 count = count + 1
1C3B   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C3C   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3D   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3E   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C3F   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C40   0000           02190                 nop
  0000000B            02191                 count = count + 1
1C41   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C42   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C43   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C44   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C45   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C46   0000           02190                 nop
  0000000C            02191                 count = count + 1
1C47   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C48   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C49   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C4A   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C4B   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C4C   0000           02190                 nop
  0000000D            02191                 count = count + 1
1C4D   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C4E   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4F   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C50   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C51   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C52   0000           02190                 nop
  0000000E            02191                 count = count + 1
1C53   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C54   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C55   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C56   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C57   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C58   0000           02190                 nop
  0000000F            02191                 count = count + 1
1C59   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C5A   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5B   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5C   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C5D   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C5E   0000           02190                 nop
  00000010            02191                 count = count + 1
1C5F   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C60   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C61   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C62   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C63   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C64   0000           02190                 nop
  00000011            02191                 count = count + 1
1C65   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C66   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C67   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C68   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C69   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C6A   0000           02190                 nop
  00000012            02191                 count = count + 1
1C6B   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C6C   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6D   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6E   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C6F   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C70   0000           02190                 nop
  00000013            02191                 count = count + 1
1C71   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C72   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C73   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C74   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C75   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C76   0000           02190                 nop
  00000014            02191                 count = count + 1
1C77   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C78   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C79   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7A   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C7B   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C7C   0000           02190                 nop
  00000015            02191                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C7D   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C7E   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7F   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C80   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C81   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C82   0000           02190                 nop
  00000016            02191                 count = count + 1
1C83   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C84   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C85   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C86   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C87   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C88   0000           02190                 nop
  00000017            02191                 count = count + 1
1C89   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C8A   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8B   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8C   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C8D   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C8E   0000           02190                 nop
  00000018            02191                 count = count + 1
1C8F   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C90   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C91   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C92   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C93   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C94   0000           02190                 nop
  00000019            02191                 count = count + 1
1C95   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C96   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C97   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C98   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C99   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1C9A   0000           02190                 nop
  0000001A            02191                 count = count + 1
1C9B   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1C9C   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9D   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9E   0080           02188                 movwf INDF                                              ;Save to QUEUE
1C9F   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CA0   0000           02190                 nop
  0000001B            02191                 count = count + 1
1CA1   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CA2   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA3   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA4   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CA5   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CA6   0000           02190                 nop
  0000001C            02191                 count = count + 1
1CA7   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CA8   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA9   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAA   0080           02188                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CAB   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CAC   0000           02190                 nop
  0000001D            02191                 count = count + 1
1CAD   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CAE   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAF   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB0   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CB1   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CB2   0000           02190                 nop
  0000001E            02191                 count = count + 1
1CB3   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CB4   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB5   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB6   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CB7   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CB8   0000           02190                 nop
  0000001F            02191                 count = count + 1
1CB9   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CBA   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBB   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBC   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CBD   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CBE   0000           02190                 nop
  00000020            02191                 count = count + 1
1CBF   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CC0   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC1   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC2   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CC3   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CC4   0000           02190                 nop
  00000021            02191                 count = count + 1
1CC5   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CC6   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC7   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC8   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CC9   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CCA   0000           02190                 nop
  00000022            02191                 count = count + 1
1CCB   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CCC   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCD   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCE   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CCF   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CD0   0000           02190                 nop
  00000023            02191                 count = count + 1
1CD1   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CD2   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD3   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD4   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CD5   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CD6   0000           02190                 nop
  00000024            02191                 count = count + 1
1CD7   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CD8   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD9   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDA   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CDB   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CDC   0000           02190                 nop
  00000025            02191                 count = count + 1
1CDD   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CDE   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDF   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE0   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CE1   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CE2   0000           02190                 nop
  00000026            02191                 count = count + 1
1CE3   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CE4   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE5   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE6   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CE7   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CE8   0000           02190                 nop
  00000027            02191                 count = count + 1
1CE9   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CEA   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CEB   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEC   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CED   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CEE   0000           02190                 nop
  00000028            02191                 count = count + 1
1CEF   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CF0   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF1   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF2   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CF3   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CF4   0000           02190                 nop
  00000029            02191                 count = count + 1
1CF5   0808           02185                 movf ADC_DATAPORT, W                    ;Sample
1CF6   1409           02186                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF7   1009           02187                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF8   0080           02188                 movwf INDF                                              ;Save to QUEUE
1CF9   0384           02189                 decf FSR, F                                             ;Increment QUEUE pointer
1CFA   0000           02190                 nop
  0000002A            02191                 count = count + 1
                      02192         endw
1CFB   0808           02193         movf ADC_DATAPORT, W
1CFC   1409           02194         bsf ADC_CONTROLPORT, RDD
1CFD   1009           02195         bcf ADC_CONTROLPORT, RDD
1CFE   0080           02196         movwf INDF
1CFF   1783           02197         bsf STATUS, IRP                                         ;goto bank 4
1D00   0000           02198         nop
  00000001            02199         count = 1
                      02200         while count < D'43'
1D01   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D02   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D03   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D04   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D05   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D06   0000           02206                 nop
  00000002            02207                 count = count + 1
1D07   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D08   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D09   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0A   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D0B   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D0C   0000           02206                 nop
  00000003            02207                 count = count + 1
1D0D   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D0E   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0F   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D10   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D11   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D12   0000           02206                 nop
  00000004            02207                 count = count + 1
1D13   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D14   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D15   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D16   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D17   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D18   0000           02206                 nop
  00000005            02207                 count = count + 1
1D19   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D1A   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1B   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1C   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D1D   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D1E   0000           02206                 nop
  00000006            02207                 count = count + 1
1D1F   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D20   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D21   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D22   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D23   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D24   0000           02206                 nop
  00000007            02207                 count = count + 1
1D25   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D26   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D27   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D28   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D29   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D2A   0000           02206                 nop
  00000008            02207                 count = count + 1
1D2B   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D2C   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2D   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2E   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D2F   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D30   0000           02206                 nop
  00000009            02207                 count = count + 1
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D31   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D32   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D33   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D34   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D35   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D36   0000           02206                 nop
  0000000A            02207                 count = count + 1
1D37   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D38   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D39   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3A   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D3B   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D3C   0000           02206                 nop
  0000000B            02207                 count = count + 1
1D3D   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D3E   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3F   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D40   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D41   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D42   0000           02206                 nop
  0000000C            02207                 count = count + 1
1D43   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D44   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D45   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D46   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D47   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D48   0000           02206                 nop
  0000000D            02207                 count = count + 1
1D49   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D4A   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4B   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4C   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D4D   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D4E   0000           02206                 nop
  0000000E            02207                 count = count + 1
1D4F   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D50   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D51   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D52   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D53   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D54   0000           02206                 nop
  0000000F            02207                 count = count + 1
1D55   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D56   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D57   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D58   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D59   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D5A   0000           02206                 nop
  00000010            02207                 count = count + 1
1D5B   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D5C   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5D   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5E   0080           02204                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D5F   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D60   0000           02206                 nop
  00000011            02207                 count = count + 1
1D61   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D62   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D63   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D64   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D65   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D66   0000           02206                 nop
  00000012            02207                 count = count + 1
1D67   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D68   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D69   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6A   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D6B   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D6C   0000           02206                 nop
  00000013            02207                 count = count + 1
1D6D   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D6E   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6F   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D70   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D71   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D72   0000           02206                 nop
  00000014            02207                 count = count + 1
1D73   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D74   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D75   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D76   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D77   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D78   0000           02206                 nop
  00000015            02207                 count = count + 1
1D79   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D7A   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7B   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7C   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D7D   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D7E   0000           02206                 nop
  00000016            02207                 count = count + 1
1D7F   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D80   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D81   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D82   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D83   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D84   0000           02206                 nop
  00000017            02207                 count = count + 1
1D85   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D86   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D87   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D88   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D89   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D8A   0000           02206                 nop
  00000018            02207                 count = count + 1
1D8B   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D8C   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8D   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8E   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D8F   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D90   0000           02206                 nop
  00000019            02207                 count = count + 1
1D91   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D92   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D93   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D94   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D95   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D96   0000           02206                 nop
  0000001A            02207                 count = count + 1
1D97   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D98   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D99   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9A   0080           02204                 movwf INDF                                              ;Save to QUEUE
1D9B   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1D9C   0000           02206                 nop
  0000001B            02207                 count = count + 1
1D9D   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1D9E   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9F   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA0   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DA1   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DA2   0000           02206                 nop
  0000001C            02207                 count = count + 1
1DA3   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DA4   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA5   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA6   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DA7   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DA8   0000           02206                 nop
  0000001D            02207                 count = count + 1
1DA9   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DAA   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAB   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAC   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DAD   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DAE   0000           02206                 nop
  0000001E            02207                 count = count + 1
1DAF   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DB0   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB1   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB2   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DB3   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DB4   0000           02206                 nop
  0000001F            02207                 count = count + 1
1DB5   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DB6   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB7   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB8   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DB9   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DBA   0000           02206                 nop
  00000020            02207                 count = count + 1
1DBB   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DBC   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBD   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBE   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DBF   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DC0   0000           02206                 nop
  00000021            02207                 count = count + 1
1DC1   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DC2   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC3   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC4   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DC5   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DC6   0000           02206                 nop
  00000022            02207                 count = count + 1
1DC7   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DC8   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC9   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCA   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DCB   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DCC   0000           02206                 nop
  00000023            02207                 count = count + 1
1DCD   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DCE   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCF   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD0   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DD1   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DD2   0000           02206                 nop
  00000024            02207                 count = count + 1
1DD3   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DD4   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD5   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD6   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DD7   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DD8   0000           02206                 nop
  00000025            02207                 count = count + 1
1DD9   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DDA   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDB   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDC   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DDD   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DDE   0000           02206                 nop
  00000026            02207                 count = count + 1
1DDF   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DE0   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DE1   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE2   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DE3   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DE4   0000           02206                 nop
  00000027            02207                 count = count + 1
1DE5   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DE6   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DE7   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE8   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DE9   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DEA   0000           02206                 nop
  00000028            02207                 count = count + 1
1DEB   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DEC   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DED   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DEE   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DEF   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DF0   0000           02206                 nop
  00000029            02207                 count = count + 1
1DF1   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DF2   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF3   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF4   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DF5   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DF6   0000           02206                 nop
  0000002A            02207                 count = count + 1
1DF7   0808           02201                 movf ADC_DATAPORT, W                    ;Sample
1DF8   1409           02202                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF9   1009           02203                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFA   0080           02204                 movwf INDF                                              ;Save to QUEUE
1DFB   0A84           02205                 incf FSR, F                                             ;Increment QUEUE pointer
1DFC   0000           02206                 nop
  0000002B            02207                 count = count + 1
                      02208         endw
1DFD   0808           02209         movf ADC_DATAPORT, W                            ;Sample
1DFE   1409           02210         bsf ADC_CONTROLPORT, RDD
                      02211         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1DFF   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1E00   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1E01   2ED2               M         goto SampleRep5MEndA
                      02212 
1E02                  02213 SampleRep2MStep3
1E02   2E03           02214         goto $ + 1                                                      ;Delay 4
                      02215         if (Sample833kEnd & (0x1000))
1E03   160A           02216                 bsf PCLATH, 4
                      02217         else
                      02218                 bcf PCLATH, 4
                      02219         endif
                      02220         if (Sample833kEnd & (0x800))
                      02221                 bsf PCLATH, 3
                      02222         else
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E04   118A           02223                 bcf PCLATH, 3
                      02224         endif
1E05   1009           02225         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1E06   0000           02226         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1E07   2BBD           02227         goto Sample833kEnd
                      02228 
                      02229 
                      02230 ;=============================================================================
                      02231 end             ;end of program
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 204


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       0000010F
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BANK0                             00000000
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 205


SYMBOL TABLE
  LABEL                             VALUE 

BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1SEL                            00000001
CH1SELG                           00000004
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   00000220
ChannelConfStore                  0000022C
ConfReceive                       000001E3
ConfReceiveRateOnly               000001FA
ConfSend                          00000205
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             00000104
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

DelayFive                         0000041A
DelayLoop                         00000105
DelaySeven                        00000419
DelayTwo                          0000041C
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           000000EE
GetByteB                          000000F0
GetByteC                          000000F4
GetByteD                          000000F8
GetByteE                          000000FC
HTS                               00000002
I2C_DATA                          00000005
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000050
IntHandler                        00000004
IrqServiceTimer1                  00000114
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000075
MainB                             00000077
MainSelect                        00000011
MainWTrigB                        00000095
MainWaitTrig                      00000084
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           000000FF
PutByteSerial                     000000FF
R                                 00000002
RBIE                              00000003
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000004B0
Sample1MhzEnd                     000008B5
Sample250kA                       000003CA
Sample250kB                       000003E1
Sample250kC                       000003F8
Sample250kD                       0000040F
Sample417k250k                    000003BA
Sample417kA                       000003CB
Sample417kB                       000003E2
Sample417kC                       000003F9
Sample417kD                       00000410
Sample417kLoopA                   000003C3
Sample417kLoopB                   000003DA
Sample417kLoopC                   000003F1
Sample417kLoopD                   00000408
Sample625k                        00000377
Sample625kLoopA                   0000037D
Sample625kLoopB                   0000038D
Sample625kLoopC                   0000039D
Sample625kLoopD                   000003AD
Sample833k                        00000FB7
Sample833kEnd                     000013BD
SampleDelayed                     00000269
SampleDelayedLoopA                00000274
SampleDelayedLoopB                0000028E
SampleDelayedLoopC                000002A8
SampleDelayedLoopD                000002C2
SampleIntDrvn                     00000165
SampleRealTime                    000001E2
SampleRep2M                       000019ED
SampleRep2MPickEn                 000019FA
SampleRep2MPickSt                 000019F1
SampleRep2MStep1                  000019FA
SampleRep2MStep2                  00001C01
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2MStep3                  00001E02
SampleRep5M                       000015BA
SampleRep5MEndA                   000016D2
SampleRep5MEndB                   000016D7
SampleRep5MEndC                   000016D5
SampleRep5MPickEn                 000015CD
SampleRep5MPickSt                 000015BE
SampleRep5MStep1                  000015CD
SampleRep5MStep2                  000016DD
SampleRep5MStep3                  000017E0
SampleRep5MStep4                  000018E3
SampleRep5MStep5                  000019E7
SampleXY250k192k                  0000041D
SampleXY250kLA                    0000042C
SampleXY250kLB                    00000450
SampleXY250kLC                    00000474
SampleXY250kLD                    00000498
SampleXY417k                      000009B4
SampleXYDelayed                   000002D4
SampleXYDelayedLA                 000002E6
SampleXYDelayedLB                 0000030E
SampleXYDelayedLC                 00000336
SampleXYDelayedLD                 0000035E
StSample417kLoopB                 000003DF
StSample417kLoopC                 000003F6
StSample417kLoopD                 0000040D
StSampleDelayedLoopA              00000279
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000A0
WaitComm_Break                    000000E6
WaitComm_Conf                     000000D4
WaitComm_Data                     000000A1
WaitComm_Rec                      000000DD
WaitComm_SendDataA                000000AC
WaitComm_SendDataB                000000B6
WaitComm_SendDataC                000000C0
WaitComm_SendDataD                000000CA
WaitComm_SendDataExit             000000D0
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000066
b0_sampleAddr                     00000064
b0_sampleBank                     00000065
b0_triggerDelay1                  00000060
b0_triggerDelay2                  00000061
b0_triggerDelay3                  00000062
b0_triggerLevel                   00000063
b0_unused0                        0000006F
b0_unused1                        0000006E
b0_unused2                        0000006D
b0_unused3                        0000006C
b0_unused4                        0000006B
b0_unused5                        0000006A
b0_unused6                        00000069
b0_unused7                        00000068
b0_unused8                        00000067
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

b1_unusedD                        000000E2
b1_unusedE                        000000E1
b1_unusedF                        000000E0
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000073
gbl_cntrb                         00000074
gbl_cntrc                         00000075
gbl_configLoc1                    00000070
gbl_dataConfig                    00000079
gbl_modetemp                      00000076
gbl_modetempb                     00000077
gbl_pclath_temp                   0000007C
gbl_sampleRate1                   00000071
gbl_sampleRate2                   00000072
gbl_spdata                        00000078
gbl_status_temp                   0000007B
gbl_unused0                       0000007F
gbl_unused1                       0000007E
gbl_unused2                       0000007D
gbl_w_temp                        0000007A
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

ih_1                              0000000A
ih_2                              00000042
ih_3                              0000004B
irqst1_1                          00000139
irqst1_2                          0000013B
irqst1_3                          0000013D
irqst1_4                          0000013F
irqst1_5                          00000160
sid_Exit                          000001DC
sid_GetByte                       0000017A
sid_GetByteB                      00000182
sid_GetByteC                      00000186
sid_GetByteD                      0000018A
sid_GetByteE                      0000018E
sid_WaitComm_Break                000001D4
sid_WaitComm_Conf                 000001C2
sid_WaitComm_Data                 00000190
sid_WaitComm_Rec                  000001CB
sid_WaitComm_SendDataA            0000019C
sid_WaitComm_SendDataB            000001A6
sid_WaitComm_SendDataC            000001B0
sid_WaitComm_SendDataD            000001BA
sid_WaitComm_SendDataExit         000001C0
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 218


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 219


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45          DSOSCOPEA03_20120924.ASM   9-26-2012  8:56:52         PAGE 220


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXX-------- ---------------- ---------------- ----------------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7688
Program Memory Words Free:   504


Errors   :     0
Warnings :     0 reported,  1129 suppressed
Messages :    16 reported,    26 suppressed

