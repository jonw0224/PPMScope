MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE DESCRIPTION************************************
                      00040 ;NEW VERSION CREATED:   A02
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;
                      00047 ;NEW VERSION CREATED:   A03
                      00048 ;       20120908.1 - by PM
                      00049 ;               Started making changes to add an interrupt driven sampling mode.  The
                      00050 ;               interrupt driven sampling mode will only be use for the slower speed
                      00051 ;               acquisitions... probably 1mSec/sample and slower.  At that
                      00052 ;               speed (1mSec/sample) it would take:
                      00053 ;                   (1mSec/sample)*256 samples = 0.256 seconds for a full capture.
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;               The intent of the interrupt driven sampling mode is to allow the
                      00055 ;               DSOscope to update the PC screen as it continues to sample the data
                      00056 ;               for an acquisition.  Currently the PC has to wait for the full capture
                      00057 ;               to be completed before the screen gets updated.  On very slow sample
                      00058 ;               speeds, it looks like the scope has died or is not doing anything.
                      00059 ;               Then, all of a sudden it finishes its sampling and the PC screen is
                      00060 ;               showing the new captured waveform.  With an interrupt driven method,
                      00061 ;               the PC screen can be continuously painted in with the slow, newly
                      00062 ;               arriving, waveform.
                      00063 ;       20120914.1 - by PM
                      00064 ;               Code changes for an interrupt driven sampling mode completed.  First
                      00065 ;               test attempt failed... duh, what did I expect! ;-)   time for debug!
                      00066 ;       20120922.1 - by PM
                      00067 ;               Many debug fixes and corrections.
                      00068 ;               Re-arranged interrupt driven sampling code additions per Jonathan Weaver's
                      00069 ;               suggestions to reduce interrupt latency and eliminate many/most pagesel's.
                      00070 ;
                      00071 ;*****END PM DSOscope CHANGE DESCRIPTION**************************************
                      00072 ;
                      00073 ;
                      00074 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00075 ;
                      00076 ;This program is free software; you can redistribute it and/or modify it under
                      00077 ;the terms of the GNU General Public License as published by the Free Software
                      00078 ;Foundation; either version 2 of the License, or (at your option) any later
                      00079 ;version.
                      00080 ;
                      00081 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00082 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00083 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00084 ;details.
                      00085 ;
                      00086 ;You should have received a copy of the GNU General Public License along with
                      00087 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00088 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00089 ;
                      00090 ;==============================================================================
                      00091 
                      00092 ;=============================================================================
                      00093 ; C O N F I G U R A T I O N
                      00094 ;=============================================================================
                      00095 
                      00096         LIST P=16F887
                      00097 
                      00098         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00099 
                      00100 
                      00101 ;*****************************************************
                      00102 ;       === Configuration Word Definitions ===
                      00103 ;*****************************************************
                      00104 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00105 
                      00106 ; '__CONFIG' directive is used to embed configuration data within .asm file.
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; The labels following the directive are located in the respective .inc file.
                      00108 ; See respective data sheet for additional information on configuration word.
                      00109 
2007   20F2           00110         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00111         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00112 
                      00113 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00114 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00115 
2000   0001 0002 0003 00116         __idlocs        0x1234
       0004 
                      00117 
  00000020            00118         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00119 
                      00120 ;=============================================================================
                      00121 ; C O N S T A N T S
                      00122 ;=============================================================================
                      00123 
  00000000            00124 BANK0                   equ     0x0000  ;Starting addresses for Special Function Register memory
  00000080            00125 BANK1                   equ     0x0080
  00000100            00126 BANK2                   equ     0x0100
  00000180            00127 BANK3                   equ     0x0180
                      00128 
  00000020            00129 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00130 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00131                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00132                                                         ;the data points alternate between channel 1 and
                      00133                                                         ;channel 2
  0000005F            00134 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00135 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00136 
                      00137 ;I/O Pin maps
                      00138 ;-----------------------------------------------------------------------------
  00000007            00139         SERIALPORT      set     PORTC
  00000007            00140                 RX              equ     0x07
  00000006            00141                 TX              equ     0x06
                      00142 
  00000009            00143         ADC_CONTROLPORT set     PORTE
  00000000            00144                 RDD             equ     0x00
  00000001            00145                 ADDR0   equ     0x01
                      00146 
  00000006            00147         TRIGGERPORT     set     PORTB
  00000000            00148                 TRIGGER equ     0x00
                      00149 
  00000006            00150         ADC_PORT        set     PORTB
  00000003            00151                 ADDR2   equ     0x03
  00000002            00152                 ADDR1   equ     0x02
  00000001            00153                 CS              equ     0x01
                      00154 
  00000008            00155         ADC_DATAPORT    set     PORTD
                      00156 
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00157         ANALOG_SEL      set     PORTC
  00000001            00158                 CH1SEL  equ     0x01
  00000002            00159                 CH2SEL  equ     0x02
                      00160 
  00000005            00161         ANALOG_GAIN     set     PORTA
  00000000            00162                 GAIN1   equ     0x00
  00000001            00163                 GAIN5   equ     0x01
  00000004            00164                 CH1SELG equ     0x04
  00000005            00165                 CH2SELG equ     0x05
                      00166 
  00000007            00167         ANALOG_ACDC     set     PORTC
  00000000            00168                 ACDCMODE        equ     0x00
                      00169 
                      00170 ;Configuration memory map
                      00171 ;-----------------------------------------------------------------------------
                      00172 ;Bit map for gbl_configLoc1
  00000007            00173         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00174         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00175         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00176         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00177         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00178         FREQMODEBIT2            equ     0x02
  00000001            00179         FREQMODEBIT1            equ     0x01
  00000000            00180         FREQMODEBIT0            equ     0x00
                      00181 
                      00182 ;Bit map for b0_sampleBank                      ;Be careful!, watch the order of these!
  00000002            00183         SAMPLEBANK3                     equ     0x02
  00000003            00184         SAMPLEBANK2                     equ     0x03
  00000001            00185         SAMPLEBANK1                     equ     0x01
  00000000            00186         SAMPLEBANK0                     equ     0x00
                      00187 
                      00188 
                      00189 ;Table of frequency modes, 0 to 15
  00000000            00190         FREQSAMPLE1M            equ     D'0'
  00000001            00191         FREQSAMPLE833K          equ     D'1'
  00000002            00192         FREQSAMPLE625K          equ     D'2'
  00000003            00193         FREQSAMPLE417K          equ     D'3'
  00000004            00194         FREQSAMPLE250K          equ     D'4'
  00000005            00195         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00196         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00197         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00198         FREQSAMPLEXY417K        equ     D'8'
  00000009            00199         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00200         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00201         FREQSAMPLEXYDELAYED     equ     D'11'
  0000000C            00202         FREQSAMPLEINTDRVN       equ     D'12'   ;Interrupt Driven Sample Mode
                      00203 
                      00204 
                      00205 ;=============================================================================
                      00206 ; V A R I A B L E S
                      00207 ;=============================================================================
                      00208 
                      00209         ;Global General Purpose Registers, accessible anywhere
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210 CBLOCK  0x70
  00000070            00211         gbl_configLoc1                  ;Configuration mode
  00000071            00212         gbl_sampleRate1                 ;sample rate delay (2 bytes)
  00000072            00213         gbl_sampleRate2
  00000073            00214         gbl_cntra                               ;general use counter
  00000074            00215         gbl_cntrb                               ;second counter
  00000075            00216         gbl_cntrc                               ;third counter
  00000076            00217         gbl_modetemp                    ;temporary mode variable
  00000077            00218         gbl_modetempb                   ;temporary mode for repetitive sampling
  00000078            00219         gbl_spdata                              ;data to/from serial port
  00000079            00220         gbl_dataConfig                  ;the data configuration
  0000007A            00221         gbl_w_temp                              ;temp storage for w register during interrupt handling
  0000007B            00222         gbl_status_temp                 ;temp storage for status register during interrupt handling
  0000007C            00223         gbl_pclath_temp                 ;temp storage for pclath register during interrupt handling
  0000007D            00224         gbl_unused2
  0000007E            00225         gbl_unused1
  0000007F            00226         gbl_unused0
                      00227 ENDC
                      00228 
                      00229         ;Bank0 General Purpose Registers
                      00230 CBLOCK  0x60
  00000060            00231         b0_triggerDelay1                ;trigger delay (3 bytes)
  00000061            00232         b0_triggerDelay2
  00000062            00233         b0_triggerDelay3
  00000063            00234         b0_triggerLevel                 ;the trigger level
  00000064            00235         b0_sampleAddr                   ;address to store ADC sampled value
  00000065            00236         b0_sampleBank                   ;bank to store ADC sampled value
  00000066            00237         b0_fsr_temp                             ;temp storage for fsr register during interrupt handling
  00000067            00238         b0_unused8
  00000068            00239         b0_unused7
  00000069            00240         b0_unused6
  0000006A            00241         b0_unused5
  0000006B            00242         b0_unused4
  0000006C            00243         b0_unused3
  0000006D            00244         b0_unused2
  0000006E            00245         b0_unused1
  0000006F            00246         b0_unused0
                      00247 ENDC
                      00248 
                      00249         ;Bank1 General Purpose Registers
                      00250 CBLOCK  0xE0
  000000E0            00251         b1_unusedF
  000000E1            00252         b1_unusedE
  000000E2            00253         b1_unusedD
  000000E3            00254         b1_unusedC
  000000E4            00255         b1_unusedB
  000000E5            00256         b1_unusedA
  000000E6            00257         b1_unused9
  000000E7            00258         b1_unused8
  000000E8            00259         b1_unused7
  000000E9            00260         b1_unused6
  000000EA            00261         b1_unused5
  000000EB            00262         b1_unused4
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000EC            00263         b1_unused3
  000000ED            00264         b1_unused2
  000000EE            00265         b1_unused1
  000000EF            00266         b1_unused0
                      00267 ENDC
                      00268 
                      00269         ;Bank2 General Purpose Registers
                      00270 CBLOCK  0x110
  00000110            00271         b2_unused1F
  00000111            00272         b2_unused1E
  00000112            00273         b2_unused1D
  00000113            00274         b2_unused1C
  00000114            00275         b2_unused1B
  00000115            00276         b2_unused1A
  00000116            00277         b2_unused19
  00000117            00278         b2_unused18
  00000118            00279         b2_unused17
  00000119            00280         b2_unused16
  0000011A            00281         b2_unused15
  0000011B            00282         b2_unused14
  0000011C            00283         b2_unused13
  0000011D            00284         b2_unused12
  0000011E            00285         b2_unused11
  0000011F            00286         b2_unused10
                      00287 ENDC
                      00288 CBLOCK  0x160
  00000160            00289         b2_unusedF
  00000161            00290         b2_unusedE
  00000162            00291         b2_unusedD
  00000163            00292         b2_unusedC
  00000164            00293         b2_unusedB
  00000165            00294         b2_unusedA
  00000166            00295         b2_unused9
  00000167            00296         b2_unused8
  00000168            00297         b2_unused7
  00000169            00298         b2_unused6
  0000016A            00299         b2_unused5
  0000016B            00300         b2_unused4
  0000016C            00301         b2_unused3
  0000016D            00302         b2_unused2
  0000016E            00303         b2_unused1
  0000016F            00304         b2_unused0
                      00305 ENDC
                      00306 
                      00307         ;Bank3 General Purpose Registers
                      00308 CBLOCK  0x190
  00000190            00309         b3_unused1F
  00000191            00310         b3_unused1E
  00000192            00311         b3_unused1D
  00000193            00312         b3_unused1C
  00000194            00313         b3_unused1B
  00000195            00314         b3_unused1A
  00000196            00315         b3_unused19
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000197            00316         b3_unused18
  00000198            00317         b3_unused17
  00000199            00318         b3_unused16
  0000019A            00319         b3_unused15
  0000019B            00320         b3_unused14
  0000019C            00321         b3_unused13
  0000019D            00322         b3_unused12
  0000019E            00323         b3_unused11
  0000019F            00324         b3_unused10
                      00325 ENDC
                      00326 CBLOCK  0x1E0
  000001E0            00327         b3_unusedF
  000001E1            00328         b3_unusedE
  000001E2            00329         b3_unusedD
  000001E3            00330         b3_unusedC
  000001E4            00331         b3_unusedB
  000001E5            00332         b3_unusedA
  000001E6            00333         b3_unused9
  000001E7            00334         b3_unused8
  000001E8            00335         b3_unused7
  000001E9            00336         b3_unused6
  000001EA            00337         b3_unused5
  000001EB            00338         b3_unused4
  000001EC            00339         b3_unused3
  000001ED            00340         b3_unused2
  000001EE            00341         b3_unused1
  000001EF            00342         b3_unused0
                      00343 ENDC
                      00344 
                      00345 ;=============================================================================
                      00346 ; I N C L U D E S
                      00347 ;=============================================================================
                      00348         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00349         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00350         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00351 
                      00352 
                      00353 ;=============================================================================
                      00354 ; M A C R O S
                      00355 ;=============================================================================
                      00356 
                      00357 MGOTO macro address
                      00358         if (address & (0x1000))
                      00359                 bsf PCLATH, 4
                      00360         else
                      00361                 bcf PCLATH, 4
                      00362         endif
                      00363         if (address & (0x800))
                      00364                 bsf PCLATH, 3
                      00365         else
                      00366                 bcf PCLATH, 3
                      00367         endif
                      00368         goto address
                      00369         endm
                      00370 
                      00371 
                      00372 
                      00373 
                      00374 ;=============================================================================
                      00375 ; I N T E R R U P T S
                      00376 ;=============================================================================
                      00377 
0000                  00378 org 0x0000      ;Reset Vector
                      00379 ;First three lines of initialization included here to save on memory.
                      00380         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00381         clrf ADC_DATAPORT
0003   2850           00382         goto Initial
                      00383 
0004                  00384 org 0x0004      ;Interrupt Vector
0004                  00385 IntHandler
                      00386         ;Save the current state
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   00FA           00387     movwf       gbl_w_temp                                      ;Save off current W register contents
0005   0E03           00388         swapf   STATUS,W                                        ;Move status register into W register
0006   00FB           00389         movwf   gbl_status_temp                         ;Save off contents of a "swapped" STATUS registe
                            r
                      00390 
                      00391         ;Now to handle the pending interrupt (it should be either a trigger interrupt or a Timer1 interr
                            upt)
                      00392         ;Note: Interrupt flag bits are set regardless of the enable bit... so, we need to validate that
                      00393         ; the interrupt is truly enabled before acting on the flag state.
                      00394 ;       comf    INTCON, W                                       ;Check for trigger interrupt and its ena
                            ble bit
                      00395 ;       andlw   (1<<INTF)|(1<<INTE)
                      00396 ;       btfss   STATUS, Z
                      00397 ;               goto ih_2
                      00398 
                      00399         ;HOWEVER, we can shorten/speed up this interrupt check!  Since we only enable the trigger
                      00400         ; interrupt when we are actually looking for it, and since we only enter this routine if
                      00401         ; we have an interrupt, we can shorten the trigger interrupt check to just look at the
                      00402         ; enable being active:
0007   1E0B           00403         btfss   INTCON, INTE                            ;Check for trigger interrupt being enabled
0008   2842           00404                 goto    ih_2
0009   120B           00405         bcf             INTCON, INTE                            ;It was a trigger interrupt, turn off th
                            e trigger interrupt
                      00406                                                                                 ; for the duration of th
                            e acquisition
000A                  00407 ih_1
000A   0BF3           00408         decfsz gbl_cntra, f                                     ;Count down the trigger delay, 0x010101 
                            implies minimum delay
000B   280A           00409                 goto ih_1
000C   0BF4           00410         decfsz gbl_cntrb, f
000D   280A           00411                 goto ih_1
000E   0BF5           00412         decfsz gbl_cntrc, f
000F   280A           00413                 goto ih_1
0010   0876           00414         movf gbl_modetemp, w
                      00415 
0011                  00416 MainSelect
0011   0782           00417         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00418         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0012   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0013   118A               M                 bcf PCLATH, 3
                          M         endif
0014   2CBA               M         goto Sample1M
                      00419         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0015   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0016   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0017   2FC1               M         goto Sample833k
                      00420         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0018   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0019   118A               M                 bcf PCLATH, 3
                          M         endif
001A   2B81               M         goto Sample625k
                      00421         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001B   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001C   118A               M                 bcf PCLATH, 3
                          M         endif
001D   2BC4               M         goto Sample417k250k
                      00422         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001F   118A               M                 bcf PCLATH, 3
                          M         endif
0020   2BC4               M         goto Sample417k250k
                      00423         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0021   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
0022   118A               M                 bcf PCLATH, 3
                          M         endif
0023   2A73               M         goto SampleDelayed
                      00424         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0024   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0025   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0026   2DC4               M         goto SampleRep5M
                      00425         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0027   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
0028   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0029   29F7               M         goto SampleRep2M
                      00426         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
002B   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
002C   29BE               M         goto SampleXY417k
                      00427         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002E   118A               M                 bcf PCLATH, 3
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
002F   2C27               M         goto SampleXY250k192k
                      00428         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0030   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0031   118A               M                 bcf PCLATH, 3
                          M         endif
0032   2C27               M         goto SampleXY250k192k
                      00429         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0033   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0034   118A               M                 bcf PCLATH, 3
                          M         endif
0035   2ADE               M         goto SampleXYDelayed
                      00430         MGOTO SampleIntDrvn                                     ;FreqMode = 12
                          M         if (SampleIntDrvn & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0036   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleIntDrvn & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0037   118A               M                 bcf PCLATH, 3
                          M         endif
0038   296A               M         goto SampleIntDrvn
                      00431         MGOTO SampleRealTime                            ;FreqMode = 13
                          M         if (SampleRealTime & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0039   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRealTime & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003A   118A               M                 bcf PCLATH, 3
                          M         endif
003B   29EC               M         goto SampleRealTime
                      00432         MGOTO Main                                                      ;Invalid FreqMode = 14, goto beg
                            inning
                          M         if (Main    & (0x1000))
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bsf PCLATH, 4
                          M         else
003C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
003D   118A               M                 bcf PCLATH, 3
                          M         endif
003E   2879               M         goto Main
                      00433         MGOTO Main                                                      ;Invalid FreqMode = 15
                          M         if (Main    & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
003F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Main    & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0040   118A               M                 bcf PCLATH, 3
                          M         endif
0041   2879               M         goto Main
                      00434 
                      00435 
0042                  00436 ih_2
0042   1283 1303      00437         banksel BANK0                                           ;It wasn't a trigger interrupt so,
0044   1C0C           00438         btfss   PIR1, TMR1IF                            ; test to see if it was a timer 1 interrupt
0045   284B           00439                 goto    ih_3                                    ;It wasn't, so restore registers and the
                            n return from interrupt
0046   1683 1303      00440         banksel BANK1
0048   1C0C           00441         btfss   PIE1, TMR1IE                            ;Test to see if the timer interrupt is really en
                            abled
0049   284B           00442                 goto    ih_3
004A   211B           00443         call    IrqServiceTimer1                        ;service the timer1 interrupt
                      00444 
004B                  00445 ih_3
                      00446         ;restore previous state 
004B   0E7B           00447     swapf       gbl_status_temp,W                       ;retrieve copy of STATUS register and "unswap" i
                            t
004C   0083           00448     movwf   STATUS                                              ;restore pre-isr STATUS register content
                            s
004D   0EFA           00449     swapf   gbl_w_temp,F                                ;the ol' swap'er-roo to
004E   0E7A           00450     swapf   gbl_w_temp,W                                ; restore pre-isr W register contents without cl
                            obbering STATUS register
004F   0009           00451     retfie                                                              ;return from interrupt and activ
                            ate GIE
                      00452 
                      00453 
                      00454 ;=============================================================================
                      00455 ; M A I N
                      00456 ;=============================================================================
                      00457 ;Initalize for the program
                      00458 ;-----------------------------------------------------------------------------
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0050                  00459 Initial
0050   0185           00460         clrf PORTA
0051   1683 1303      00461         banksel TRISA
                      00462         MOVLF B'00010111', TRISA                        ;Configure PORTA
0053   3017               M     movlw B'00010111'
0054   0085               M     movwf TRISA
                      00463         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0055   30C0               M     movlw B'11000000'
0056   0081               M     movwf OPTION_REG
                      00464         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0057   3010               M     movlw B'00010000'
0058   008B               M     movwf INTCON
                      00465         MOVLF B'00110001', TRISB
0059   3031               M     movlw B'00110001'
005A   0086               M     movwf TRISB
                      00466         MOVLF B'11111111', TRISD
005B   30FF               M     movlw B'11111111'
005C   0088               M     movwf TRISD
                      00467         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
005D   3004               M     movlw B'00000100'
005E   0089               M     movwf TRISE
                      00468         MOVLF B'10111001', TRISC                        ;Configure PORTC
005F   30B9               M     movlw B'10111001'
0060   0087               M     movwf TRISC
                      00469 
0061   1683 1703      00470         banksel ANSEL                   ;Access bank 3
0063   0188           00471         clrf    ANSEL                   ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins rea
                            d digital
0064   0189           00472         clrf    ANSELH                  ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00473 
                      00474         ;Initialize Serial Port
                      00475 
0065   3008           00476         movlw   0x08                    ;Set the Serial Port baud rate generators
0066   0087           00477         movwf   BAUDCTL
0067   1683 1303      00478         banksel SPBRG                   ;Return to bank 1 and continue setting baud rate generators
0069   3056           00479         movlw   0x56                    ; for 57.6K baud
006A   0099           00480         movwf   SPBRG
006B   3000           00481         movlw   0x00
006C   009A           00482         movwf   SPBRGH
006D   3024           00483         movlw   0x24                    ;Set the Serial Port Transmitter configuration
006E   0098           00484         movwf   TXSTA
006F   1283 1303      00485         banksel RCSTA                   ;Access bank 0
0071   3090           00486         movlw   0x90                    ;Set the Serial Port Receiver configuration, Serial Port now ena
                            bled!
0072   0098           00487         movwf   RCSTA
                      00488 
0073   1383           00489         bcf             STATUS, IRP             ;Ensure indirect addressing of Bank0 and Bank1
0074   019F           00490         clrf    ADCON0                  ;Make sure PIC's ADC is off
0075   3001           00491         movlw   0x01                    ;Initialize the "trigger delay counter" to minimium delay
0076   00F3           00492         movwf   gbl_cntra               ; for the initial case of "RUN" button pushed with the "TRIGGER 
                            OFF"
0077   00F4           00493         movwf   gbl_cntrb               ; selection having being set
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0078   00F5           00494         movwf   gbl_cntrc
                      00495         
0079                  00496 Main
                      00497 
0079   20A4           00498         call    WaitComm                ;Call WaitComm and stay there until we have
                      00499                                                         ; received a "ConfReceive" Configuration Informa
                            tion Field
                      00500 
007A   01F7           00501         clrf    gbl_modetempb                           ;Clear the gbl_modetempb for repetitive sampling
                      00502         
007B                  00503 MainB
007B   1089           00504         bcf             ADC_CONTROLPORT, ADDR0          ;Select Channel
007C   1A70           00505         btfsc   gbl_configLoc1, CHANNELBIT
007D   1489           00506                 bsf             ADC_CONTROLPORT, ADDR0
                      00507         if (high MainSelect)
                      00508                 movlw   high MainSelect                 ;Prepare for jump
                      00509                 movwf   PCLATH
                      00510         else
007E   018A           00511                 clrf PCLATH
                      00512         endif
007F   0870           00513         movf    gbl_configLoc1, w                       ;Put configuration in WREG
0080   390F           00514         andlw   ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0))       ;Unmask 
                            FreqMode
0081   00F6           00515         movwf   gbl_modetemp                            ;Multiply by 3
0082   1003           00516         bcf             STATUS, C
0083   0DF6           00517         rlf             gbl_modetemp, f
0084   0776           00518         addwf   gbl_modetemp, w                         ; and put the result into W register for later c
                            omputed jump
0085   1086           00519         bcf             ADC_PORT, CS                            ;Select MAX118
0086   1F70           00520         btfss   gbl_configLoc1, TRIGGERENBIT    ;Decide if trigger is enabled.  If so, wait on interrupt
0087   2811           00521                 goto    MainSelect
0088                  00522 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0088   00F6           00523         movwf   gbl_modetemp                            ;Store the jump for main select (freqmode)
0089   0A62           00524         incf    b0_triggerDelay3, w                     ;Get the trigger delay ready
008A   00F3           00525         movwf   gbl_cntra
008B   0A61           00526         incf    b0_triggerDelay2, w     
008C   00F4           00527         movwf   gbl_cntrb
008D   0A60           00528         incf    b0_triggerDelay1, w
008E   00F5           00529         movwf   gbl_cntrc
008F   1683 1303      00530         banksel OPTION_REG                                      ;Access bank 1
0091   1301           00531         bcf             OPTION_REG, INTEDG                      ;Assume trigger on falling edge
0092   1BF0           00532         btfsc   gbl_configLoc1, TRIGGERPOSBIT   ;Test for trigger on positive edge instead
0093   1701           00533                 bsf     OPTION_REG, INTEDG                      ; and, it is, so set to trigger on posit
                            ive edge
0094   1283 1303      00534         banksel BANK0                                           ;Access bank 0
0096   108B           00535         bcf             INTCON, INTF                            ;Ensure that the RB0 interrupt flag is c
                            lear
0097   160B           00536         bsf             INTCON, INTE                            ;Enable the RB0 specific interrupt
0098   178B           00537         bsf             INTCON, GIE                                     ;Enable interrupts
                      00538 
0099                  00539 MainWTrigB
0099   20F5           00540         call    GetByte                                         ;Wait for the trigger unless a "break tr
                            igger"
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00541         skipEqLF B'11110011', gbl_spdata        ;message is received
009A   0878               M         movf gbl_spdata, w
009B   3AF3               M         xorlw B'11110011'
009C   1D03               M         btfss STATUS, Z
009D   2899           00542                 goto    MainWTrigB
009E   120B           00543         bcf             INTCON, INTE                            ;Disable the RB0 specific interrupt
009F   138B           00544         bcf             INTCON, GIE                                     ;Disable interrupts
                      00545         MOVLF B'11011100', gbl_spdata           ;Respond
00A0   30DC               M     movlw B'11011100'
00A1   00F8               M     movwf gbl_spdata
00A2   2106           00546         call    PutByte
00A3   2879           00547         goto    Main                                            ;Abort
                      00548 
                      00549                                                                                 ;Note that the jitter on
                             the interrupt is
                      00550                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00551                                                                                 ;on the PIC running at 2
                            0 MHz
                      00552 
                      00553 ;=============================================================================
                      00554 ; S U B R O U T I N E S
                      00555 ;=============================================================================
                      00556 
                      00557 ;Wait for command from computer and respond accordingly
                      00558 
                      00559         ; Received Commands are:
                      00560         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00561         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00562         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00563         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00564 
                      00565 ;-----------------------------------------------------------------------------
00A4                  00566 WaitComm
00A4   20F5           00567         call GetByte                                            ;Wait for receive
                      00568 
00A5                  00569 WaitComm_Data                                                   ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00570         skipEqLF B'11111000', gbl_spdata
00A5   0878               M         movf gbl_spdata, w
00A6   3AF8               M         xorlw B'11111000'
00A7   1D03               M         btfss STATUS, Z
00A8   28D7           00571                 goto WaitComm_Conf
                      00572         MOVLF B'11011100', gbl_spdata           ;Send beginning of message "0xDC" (220)
00A9   30DC               M     movlw B'11011100'
00AA   00F8               M     movwf gbl_spdata
00AB   2106           00573         call PutByte
                      00574         MOVLF BUFFERMIN, FSR                            ;Set pointer to beginning of queue, also clears 
                            FSR7
00AC   3020               M     movlw BUFFERMIN
00AD   0084               M     movwf FSR
                      00575         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AE   3040               M     movlw BUFFERSIZE
00AF   00F4               M     movwf gbl_cntrb
00B0                  00576 WaitComm_SendDataA
                      00577         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 0
00B0   0800               M     movf INDF, w
00B1   00F8               M     movwf gbl_spdata
00B2   0A84           00578         incf FSR, F                                                     ;Increment pointer
00B3   2106           00579         call PutByte                                            ;Send data
00B4   0BF4           00580         decfsz gbl_cntrb, f
00B5   28B0           00581                 goto WaitComm_SendDataA
                      00582         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00B6   3040               M     movlw BUFFERSIZE
00B7   00F4               M     movwf gbl_cntrb
00B8   1784           00583         bsf FSR, 7                                                      ;Bank 1
00B9   0384           00584         decf FSR, f
00BA                  00585 WaitComm_SendDataB
                      00586         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 1
00BA   0800               M     movf INDF, w
00BB   00F8               M     movwf gbl_spdata
00BC   0384           00587         decf FSR, F                                                     ;Increment pointer
00BD   2106           00588         call PutByte                                            ;Send data
00BE   0BF4           00589         decfsz gbl_cntrb, f
00BF   28BA           00590                 goto WaitComm_SendDataB
                      00591         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00C0   3040               M     movlw BUFFERSIZE
00C1   00F4               M     movwf gbl_cntrb
00C2   1783           00592         bsf STATUS, IRP                                         ;Bank 3
00C3   0A84           00593         incf FSR, f
00C4                  00594 WaitComm_SendDataC
                      00595         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 3
00C4   0800               M     movf INDF, w
00C5   00F8               M     movwf gbl_spdata
00C6   0A84           00596         incf FSR, F                                                     ;Increment pointer
00C7   2106           00597         call PutByte                                            ;Send data
00C8   0BF4           00598         decfsz gbl_cntrb, f
00C9   28C4           00599                 goto WaitComm_SendDataC
                      00600         MOVLF BUFFERSIZE, gbl_cntrb                     ;Set counter
00CA   3040               M     movlw BUFFERSIZE
00CB   00F4               M     movwf gbl_cntrb
00CC   1384           00601         bcf FSR, 7                                                      ;Bank 2
00CD   0384           00602         decf FSR, f
00CE                  00603 WaitComm_SendDataD
                      00604         MOVFF INDF, gbl_spdata                          ;Get data ready to send from Bank 2
00CE   0800               M     movf INDF, w
00CF   00F8               M     movwf gbl_spdata
00D0   0384           00605         decf FSR, F                                                     ;Increment pointer
00D1   2106           00606         call PutByte                                            ;Send data
00D2   0BF4           00607         decfsz gbl_cntrb, f
00D3   28CE           00608                 goto WaitComm_SendDataD
00D4                  00609 WaitComm_SendDataExit
00D4   1383           00610         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
00D5   222A           00611         call    ChannelConfSend
00D6   28A4           00612         goto    WaitComm
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00613 
00D7                  00614 WaitComm_Conf                                                   ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00615         skipEqLF B'11111001', gbl_spdata
00D7   0878               M         movf gbl_spdata, w
00D8   3AF9               M         xorlw B'11111001'
00D9   1D03               M         btfss STATUS, Z
00DA   28E0           00616                 goto WaitComm_Rec
                      00617         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
00DB   30DD               M     movlw B'11011101'
00DC   00F8               M     movwf gbl_spdata
00DD   2106           00618         call    PutByte
00DE   220F           00619         call    ConfSend
00DF   28A4           00620         goto    WaitComm
                      00621 
00E0                  00622 WaitComm_Rec                                                    ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      00623         skipEqLF B'11111010', gbl_spdata
00E0   0878               M         movf gbl_spdata, w
00E1   3AFA               M         xorlw B'11111010'
00E2   1D03               M         btfss STATUS, Z
00E3   28ED           00624                 goto WaitComm_Break
                      00625         MOVLF B'11011110', gbl_spdata           ;Send beginning of message "0xDE" (222)
00E4   30DE               M     movlw B'11011110'
00E5   00F8               M     movwf gbl_spdata
00E6   2106           00626         call    PutByte
00E7   21ED           00627         call    ConfReceive
00E8   3001           00628         movlw   0x01                                            ;Set counters to 0x010101 for the case o
                            f
00E9   00F3           00629         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
00EA   00F4           00630         movwf   gbl_cntrb
00EB   00F5           00631         movwf   gbl_cntrc
00EC   0008           00632         return
                      00633 
00ED                  00634 WaitComm_Break                                                  ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      00635         skipEqLF B'11110011', gbl_spdata
00ED   0878               M         movf gbl_spdata, w
00EE   3AF3               M         xorlw B'11110011'
00EF   1D03               M         btfss STATUS, Z
00F0   28A4           00636                 goto WaitComm                                   ;No valid message sent
                      00637         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
00F1   30DC               M     movlw B'11011100'
00F2   00F8               M     movwf gbl_spdata
00F3   2106           00638         call    PutByte
00F4   28A4           00639         goto    WaitComm
                      00640 
                      00641 
                      00642 
                      00643 ;GetByte is used to receive a byte on the serial port
                      00644 ;------------------------------------------------------------------------------
00F5                  00645 GetByte
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F5   1E8C           00646         btfss PIR1, RCIF                        
00F6   28F5           00647                 goto GetByte
00F7                  00648 GetByteB
00F7   1D18           00649         btfss RCSTA, FERR                                       ;Handle the frame error
00F8   28FB           00650                 goto GetByteC
00F9   081A           00651         movf RCREG, w                                           ;Throw away data with errors
00FA   28F5           00652         goto GetByte
00FB                  00653 GetByteC
00FB   1C98           00654         btfss RCSTA, OERR                                       ;Handle the over run error
00FC   2903           00655                 goto GetByteE
00FD   1218           00656         bcf RCSTA, CREN                                         ;Reset the receive logic
00FE   1618           00657         bsf RCSTA, CREN
00FF                  00658 GetByteD
00FF   081A           00659         movf RCREG, w                                           ;Throw away data with errors
0100   1A8C           00660         btfsc PIR1, RCIF
0101   28FF           00661                 goto GetByteD
0102   28F5           00662         goto GetByte
0103                  00663 GetByteE                                                                ;No errors if we got here       
                      00664         MOVFF RCREG, gbl_spdata                         ;Read byte from serial FIFO
0103   081A               M     movf RCREG, w
0104   00F8               M     movwf gbl_spdata
0105   3400           00665         retlw 0
                      00666         
                      00667 ;PutByte is used to put a byte on the serial port
                      00668 ;------------------------------------------------------------------------------
0106                  00669 PutByte
0106                  00670 PutByteSerial
0106   1E0C           00671         btfss PIR1, TXIF
0107   2906           00672                 goto PutByteSerial
                      00673         MOVFF gbl_spdata, TXREG
0108   0878               M     movf gbl_spdata, w
0109   0099               M     movwf TXREG
010A   3400           00674         retlw 0
                      00675 
                      00676 ;Delay used to adjust sample rate
                      00677 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00678 ;statement)
                      00679 ;Delay = 5+7*(gbl_cntrb:gbl_cntra)+3*gbl_cntrb if gbl_cntra > 0, gbl_cntrb >= 0
                      00680 ;If gbl_cntra = 0 then delay as if gbl_cntra = 256
                      00681 ;If gbl_cntrb:gbl_cntra = 0x0000 then Delay as if gbl_cntrb = 255, gbl_cntra = 256
                      00682 ;-----------------------------------------------------------------------------
010B                  00683 Delay
010B   3001           00684         movlw 0x01
010C                  00685 DelayLoop
010C   02F3           00686         subwf gbl_cntra, F
010D   1C03           00687         btfss STATUS, C
010E   02F4           00688                 subwf gbl_cntrb, F
010F   08F3           00689         movf gbl_cntra, F
                      00690         skipZero
0110   1D03               M         btfss STATUS, Z
0111   290C           00691                 goto DelayLoop
0112   08F4           00692         movf gbl_cntrb, F
                      00693         skipZero
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   1D03               M         btfss STATUS, Z
0114   290C           00694                 goto DelayLoop
0115   0008           00695         return
                      00696 
                      00697 ;ADCShutdown, shutsdown the MAX118
                      00698 ;-----------------------------------------------------------------------------
0116                  00699 ADCShutdown
0116   0080           00700         movwf   INDF                                            ;Save to QUEUE
0117   1486           00701         bsf             ADC_PORT, CS                            ;Unselect MAX118
0118   1383           00702         bcf             STATUS, IRP                                     ;Set indirection to bank 0 and/o
                            r bank 1
0119   2236           00703         call    ChannelConfStore
011A   2879           00704         goto Main
                      00705 
                      00706 ;=============================================================================
                      00707 ;*****************************************************************************
                      00708 ;=============================================================================
                      00709 
                      00710 ;Interrupt Driven Sampling with Command Responder
                      00711 ;This code section consists of two routines:
                      00712 ; (1) An interrupt handler for the Timer1 rollover interrupt
                      00713 ; (2) A looping routine that responds to PC commands while we are waiting for sampling interrupts
                      00714 
                      00715 ;Jonathan Weaver: Measurements from simulation (9/27/2012 and 9/28/2012)
                      00716 ;Interrupt to the first sample = 103 cycles using minimum delay
                      00717 ;Sampling rate = 5000000/(8*SAMPLERATE1:SAMPLERATE2+35) with 20 MHz clock
                      00718 ;Minimum value for SAMPLERATE1:SAMPLERATE2 ~= 20 
                      00719 ;(around 140 cycles to execute the timer1 interrupt.  Added some time for processing the serial port.)
                      00720 ;Maximum sample rate (at SAMPLERATE1:SAMPLERATE2 = 20) is 25,641 Hz.
                      00721 ;Waveform completion at that sample rate is 100 times per second
                      00722 ;Maximum communication rate is 5,670 bytes per second or 22 waveforms per second using the serial interf
                            ace.
                      00723 
                      00724 ;Note!  There is an xx instruction count between the actual Timer 1 interrupt
                      00725 ; being "detected/vectored to" and the Timer 1 counter being reloaded.
                      00726 ;Note!  The SAMPLERATE1:2 values get complemented here.  The Timer counts up and
                      00727 ; when it rolls over to 0x0000, the interrupt is generated.
                      00728 ;This code does a channel 0 and a channel 1 sample on each Timer 1 interrupt... ie., it
                      00729 ; samples in a "chopped" mode.  Channel 0 samples are stored in even acquisition memory
                      00730 ; locations and Channel 1 samples are stored in odd acquisition memory locations.
                      00731 ; The number of samples for each channel is 1/2 of the total acquisition memory size!
                      00732 ;-----------------------------------------------------------------------------
                      00733 
011B                  00734 IrqServiceTimer1
                      00735         ;reload timer for next interrupt and clear the interrupt flag
                      00736         ;sample ADC and store into appropriate location
                      00737         ;increment location and maybe the bank to store into for next time around
                      00738         ;turn off interrupt if done acquiring
                      00739         ;return from call
011B   1283 1303      00740         banksel BANK0
011D   1010           00741         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
011E   0971           00742         comf    gbl_sampleRate1, W                      ;MSB of sampling rate
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011F   008F           00743         movwf   TMR1H
0120   0972           00744         comf    gbl_sampleRate2, W                      ;LSB of sampling rate
0121   008E           00745         movwf   TMR1L
0122   100C           00746         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0123   1410           00747         bsf             T1CON, TMR1ON                           ;Turn Timer 1 back on
0124   0000           00748         nop
0125   0804           00749         movf    FSR, W                                          ;Save the current FSR
0126   00E6           00750         movwf   b0_fsr_temp
                      00751 
                      00752 ;Paul, I made some modifications here to fix the glitches and to make the sampling adhere to the XY meth
                            od
                      00753 ;more precisely
                      00754 
0127   0864           00755         movf b0_sampleAddr, W
0128   0084           00756         movwf FSR
                      00757         ;Assume bank0
0129   1383           00758         bcf STATUS, IRP
012A   1384           00759         bcf FSR, 7
                      00760         ;Set bank1 if needed
012B   18E5           00761         btfsc b0_sampleBank, SAMPLEBANK1
012C   1784           00762         bsf FSR, 7
                      00763         ;Set bank2 if needed
012D   19E5           00764     btfsc b0_sampleBank, SAMPLEBANK2
012E   1783           00765         bsf STATUS, IRP
                      00766     ;Set bank3 if needed
012F   1965           00767     btfsc b0_sampleBank, SAMPLEBANK3
0130   1784           00768         bsf FSR, 7
0131   1965           00769     btfsc b0_sampleBank, SAMPLEBANK3
0132   1783           00770         bsf STATUS, IRP
                      00771 
                      00772 ;No need for an instruction balancer, the code above will take 12 cycles no matter the path
                      00773 
                      00774                                                         ;Setup the indirection register with the acquisi
                            tion memory address pointer
                      00775                                                         ;Note!: This is a bit strange, as the other samp
                            ling methods use an
                      00776                                                         ; acquisition memory loading technique of inc-de
                            c-inc-dec for
                      00777                                                         ; bank0-bank1-bank3-bank2 ... so, we have to acc
                            omodate!
                      00778 ;       movf    b0_sampleAddr, W                                ;Get the acquisition memory address poin
                            ter
                      00779 ;    btfsc      b0_sampleBank, SAMPLEBANK1              ;Check for it being the "decrementing bank1"
                      00780 ;               xorlw   0x7f                                            ;Its the "decrementing bank 1", 
                            so invert the address pointer
                      00781 ;       btfsc   b0_sampleBank, SAMPLEBANK2              ;Check for it being the "decrementing bank2"
                      00782 ;               xorlw   0x7f                                            ;Its the "decrementing bank2", s
                            o invert the address pointer
                      00783 ;       movwf   FSR                                                     ;Put the acquisition memory poin
                            ter into the indirection register
                      00784 ;
                      00785 ;                                                       ;Setup the indirection bank bits IRP and FSR7
                      00786 ;       btfss   b0_sampleBank, SAMPLEBANK0      ;Instruction cycle count for balancing act starts here
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00787 ;               goto $+4                                                ;
                      00788 ;       bcf             FSR, 7                                          ;
                      00789 ;       bcf             STATUS, IRP                                     ;
                      00790 ;       goto    irqst1_1                                        ;takes 4 to get here +2 to jump
                      00791 ;       btfss   b0_sampleBank, SAMPLEBANK1      ;
                      00792 ;               goto $+4                                                ;
                      00793 ;       bsf             FSR, 7                                          ;
                      00794 ;       bcf             STATUS, IRP                                     ;
                      00795 ;       goto    irqst1_2                                        ;takes 7 to get here +2 to jump
                      00796 ;       btfss   b0_sampleBank, SAMPLEBANK3      ;
                      00797 ;               goto $+4                                                ;
                      00798 ;       bsf             FSR, 7                                          ;
                      00799 ;       bsf             STATUS, IRP                                     ;
                      00800 ;       goto    irqst1_3                                        ;takes 10 to get here + 2 to jump
                      00801 ;       btfss   b0_sampleBank, SAMPLEBANK2      ;
                      00802 ;               goto $+4                                                ;
                      00803 ;       bcf             FSR, 7                                          ;
                      00804 ;       bsf             STATUS, IRP                                     ;
                      00805 ;       goto    irqst1_4                                        ;takes 13 to get here + 2 to jump
                      00806 
                      00807                                                         ;Instruction time balancer for above indirection
                             bank bit setting/clearing
                      00808 ;irqst1_1
                      00809 ;       goto    $+1
                      00810 ;       nop
                      00811 ;irqst1_2
                      00812 ;       goto    $+1
                      00813 ;       nop
                      00814 ;irqst1_3
                      00815 ;       goto    $+1
                      00816 ;       nop
                      00817 ;irqst1_4
                      00818 
0133   1089           00819         bcf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 0
0134   1009           00820         bcf             ADC_CONTROLPORT, RDD            ;Begin Conversion - needs 5 cycles (1uSec)
0135   2936           00821         goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
0136   2937           00822         goto    $+1
0137   0000           00823         nop
0138   0808           00824         movf    ADC_DATAPORT, W                         ;Sample ADC channel 0
0139   1409           00825         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
013A   1489           00826         bsf             ADC_CONTROLPORT, ADDR0          ;Set ADC to channel 1
013B   1009           00827         bcf             ADC_CONTROLPORT, RDD            ;Begin next conversion
013C   0080           00828         movwf   INDF                                            ;Save channel 0 sample to the acquisitio
                            n memory
                      00829 ;JWW - Another couple of changes
013D   1865           00830     btfsc b0_sampleBank, SAMPLEBANK0    ;Increment acquistion memory pointer if Bank0
013E   0A84           00831         incf    FSR, F                                          
013F   18E5           00832     btfsc b0_sampleBank, SAMPLEBANK1    ;Decrement memory pointer if Bank1
0140   0384           00833         decf FSR, F
                      00834 ;       goto    $+1                                                     ;Do a 5 cycle delay from /RD goi
                            ng active
                      00835 ;       nop
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0141   0808           00836         movf    ADC_DATAPORT, W                         ;Sample ADC channel 1
                      00837                                                                                 ;After this point, no ne
                            ed for instruction cycle balancing
0142   1409           00838         bsf             ADC_CONTROLPORT, RDD            ;Stop conversion
                      00839 ;JWW - Another changed code section
0143   19E5           00840     btfsc b0_sampleBank, SAMPLEBANK2    ;Decrement memory pointer if Bank2
0144   0384           00841         decf FSR, F
0145   1965           00842         btfsc b0_sampleBank, SAMPLEBANK3    ;Increment memory pointer if Bank3
0146   0A84           00843                 incf FSR, F
0147   0080           00844     movwf       INDF                                            ;Save channel 1 sample to the acquistion
                             memory
                      00845 ;JWW - Remove some original code
                      00846 ;       incf    b0_sampleAddr, F                        ;Increment acquisition memory pointer...
                      00847 ;       incf    b0_sampleAddr, F                        ; ...2 times for 2 samples taken
0148   3002           00848         movlw 0x02                                                      ;Prepare to increment sampleAddr
                             by 2
0149   18E5           00849         btfsc b0_sampleBank, SAMPLEBANK1        ;If BANK1, prepare to decrement sampleAddr by 2
014A   30FE           00850                 movlw (0x00 - 0x02)
014B   19E5           00851         btfsc b0_sampleBank, SAMPLEBANK2        ;If BANK2, prepare to decrement sampleAddr by 2
014C   30FE           00852                 movlw (0x00 - 0x02)
014D   07E4           00853         addwf b0_sampleAddr, F
014E   301F           00854         movlw BUFFERMIN-1                                       ;Check if filling last aquisition memory
                             location in bank
014F   0664           00855         xorwf b0_sampleAddr, W
0150   1903           00856         btfsc STATUS, Z
0151   2959           00857                 goto irqst1_6
                      00858 
0152   3060           00859         movlw   BUFFERMAX+1                                     ;Check for filling last acquisition memo
                            ry location in bank
0153   0664           00860         xorwf   b0_sampleAddr, W
0154   1D03           00861         btfss   STATUS, Z
0155   2965           00862                 goto    irqst1_5                                ;Jump, we are not done filling the curre
                            nt bank
0156   305F           00863         movlw   BUFFERMAX                                       ;Reset the acquisition memory pointer to
                             its END
0157   00E4           00864         movwf   b0_sampleAddr
0158   295B           00865         goto irqst1_7
                      00866 
                      00867 ;JWW - added condition for lower limit of Buffer address
0159                  00868 irqst1_6
                      00869     MOVLF BUFFERMIN, b0_sampleAddr              
0159   3020               M     movlw BUFFERMIN
015A   00E4               M     movwf b0_sampleAddr
                      00870 
015B                  00871 irqst1_7
015B   1003           00872         bcf             STATUS, C                                       ;Prepare to shift the acquisitio
                            n bank to the next bank
015C   0DE5           00873         rlf     b0_sampleBank, F
015D   1E65           00874         btfss   b0_sampleBank, 4                        ;Check to see if done with this acquisitions sam
                            pling
015E   2965           00875                 goto    irqst1_5                                ;Not done, so keep going...
015F   1010           00876         bcf             T1CON, TMR1ON                           ;The acquisition is done, so turn off Ti
                            mer 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0160   100C           00877         bcf             PIR1, TMR1IF                            ;Clear the interrupt flag, too
0161   1683 1303      00878         banksel BANK1
0163   100C           00879         bcf             PIE1, TMR1IE                            ;Turn off the Timer 1 Interrupt Enable
0164   130B           00880         bcf             INTCON, PEIE                            ; and the Peripheral Interrupt Enable
0165                  00881 irqst1_5
0165   1283 1303      00882         banksel BANK0
0167   0866           00883         movf    b0_fsr_temp, W                          ;Restore FSR register
0168   0084           00884         movwf   FSR
0169   0008           00885         return                                                          ;Returns to the IntHandler routi
                            ne that then restores
                      00886                                                                         ; state and does the retfie
                      00887 
                      00888 ;-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
016A                  00889 SampleIntDrvn
                      00890         ;Setup the sample write location and sample bank variables
                      00891         ;Load Timer 1 for sampling interrupt generation and clear timer 1 interrupt flag 
                      00892         ;Turn on Timer 1
                      00893         ;Enable the Timer 1 interrupt
016A   1283 1303      00894         banksel BANK0
016C   3020           00895         movlw   BUFFERMIN                                       ;Initialize sample buffer memory storage
                             pointer
016D   00E4           00896         movwf   b0_sampleAddr
016E   3001           00897         movlw   0x01                                            ;Initialize sample bank pointer
016F   00E5           00898         movwf   b0_sampleBank
0170   1010           00899         bcf             T1CON, TMR1ON                           ;Turn off Timer 1 for a fail safe loadin
                            g experience
0171   1690           00900         bsf             T1CON, T1CKPS1                          ;Set the Timer 1 Prescaler to 1:8
0172   1610           00901         bsf             T1CON, T1CKPS0
0173   30FF           00902         movlw   0xFF                                            ;Force Timer1 to do an almost immediate 
                            interrupt so 
0174   008F           00903         movwf   TMR1H                                           ; that we get started sampling ASAP.  Th
                            e real sample
0175   008E           00904         movwf   TMR1L                                           ; interval gets loaded in the IrqService
                            Timer1 routine.
0176   100C           00905         bcf             PIR1, TMR1IF                            ;Clear the Timer 1 interrupt flag
0177   1683 1303      00906         banksel BANK1
0179   140C           00907         bsf             PIE1, TMR1IE                            ;Enable the Timer 1 interrupt...
017A   170B           00908         bsf             INTCON, PEIE                            ;Enable the Peripheral interrupts
017B   178B           00909         bsf             INTCON, GIE                                     ; ...NOW ARMED FOR PROCESSING IN
                            TERRUPTS!
017C   1283 1303      00910         banksel BANK0
017E   1410           00911         bsf             T1CON, TMR1ON                           ;Turn on Timer 1
                      00912 
                      00913         ;Respond to any commands from PC app while Interrupt Driven Sampling
                      00914         ; Received Commands are:
                      00915         ;       0xF8 (248) => Send a "0xDC" (220) followed by send of Sampled Data Field + Channel Field
                      00916         ;       0xF9 (249) => Send a "0xDD" (221) followed by send of Configuration Information Field
                      00917         ;       0xFA (250) => Send a "0xDE" (222) followed by receive of Configuration Information Field
                      00918         ;       0xF3 (243) => Send a "0xDC" (220) acknowledgement of a Trigger Break missed (shouldn't h
                            appen)
                      00919         ;
                      00920         ;When the Timer 1 interrupt gets turned off (will be done by the IrqServiceTimer1
                      00921         ; routine after the sample memory buffer has been fully filled), leave this
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00922         ; routine and go back to Main
                      00923 
017F                  00924 sid_GetByte
017F   1683 1303      00925         banksel BANK1                                           ;Check to see if the Timer 1 interrupt h
                            as been turned off
0181   1C0C           00926         btfss   PIE1, TMR1IE
0182   29E2           00927                 goto    sid_Exit                                ; it has been turned off so head for the
                             exit door
0183   1283 1303      00928         banksel BANK0
0185   1E8C           00929         btfss   PIR1, RCIF                      
0186   297F           00930                 goto sid_GetByte
0187                  00931 sid_GetByteB
0187   1D18           00932         btfss   RCSTA, FERR                                     ;Handle the frame error
0188   298B           00933                 goto sid_GetByteC
0189   081A           00934         movf    RCREG, w                                        ;Throw away data with errors
018A   297F           00935         goto    sid_GetByte
018B                  00936 sid_GetByteC
018B   1C98           00937         btfss   RCSTA, OERR                                     ;Handle the over run error
018C   2993           00938                 goto sid_GetByteE
018D   1218           00939         bcf             RCSTA, CREN                                     ;Reset the receive logic
018E   1618           00940         bsf             RCSTA, CREN
018F                  00941 sid_GetByteD
018F   081A           00942         movf    RCREG, w                                        ;Throw away data with errors
0190   1A8C           00943         btfsc   PIR1, RCIF
0191   298F           00944                 goto sid_GetByteD
0192   297F           00945         goto    sid_GetByte
0193                  00946 sid_GetByteE                                                    ;No errors if we got here       
                      00947         MOVFF   RCREG, gbl_spdata                       ;Read byte from serial FIFO
0193   081A               M     movf RCREG, w
0194   00F8               M     movwf gbl_spdata
                      00948 
                      00949 
0195                  00950 sid_WaitComm_Data                                               ;***** Check for/Respond to Command "0xF
                            8" (248) *****
                      00951         skipEqLF B'11111000', gbl_spdata
0195   0878               M         movf gbl_spdata, w
0196   3AF8               M         xorlw B'11111000'
0197   1D03               M         btfss STATUS, Z
0198   29C8           00952                 goto sid_WaitComm_Conf
                      00953         MOVLF   B'11011100', gbl_spdata         ;Send beginning of message "0xDC" (220)
0199   30DC               M     movlw B'11011100'
019A   00F8               M     movwf gbl_spdata
019B   2106           00954         call    PutByte
                      00955         MOVLF   BUFFERMIN, FSR                          ;Set pointer to beginning of queue, also clears 
                            FSR7
019C   3020               M     movlw BUFFERMIN
019D   0084               M     movwf FSR
                      00956         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
019E   3040               M     movlw BUFFERSIZE
019F   00F4               M     movwf gbl_cntrb
01A0   1383           00957         bcf             STATUS, IRP                                     ;Set indirection to bank 0, FSR7
                             cleared in previous instruction
01A1                  00958 sid_WaitComm_SendDataA                                  ;In Bank 0
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00959         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01A1   0800               M     movf INDF, w
01A2   00F8               M     movwf gbl_spdata
01A3   0A84           00960         incf    FSR, F                                          ;Increment pointer
01A4   2106           00961         call    PutByte                                         ;Send data
01A5   0BF4           00962         decfsz  gbl_cntrb, f
01A6   29A1           00963                 goto sid_WaitComm_SendDataA
                      00964         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01A7   3040               M     movlw BUFFERSIZE
01A8   00F4               M     movwf gbl_cntrb
01A9   0384           00965         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 1 
01AA   1784           00966         bsf             FSR, 7                                          ;Set Bank 1
01AB                  00967 sid_WaitComm_SendDataB
                      00968         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01AB   0800               M     movf INDF, w
01AC   00F8               M     movwf gbl_spdata
01AD   0384           00969         decf    FSR, F                                          ;Increment pointer
01AE   2106           00970         call    PutByte                                         ;Send data
01AF   0BF4           00971         decfsz  gbl_cntrb, f
01B0   29AB           00972                 goto sid_WaitComm_SendDataB
                      00973         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01B1   3040               M     movlw BUFFERSIZE
01B2   00F4               M     movwf gbl_cntrb
01B3   0A84           00974         incf    FSR, f                                          ;Point at first sampled data element in 
                            Bank 3
01B4   1783           00975         bsf             STATUS, IRP                                     ;Set Bank 3
01B5                  00976 sid_WaitComm_SendDataC
                      00977         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01B5   0800               M     movf INDF, w
01B6   00F8               M     movwf gbl_spdata
01B7   0A84           00978         incf    FSR, F                                          ;Increment pointer
01B8   2106           00979         call    PutByte                                         ;Send data
01B9   0BF4           00980         decfsz  gbl_cntrb, f
01BA   29B5           00981                 goto sid_WaitComm_SendDataC
                      00982         MOVLF   BUFFERSIZE, gbl_cntrb           ;Set counter
01BB   3040               M     movlw BUFFERSIZE
01BC   00F4               M     movwf gbl_cntrb
01BD   0384           00983         decf    FSR, f                                          ;Point at last sampled data element in B
                            ank 2
01BE   1384           00984         bcf             FSR, 7                                          ;Set Bank 2
01BF                  00985 sid_WaitComm_SendDataD
                      00986         MOVFF   INDF, gbl_spdata                        ;Get data ready to send
01BF   0800               M     movf INDF, w
01C0   00F8               M     movwf gbl_spdata
01C1   0384           00987         decf    FSR, F                                          ;Increment pointer
01C2   2106           00988         call    PutByte                                         ;Send data
01C3   0BF4           00989         decfsz  gbl_cntrb, f
01C4   29BF           00990                 goto sid_WaitComm_SendDataD
01C5                  00991 sid_WaitComm_SendDataExit
01C5   1383           00992         bcf STATUS, IRP                                         ;Set indirection back to Bank 0
01C6   222A           00993         call    ChannelConfSend
01C7   297F           00994         goto    sid_GetByte
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00995 
01C8                  00996 sid_WaitComm_Conf                                               ;***** Check for/Respond to Command "0xF
                            9" (249) *****
                      00997         skipEqLF B'11111001', gbl_spdata
01C8   0878               M         movf gbl_spdata, w
01C9   3AF9               M         xorlw B'11111001'
01CA   1D03               M         btfss STATUS, Z
01CB   29D1           00998                 goto sid_WaitComm_Rec
                      00999         MOVLF B'11011101', gbl_spdata           ;Send beginning of message "0xDD" (221)
01CC   30DD               M     movlw B'11011101'
01CD   00F8               M     movwf gbl_spdata
01CE   2106           01000         call    PutByte
01CF   220F           01001         call    ConfSend
01D0   297F           01002         goto    sid_GetByte
                      01003 
01D1                  01004 sid_WaitComm_Rec                                                ;***** Check for/Respond to Command "0xF
                            A" (250) *****
                      01005         skipEqLF B'11111010', gbl_spdata
01D1   0878               M         movf gbl_spdata, w
01D2   3AFA               M         xorlw B'11111010'
01D3   1D03               M         btfss STATUS, Z
01D4   29DA           01006                 goto sid_WaitComm_Break
                      01007         MOVLF B'11011110', gbl_spdata           ;Send ready to receive message "0xDE" (222)
01D5   30DE               M     movlw B'11011110'
01D6   00F8               M     movwf gbl_spdata
01D7   2106           01008         call    PutByte
01D8   2204           01009         call    ConfReceiveRateOnly
01D9   297F           01010         goto    sid_GetByte
                      01011 
01DA                  01012 sid_WaitComm_Break                                              ;***** Check for/Respond to Command "0xF
                            3" (243) *****
                      01013         skipEqLF B'11110011', gbl_spdata
01DA   0878               M         movf gbl_spdata, w
01DB   3AF3               M         xorlw B'11110011'
01DC   1D03               M         btfss STATUS, Z
01DD   297F           01014                 goto sid_GetByte                                ;No valid message sent
                      01015         MOVLF B'11011100', gbl_spdata           ;Send ack "0xDC" (220) for a bogus trigger break (should
                             never get here)
01DE   30DC               M     movlw B'11011100'
01DF   00F8               M     movwf gbl_spdata
01E0   2106           01016         call    PutByte
01E1   297F           01017         goto    sid_GetByte
                      01018 
                      01019 
01E2                  01020 sid_Exit
01E2   1283 1303      01021         banksel BANK0
01E4   1486           01022         bsf ADC_PORT, CS                                        ;Unselect MAX118
01E5   1383           01023         bcf STATUS, IRP                                         ;Set indirection to bank 0 and/or bank 1
01E6   2236           01024         call    ChannelConfStore                        ;Update state of front panel switches/knobs
01E7   3001           01025         movlw   0x01                                            ;Set counters to 0x010101 for the case o
                            f
01E8   00F3           01026         movwf   gbl_cntra                                       ;  "TRIGGER OFF" having been set
01E9   00F4           01027         movwf   gbl_cntrb
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EA   00F5           01028         movwf   gbl_cntrc
01EB   2879           01029         goto    Main
                      01030 
                      01031 
                      01032 
                      01033 
                      01034 ;SampleRealTime is used to send a continuous stream of ADC samples to the PC app.
                      01035 ;The sample pairs for channel 0 and channel 1 are sent as acquired at the rate
                      01036 ; determined by the Timer 1 interrupt.  The sampling rate can not be higher than
                      01037 ; the interface character rate divide by 2, or samples will be lost!  Be sure to keep
                      01038 ; the interrupt rate, determined by sampleRate1:sampleRate2, below the effective
                      01039 ; character rate divided by 2 on the interface.  57.6K baud would support a maximum sample
                      01040 ; rate of approximately 2000Hz, or a 500uSec interrupt period.  Remember, there are
                      01041 ; two data characters for each interrupt, channel 0's ADC byte and channel 1's ADC byte.
                      01042 ;-----------------------------------------------------------------------------
01EC                  01043 SampleRealTime
01EC   2879           01044         goto    Main                                            ;Not implemented yet
                      01045 
                      01046 
                      01047 
                      01048 ;Receive and store the user settings from the PC application
                      01049 ;-----------------------------------------------------------------------------
01ED                  01050 ConfReceive
01ED   20F5           01051         call GetByte                                            ;Receive ConfigLoc1
01EE   0878           01052         movf gbl_spdata, w
01EF   39DF           01053         andlw ~(1 << CLOCKFREQBIT)                      ;Don't accept flag for clock, but set it
                      01054         if clockFreq == 20                                      ;if necessary
01F0   3820           01055                 iorlw 1 << CLOCKFREQBIT
                      01056         endif
01F1   00F0           01057         movwf gbl_configLoc1
01F2   1283 1303      01058         banksel BANK0
01F4   20F5           01059         call GetByte                                            ;Receive trigger delay
                      01060         MOVFF gbl_spdata, b0_triggerDelay1
01F5   0878               M     movf gbl_spdata, w
01F6   00E0               M     movwf b0_triggerDelay1
01F7   20F5           01061         call GetByte
                      01062         MOVFF gbl_spdata, b0_triggerDelay2
01F8   0878               M     movf gbl_spdata, w
01F9   00E1               M     movwf b0_triggerDelay2
01FA   20F5           01063         call GetByte
                      01064         MOVFF gbl_spdata, b0_triggerDelay3
01FB   0878               M     movf gbl_spdata, w
01FC   00E2               M     movwf b0_triggerDelay3
01FD   20F5           01065         call GetByte                                            ;Receive sample rate
                      01066         MOVFF gbl_spdata, gbl_sampleRate1
01FE   0878               M     movf gbl_spdata, w
01FF   00F1               M     movwf gbl_sampleRate1
0200   20F5           01067         call GetByte
                      01068         MOVFF gbl_spdata, gbl_sampleRate2
0201   0878               M     movf gbl_spdata, w
0202   00F2               M     movwf gbl_sampleRate2
0203   0008           01069         return
                      01070 
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01071 ;Receive user settings from the PC application. BUT, throw most of them away!
                      01072 ;This is used during the SampleIntDrvn routine to prevent changing
                      01073 ;of state during an interrupt driven acquisition that is in progress.
                      01074 ;However, allow the sampleRate1:2 variable to be changed.  This allows
                      01075 ;a mis-entered large time/div sweep speed to be corrected on the fly.  Otherwise,
                      01076 ;the user might have to wait a long time before the sampling completed and
                      01077 ;the user would again get control.
                      01078 ;-----------------------------------------------------------------------------
0204                  01079 ConfReceiveRateOnly
0204   20F5           01080         call GetByte                                            ;Receive ConfigLoc1
0205   20F5           01081         call GetByte                                            ;Receive trigger delay
0206   20F5           01082         call GetByte
0207   20F5           01083         call GetByte
0208   20F5           01084         call GetByte                                            ;Receive sample rate
                      01085         MOVFF gbl_spdata, gbl_sampleRate1
0209   0878               M     movf gbl_spdata, w
020A   00F1               M     movwf gbl_sampleRate1
020B   20F5           01086         call GetByte
                      01087         MOVFF gbl_spdata, gbl_sampleRate2
020C   0878               M     movf gbl_spdata, w
020D   00F2               M     movwf gbl_sampleRate2
020E   0008           01088         return
                      01089 
                      01090 ;Send the current DSOscope configuration to the PC application
                      01091 ;-----------------------------------------------------------------------------
020F                  01092 ConfSend
                      01093         ;Send number of datapoints (2 bytes)
                      01094         MOVLF high TOTALBUFFERSIZE, gbl_spdata
020F   3001               M     movlw high TOTALBUFFERSIZE
0210   00F8               M     movwf gbl_spdata
0211   2106           01095         call PutByte
                      01096         MOVLF low TOTALBUFFERSIZE, gbl_spdata
0212   3000               M     movlw low TOTALBUFFERSIZE
0213   00F8               M     movwf gbl_spdata
0214   2106           01097         call PutByte
                      01098         ;Send clock frequency configuration
                      01099         MOVFF gbl_configLoc1, gbl_spdata
0215   0870               M     movf gbl_configLoc1, w
0216   00F8               M     movwf gbl_spdata
0217   2106           01100         call PutByte
0218   1283 1303      01101         banksel BANK0
                      01102         MOVFF b0_triggerDelay1, gbl_spdata
021A   0860               M     movf b0_triggerDelay1, w
021B   00F8               M     movwf gbl_spdata
021C   2106           01103         call PutByte
                      01104         MOVFF b0_triggerDelay2, gbl_spdata
021D   0861               M     movf b0_triggerDelay2, w
021E   00F8               M     movwf gbl_spdata
021F   2106           01105         call PutByte
                      01106         MOVFF b0_triggerDelay3, gbl_spdata
0220   0862               M     movf b0_triggerDelay3, w
0221   00F8               M     movwf gbl_spdata
0222   2106           01107         call PutByte
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01108         MOVFF gbl_sampleRate1, gbl_spdata
0223   0871               M     movf gbl_sampleRate1, w
0224   00F8               M     movwf gbl_spdata
0225   2106           01109         call PutByte
                      01110         MOVFF gbl_sampleRate2, gbl_spdata
0226   0872               M     movf gbl_sampleRate2, w
0227   00F8               M     movwf gbl_spdata
0228   2106           01111         call PutByte
0229   0008           01112         return
                      01113 
                      01114 ;Send the current DSOscope channel settings to the PC application
                      01115 ;-----------------------------------------------------------------------------
022A                  01116 ChannelConfSend
                      01117         MOVFF gbl_dataConfig, gbl_spdata        ;Channel configuration
022A   0879               M     movf gbl_dataConfig, w
022B   00F8               M     movwf gbl_spdata
022C   2106           01118         call PutByte
022D   01F8           01119         clrf gbl_spdata
022E   2106           01120         call PutByte                                            ;Channel 1 offset
022F   2106           01121         call PutByte                                            ;Channel 2 offset
0230   1283 1303      01122         banksel BANK0
                      01123         MOVFF b0_triggerLevel, gbl_spdata
0232   0863               M     movf b0_triggerLevel, w
0233   00F8               M     movwf gbl_spdata
0234   2106           01124         call PutByte                                            ;Triggerlevel
0235   0008           01125         return
                      01126 
                      01127 
                      01128 ;Read and store the current front panel settings of the DSOscope
                      01129 ;-----------------------------------------------------------------------------
0236                  01130 ChannelConfStore
                      01131         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                      01132         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                      01133         ;                                                                               Channel 2 Scale 
                            (2) bits
                      01134         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                      01135         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                      01136         ;                                                                               Two least signif
                            icant bits = 0
0236   01F9           01137         clrf gbl_dataConfig
0237   1683 1303      01138         banksel TRISC                                   ;Access Bank1
0239   1507           01139         bsf TRISC, CH2SEL                                       ;Ch2Sel high Z
023A   1087           01140         bcf TRISC, CH1SEL                                       ;Ch1Sel output
023B   1685           01141         bsf TRISA, CH2SELG                                      ;Ch2Sel high Z
023C   1205           01142         bcf TRISA, CH1SELG                                      ;Ch1Sel output
023D   1283 1303      01143         banksel ANALOG_SEL                              ;Access Bank0
023F   1087           01144         bcf ANALOG_SEL, CH1SEL                          ;Ch1Sel low
0240   1205           01145         bcf ANALOG_GAIN, CH1SELG                        ;Ch1SelG low
0241   1779           01146         bsf gbl_dataConfig, 6                           ;Assume Gain = 2
0242   1C05           01147         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0243   1379           01148                 bcf gbl_dataConfig, 6
0244   1C85           01149         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
0245   1379           01150                 bcf gbl_dataConfig, 6
0246   1C85           01151         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
0247   17F9           01152                 bsf gbl_dataConfig, 7
0248   1807           01153         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
0249   15F9           01154                 bsf gbl_dataConfig, 3
024A   1487           01155         bsf ANALOG_SEL, CH1SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
024B   1605           01156         bsf ANALOG_GAIN, CH1SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01157 
024C   1683 1303      01158         banksel TRISC                                   ;Access Bank1
024E   1487           01159         bsf TRISC, CH1SEL                                       ;Ch1Sel high Z
024F   1107           01160         bcf TRISC, CH2SEL                                       ;Ch2Sel output
0250   1605           01161         bsf TRISA, CH1SELG                                      ;Ch1Sel high Z
0251   1285           01162         bcf TRISA, CH2SELG                                      ;Ch2Sel output
0252   1283 1303      01163         banksel ANALOG_SEL                              ;Access Bank0
0254   1107           01164         bcf ANALOG_SEL, CH2SEL                          ;Ch2Sel low
0255   1285           01165         bcf ANALOG_GAIN, CH2SELG                        ;Ch1SelG low
0256   1679           01166         bsf gbl_dataConfig, 4                           ;Assume Gain = 2
0257   1C05           01167         btfss ANALOG_GAIN, GAIN1                        ;If Gain1 then unmark
0258   1279           01168                 bcf gbl_dataConfig, 4
0259   1C85           01169         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then unmark
025A   1279           01170                 bcf gbl_dataConfig, 4
025B   1C85           01171         btfss ANALOG_GAIN, GAIN5                        ;If Gain5 then mark
025C   16F9           01172                 bsf gbl_dataConfig, 5
025D   1807           01173         btfsc ANALOG_ACDC, ACDCMODE                     ;If DC coupling open (implies AC coupling) then 
                            mark
025E   1579           01174                 bsf gbl_dataConfig, 2
025F   1507           01175         bsf ANALOG_SEL, CH2SEL                          ;Recharge ACDCMODE signal line if it was driven 
                            low by above checks
0260   1685           01176         bsf ANALOG_GAIN, CH2SELG                        ;Recharge GAIN5 or GAIN1 signal line if it was d
                            riven low by above checks
                      01177 
                      01178         ;Next byte is Trigger Level
0261   1089           01179         bcf ADC_CONTROLPORT, ADDR0                      ;Select address for trigger level
0262   1506           01180         bsf ADC_PORT, ADDR1
0263   1186           01181         bcf ADC_PORT, ADDR2
0264   1086           01182         bcf ADC_PORT, CS                                        ;Select maxim ADC
0265   1009           01183         bcf ADC_CONTROLPORT, RDD                        ;Begin conversion
0266   0000           01184         nop                                                                     ;Wait 5
0267   0000           01185         nop
0268   0000           01186         nop
0269   0000           01187         nop
026A   0000           01188         nop
026B   0808           01189         movf ADC_DATAPORT, W                            ;Save trigger level
026C   1409           01190         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
026D   1486           01191         bsf ADC_PORT, CS                                        ;unselect maxim ADC
026E   1089           01192         bcf ADC_CONTROLPORT, ADDR0                      ;Unselect address for trigger level
026F   1106           01193         bcf ADC_PORT, ADDR1
0270   1186           01194         bcf ADC_PORT, ADDR2
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0271   00E3           01195         movwf b0_triggerLevel
0272   0008           01196         return
                      01197 
                      01198 
                      01199 ;=============================================================================
                      01200 ;*****************************************************************************
                      01201 ;=============================================================================
                      01202 
                      01203 
                      01204 ;Sample Delayed
                      01205 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01206 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01207 ;-----------------------------------------------------------------------------
0273                  01208 SampleDelayed
0273   1009           01209         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01210         MOVLF BUFFERSIZE-1, gbl_cntrc           ;Initialize counter, use gbl_cntrc as counter
0274   303F               M     movlw BUFFERSIZE-1
0275   00F5               M     movwf gbl_cntrc
                      01211         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0276   3020               M     movlw BUFFERMIN
0277   0084               M     movwf FSR
                      01212         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0278   0872               M     movf gbl_sampleRate2, w
0279   00F3               M     movwf gbl_cntra
                      01213         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
027A   0871               M     movf gbl_sampleRate1, w
027B   00F4               M     movwf gbl_cntrb
027C   0000           01214         nop
027D   210B           01215         call Delay
027E                  01216 SampleDelayedLoopA
027E   0808           01217         movf ADC_DATAPORT, W                            ;Sample
027F   1409           01218         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0280   1009           01219         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0281   0080           01220         movwf INDF                                                      ;Save to QUEUE
0282   0A84           01221         incf FSR, F                                                     ;Increment QUEUE pointer
0283                  01222 StSampleDelayedLoopA
                      01223         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0283   0872               M     movf gbl_sampleRate2, w
0284   00F3               M     movwf gbl_cntra
                      01224         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0285   0871               M     movf gbl_sampleRate1, w
0286   00F4               M     movwf gbl_cntrb
0287   210B           01225         call Delay
0288   0BF5           01226         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0289   2A7E           01227                 goto SampleDelayedLoopA
028A   0000           01228         nop
028B   0808           01229         movf ADC_DATAPORT, W                            ;Last sample in Bank 1
028C   1409           01230         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
028D   1009           01231         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
028E   0080           01232         movwf INDF                                                      ;Save to QUEUE
028F   1784           01233         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01234         MOVLF BUFFERSIZE-1, gbl_cntrc
0290   303F               M     movlw BUFFERSIZE-1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0291   00F5               M     movwf gbl_cntrc
                      01235         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0292   0872               M     movf gbl_sampleRate2, w
0293   00F3               M     movwf gbl_cntra
                      01236         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0294   0871               M     movf gbl_sampleRate1, w
0295   00F4               M     movwf gbl_cntrb
0296   210B           01237         call Delay
0297   0000           01238         nop
0298                  01239 SampleDelayedLoopB
0298   0808           01240         movf ADC_DATAPORT, W                            ;Sample
0299   1409           01241         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
029A   1009           01242         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
029B   0080           01243         movwf INDF                                                      ;Save to QUEUE
029C   0384           01244         decf FSR, F                                                     ;Increment QUEUE pointer
                      01245         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
029D   0872               M     movf gbl_sampleRate2, w
029E   00F3               M     movwf gbl_cntra
                      01246         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
029F   0871               M     movf gbl_sampleRate1, w
02A0   00F4               M     movwf gbl_cntrb
02A1   210B           01247         call Delay
02A2   0BF5           01248         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02A3   2A98           01249                 goto SampleDelayedLoopB
02A4   0000           01250         nop
02A5   0808           01251         movf ADC_DATAPORT, W                            ;Last sample in Bank 2
02A6   1409           01252         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02A7   1009           01253         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02A8   0080           01254         movwf INDF                                                      ;Save to QUEUE
02A9   1783           01255         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01256         MOVLF BUFFERSIZE-1, gbl_cntrc
02AA   303F               M     movlw BUFFERSIZE-1
02AB   00F5               M     movwf gbl_cntrc
                      01257         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02AC   0872               M     movf gbl_sampleRate2, w
02AD   00F3               M     movwf gbl_cntra
                      01258         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02AE   0871               M     movf gbl_sampleRate1, w
02AF   00F4               M     movwf gbl_cntrb
02B0   210B           01259         call Delay
02B1   0000           01260         nop
02B2                  01261 SampleDelayedLoopC
02B2   0808           01262         movf ADC_DATAPORT, W                            ;Sample
02B3   1409           01263         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02B4   1009           01264         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02B5   0080           01265         movwf INDF                                                      ;Save to QUEUE
02B6   0A84           01266         incf FSR, F                                                     ;Increment QUEUE pointer
                      01267         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02B7   0872               M     movf gbl_sampleRate2, w
02B8   00F3               M     movwf gbl_cntra
                      01268         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02B9   0871               M     movf gbl_sampleRate1, w
02BA   00F4               M     movwf gbl_cntrb
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BB   210B           01269         call Delay
02BC   0BF5           01270         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02BD   2AB2           01271                 goto SampleDelayedLoopC
02BE   0000           01272         nop
02BF   0808           01273         movf ADC_DATAPORT, W                            ;Last sample in Bank 4
02C0   1409           01274         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02C1   1009           01275         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02C2   0080           01276         movwf INDF                                                      ;Save to QUEUE
02C3   1384           01277         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
                      01278         MOVLF BUFFERSIZE-1, gbl_cntrc
02C4   303F               M     movlw BUFFERSIZE-1
02C5   00F5               M     movwf gbl_cntrc
                      01279         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02C6   0872               M     movf gbl_sampleRate2, w
02C7   00F3               M     movwf gbl_cntra
                      01280         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02C8   0871               M     movf gbl_sampleRate1, w
02C9   00F4               M     movwf gbl_cntrb
02CA   210B           01281         call Delay
02CB   0000           01282         nop
02CC                  01283 SampleDelayedLoopD
02CC   0808           01284         movf ADC_DATAPORT, W                            ;Sample
02CD   1409           01285         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02CE   1009           01286         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02CF   0080           01287         movwf INDF                                                      ;Save to QUEUE
02D0   0384           01288         decf FSR, F                                                     ;Increment QUEUE pointer
                      01289         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02D1   0872               M     movf gbl_sampleRate2, w
02D2   00F3               M     movwf gbl_cntra
                      01290         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02D3   0871               M     movf gbl_sampleRate1, w
02D4   00F4               M     movwf gbl_cntrb
02D5   210B           01291         call Delay
02D6   0BF5           01292         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
02D7   2ACC           01293                 goto SampleDelayedLoopD
02D8   0000           01294         nop
02D9   0808           01295         movf ADC_DATAPORT, W                            ;Last sample
02DA   1409           01296         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02DB   118A           01297         bcf PCLATH, 3                                           ;insure correct program memory page
02DC   120A           01298         bcf PCLATH, 4
02DD   2916           01299         goto ADCShutdown
                      01300 
                      01301 ;SampleXYDelayed
                      01302 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      01303 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      01304 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      01305 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      01306 ;-----------------------------------------------------------------------------
02DE                  01307 SampleXYDelayed
02DE   1009           01308         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
02DF   1489           01309         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01310         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
02E0   3020               M     movlw BUFFERMIN
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E1   0084               M     movwf FSR
02E2   0808           01311         movf ADC_DATAPORT, W                            ;Sample X
02E3   1409           01312         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02E4   1009           01313         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02E5   1089           01314         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02E6   0080           01315         movwf INDF                                                      ;Save to QUEUE
02E7   0A84           01316         incf FSR, F                                                     ;Increment QUEUE pointer
                      01317         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
02E8   301F               M     movlw BUFFERSIZE/2-1
02E9   00F5               M     movwf gbl_cntrc
                      01318         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02EA   0872               M     movf gbl_sampleRate2, w
02EB   00F3               M     movwf gbl_cntra
                      01319         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02EC   0871               M     movf gbl_sampleRate1, w
02ED   00F4               M     movwf gbl_cntrb
02EE   210B           01320         call Delay
02EF   0000           01321         nop
02F0                  01322 SampleXYDelayedLA
02F0   0808           01323         movf ADC_DATAPORT, W                            ;Sample Y
02F1   1409           01324         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F2   1009           01325         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F3   1489           01326         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
02F4   0080           01327         movwf INDF                                                      ;Save to QUEUE
02F5   0A84           01328         incf FSR, F                                                     ;Increment QUEUE pointer
02F6   0808           01329         movf ADC_DATAPORT, W                            ;Sample X
02F7   1409           01330         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
02F8   1009           01331         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
02F9   1089           01332         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
02FA   0080           01333         movwf INDF                                                      ;Save to QUEUE
02FB   0A84           01334         incf FSR, F                                                     ;Increment QUEUE pointer
                      01335         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
02FC   0872               M     movf gbl_sampleRate2, w
02FD   00F3               M     movwf gbl_cntra
                      01336         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
02FE   0871               M     movf gbl_sampleRate1, w
02FF   00F4               M     movwf gbl_cntrb
0300   210B           01337         call Delay
0301   0BF5           01338         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0302   2AF0           01339                 goto SampleXYDelayedLA
0303   0000           01340         nop
0304   0808           01341         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0305   1409           01342         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0306   1009           01343         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0307   1489           01344         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0308   0080           01345         movwf INDF                                                      ;Save to QUEUE
0309   1784           01346         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
030A   0808           01347         movf ADC_DATAPORT, W                            ;Sample X
030B   1409           01348         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
030C   1009           01349         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
030D   1089           01350         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
030E   0080           01351         movwf INDF                                                      ;Save to QUEUE
030F   0384           01352         decf FSR, f                                                     ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01353         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0310   301F               M     movlw BUFFERSIZE/2-1
0311   00F5               M     movwf gbl_cntrc
                      01354         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0312   0872               M     movf gbl_sampleRate2, w
0313   00F3               M     movwf gbl_cntra
                      01355         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0314   0871               M     movf gbl_sampleRate1, w
0315   00F4               M     movwf gbl_cntrb
0316   210B           01356         call Delay
0317   0000           01357         nop
0318                  01358 SampleXYDelayedLB
0318   0808           01359         movf ADC_DATAPORT, W                            ;Sample Y
0319   1409           01360         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
031A   1009           01361         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
031B   1489           01362         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
031C   0080           01363         movwf INDF                                                      ;Save to QUEUE
031D   0384           01364         decf FSR, F                                                     ;Increment QUEUE pointer
031E   0808           01365         movf ADC_DATAPORT, W                            ;Sample X
031F   1409           01366         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0320   1009           01367         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0321   1089           01368         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0322   0080           01369         movwf INDF                                                      ;Save to QUEUE
0323   0384           01370         decf FSR, F                                                     ;Increment QUEUE pointer
                      01371         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0324   0872               M     movf gbl_sampleRate2, w
0325   00F3               M     movwf gbl_cntra
                      01372         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0326   0871               M     movf gbl_sampleRate1, w
0327   00F4               M     movwf gbl_cntrb
0328   210B           01373         call Delay
0329   0BF5           01374         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
032A   2B18           01375                 goto SampleXYDelayedLB
032B   0000           01376         nop
032C   0808           01377         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
032D   1409           01378         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
032E   1009           01379         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
032F   1489           01380         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0330   0080           01381         movwf INDF                                                      ;Save to QUEUE
0331   1783           01382         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0332   0808           01383         movf ADC_DATAPORT, W                            ;Sample X
0333   1409           01384         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0334   1009           01385         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0335   1089           01386         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0336   0080           01387         movwf INDF                                                      ;Save to QUEUE
0337   0A84           01388         incf FSR, f                                                     ;Increment QUEUE pointer
                      01389         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0338   301F               M     movlw BUFFERSIZE/2-1
0339   00F5               M     movwf gbl_cntrc
                      01390         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
033A   0872               M     movf gbl_sampleRate2, w
033B   00F3               M     movwf gbl_cntra
                      01391         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033C   0871               M     movf gbl_sampleRate1, w
033D   00F4               M     movwf gbl_cntrb
033E   210B           01392         call Delay
033F   0000           01393         nop
0340                  01394 SampleXYDelayedLC
0340   0808           01395         movf ADC_DATAPORT, W                            ;Sample Y
0341   1409           01396         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0342   1009           01397         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0343   1489           01398         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0344   0080           01399         movwf INDF                                                      ;Save to QUEUE
0345   0A84           01400         incf FSR, F                                                     ;Increment QUEUE pointer
0346   0808           01401         movf ADC_DATAPORT, W                            ;Sample X
0347   1409           01402         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0348   1009           01403         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0349   1089           01404         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
034A   0080           01405         movwf INDF                                                      ;Save to QUEUE
034B   0A84           01406         incf FSR, F                                                     ;Increment QUEUE pointer
                      01407         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
034C   0872               M     movf gbl_sampleRate2, w
034D   00F3               M     movwf gbl_cntra
                      01408         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
034E   0871               M     movf gbl_sampleRate1, w
034F   00F4               M     movwf gbl_cntrb
0350   210B           01409         call Delay
0351   0BF5           01410         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0352   2B40           01411                 goto SampleXYDelayedLC
0353   0000           01412         nop
0354   0808           01413         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0355   1409           01414         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0356   1009           01415         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0357   1489           01416         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0358   0080           01417         movwf INDF                                                      ;Save to QUEUE
0359   1384           01418         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
035A   0808           01419         movf ADC_DATAPORT, W                            ;Sample X
035B   1409           01420         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
035C   1009           01421         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
035D   1089           01422         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
035E   0080           01423         movwf INDF                                                      ;Save to QUEUE
035F   0384           01424         decf FSR, f                                                     ;Increment QUEUE pointer
                      01425         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0360   301F               M     movlw BUFFERSIZE/2-1
0361   00F5               M     movwf gbl_cntrc
                      01426         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0362   0872               M     movf gbl_sampleRate2, w
0363   00F3               M     movwf gbl_cntra
                      01427         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0364   0871               M     movf gbl_sampleRate1, w
0365   00F4               M     movwf gbl_cntrb
0366   210B           01428         call Delay
0367   0000           01429         nop
0368                  01430 SampleXYDelayedLD
0368   0808           01431         movf ADC_DATAPORT, W                            ;Sample Y
0369   1409           01432         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036A   1009           01433         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
036B   1489           01434         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
036C   0080           01435         movwf INDF                                                      ;Save to QUEUE
036D   0384           01436         decf FSR, F                                                     ;Increment QUEUE pointer
036E   0808           01437         movf ADC_DATAPORT, W                            ;Sample X
036F   1409           01438         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0370   1009           01439         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0371   1089           01440         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0372   0080           01441         movwf INDF                                                      ;Save to QUEUE
0373   0384           01442         decf FSR, F                                                     ;Increment QUEUE pointer
                      01443         MOVFF gbl_sampleRate2, gbl_cntra        ;Restore gbl_cntra
0374   0872               M     movf gbl_sampleRate2, w
0375   00F3               M     movwf gbl_cntra
                      01444         MOVFF gbl_sampleRate1, gbl_cntrb        ;Restore gbl_cntrb
0376   0871               M     movf gbl_sampleRate1, w
0377   00F4               M     movwf gbl_cntrb
0378   210B           01445         call Delay
0379   0BF5           01446         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
037A   2B68           01447                 goto SampleXYDelayedLD
037B   0000           01448         nop
037C   0808           01449         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
037D   1409           01450         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
037E   118A           01451         bcf PCLATH, 3                                           ;insure correct program memory page
037F   120A           01452         bcf PCLATH, 4
0380   2916           01453         goto ADCShutdown
                      01454 
                      01455 ;Fast sample
                      01456 ;Sampling rate = 625 kHz with 20 MHz clock
                      01457 ;Sampling rate = 125 kHz with 4 MHz clock
                      01458 ;-----------------------------------------------------------------------------
0381                  01459 Sample625k
0381   1009           01460         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01461         MOVLF BUFFERSIZE-1, gbl_cntra           ;Initialize counter
0382   303F               M     movlw BUFFERSIZE-1
0383   00F3               M     movwf gbl_cntra
                      01462         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0384   3020               M     movlw BUFFERMIN
0385   0084               M     movwf FSR
0386   0000           01463         nop
0387                  01464 Sample625kLoopA
0387   0808           01465         movf ADC_DATAPORT, W                            ;Sample
0388   1409           01466         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0389   1009           01467         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
038A   0080           01468         movwf INDF                                                      ;Save to QUEUE
038B   0A84           01469         incf FSR, F                                                     ;Increment QUEUE pointer
038C   0BF3           01470         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
038D   2B87           01471                 goto Sample625kLoopA
038E   0000           01472         nop
038F   0808           01473         movf ADC_DATAPORT, w                            ;Last sample in Bank 1
0390   1409           01474         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
0391   1009           01475         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
0392   0080           01476         movwf INDF                                                      ;Save to QUEUE
0393   1784           01477         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01478         MOVLF BUFFERSIZE-1, gbl_cntra
0394   303F               M     movlw BUFFERSIZE-1
0395   00F3               M     movwf gbl_cntra
0396   0000           01479         nop
0397                  01480 Sample625kLoopB
0397   0808           01481         movf ADC_DATAPORT, W                            ;Sample
0398   1409           01482         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0399   1009           01483         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
039A   0080           01484         movwf INDF                                                      ;Save to QUEUE
039B   0384           01485         decf FSR, F                                                     ;Increment QUEUE pointer
039C   0BF3           01486         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
039D   2B97           01487                 goto Sample625kLoopB
039E   0000           01488         nop
039F   0808           01489         movf ADC_DATAPORT, w                            ;Last sample in Bank 2
03A0   1409           01490         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03A1   1009           01491         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03A2   0080           01492         movwf INDF                                                      ;Save to QUEUE
03A3   1783           01493         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
                      01494         MOVLF BUFFERSIZE-1, gbl_cntra
03A4   303F               M     movlw BUFFERSIZE-1
03A5   00F3               M     movwf gbl_cntra
03A6   0000           01495         nop
03A7                  01496 Sample625kLoopC
03A7   0808           01497         movf ADC_DATAPORT, W                            ;Sample
03A8   1409           01498         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03A9   1009           01499         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03AA   0080           01500         movwf INDF                                                      ;Save to QUEUE
03AB   0A84           01501         incf FSR, F                                                     ;Increment QUEUE pointer
03AC   0BF3           01502         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03AD   2BA7           01503                 goto Sample625kLoopC
03AE   0000           01504         nop
03AF   0808           01505         movf ADC_DATAPORT, w                            ;Last sample in Bank 4
03B0   1409           01506         bsf ADC_CONTROLPORT, RDD                        ;stop conversion
03B1   1009           01507         bcf ADC_CONTROLPORT, RDD                        ;begin next conversion
03B2   0080           01508         movwf INDF                                                      ;Save to QUEUE
03B3   1384           01509         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
                      01510         MOVLF BUFFERSIZE-1, gbl_cntra
03B4   303F               M     movlw BUFFERSIZE-1
03B5   00F3               M     movwf gbl_cntra
03B6   0000           01511         nop
03B7                  01512 Sample625kLoopD
03B7   0808           01513         movf ADC_DATAPORT, W                            ;Sample
03B8   1409           01514         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03B9   1009           01515         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03BA   0080           01516         movwf INDF                                                      ;Save to QUEUE
03BB   0384           01517         decf FSR, F                                                     ;Increment QUEUE pointer
03BC   0BF3           01518         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03BD   2BB7           01519                 goto Sample625kLoopD
03BE   0000           01520         nop
03BF   0808           01521         movf ADC_DATAPORT, W                            ;Last sample
03C0   1409           01522         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03C1   118A           01523         bcf PCLATH, 3                                           ;insure correct program memory page
03C2   120A           01524         bcf PCLATH, 4
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C3   2916           01525         goto ADCShutdown
                      01526 
                      01527 ;Fast sample
                      01528 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01529 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      01530 ;or
                      01531 ;Sampling rate = 250 kHz with 20 MHz clock
                      01532 ;Sampling rate =  50 kHz with 4 MHz clock
                      01533 ;-----------------------------------------------------------------------------
03C4                  01534 Sample417k250k
03C4   1009           01535         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01536         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Initialize counter
03C5   303F               M     movlw BUFFERSIZE - 1
03C6   00F3               M     movwf gbl_cntra
                      01537         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03C7   3020               M     movlw BUFFERMIN
03C8   0084               M     movwf FSR
03C9   2BCA           01538         goto $ + 1                                                      ;Delay 3
03CA   1D70           01539         btfss gbl_configLoc1, 2                         ;Choose to delay by 3 more or by 11 more
03CB   2BCD           01540                 goto Sample417kLoopA
03CC   2423           01541         call DelaySeven                                         ;Delay 9 cycles
03CD                  01542 Sample417kLoopA
03CD   0808           01543         movf ADC_DATAPORT, W                            ;Sample
03CE   1409           01544         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03CF   1009           01545         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03D0   0080           01546         movwf INDF                                                      ;Save to QUEUE
03D1   0A84           01547         incf FSR, F                                                     ;Increment QUEUE pointer
03D2   1D70           01548         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03D3   2BD5           01549                 goto Sample417kA                                ;Delaying 4 cycles, sample at 417k
03D4                  01550 Sample250kA
03D4   2423           01551         call DelaySeven                                         ;Delay 9 cycles
03D5                  01552 Sample417kA
03D5   0000           01553         nop
03D6   0BF3           01554         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03D7   2BCD           01555                 goto Sample417kLoopA
03D8   0000           01556         nop
03D9   0808           01557         movf ADC_DATAPORT, W                            ;Last sample bank 1
03DA   1409           01558         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03DB   1009           01559         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03DC   0080           01560         movwf INDF                                                      ;Save to QUEUE
03DD   1784           01561         bsf FSR, 7                                                      ;Goto bank 2
                      01562         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03DE   303F               M     movlw BUFFERSIZE - 1
03DF   00F3               M     movwf gbl_cntra
03E0   2BE1           01563         goto $ + 1
03E1   1D70           01564         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03E2   2BE4           01565                 goto Sample417kLoopB                    ;Delaying  cycles, sample at 417k
03E3   2423           01566         call DelaySeven                                         ;Delay 9 cycles
03E4                  01567 Sample417kLoopB
03E4   0808           01568         movf ADC_DATAPORT, W                            ;Sample
03E5   1409           01569         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E6   1009           01570         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03E7   0080           01571         movwf INDF                                                      ;Save to QUEUE
03E8   0384           01572         decf FSR, F                                                     ;Increment QUEUE pointer
03E9                  01573 StSample417kLoopB
03E9   1D70           01574         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
03EA   2BEC           01575                 goto Sample417kB                                ;Delaying 4 cycles, sample at 417k
03EB                  01576 Sample250kB
03EB   2423           01577         call DelaySeven                                         ;Delay 9 cycles
03EC                  01578 Sample417kB
03EC   0000           01579         nop
03ED   0BF3           01580         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
03EE   2BE4           01581                 goto Sample417kLoopB
03EF   0000           01582         nop
03F0   0808           01583         movf ADC_DATAPORT, W                            ;Last sample bank 2
03F1   1409           01584         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03F2   1009           01585         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03F3   0080           01586         movwf INDF                                                      ;Save to QUEUE
03F4   1783           01587         bsf STATUS, IRP                                         ;Goto bank 4
                      01588         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
03F5   303F               M     movlw BUFFERSIZE - 1
03F6   00F3               M     movwf gbl_cntra
03F7   2BF8           01589         goto $ + 1
03F8   1D70           01590         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
03F9   2BFB           01591                 goto Sample417kLoopC                    ;Delaying  cycles, sample at 417k
03FA   2423           01592         call DelaySeven                                         ;Delay 9 cycles
03FB                  01593 Sample417kLoopC
03FB   0808           01594         movf ADC_DATAPORT, W                            ;Sample
03FC   1409           01595         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
03FD   1009           01596         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
03FE   0080           01597         movwf INDF                                                      ;Save to QUEUE
03FF   0A84           01598         incf FSR, F                                                     ;Increment QUEUE pointer
0400                  01599 StSample417kLoopC
0400   1D70           01600         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0401   2C03           01601                 goto Sample417kC                                ;Delaying 4 cycles, sample at 417k
0402                  01602 Sample250kC
0402   2423           01603         call DelaySeven                                         ;Delay 9 cycles
0403                  01604 Sample417kC
0403   0000           01605         nop
0404   0BF3           01606         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
0405   2BFB           01607                 goto Sample417kLoopC
0406   0000           01608         nop
0407   0808           01609         movf ADC_DATAPORT, W                            ;Last sample bank 4
0408   1409           01610         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0409   1009           01611         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
040A   0080           01612         movwf INDF                                                      ;Save to QUEUE
040B   1384           01613         bcf FSR, 7                                                      ;Goto bank 3
                      01614         MOVLF BUFFERSIZE - 1, gbl_cntra         ;Reinitialize counter
040C   303F               M     movlw BUFFERSIZE - 1
040D   00F3               M     movwf gbl_cntra
040E   2C0F           01615         goto $ + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

040F   1D70           01616         btfss gbl_configLoc1, 2                         ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
0410   2C12           01617                 goto Sample417kLoopD                    ;Delaying  cycles, sample at 417k
0411   2423           01618         call DelaySeven                                         ;Delay 9 cycles
0412                  01619 Sample417kLoopD
0412   0808           01620         movf ADC_DATAPORT, W                            ;Sample
0413   1409           01621         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0414   1009           01622         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0415   0080           01623         movwf INDF                                                      ;Save to QUEUE
0416   0384           01624         decf FSR, F                                                     ;Increment QUEUE pointer
0417                  01625 StSample417kLoopD
0417   1D70           01626         btfss gbl_configLoc1, 2                         ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
0418   2C1A           01627                 goto Sample417kD                                ;Delaying 4 cycles, sample at 417k
0419                  01628 Sample250kD
0419   2423           01629         call DelaySeven                                         ;Delay 9 cycles
041A                  01630 Sample417kD
041A   0000           01631         nop
041B   0BF3           01632         decfsz gbl_cntra, F                                     ;Increment counter, 64 samples?
041C   2C12           01633                 goto Sample417kLoopD
041D   0000           01634         nop
041E   0808           01635         movf ADC_DATAPORT, W                            ;Last sample
041F   1409           01636         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0420   118A           01637         bcf PCLATH, 3                                           ;insure correct program memory page
0421   120A           01638         bcf PCLATH, 4
0422   2916           01639         goto ADCShutdown
                      01640 
                      01641 ;Delay Seven Cycles, helper to Sample417k250k
0423                  01642 DelaySeven
0423   2C24           01643         goto $ + 1                                                      ;7
                      01644 ;Delay Five Cycles, helper to SampleXY250k192k
0424                  01645 DelayFive
0424   0000           01646         nop                                                                     ;5
0425   2C26           01647         goto $ + 1                                              
                      01648 ;Delay Two Cycles, helper to SampleXY250k192k
0426                  01649 DelayTwo
0426   0008           01650         return                                                          ;2
                      01651 
                      01652 
                      01653 ;Fast sample XY
                      01654 ;Sampling rate = 250 kHz with 20 MHz clock
0427                  01655 SampleXY250k192k
0427   1009           01656         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
0428   1489           01657         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01658         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0429   3020               M     movlw BUFFERMIN
042A   0084               M     movwf FSR
042B   0808           01659         movf ADC_DATAPORT, W                            ;Sample X
042C   1409           01660         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
042D   1009           01661         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
042E   1089           01662         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
042F   0080           01663         movwf INDF                                                      ;Save to QUEUE
0430   0A84           01664         incf FSR, F                                                     ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01665         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0431   301F               M     movlw BUFFERSIZE/2-1
0432   00F5               M     movwf gbl_cntrc
0433   1C70           01666         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0434   2424           01667                 call DelayFive                                  ;192k
0435   2426           01668         call DelayTwo
0436                  01669 SampleXY250kLA
0436   0808           01670         movf ADC_DATAPORT, W                            ;Sample Y
0437   1409           01671         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0438   1009           01672         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0439   1489           01673         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
043A   0080           01674         movwf INDF                                                      ;Save to QUEUE
043B   0A84           01675         incf FSR, F                                                     ;Increment QUEUE pointer
043C   0808           01676         movf ADC_DATAPORT, W                            ;Sample X
043D   1409           01677         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
043E   1009           01678         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
043F   1089           01679         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0440   0080           01680         movwf INDF                                                      ;Save to QUEUE
0441   0A84           01681         incf FSR, F                                                     ;Increment QUEUE pointer
0442   1C70           01682         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0443   2424           01683                 call DelayFive                                  ;192k
0444   2C45           01684         goto $ + 1
0445   0000           01685         nop
0446   0BF5           01686         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
0447   2C36           01687                 goto SampleXY250kLA
0448   0000           01688         nop
0449   0808           01689         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
044A   1409           01690         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
044B   1009           01691         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
044C   1489           01692         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
044D   0080           01693         movwf INDF                                                      ;Save to QUEUE
044E   1784           01694         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
044F   0808           01695         movf ADC_DATAPORT, W                            ;Sample X
0450   1409           01696         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0451   1009           01697         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0452   1089           01698         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0453   0080           01699         movwf INDF                                                      ;Save to QUEUE
0454   0384           01700         decf FSR, f                                                     ;Increment QUEUE pointer
                      01701         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0455   301F               M     movlw BUFFERSIZE/2-1
0456   00F5               M     movwf gbl_cntrc
0457   1C70           01702         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0458   2424           01703                 call DelayFive                                  ;192k
0459   2426           01704         call DelayTwo
045A                  01705 SampleXY250kLB
045A   0808           01706         movf ADC_DATAPORT, W                            ;Sample Y
045B   1409           01707         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
045C   1009           01708         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
045D   1489           01709         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
045E   0080           01710         movwf INDF                                                      ;Save to QUEUE
045F   0384           01711         decf FSR, F                                                     ;Increment QUEUE pointer
0460   0808           01712         movf ADC_DATAPORT, W                            ;Sample X
0461   1409           01713         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0462   1009           01714         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0463   1089           01715         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0464   0080           01716         movwf INDF                                                      ;Save to QUEUE
0465   0384           01717         decf FSR, F                                                     ;Increment QUEUE pointer
0466   1C70           01718         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
0467   2424           01719                 call DelayFive                                  ;192k
0468   2C69           01720         goto $ + 1
0469   0000           01721         nop
046A   0BF5           01722         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
046B   2C5A           01723                 goto SampleXY250kLB
046C   0000           01724         nop
046D   0808           01725         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
046E   1409           01726         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
046F   1009           01727         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0470   1489           01728         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0471   0080           01729         movwf INDF                                                      ;Save to QUEUE
0472   1783           01730         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0473   0808           01731         movf ADC_DATAPORT, W                            ;Sample X
0474   1409           01732         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0475   1009           01733         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0476   1089           01734         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0477   0080           01735         movwf INDF                                                      ;Save to QUEUE
0478   0A84           01736         incf FSR, f                                                     ;Increment QUEUE pointer
                      01737         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
0479   301F               M     movlw BUFFERSIZE/2-1
047A   00F5               M     movwf gbl_cntrc
047B   1C70           01738         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
047C   2424           01739                 call DelayFive                                  ;192k
047D   2426           01740         call DelayTwo
047E                  01741 SampleXY250kLC
047E   0808           01742         movf ADC_DATAPORT, W                            ;Sample Y
047F   1409           01743         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0480   1009           01744         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0481   1489           01745         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0482   0080           01746         movwf INDF                                                      ;Save to QUEUE
0483   0A84           01747         incf FSR, F                                                     ;Increment QUEUE pointer
0484   0808           01748         movf ADC_DATAPORT, W                            ;Sample X
0485   1409           01749         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0486   1009           01750         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0487   1089           01751         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0488   0080           01752         movwf INDF                                                      ;Save to QUEUE
0489   0A84           01753         incf FSR, F                                                     ;Increment QUEUE pointer
048A   1C70           01754         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
048B   2424           01755                 call DelayFive                                  ;192k
048C   2C8D           01756         goto $ + 1
048D   0000           01757         nop
048E   0BF5           01758         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
048F   2C7E           01759                 goto SampleXY250kLC
0490   0000           01760         nop
0491   0808           01761         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0492   1409           01762         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0493   1009           01763         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0494   1489           01764         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0495   0080           01765         movwf INDF                                                      ;Save to QUEUE
0496   1384           01766         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0497   0808           01767         movf ADC_DATAPORT, W                            ;Sample X
0498   1409           01768         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0499   1009           01769         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
049A   1089           01770         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
049B   0080           01771         movwf INDF                                                      ;Save to QUEUE
049C   0384           01772         decf FSR, f                                                     ;Increment QUEUE pointer
                      01773         MOVLF BUFFERSIZE/2-1, gbl_cntrc         ;Initialize counter, use gbl_cntrc as counter
049D   301F               M     movlw BUFFERSIZE/2-1
049E   00F5               M     movwf gbl_cntrc
049F   1C70           01774         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04A0   2424           01775                 call DelayFive                                  ;192k
04A1   2426           01776         call DelayTwo
04A2                  01777 SampleXY250kLD
04A2   0808           01778         movf ADC_DATAPORT, W                            ;Sample Y
04A3   1409           01779         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04A4   1009           01780         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04A5   1489           01781         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
04A6   0080           01782         movwf INDF                                                      ;Save to QUEUE
04A7   0384           01783         decf FSR, F                                                     ;Increment QUEUE pointer
04A8   0808           01784         movf ADC_DATAPORT, W                            ;Sample X
04A9   1409           01785         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04AA   1009           01786         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
04AB   1089           01787         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
04AC   0080           01788         movwf INDF                                                      ;Save to QUEUE
04AD   0384           01789         decf FSR, F                                                     ;Increment QUEUE pointer
04AE   1C70           01790         btfss gbl_configLoc1, 0                         ;Delay 250k or 192k
04AF   2424           01791                 call DelayFive                                  ;192k
04B0   2CB1           01792         goto $ + 1
04B1   0000           01793         nop
04B2   0BF5           01794         decfsz gbl_cntrc, F                                     ;Increment counter, 64 samples?
04B3   2CA2           01795                 goto SampleXY250kLD
04B4   0000           01796         nop
04B5   0808           01797         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
04B6   1409           01798         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
04B7   118A           01799         bcf PCLATH, 3                                           ;insure correct program memory page
04B8   120A           01800         bcf PCLATH, 4
04B9   2916           01801         goto ADCShutdown
                      01802 
                      01803 ;Fastest sample
                      01804 ;Sampling rate = 1 MHz with 20 MHz clock
                      01805 ;Sampling rate = 200 kHz with 4 MHz clock
                      01806 ;-----------------------------------------------------------------------------
04BA                  01807 Sample1M
04BA   1009           01808         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01809         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
04BB   3020               M     movlw BUFFERMIN
04BC   0084               M     movwf FSR
04BD   0000           01810         nop
  0000                01811         local count
  00000001            01812         count = 1
                      01813         while count < BUFFERSIZE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04BE   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04BF   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C0   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04C1   0080           01817                 movwf INDF                                              ;Save to QUEUE
04C2   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01819                 count = count + 1
04C3   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C4   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C5   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04C6   0080           01817                 movwf INDF                                              ;Save to QUEUE
04C7   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01819                 count = count + 1
04C8   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C9   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CA   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04CB   0080           01817                 movwf INDF                                              ;Save to QUEUE
04CC   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01819                 count = count + 1
04CD   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04CE   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CF   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04D0   0080           01817                 movwf INDF                                              ;Save to QUEUE
04D1   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01819                 count = count + 1
04D2   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D3   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D4   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04D5   0080           01817                 movwf INDF                                              ;Save to QUEUE
04D6   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01819                 count = count + 1
04D7   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D8   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D9   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04DA   0080           01817                 movwf INDF                                              ;Save to QUEUE
04DB   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01819                 count = count + 1
04DC   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04DD   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04DE   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04DF   0080           01817                 movwf INDF                                              ;Save to QUEUE
04E0   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01819                 count = count + 1
04E1   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E2   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E3   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04E4   0080           01817                 movwf INDF                                              ;Save to QUEUE
04E5   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01819                 count = count + 1
04E6   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04E7   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04E8   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04E9   0080           01817                 movwf INDF                                              ;Save to QUEUE
04EA   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000A            01819                 count = count + 1
04EB   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04EC   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04ED   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04EE   0080           01817                 movwf INDF                                              ;Save to QUEUE
04EF   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01819                 count = count + 1
04F0   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F1   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F2   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04F3   0080           01817                 movwf INDF                                              ;Save to QUEUE
04F4   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01819                 count = count + 1
04F5   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04F6   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04F7   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04F8   0080           01817                 movwf INDF                                              ;Save to QUEUE
04F9   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01819                 count = count + 1
04FA   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04FB   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04FC   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
04FD   0080           01817                 movwf INDF                                              ;Save to QUEUE
04FE   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01819                 count = count + 1
04FF   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0500   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0501   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0502   0080           01817                 movwf INDF                                              ;Save to QUEUE
0503   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01819                 count = count + 1
0504   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0505   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0506   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0507   0080           01817                 movwf INDF                                              ;Save to QUEUE
0508   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01819                 count = count + 1
0509   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050A   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
050B   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
050C   0080           01817                 movwf INDF                                              ;Save to QUEUE
050D   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01819                 count = count + 1
050E   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
050F   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0510   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0511   0080           01817                 movwf INDF                                              ;Save to QUEUE
0512   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01819                 count = count + 1
0513   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0514   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0515   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0516   0080           01817                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0517   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01819                 count = count + 1
0518   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0519   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051A   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
051B   0080           01817                 movwf INDF                                              ;Save to QUEUE
051C   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01819                 count = count + 1
051D   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
051E   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
051F   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0520   0080           01817                 movwf INDF                                              ;Save to QUEUE
0521   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01819                 count = count + 1
0522   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0523   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0524   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0525   0080           01817                 movwf INDF                                              ;Save to QUEUE
0526   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01819                 count = count + 1
0527   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0528   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0529   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
052A   0080           01817                 movwf INDF                                              ;Save to QUEUE
052B   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01819                 count = count + 1
052C   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
052D   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
052E   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
052F   0080           01817                 movwf INDF                                              ;Save to QUEUE
0530   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01819                 count = count + 1
0531   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0532   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0533   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0534   0080           01817                 movwf INDF                                              ;Save to QUEUE
0535   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01819                 count = count + 1
0536   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0537   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0538   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0539   0080           01817                 movwf INDF                                              ;Save to QUEUE
053A   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01819                 count = count + 1
053B   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
053C   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
053D   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
053E   0080           01817                 movwf INDF                                              ;Save to QUEUE
053F   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01819                 count = count + 1
0540   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0541   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0542   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0543   0080           01817                 movwf INDF                                              ;Save to QUEUE
0544   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01819                 count = count + 1
0545   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0546   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0547   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0548   0080           01817                 movwf INDF                                              ;Save to QUEUE
0549   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01819                 count = count + 1
054A   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
054B   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
054C   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
054D   0080           01817                 movwf INDF                                              ;Save to QUEUE
054E   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01819                 count = count + 1
054F   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0550   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0551   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0552   0080           01817                 movwf INDF                                              ;Save to QUEUE
0553   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01819                 count = count + 1
0554   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0555   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0556   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0557   0080           01817                 movwf INDF                                              ;Save to QUEUE
0558   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01819                 count = count + 1
0559   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055A   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
055B   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
055C   0080           01817                 movwf INDF                                              ;Save to QUEUE
055D   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01819                 count = count + 1
055E   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
055F   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0560   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0561   0080           01817                 movwf INDF                                              ;Save to QUEUE
0562   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01819                 count = count + 1
0563   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0564   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0565   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0566   0080           01817                 movwf INDF                                              ;Save to QUEUE
0567   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01819                 count = count + 1
0568   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0569   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
056A   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
056B   0080           01817                 movwf INDF                                              ;Save to QUEUE
056C   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01819                 count = count + 1
056D   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
056E   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

056F   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0570   0080           01817                 movwf INDF                                              ;Save to QUEUE
0571   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01819                 count = count + 1
0572   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0573   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0574   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0575   0080           01817                 movwf INDF                                              ;Save to QUEUE
0576   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01819                 count = count + 1
0577   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0578   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0579   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
057A   0080           01817                 movwf INDF                                              ;Save to QUEUE
057B   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01819                 count = count + 1
057C   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
057D   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
057E   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
057F   0080           01817                 movwf INDF                                              ;Save to QUEUE
0580   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01819                 count = count + 1
0581   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0582   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0583   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0584   0080           01817                 movwf INDF                                              ;Save to QUEUE
0585   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01819                 count = count + 1
0586   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0587   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0588   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0589   0080           01817                 movwf INDF                                              ;Save to QUEUE
058A   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01819                 count = count + 1
058B   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
058C   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
058D   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
058E   0080           01817                 movwf INDF                                              ;Save to QUEUE
058F   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01819                 count = count + 1
0590   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0591   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0592   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0593   0080           01817                 movwf INDF                                              ;Save to QUEUE
0594   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01819                 count = count + 1
0595   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0596   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0597   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
0598   0080           01817                 movwf INDF                                              ;Save to QUEUE
0599   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01819                 count = count + 1
059A   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

059B   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
059C   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
059D   0080           01817                 movwf INDF                                              ;Save to QUEUE
059E   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01819                 count = count + 1
059F   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A0   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A1   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05A2   0080           01817                 movwf INDF                                              ;Save to QUEUE
05A3   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01819                 count = count + 1
05A4   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05A5   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05A6   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05A7   0080           01817                 movwf INDF                                              ;Save to QUEUE
05A8   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01819                 count = count + 1
05A9   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AA   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05AB   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05AC   0080           01817                 movwf INDF                                              ;Save to QUEUE
05AD   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01819                 count = count + 1
05AE   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05AF   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B0   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05B1   0080           01817                 movwf INDF                                              ;Save to QUEUE
05B2   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01819                 count = count + 1
05B3   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B4   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05B5   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05B6   0080           01817                 movwf INDF                                              ;Save to QUEUE
05B7   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01819                 count = count + 1
05B8   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05B9   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BA   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05BB   0080           01817                 movwf INDF                                              ;Save to QUEUE
05BC   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01819                 count = count + 1
05BD   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05BE   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05BF   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05C0   0080           01817                 movwf INDF                                              ;Save to QUEUE
05C1   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01819                 count = count + 1
05C2   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C3   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C4   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05C5   0080           01817                 movwf INDF                                              ;Save to QUEUE
05C6   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01819                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C7   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05C8   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05C9   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05CA   0080           01817                 movwf INDF                                              ;Save to QUEUE
05CB   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01819                 count = count + 1
05CC   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05CD   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05CE   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05CF   0080           01817                 movwf INDF                                              ;Save to QUEUE
05D0   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01819                 count = count + 1
05D1   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D2   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D3   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05D4   0080           01817                 movwf INDF                                              ;Save to QUEUE
05D5   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01819                 count = count + 1
05D6   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05D7   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05D8   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05D9   0080           01817                 movwf INDF                                              ;Save to QUEUE
05DA   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01819                 count = count + 1
05DB   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05DC   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05DD   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05DE   0080           01817                 movwf INDF                                              ;Save to QUEUE
05DF   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01819                 count = count + 1
05E0   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E1   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E2   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05E3   0080           01817                 movwf INDF                                              ;Save to QUEUE
05E4   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01819                 count = count + 1
05E5   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05E6   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05E7   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05E8   0080           01817                 movwf INDF                                              ;Save to QUEUE
05E9   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01819                 count = count + 1
05EA   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05EB   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05EC   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05ED   0080           01817                 movwf INDF                                              ;Save to QUEUE
05EE   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01819                 count = count + 1
05EF   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F0   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F1   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05F2   0080           01817                 movwf INDF                                              ;Save to QUEUE
05F3   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003F            01819                 count = count + 1
05F4   1409           01814                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
05F5   1009           01815                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
05F6   0808           01816                 movf ADC_DATAPORT, W                    ;Save Sample
05F7   0080           01817                 movwf INDF                                              ;Save to QUEUE
05F8   0A84           01818                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01819                 count = count + 1
                      01820         endw
05F9   1409           01821         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
05FA   1009           01822         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
05FB   0808           01823         movf ADC_DATAPORT, W
05FC   0080           01824         movwf INDF
05FD   1784           01825         bsf FSR, 7                                                      ;goto bank 2
  00000001            01826         count = 1
                      01827         while count < BUFFERSIZE
05FE   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FF   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0600   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0601   0080           01831                 movwf INDF                                              ;Save to QUEUE
0602   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01833                 count = count + 1
0603   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0604   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0605   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0606   0080           01831                 movwf INDF                                              ;Save to QUEUE
0607   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01833                 count = count + 1
0608   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0609   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060A   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
060B   0080           01831                 movwf INDF                                              ;Save to QUEUE
060C   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01833                 count = count + 1
060D   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
060E   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060F   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0610   0080           01831                 movwf INDF                                              ;Save to QUEUE
0611   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01833                 count = count + 1
0612   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0613   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0614   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0615   0080           01831                 movwf INDF                                              ;Save to QUEUE
0616   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01833                 count = count + 1
0617   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0618   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0619   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
061A   0080           01831                 movwf INDF                                              ;Save to QUEUE
061B   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01833                 count = count + 1
061C   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
061D   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

061E   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
061F   0080           01831                 movwf INDF                                              ;Save to QUEUE
0620   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01833                 count = count + 1
0621   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0622   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0623   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0624   0080           01831                 movwf INDF                                              ;Save to QUEUE
0625   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01833                 count = count + 1
0626   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0627   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0628   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0629   0080           01831                 movwf INDF                                              ;Save to QUEUE
062A   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01833                 count = count + 1
062B   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062C   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
062D   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
062E   0080           01831                 movwf INDF                                              ;Save to QUEUE
062F   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01833                 count = count + 1
0630   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0631   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0632   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0633   0080           01831                 movwf INDF                                              ;Save to QUEUE
0634   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01833                 count = count + 1
0635   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0636   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0637   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0638   0080           01831                 movwf INDF                                              ;Save to QUEUE
0639   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01833                 count = count + 1
063A   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
063B   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063C   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
063D   0080           01831                 movwf INDF                                              ;Save to QUEUE
063E   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01833                 count = count + 1
063F   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0640   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0641   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0642   0080           01831                 movwf INDF                                              ;Save to QUEUE
0643   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01833                 count = count + 1
0644   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0645   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0646   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0647   0080           01831                 movwf INDF                                              ;Save to QUEUE
0648   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01833                 count = count + 1
0649   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064A   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064B   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
064C   0080           01831                 movwf INDF                                              ;Save to QUEUE
064D   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01833                 count = count + 1
064E   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064F   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0650   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0651   0080           01831                 movwf INDF                                              ;Save to QUEUE
0652   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01833                 count = count + 1
0653   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0654   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0655   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0656   0080           01831                 movwf INDF                                              ;Save to QUEUE
0657   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01833                 count = count + 1
0658   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0659   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065A   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
065B   0080           01831                 movwf INDF                                              ;Save to QUEUE
065C   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01833                 count = count + 1
065D   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065E   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065F   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0660   0080           01831                 movwf INDF                                              ;Save to QUEUE
0661   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01833                 count = count + 1
0662   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0663   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0664   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0665   0080           01831                 movwf INDF                                              ;Save to QUEUE
0666   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01833                 count = count + 1
0667   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0668   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0669   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
066A   0080           01831                 movwf INDF                                              ;Save to QUEUE
066B   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01833                 count = count + 1
066C   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
066D   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066E   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
066F   0080           01831                 movwf INDF                                              ;Save to QUEUE
0670   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01833                 count = count + 1
0671   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0672   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0673   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0674   0080           01831                 movwf INDF                                              ;Save to QUEUE
0675   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01833                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0676   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0677   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0678   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0679   0080           01831                 movwf INDF                                              ;Save to QUEUE
067A   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01833                 count = count + 1
067B   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067C   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067D   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
067E   0080           01831                 movwf INDF                                              ;Save to QUEUE
067F   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01833                 count = count + 1
0680   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0681   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0682   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0683   0080           01831                 movwf INDF                                              ;Save to QUEUE
0684   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01833                 count = count + 1
0685   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0686   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0687   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0688   0080           01831                 movwf INDF                                              ;Save to QUEUE
0689   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01833                 count = count + 1
068A   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068B   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068C   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
068D   0080           01831                 movwf INDF                                              ;Save to QUEUE
068E   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01833                 count = count + 1
068F   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0690   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0691   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0692   0080           01831                 movwf INDF                                              ;Save to QUEUE
0693   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01833                 count = count + 1
0694   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0695   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0696   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0697   0080           01831                 movwf INDF                                              ;Save to QUEUE
0698   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01833                 count = count + 1
0699   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069A   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069B   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
069C   0080           01831                 movwf INDF                                              ;Save to QUEUE
069D   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01833                 count = count + 1
069E   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069F   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A0   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06A1   0080           01831                 movwf INDF                                              ;Save to QUEUE
06A2   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000022            01833                 count = count + 1
06A3   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A4   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A5   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06A6   0080           01831                 movwf INDF                                              ;Save to QUEUE
06A7   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01833                 count = count + 1
06A8   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A9   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AA   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06AB   0080           01831                 movwf INDF                                              ;Save to QUEUE
06AC   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01833                 count = count + 1
06AD   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AE   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AF   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06B0   0080           01831                 movwf INDF                                              ;Save to QUEUE
06B1   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01833                 count = count + 1
06B2   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B3   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B4   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06B5   0080           01831                 movwf INDF                                              ;Save to QUEUE
06B6   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01833                 count = count + 1
06B7   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B8   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B9   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06BA   0080           01831                 movwf INDF                                              ;Save to QUEUE
06BB   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01833                 count = count + 1
06BC   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BD   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BE   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06BF   0080           01831                 movwf INDF                                              ;Save to QUEUE
06C0   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01833                 count = count + 1
06C1   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C2   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C3   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06C4   0080           01831                 movwf INDF                                              ;Save to QUEUE
06C5   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01833                 count = count + 1
06C6   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C7   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C8   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06C9   0080           01831                 movwf INDF                                              ;Save to QUEUE
06CA   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01833                 count = count + 1
06CB   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CC   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CD   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06CE   0080           01831                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06CF   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01833                 count = count + 1
06D0   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D1   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D2   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06D3   0080           01831                 movwf INDF                                              ;Save to QUEUE
06D4   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01833                 count = count + 1
06D5   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D6   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D7   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06D8   0080           01831                 movwf INDF                                              ;Save to QUEUE
06D9   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01833                 count = count + 1
06DA   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DB   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DC   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06DD   0080           01831                 movwf INDF                                              ;Save to QUEUE
06DE   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01833                 count = count + 1
06DF   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E0   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E1   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06E2   0080           01831                 movwf INDF                                              ;Save to QUEUE
06E3   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01833                 count = count + 1
06E4   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E5   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E6   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06E7   0080           01831                 movwf INDF                                              ;Save to QUEUE
06E8   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01833                 count = count + 1
06E9   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EA   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EB   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06EC   0080           01831                 movwf INDF                                              ;Save to QUEUE
06ED   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01833                 count = count + 1
06EE   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EF   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F0   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06F1   0080           01831                 movwf INDF                                              ;Save to QUEUE
06F2   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01833                 count = count + 1
06F3   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F4   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F5   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
06F6   0080           01831                 movwf INDF                                              ;Save to QUEUE
06F7   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01833                 count = count + 1
06F8   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F9   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FA   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06FB   0080           01831                 movwf INDF                                              ;Save to QUEUE
06FC   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01833                 count = count + 1
06FD   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FE   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FF   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0700   0080           01831                 movwf INDF                                              ;Save to QUEUE
0701   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01833                 count = count + 1
0702   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0703   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0704   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0705   0080           01831                 movwf INDF                                              ;Save to QUEUE
0706   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01833                 count = count + 1
0707   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0708   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0709   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
070A   0080           01831                 movwf INDF                                              ;Save to QUEUE
070B   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01833                 count = count + 1
070C   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070D   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070E   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
070F   0080           01831                 movwf INDF                                              ;Save to QUEUE
0710   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01833                 count = count + 1
0711   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0712   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0713   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0714   0080           01831                 movwf INDF                                              ;Save to QUEUE
0715   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01833                 count = count + 1
0716   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0717   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0718   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0719   0080           01831                 movwf INDF                                              ;Save to QUEUE
071A   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01833                 count = count + 1
071B   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071C   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071D   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
071E   0080           01831                 movwf INDF                                              ;Save to QUEUE
071F   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01833                 count = count + 1
0720   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0721   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0722   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0723   0080           01831                 movwf INDF                                              ;Save to QUEUE
0724   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01833                 count = count + 1
0725   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0726   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0727   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0728   0080           01831                 movwf INDF                                              ;Save to QUEUE
0729   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01833                 count = count + 1
072A   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072B   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072C   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
072D   0080           01831                 movwf INDF                                              ;Save to QUEUE
072E   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01833                 count = count + 1
072F   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0730   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0731   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0732   0080           01831                 movwf INDF                                              ;Save to QUEUE
0733   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01833                 count = count + 1
0734   1409           01828                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0735   1009           01829                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0736   0808           01830                 movf ADC_DATAPORT, W                    ;Sample
0737   0080           01831                 movwf INDF                                              ;Save to QUEUE
0738   0384           01832                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01833                 count = count + 1
                      01834         endw
0739   1409           01835         bsf ADC_CONTROLPORT, RDD
073A   1009           01836         bcf ADC_CONTROLPORT, RDD
073B   0808           01837         movf ADC_DATAPORT, W
073C   0080           01838         movwf INDF
073D   1783           01839         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01840         count = 1
                      01841         while count < BUFFERSIZE
073E   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073F   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0740   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0741   0080           01845                 movwf INDF                                              ;Save to QUEUE
0742   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01847                 count = count + 1
0743   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0744   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0745   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0746   0080           01845                 movwf INDF                                              ;Save to QUEUE
0747   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01847                 count = count + 1
0748   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0749   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074A   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
074B   0080           01845                 movwf INDF                                              ;Save to QUEUE
074C   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01847                 count = count + 1
074D   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074E   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074F   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0750   0080           01845                 movwf INDF                                              ;Save to QUEUE
0751   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000005            01847                 count = count + 1
0752   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0753   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0754   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0755   0080           01845                 movwf INDF                                              ;Save to QUEUE
0756   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01847                 count = count + 1
0757   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0758   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0759   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
075A   0080           01845                 movwf INDF                                              ;Save to QUEUE
075B   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01847                 count = count + 1
075C   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075D   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075E   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
075F   0080           01845                 movwf INDF                                              ;Save to QUEUE
0760   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01847                 count = count + 1
0761   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0762   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0763   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0764   0080           01845                 movwf INDF                                              ;Save to QUEUE
0765   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01847                 count = count + 1
0766   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0767   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0768   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0769   0080           01845                 movwf INDF                                              ;Save to QUEUE
076A   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01847                 count = count + 1
076B   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076C   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076D   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
076E   0080           01845                 movwf INDF                                              ;Save to QUEUE
076F   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01847                 count = count + 1
0770   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0771   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0772   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0773   0080           01845                 movwf INDF                                              ;Save to QUEUE
0774   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01847                 count = count + 1
0775   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0776   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0777   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0778   0080           01845                 movwf INDF                                              ;Save to QUEUE
0779   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01847                 count = count + 1
077A   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077B   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077C   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
077D   0080           01845                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

077E   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01847                 count = count + 1
077F   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0780   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0781   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0782   0080           01845                 movwf INDF                                              ;Save to QUEUE
0783   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01847                 count = count + 1
0784   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0785   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0786   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0787   0080           01845                 movwf INDF                                              ;Save to QUEUE
0788   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01847                 count = count + 1
0789   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078A   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078B   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
078C   0080           01845                 movwf INDF                                              ;Save to QUEUE
078D   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01847                 count = count + 1
078E   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078F   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0790   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0791   0080           01845                 movwf INDF                                              ;Save to QUEUE
0792   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01847                 count = count + 1
0793   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0794   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0795   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0796   0080           01845                 movwf INDF                                              ;Save to QUEUE
0797   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01847                 count = count + 1
0798   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0799   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079A   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
079B   0080           01845                 movwf INDF                                              ;Save to QUEUE
079C   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01847                 count = count + 1
079D   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079E   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079F   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07A0   0080           01845                 movwf INDF                                              ;Save to QUEUE
07A1   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01847                 count = count + 1
07A2   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A3   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A4   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07A5   0080           01845                 movwf INDF                                              ;Save to QUEUE
07A6   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01847                 count = count + 1
07A7   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A8   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A9   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07AA   0080           01845                 movwf INDF                                              ;Save to QUEUE
07AB   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01847                 count = count + 1
07AC   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AD   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AE   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07AF   0080           01845                 movwf INDF                                              ;Save to QUEUE
07B0   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01847                 count = count + 1
07B1   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B2   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B3   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07B4   0080           01845                 movwf INDF                                              ;Save to QUEUE
07B5   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01847                 count = count + 1
07B6   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B7   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B8   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07B9   0080           01845                 movwf INDF                                              ;Save to QUEUE
07BA   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01847                 count = count + 1
07BB   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BC   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BD   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07BE   0080           01845                 movwf INDF                                              ;Save to QUEUE
07BF   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01847                 count = count + 1
07C0   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C1   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C2   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07C3   0080           01845                 movwf INDF                                              ;Save to QUEUE
07C4   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01847                 count = count + 1
07C5   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C6   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C7   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07C8   0080           01845                 movwf INDF                                              ;Save to QUEUE
07C9   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01847                 count = count + 1
07CA   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CB   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CC   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07CD   0080           01845                 movwf INDF                                              ;Save to QUEUE
07CE   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01847                 count = count + 1
07CF   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D0   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D1   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07D2   0080           01845                 movwf INDF                                              ;Save to QUEUE
07D3   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01847                 count = count + 1
07D4   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D5   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07D6   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07D7   0080           01845                 movwf INDF                                              ;Save to QUEUE
07D8   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01847                 count = count + 1
07D9   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DA   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DB   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07DC   0080           01845                 movwf INDF                                              ;Save to QUEUE
07DD   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01847                 count = count + 1
07DE   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DF   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E0   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07E1   0080           01845                 movwf INDF                                              ;Save to QUEUE
07E2   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01847                 count = count + 1
07E3   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E4   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E5   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07E6   0080           01845                 movwf INDF                                              ;Save to QUEUE
07E7   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01847                 count = count + 1
07E8   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E9   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EA   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07EB   0080           01845                 movwf INDF                                              ;Save to QUEUE
07EC   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01847                 count = count + 1
07ED   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EE   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EF   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07F0   0080           01845                 movwf INDF                                              ;Save to QUEUE
07F1   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01847                 count = count + 1
07F2   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F3   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F4   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07F5   0080           01845                 movwf INDF                                              ;Save to QUEUE
07F6   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01847                 count = count + 1
07F7   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F8   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F9   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07FA   0080           01845                 movwf INDF                                              ;Save to QUEUE
07FB   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01847                 count = count + 1
07FC   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FD   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FE   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
07FF   0080           01845                 movwf INDF                                              ;Save to QUEUE
0800   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01847                 count = count + 1
0801   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0802   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0803   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0804   0080           01845                 movwf INDF                                              ;Save to QUEUE
0805   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01847                 count = count + 1
0806   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0807   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0808   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0809   0080           01845                 movwf INDF                                              ;Save to QUEUE
080A   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01847                 count = count + 1
080B   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080C   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080D   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
080E   0080           01845                 movwf INDF                                              ;Save to QUEUE
080F   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01847                 count = count + 1
0810   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0811   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0812   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0813   0080           01845                 movwf INDF                                              ;Save to QUEUE
0814   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01847                 count = count + 1
0815   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0816   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0817   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0818   0080           01845                 movwf INDF                                              ;Save to QUEUE
0819   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01847                 count = count + 1
081A   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081B   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081C   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
081D   0080           01845                 movwf INDF                                              ;Save to QUEUE
081E   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01847                 count = count + 1
081F   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0820   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0821   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0822   0080           01845                 movwf INDF                                              ;Save to QUEUE
0823   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01847                 count = count + 1
0824   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0825   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0826   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0827   0080           01845                 movwf INDF                                              ;Save to QUEUE
0828   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01847                 count = count + 1
0829   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082A   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082B   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
082C   0080           01845                 movwf INDF                                              ;Save to QUEUE
082D   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01847                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

082E   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082F   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0830   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0831   0080           01845                 movwf INDF                                              ;Save to QUEUE
0832   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01847                 count = count + 1
0833   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0834   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0835   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0836   0080           01845                 movwf INDF                                              ;Save to QUEUE
0837   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01847                 count = count + 1
0838   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0839   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083A   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
083B   0080           01845                 movwf INDF                                              ;Save to QUEUE
083C   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01847                 count = count + 1
083D   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083E   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083F   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0840   0080           01845                 movwf INDF                                              ;Save to QUEUE
0841   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01847                 count = count + 1
0842   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0843   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0844   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0845   0080           01845                 movwf INDF                                              ;Save to QUEUE
0846   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01847                 count = count + 1
0847   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0848   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0849   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
084A   0080           01845                 movwf INDF                                              ;Save to QUEUE
084B   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01847                 count = count + 1
084C   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084D   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084E   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
084F   0080           01845                 movwf INDF                                              ;Save to QUEUE
0850   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01847                 count = count + 1
0851   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0852   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0853   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0854   0080           01845                 movwf INDF                                              ;Save to QUEUE
0855   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01847                 count = count + 1
0856   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0857   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0858   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0859   0080           01845                 movwf INDF                                              ;Save to QUEUE
085A   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003A            01847                 count = count + 1
085B   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085C   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085D   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
085E   0080           01845                 movwf INDF                                              ;Save to QUEUE
085F   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01847                 count = count + 1
0860   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0861   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0862   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0863   0080           01845                 movwf INDF                                              ;Save to QUEUE
0864   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01847                 count = count + 1
0865   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0866   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0867   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0868   0080           01845                 movwf INDF                                              ;Save to QUEUE
0869   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01847                 count = count + 1
086A   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086B   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086C   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
086D   0080           01845                 movwf INDF                                              ;Save to QUEUE
086E   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01847                 count = count + 1
086F   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0870   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0871   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0872   0080           01845                 movwf INDF                                              ;Save to QUEUE
0873   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01847                 count = count + 1
0874   1409           01842                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0875   1009           01843                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0876   0808           01844                 movf ADC_DATAPORT, W                    ;Sample
0877   0080           01845                 movwf INDF                                              ;Save to QUEUE
0878   0A84           01846                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01847                 count = count + 1
                      01848         endw
0879   1409           01849         bsf ADC_CONTROLPORT, RDD
087A   1009           01850         bcf ADC_CONTROLPORT, RDD
087B   0808           01851         movf ADC_DATAPORT, W                            ;Sample
087C   0080           01852         movwf INDF
087D   1384           01853         bcf FSR, 7                                                      ;goto bank 3
  00000001            01854         count = 1
                      01855         while count < D'14'
087E   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087F   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0880   0808           01858                 movf ADC_DATAPORT, W
0881   0080           01859                 movwf INDF                                              ;Save to QUEUE
0882   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01861                 count = count + 1
0883   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0884   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0885   0808           01858                 movf ADC_DATAPORT, W
0886   0080           01859                 movwf INDF                                              ;Save to QUEUE
0887   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01861                 count = count + 1
0888   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0889   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088A   0808           01858                 movf ADC_DATAPORT, W
088B   0080           01859                 movwf INDF                                              ;Save to QUEUE
088C   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01861                 count = count + 1
088D   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088E   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088F   0808           01858                 movf ADC_DATAPORT, W
0890   0080           01859                 movwf INDF                                              ;Save to QUEUE
0891   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01861                 count = count + 1
0892   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0893   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0894   0808           01858                 movf ADC_DATAPORT, W
0895   0080           01859                 movwf INDF                                              ;Save to QUEUE
0896   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01861                 count = count + 1
0897   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0898   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0899   0808           01858                 movf ADC_DATAPORT, W
089A   0080           01859                 movwf INDF                                              ;Save to QUEUE
089B   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01861                 count = count + 1
089C   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089D   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089E   0808           01858                 movf ADC_DATAPORT, W
089F   0080           01859                 movwf INDF                                              ;Save to QUEUE
08A0   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01861                 count = count + 1
08A1   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A2   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A3   0808           01858                 movf ADC_DATAPORT, W
08A4   0080           01859                 movwf INDF                                              ;Save to QUEUE
08A5   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01861                 count = count + 1
08A6   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08A7   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08A8   0808           01858                 movf ADC_DATAPORT, W
08A9   0080           01859                 movwf INDF                                              ;Save to QUEUE
08AA   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01861                 count = count + 1
08AB   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AC   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AD   0808           01858                 movf ADC_DATAPORT, W
08AE   0080           01859                 movwf INDF                                              ;Save to QUEUE
08AF   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01861                 count = count + 1
08B0   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08B1   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B2   0808           01858                 movf ADC_DATAPORT, W
08B3   0080           01859                 movwf INDF                                              ;Save to QUEUE
08B4   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01861                 count = count + 1
08B5   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B6   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B7   0808           01858                 movf ADC_DATAPORT, W
08B8   0080           01859                 movwf INDF                                              ;Save to QUEUE
08B9   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01861                 count = count + 1
08BA   1409           01856                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BB   1009           01857                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BC   0808           01858                 movf ADC_DATAPORT, W
08BD   0080           01859                 movwf INDF                                              ;Save to QUEUE
08BE   0384           01860                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01861                 count = count + 1
                      01862         endw
08BF                  01863 Sample1MhzEnd
                      01864         while count < BUFFERSIZE
08BF   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C0   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C1   0808           01867                 movf ADC_DATAPORT, W
08C2   0080           01868                 movwf INDF                                              ;Save to QUEUE
08C3   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01870                 count = count + 1
08C4   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C5   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C6   0808           01867                 movf ADC_DATAPORT, W
08C7   0080           01868                 movwf INDF                                              ;Save to QUEUE
08C8   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01870                 count = count + 1
08C9   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CA   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CB   0808           01867                 movf ADC_DATAPORT, W
08CC   0080           01868                 movwf INDF                                              ;Save to QUEUE
08CD   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01870                 count = count + 1
08CE   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CF   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D0   0808           01867                 movf ADC_DATAPORT, W
08D1   0080           01868                 movwf INDF                                              ;Save to QUEUE
08D2   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01870                 count = count + 1
08D3   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D4   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D5   0808           01867                 movf ADC_DATAPORT, W
08D6   0080           01868                 movwf INDF                                              ;Save to QUEUE
08D7   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01870                 count = count + 1
08D8   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D9   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DA   0808           01867                 movf ADC_DATAPORT, W
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08DB   0080           01868                 movwf INDF                                              ;Save to QUEUE
08DC   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01870                 count = count + 1
08DD   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DE   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DF   0808           01867                 movf ADC_DATAPORT, W
08E0   0080           01868                 movwf INDF                                              ;Save to QUEUE
08E1   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01870                 count = count + 1
08E2   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E3   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E4   0808           01867                 movf ADC_DATAPORT, W
08E5   0080           01868                 movwf INDF                                              ;Save to QUEUE
08E6   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01870                 count = count + 1
08E7   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E8   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E9   0808           01867                 movf ADC_DATAPORT, W
08EA   0080           01868                 movwf INDF                                              ;Save to QUEUE
08EB   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01870                 count = count + 1
08EC   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08ED   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EE   0808           01867                 movf ADC_DATAPORT, W
08EF   0080           01868                 movwf INDF                                              ;Save to QUEUE
08F0   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01870                 count = count + 1
08F1   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F2   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F3   0808           01867                 movf ADC_DATAPORT, W
08F4   0080           01868                 movwf INDF                                              ;Save to QUEUE
08F5   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01870                 count = count + 1
08F6   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F7   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F8   0808           01867                 movf ADC_DATAPORT, W
08F9   0080           01868                 movwf INDF                                              ;Save to QUEUE
08FA   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01870                 count = count + 1
08FB   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FC   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FD   0808           01867                 movf ADC_DATAPORT, W
08FE   0080           01868                 movwf INDF                                              ;Save to QUEUE
08FF   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01870                 count = count + 1
0900   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0901   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0902   0808           01867                 movf ADC_DATAPORT, W
0903   0080           01868                 movwf INDF                                              ;Save to QUEUE
0904   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01870                 count = count + 1
0905   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0906   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0907   0808           01867                 movf ADC_DATAPORT, W
0908   0080           01868                 movwf INDF                                              ;Save to QUEUE
0909   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01870                 count = count + 1
090A   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090B   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090C   0808           01867                 movf ADC_DATAPORT, W
090D   0080           01868                 movwf INDF                                              ;Save to QUEUE
090E   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01870                 count = count + 1
090F   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0910   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0911   0808           01867                 movf ADC_DATAPORT, W
0912   0080           01868                 movwf INDF                                              ;Save to QUEUE
0913   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01870                 count = count + 1
0914   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0915   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0916   0808           01867                 movf ADC_DATAPORT, W
0917   0080           01868                 movwf INDF                                              ;Save to QUEUE
0918   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01870                 count = count + 1
0919   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091A   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091B   0808           01867                 movf ADC_DATAPORT, W
091C   0080           01868                 movwf INDF                                              ;Save to QUEUE
091D   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01870                 count = count + 1
091E   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091F   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0920   0808           01867                 movf ADC_DATAPORT, W
0921   0080           01868                 movwf INDF                                              ;Save to QUEUE
0922   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01870                 count = count + 1
0923   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0924   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0925   0808           01867                 movf ADC_DATAPORT, W
0926   0080           01868                 movwf INDF                                              ;Save to QUEUE
0927   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01870                 count = count + 1
0928   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0929   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092A   0808           01867                 movf ADC_DATAPORT, W
092B   0080           01868                 movwf INDF                                              ;Save to QUEUE
092C   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01870                 count = count + 1
092D   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092E   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092F   0808           01867                 movf ADC_DATAPORT, W
0930   0080           01868                 movwf INDF                                              ;Save to QUEUE
0931   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01870                 count = count + 1
0932   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0933   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0934   0808           01867                 movf ADC_DATAPORT, W
0935   0080           01868                 movwf INDF                                              ;Save to QUEUE
0936   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01870                 count = count + 1
0937   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0938   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0939   0808           01867                 movf ADC_DATAPORT, W
093A   0080           01868                 movwf INDF                                              ;Save to QUEUE
093B   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01870                 count = count + 1
093C   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093D   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093E   0808           01867                 movf ADC_DATAPORT, W
093F   0080           01868                 movwf INDF                                              ;Save to QUEUE
0940   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01870                 count = count + 1
0941   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0942   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0943   0808           01867                 movf ADC_DATAPORT, W
0944   0080           01868                 movwf INDF                                              ;Save to QUEUE
0945   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01870                 count = count + 1
0946   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0947   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0948   0808           01867                 movf ADC_DATAPORT, W
0949   0080           01868                 movwf INDF                                              ;Save to QUEUE
094A   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01870                 count = count + 1
094B   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094C   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094D   0808           01867                 movf ADC_DATAPORT, W
094E   0080           01868                 movwf INDF                                              ;Save to QUEUE
094F   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01870                 count = count + 1
0950   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0951   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0952   0808           01867                 movf ADC_DATAPORT, W
0953   0080           01868                 movwf INDF                                              ;Save to QUEUE
0954   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01870                 count = count + 1
0955   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0956   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0957   0808           01867                 movf ADC_DATAPORT, W
0958   0080           01868                 movwf INDF                                              ;Save to QUEUE
0959   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01870                 count = count + 1
095A   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095B   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095C   0808           01867                 movf ADC_DATAPORT, W
095D   0080           01868                 movwf INDF                                              ;Save to QUEUE
095E   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01870                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

095F   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0960   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0961   0808           01867                 movf ADC_DATAPORT, W
0962   0080           01868                 movwf INDF                                              ;Save to QUEUE
0963   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01870                 count = count + 1
0964   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0965   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0966   0808           01867                 movf ADC_DATAPORT, W
0967   0080           01868                 movwf INDF                                              ;Save to QUEUE
0968   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01870                 count = count + 1
0969   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096A   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096B   0808           01867                 movf ADC_DATAPORT, W
096C   0080           01868                 movwf INDF                                              ;Save to QUEUE
096D   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01870                 count = count + 1
096E   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096F   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0970   0808           01867                 movf ADC_DATAPORT, W
0971   0080           01868                 movwf INDF                                              ;Save to QUEUE
0972   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01870                 count = count + 1
0973   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0974   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0975   0808           01867                 movf ADC_DATAPORT, W
0976   0080           01868                 movwf INDF                                              ;Save to QUEUE
0977   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01870                 count = count + 1
0978   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0979   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097A   0808           01867                 movf ADC_DATAPORT, W
097B   0080           01868                 movwf INDF                                              ;Save to QUEUE
097C   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01870                 count = count + 1
097D   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
097E   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097F   0808           01867                 movf ADC_DATAPORT, W
0980   0080           01868                 movwf INDF                                              ;Save to QUEUE
0981   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01870                 count = count + 1
0982   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0983   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0984   0808           01867                 movf ADC_DATAPORT, W
0985   0080           01868                 movwf INDF                                              ;Save to QUEUE
0986   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01870                 count = count + 1
0987   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0988   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0989   0808           01867                 movf ADC_DATAPORT, W
098A   0080           01868                 movwf INDF                                              ;Save to QUEUE
098B   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000037            01870                 count = count + 1
098C   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098D   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098E   0808           01867                 movf ADC_DATAPORT, W
098F   0080           01868                 movwf INDF                                              ;Save to QUEUE
0990   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01870                 count = count + 1
0991   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0992   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0993   0808           01867                 movf ADC_DATAPORT, W
0994   0080           01868                 movwf INDF                                              ;Save to QUEUE
0995   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01870                 count = count + 1
0996   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0997   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0998   0808           01867                 movf ADC_DATAPORT, W
0999   0080           01868                 movwf INDF                                              ;Save to QUEUE
099A   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01870                 count = count + 1
099B   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099C   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099D   0808           01867                 movf ADC_DATAPORT, W
099E   0080           01868                 movwf INDF                                              ;Save to QUEUE
099F   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01870                 count = count + 1
09A0   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A1   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A2   0808           01867                 movf ADC_DATAPORT, W
09A3   0080           01868                 movwf INDF                                              ;Save to QUEUE
09A4   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01870                 count = count + 1
09A5   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A6   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A7   0808           01867                 movf ADC_DATAPORT, W
09A8   0080           01868                 movwf INDF                                              ;Save to QUEUE
09A9   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01870                 count = count + 1
09AA   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AB   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09AC   0808           01867                 movf ADC_DATAPORT, W
09AD   0080           01868                 movwf INDF                                              ;Save to QUEUE
09AE   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01870                 count = count + 1
09AF   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B0   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B1   0808           01867                 movf ADC_DATAPORT, W
09B2   0080           01868                 movwf INDF                                              ;Save to QUEUE
09B3   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01870                 count = count + 1
09B4   1409           01865                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B5   1009           01866                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B6   0808           01867                 movf ADC_DATAPORT, W
09B7   0080           01868                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09B8   0384           01869                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01870                 count = count + 1
                      01871         endw
09B9   1409           01872         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09BA   0808           01873         movf ADC_DATAPORT, W                            ;Sample
09BB   118A           01874         bcf PCLATH, 3                                           ;insure correct program memory page
09BC   120A           01875         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
09BD   2916           01876         goto ADCShutdown
                      01877 
                      01878 ;Fastest XY sample
                      01879 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01880 ;Sampling rate =  83.333 kHz with 4 MHz clock
09BE                  01881 SampleXY417k
09BE   1009           01882         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
09BF   1489           01883         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
                      01884         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
09C0   3020               M     movlw BUFFERMIN
09C1   0084               M     movwf FSR
09C2   0808           01885         movf ADC_DATAPORT, W                            ;Sample X
09C3   1409           01886         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
09C4   1009           01887         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
09C5   1089           01888         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
09C6   0080           01889         movwf INDF                                                      ;Save to QUEUE
09C7   0A84           01890         incf FSR, F                                                     ;Increment QUEUE pointer
  00000001            01891         count = 1
                      01892         while count < BUFFERSIZE / 2
09C8   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
09C9   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CA   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CB   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09CC   0080           01897                 movwf INDF                                              ;Save to QUEUE
09CD   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
09CE   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
09CF   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D0   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D1   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09D2   0080           01903                 movwf INDF                                              ;Save to QUEUE
09D3   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01905                 count = count + 1
09D4   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
09D5   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D6   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D7   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09D8   0080           01897                 movwf INDF                                              ;Save to QUEUE
09D9   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
09DA   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
09DB   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DC   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DD   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09DE   0080           01903                 movwf INDF                                              ;Save to QUEUE
09DF   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01905                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09E0   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
09E1   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E2   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E3   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09E4   0080           01897                 movwf INDF                                              ;Save to QUEUE
09E5   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
09E6   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
09E7   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E8   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E9   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09EA   0080           01903                 movwf INDF                                              ;Save to QUEUE
09EB   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01905                 count = count + 1
09EC   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
09ED   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EE   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EF   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09F0   0080           01897                 movwf INDF                                              ;Save to QUEUE
09F1   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
09F2   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
09F3   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F4   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F5   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F6   0080           01903                 movwf INDF                                              ;Save to QUEUE
09F7   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01905                 count = count + 1
09F8   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
09F9   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FA   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FB   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09FC   0080           01897                 movwf INDF                                              ;Save to QUEUE
09FD   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
09FE   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
09FF   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A00   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A01   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A02   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A03   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01905                 count = count + 1
0A04   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A05   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A06   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A07   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A08   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A09   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A0A   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A0B   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0C   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0D   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A0E   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A0F   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01905                 count = count + 1
0A10   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A11   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A12   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A13   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A14   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A15   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A16   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A17   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A18   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A19   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A1A   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A1B   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01905                 count = count + 1
0A1C   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A1D   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1E   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1F   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A20   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A21   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A22   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A23   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A24   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A25   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A26   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A27   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01905                 count = count + 1
0A28   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A29   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2A   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2B   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A2C   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A2D   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A2E   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A2F   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A30   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A31   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A32   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A33   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01905                 count = count + 1
0A34   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A35   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A36   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A37   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A38   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A39   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A3A   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A3B   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3C   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3D   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A3E   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A3F   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01905                 count = count + 1
0A40   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A41   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A42   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A43   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A44   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A45   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A46   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A47   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A48   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A49   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A4A   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A4B   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01905                 count = count + 1
0A4C   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A4D   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4E   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4F   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A50   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A51   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A52   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A53   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A54   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A55   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A56   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A57   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01905                 count = count + 1
0A58   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A59   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5A   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5B   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A5C   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A5D   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A5E   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A5F   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A60   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A61   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A62   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A63   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01905                 count = count + 1
0A64   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A65   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A66   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A67   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A68   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A69   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A6A   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A6B   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6C   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6D   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A6E   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A6F   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01905                 count = count + 1
0A70   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A71   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A72   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A73   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A74   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A75   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A76   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A77   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A78   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A79   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A7A   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A7B   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01905                 count = count + 1
0A7C   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A7D   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7E   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7F   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A80   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A81   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A82   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A83   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A84   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A85   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A86   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A87   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01905                 count = count + 1
0A88   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A89   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8A   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8B   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A8C   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A8D   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A8E   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A8F   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A90   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A91   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A92   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A93   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01905                 count = count + 1
0A94   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0A95   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A96   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A97   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A98   0080           01897                 movwf INDF                                              ;Save to QUEUE
0A99   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0A9A   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0A9B   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9C   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9D   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A9E   0080           01903                 movwf INDF                                              ;Save to QUEUE
0A9F   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01905                 count = count + 1
0AA0   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AA1   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA2   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA3   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AA4   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AA5   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AA6   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AA7   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA8   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA9   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AAA   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AAB   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01905                 count = count + 1
0AAC   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AAD   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAE   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAF   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB0   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AB1   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AB2   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AB3   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB4   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB5   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB6   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AB7   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01905                 count = count + 1
0AB8   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AB9   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABA   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABB   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ABC   0080           01897                 movwf INDF                                              ;Save to QUEUE
0ABD   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0ABE   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0ABF   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC0   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC1   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AC2   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AC3   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01905                 count = count + 1
0AC4   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AC5   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC6   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC7   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC8   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AC9   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0ACA   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0ACB   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACC   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACD   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ACE   0080           01903                 movwf INDF                                              ;Save to QUEUE
0ACF   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01905                 count = count + 1
0AD0   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AD1   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD2   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD3   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD4   0080           01897                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AD5   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AD6   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AD7   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD8   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD9   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ADA   0080           01903                 movwf INDF                                              ;Save to QUEUE
0ADB   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01905                 count = count + 1
0ADC   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0ADD   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADE   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADF   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE0   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AE1   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AE2   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AE3   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE4   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE5   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE6   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AE7   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01905                 count = count + 1
0AE8   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AE9   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEA   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AEB   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AEC   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AED   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AEE   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AEF   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF0   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF1   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AF2   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AF3   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01905                 count = count + 1
0AF4   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0AF5   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF6   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF7   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF8   0080           01897                 movwf INDF                                              ;Save to QUEUE
0AF9   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0AFA   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0AFB   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFC   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFD   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AFE   0080           01903                 movwf INDF                                              ;Save to QUEUE
0AFF   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01905                 count = count + 1
0B00   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0B01   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B02   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B03   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B04   0080           01897                 movwf INDF                                              ;Save to QUEUE
0B05   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B06   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0B07   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B08   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B09   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B0A   0080           01903                 movwf INDF                                              ;Save to QUEUE
0B0B   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01905                 count = count + 1
0B0C   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0B0D   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0E   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0F   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B10   0080           01897                 movwf INDF                                              ;Save to QUEUE
0B11   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0B12   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0B13   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B14   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B15   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B16   0080           01903                 movwf INDF                                              ;Save to QUEUE
0B17   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01905                 count = count + 1
0B18   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0B19   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1A   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1B   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B1C   0080           01897                 movwf INDF                                              ;Save to QUEUE
0B1D   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0B1E   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0B1F   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B20   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B21   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B22   0080           01903                 movwf INDF                                              ;Save to QUEUE
0B23   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01905                 count = count + 1
0B24   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0B25   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B26   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B27   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B28   0080           01897                 movwf INDF                                              ;Save to QUEUE
0B29   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0B2A   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
0B2B   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2C   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2D   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B2E   0080           01903                 movwf INDF                                              ;Save to QUEUE
0B2F   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01905                 count = count + 1
0B30   0808           01893                 movf ADC_DATAPORT, W                    ;Sample Y
0B31   1409           01894                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B32   1009           01895                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B33   1489           01896                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B34   0080           01897                 movwf INDF                                              ;Save to QUEUE
0B35   0A84           01898                 incf FSR, F                                             ;Increment QUEUE pointer
0B36   0808           01899                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B37   1409           01900                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B38   1009           01901                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B39   1089           01902                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B3A   0080           01903                 movwf INDF                                              ;Save to QUEUE
0B3B   0A84           01904                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01905                 count = count + 1
                      01906         endw
0B3C   0808           01907         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 1
0B3D   1409           01908         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B3E   1009           01909         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B3F   1489           01910         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0B40   0080           01911         movwf INDF                                                      ;Save to QUEUE
0B41   1784           01912         bsf FSR, 7                                                      ;Move QUEUE pointer to Bank 2
0B42   0808           01913         movf ADC_DATAPORT, W                            ;Sample X
0B43   1409           01914         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0B44   1009           01915         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0B45   1089           01916         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0B46   0080           01917         movwf INDF                                                      ;Save to QUEUE
0B47   0384           01918         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01919         count = 1
                      01920         while count < BUFFERSIZE / 2
0B48   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B49   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B4C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B4D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B4E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B4F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B50   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B51   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B52   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B53   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01933                 count = count + 1
0B54   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B55   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B56   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B57   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B58   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B59   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B5A   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B5B   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5C   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5D   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B5E   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B5F   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01933                 count = count + 1
0B60   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B61   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B62   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B63   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B64   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B65   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B66   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B67   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B68   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B69   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B6A   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B6B   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01933                 count = count + 1
0B6C   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B6D   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6E   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6F   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B70   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B71   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B72   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B73   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B74   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B75   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B76   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B77   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01933                 count = count + 1
0B78   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B79   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B7C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B7D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B7E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B7F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B80   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B81   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B82   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B83   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01933                 count = count + 1
0B84   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B85   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B86   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B87   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B88   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B89   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B8A   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0B8B   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8C   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8D   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B8E   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B8F   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01933                 count = count + 1
0B90   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B91   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B92   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B93   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B94   0080           01925                 movwf INDF                                              ;Save to QUEUE
0B95   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0B96   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B97   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B98   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B99   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B9A   0080           01931                 movwf INDF                                              ;Save to QUEUE
0B9B   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01933                 count = count + 1
0B9C   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0B9D   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9E   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9F   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA0   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BA1   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BA2   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BA3   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA4   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA5   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA6   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BA7   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01933                 count = count + 1
0BA8   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BA9   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAA   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAB   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BAC   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BAD   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BAE   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BAF   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB0   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB1   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BB2   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BB3   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01933                 count = count + 1
0BB4   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BB5   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB6   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB7   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BB8   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BB9   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BBA   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BBB   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBC   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBD   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BBE   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BBF   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01933                 count = count + 1
0BC0   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BC1   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC2   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC3   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC4   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BC5   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BC6   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BC7   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BC8   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC9   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BCA   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BCB   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01933                 count = count + 1
0BCC   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BCD   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCE   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCF   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD0   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BD1   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BD2   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BD3   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD4   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD5   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD6   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BD7   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01933                 count = count + 1
0BD8   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BD9   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDA   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDB   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BDC   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BDD   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BDE   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BDF   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE0   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE1   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BE2   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BE3   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01933                 count = count + 1
0BE4   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BE5   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE6   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE7   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE8   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BE9   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BEA   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BEB   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEC   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BED   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BEE   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BEF   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01933                 count = count + 1
0BF0   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BF1   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF2   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF3   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF4   0080           01925                 movwf INDF                                              ;Save to QUEUE
0BF5   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0BF6   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0BF7   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF8   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BF9   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BFA   0080           01931                 movwf INDF                                              ;Save to QUEUE
0BFB   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01933                 count = count + 1
0BFC   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0BFD   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFE   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFF   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C00   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C01   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C02   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C03   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C04   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C05   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C06   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C07   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01933                 count = count + 1
0C08   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C09   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C0C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C0D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C0E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C0F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C10   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C11   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C12   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C13   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01933                 count = count + 1
0C14   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C15   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C16   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C17   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C18   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C19   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C1A   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C1B   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1C   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1D   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C1E   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C1F   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01933                 count = count + 1
0C20   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C21   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C22   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C23   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C24   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C25   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C26   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C27   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C28   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C29   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C2A   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C2B   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01933                 count = count + 1
0C2C   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C2D   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2E   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2F   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C30   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C31   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C32   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C33   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C34   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C35   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C36   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C37   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01933                 count = count + 1
0C38   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C39   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C3C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C3D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C3E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C3F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C40   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C41   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C42   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C43   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01933                 count = count + 1
0C44   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C45   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C46   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C47   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C48   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C49   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C4A   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C4B   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4C   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4D   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C4E   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C4F   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01933                 count = count + 1
0C50   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C51   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C52   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C53   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C54   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C55   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C56   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C57   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C58   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C59   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C5A   0080           01931                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C5B   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01933                 count = count + 1
0C5C   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C5D   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5E   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5F   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C60   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C61   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C62   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C63   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C64   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C65   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C66   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C67   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01933                 count = count + 1
0C68   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C69   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C6C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C6D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C6E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C6F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C70   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C71   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C72   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C73   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01933                 count = count + 1
0C74   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C75   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C76   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C77   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C78   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C79   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C7A   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C7B   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7C   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7D   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C7E   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C7F   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01933                 count = count + 1
0C80   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C81   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C82   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C83   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C84   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C85   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C86   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C87   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C88   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C89   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C8A   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C8B   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001C            01933                 count = count + 1
0C8C   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C8D   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8E   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8F   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C90   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C91   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C92   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C93   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C94   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C95   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C96   0080           01931                 movwf INDF                                              ;Save to QUEUE
0C97   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01933                 count = count + 1
0C98   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0C99   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9A   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9B   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C9C   0080           01925                 movwf INDF                                              ;Save to QUEUE
0C9D   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0C9E   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0C9F   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA0   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA1   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CA2   0080           01931                 movwf INDF                                              ;Save to QUEUE
0CA3   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01933                 count = count + 1
0CA4   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0CA5   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA6   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA7   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA8   0080           01925                 movwf INDF                                              ;Save to QUEUE
0CA9   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0CAA   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0CAB   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAC   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAD   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CAE   0080           01931                 movwf INDF                                              ;Save to QUEUE
0CAF   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01933                 count = count + 1
0CB0   0808           01921                 movf ADC_DATAPORT, W                    ;Sample Y
0CB1   1409           01922                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB2   1009           01923                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB3   1489           01924                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB4   0080           01925                 movwf INDF                                              ;Save to QUEUE
0CB5   0384           01926                 decf FSR, F                                             ;Increment QUEUE pointer
0CB6   0808           01927                 movf ADC_DATAPORT, W                    ;Sample X
0CB7   1409           01928                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB8   1009           01929                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB9   1089           01930                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CBA   0080           01931                 movwf INDF                                              ;Save to QUEUE
0CBB   0384           01932                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01933                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01934         endw
0CBC   0808           01935         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 2
0CBD   1409           01936         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CBE   1009           01937         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CBF   1489           01938         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0CC0   0080           01939         movwf INDF                                                      ;Save to QUEUE
0CC1   1783           01940         bsf STATUS, IRP                                         ;Move QUEUE pointer to Bank 4
0CC2   0808           01941         movf ADC_DATAPORT, W                            ;Sample X
0CC3   1409           01942         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0CC4   1009           01943         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0CC5   1089           01944         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0CC6   0080           01945         movwf INDF                                                      ;Save to QUEUE
0CC7   0A84           01946         incf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01947         count = 1
                      01948         while count < BUFFERSIZE / 2
0CC8   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0CC9   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCA   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCB   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CCC   0080           01953                 movwf INDF                                              ;Save to QUEUE
0CCD   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0CCE   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0CCF   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD0   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD1   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CD2   0080           01959                 movwf INDF                                              ;Save to QUEUE
0CD3   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01961                 count = count + 1
0CD4   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0CD5   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD6   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD7   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD8   0080           01953                 movwf INDF                                              ;Save to QUEUE
0CD9   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0CDA   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0CDB   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDC   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDD   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CDE   0080           01959                 movwf INDF                                              ;Save to QUEUE
0CDF   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01961                 count = count + 1
0CE0   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0CE1   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE2   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE3   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE4   0080           01953                 movwf INDF                                              ;Save to QUEUE
0CE5   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0CE6   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0CE7   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE8   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE9   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CEA   0080           01959                 movwf INDF                                              ;Save to QUEUE
0CEB   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            01961                 count = count + 1
0CEC   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0CED   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEE   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CEF   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF0   0080           01953                 movwf INDF                                              ;Save to QUEUE
0CF1   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0CF2   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0CF3   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF4   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF5   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF6   0080           01959                 movwf INDF                                              ;Save to QUEUE
0CF7   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01961                 count = count + 1
0CF8   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0CF9   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFA   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFB   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CFC   0080           01953                 movwf INDF                                              ;Save to QUEUE
0CFD   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0CFE   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0CFF   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D00   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D01   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D02   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D03   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01961                 count = count + 1
0D04   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D05   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D06   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D07   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D08   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D09   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D0A   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D0B   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0C   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0D   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D0E   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D0F   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01961                 count = count + 1
0D10   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D11   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D12   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D13   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D14   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D15   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D16   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D17   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D18   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D19   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D1A   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D1B   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01961                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D1C   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D1D   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1E   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1F   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D20   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D21   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D22   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D23   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D24   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D25   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D26   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D27   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01961                 count = count + 1
0D28   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D29   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2A   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2B   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D2C   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D2D   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D2E   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D2F   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D30   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D31   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D32   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D33   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01961                 count = count + 1
0D34   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D35   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D36   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D37   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D38   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D39   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D3A   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D3B   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3C   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3D   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D3E   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D3F   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01961                 count = count + 1
0D40   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D41   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D42   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D43   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D44   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D45   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D46   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D47   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D48   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D49   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D4A   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D4B   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01961                 count = count + 1
0D4C   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D4D   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4E   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D4F   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D50   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D51   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D52   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D53   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D54   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D55   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D56   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D57   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01961                 count = count + 1
0D58   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D59   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5A   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5B   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D5C   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D5D   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D5E   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D5F   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D60   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D61   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D62   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D63   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01961                 count = count + 1
0D64   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D65   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D66   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D67   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D68   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D69   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D6A   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D6B   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6C   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6D   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D6E   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D6F   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01961                 count = count + 1
0D70   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D71   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D72   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D73   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D74   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D75   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D76   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D77   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D78   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D79   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D7A   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D7B   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01961                 count = count + 1
0D7C   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D7D   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D7E   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7F   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D80   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D81   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D82   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D83   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D84   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D85   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D86   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D87   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01961                 count = count + 1
0D88   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D89   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8A   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8B   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D8C   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D8D   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D8E   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D8F   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D90   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D91   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D92   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D93   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01961                 count = count + 1
0D94   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0D95   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D96   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D97   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D98   0080           01953                 movwf INDF                                              ;Save to QUEUE
0D99   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0D9A   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0D9B   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9C   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9D   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D9E   0080           01959                 movwf INDF                                              ;Save to QUEUE
0D9F   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01961                 count = count + 1
0DA0   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DA1   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA2   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA3   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA4   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DA5   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DA6   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DA7   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA8   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA9   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DAA   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DAB   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01961                 count = count + 1
0DAC   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DAD   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAE   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DAF   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DB0   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DB1   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DB2   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DB3   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB4   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB5   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB6   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DB7   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01961                 count = count + 1
0DB8   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DB9   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBA   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBB   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DBC   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DBD   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DBE   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DBF   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC0   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC1   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DC2   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DC3   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01961                 count = count + 1
0DC4   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DC5   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC6   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC7   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC8   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DC9   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DCA   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DCB   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCC   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCD   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DCE   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DCF   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01961                 count = count + 1
0DD0   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DD1   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD2   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD3   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD4   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DD5   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DD6   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DD7   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD8   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD9   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DDA   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DDB   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01961                 count = count + 1
0DDC   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DDD   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDE   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDF   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DE0   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DE1   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DE2   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DE3   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE4   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE5   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE6   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DE7   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01961                 count = count + 1
0DE8   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DE9   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEA   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DEB   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DEC   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DED   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DEE   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DEF   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF0   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF1   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DF2   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DF3   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01961                 count = count + 1
0DF4   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0DF5   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF6   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF7   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF8   0080           01953                 movwf INDF                                              ;Save to QUEUE
0DF9   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0DFA   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0DFB   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFC   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFD   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DFE   0080           01959                 movwf INDF                                              ;Save to QUEUE
0DFF   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01961                 count = count + 1
0E00   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0E01   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E02   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E03   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E04   0080           01953                 movwf INDF                                              ;Save to QUEUE
0E05   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0E06   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0E07   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E08   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E09   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E0A   0080           01959                 movwf INDF                                              ;Save to QUEUE
0E0B   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01961                 count = count + 1
0E0C   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0E0D   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0E   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0F   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E10   0080           01953                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E11   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0E12   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0E13   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E14   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E15   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E16   0080           01959                 movwf INDF                                              ;Save to QUEUE
0E17   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01961                 count = count + 1
0E18   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0E19   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1A   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1B   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E1C   0080           01953                 movwf INDF                                              ;Save to QUEUE
0E1D   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0E1E   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0E1F   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E20   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E21   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E22   0080           01959                 movwf INDF                                              ;Save to QUEUE
0E23   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01961                 count = count + 1
0E24   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0E25   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E26   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E27   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E28   0080           01953                 movwf INDF                                              ;Save to QUEUE
0E29   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0E2A   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0E2B   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2C   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2D   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E2E   0080           01959                 movwf INDF                                              ;Save to QUEUE
0E2F   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01961                 count = count + 1
0E30   0808           01949                 movf ADC_DATAPORT, W                    ;Sample Y
0E31   1409           01950                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E32   1009           01951                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E33   1489           01952                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E34   0080           01953                 movwf INDF                                              ;Save to QUEUE
0E35   0A84           01954                 incf FSR, F                                             ;Increment QUEUE pointer
0E36   0808           01955                 movf ADC_DATAPORT, W                    ;Sample X
0E37   1409           01956                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E38   1009           01957                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E39   1089           01958                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E3A   0080           01959                 movwf INDF                                              ;Save to QUEUE
0E3B   0A84           01960                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01961                 count = count + 1
                      01962         endw
0E3C   0808           01963         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 4
0E3D   1409           01964         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E3E   1009           01965         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E3F   1489           01966         bsf ADC_CONTROLPORT, ADDR0                      ;Set channel to Y
0E40   0080           01967         movwf INDF                                                      ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E41   1384           01968         bcf FSR, 7                                                      ;Move QUEUE pointer to Bank 3
0E42   0808           01969         movf ADC_DATAPORT, W                            ;Sample X
0E43   1409           01970         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0E44   1009           01971         bcf ADC_CONTROLPORT, RDD                        ;Begin next conversion
0E45   1089           01972         bcf ADC_CONTROLPORT, ADDR0                      ;Set channel to X
0E46   0080           01973         movwf INDF                                                      ;Save to QUEUE
0E47   0384           01974         decf FSR, f                                                     ;Increment QUEUE pointer
  00000001            01975         count = 1
                      01976         while count < BUFFERSIZE / 2
0E48   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E49   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E4C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E4D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E4E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E4F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E50   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E51   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E52   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E53   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01989                 count = count + 1
0E54   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E55   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E56   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E57   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E58   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E59   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E5A   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E5B   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5C   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5D   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E5E   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E5F   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01989                 count = count + 1
0E60   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E61   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E62   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E63   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E64   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E65   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E66   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E67   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E68   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E69   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E6A   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E6B   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01989                 count = count + 1
0E6C   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E6D   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6E   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6F   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E70   0080           01981                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E71   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E72   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E73   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E74   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E75   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E76   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E77   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01989                 count = count + 1
0E78   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E79   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E7C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E7D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E7E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E7F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E80   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E81   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E82   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E83   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01989                 count = count + 1
0E84   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E85   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E86   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E87   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E88   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E89   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E8A   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E8B   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8C   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8D   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E8E   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E8F   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01989                 count = count + 1
0E90   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E91   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E92   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E93   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E94   0080           01981                 movwf INDF                                              ;Save to QUEUE
0E95   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0E96   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0E97   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E98   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E99   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E9A   0080           01987                 movwf INDF                                              ;Save to QUEUE
0E9B   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01989                 count = count + 1
0E9C   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0E9D   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9E   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9F   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EA0   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EA1   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EA2   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EA3   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA4   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA5   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EA6   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EA7   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01989                 count = count + 1
0EA8   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EA9   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAA   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EAB   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EAC   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EAD   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EAE   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EAF   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB0   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB1   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EB2   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EB3   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01989                 count = count + 1
0EB4   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EB5   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB6   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB7   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EB8   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EB9   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EBA   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EBB   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBC   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBD   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EBE   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EBF   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01989                 count = count + 1
0EC0   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EC1   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC2   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC3   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EC4   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EC5   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EC6   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EC7   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC8   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC9   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ECA   0080           01987                 movwf INDF                                              ;Save to QUEUE
0ECB   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01989                 count = count + 1
0ECC   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0ECD   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECE   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECF   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ED0   0080           01981                 movwf INDF                                              ;Save to QUEUE
0ED1   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0ED2   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0ED3   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED4   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED5   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ED6   0080           01987                 movwf INDF                                              ;Save to QUEUE
0ED7   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01989                 count = count + 1
0ED8   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0ED9   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDA   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDB   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EDC   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EDD   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EDE   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EDF   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE0   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE1   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EE2   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EE3   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01989                 count = count + 1
0EE4   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EE5   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE6   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE7   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EE8   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EE9   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EEA   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EEB   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEC   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EED   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EEE   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EEF   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01989                 count = count + 1
0EF0   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EF1   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF2   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF3   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0EF4   0080           01981                 movwf INDF                                              ;Save to QUEUE
0EF5   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0EF6   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0EF7   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF8   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF9   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0EFA   0080           01987                 movwf INDF                                              ;Save to QUEUE
0EFB   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01989                 count = count + 1
0EFC   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0EFD   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFE   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFF   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F00   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F01   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F02   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F03   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F04   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F05   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F06   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F07   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01989                 count = count + 1
0F08   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F09   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F0C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F0D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F0E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F0F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F10   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F11   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F12   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F13   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01989                 count = count + 1
0F14   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F15   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F16   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F17   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F18   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F19   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F1A   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F1B   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1C   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1D   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F1E   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F1F   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01989                 count = count + 1
0F20   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F21   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F22   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F23   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F24   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F25   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F26   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F27   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F28   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F29   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F2A   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F2B   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01989                 count = count + 1
0F2C   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F2D   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2E   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2F   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F30   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F31   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F32   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F33   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F34   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F35   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F36   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F37   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01989                 count = count + 1
0F38   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F39   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F3C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F3D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F3E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F3F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F40   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F41   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F42   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F43   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01989                 count = count + 1
0F44   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F45   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F46   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F47   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F48   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F49   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F4A   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F4B   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4C   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4D   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F4E   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F4F   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01989                 count = count + 1
0F50   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F51   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F52   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F53   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F54   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F55   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F56   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F57   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F58   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F59   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F5A   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F5B   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01989                 count = count + 1
0F5C   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F5D   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5E   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5F   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F60   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F61   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F62   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F63   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F64   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F65   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F66   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F67   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01989                 count = count + 1
0F68   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F69   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F6C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F6D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F6E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F6F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F70   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F71   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F72   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F73   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01989                 count = count + 1
0F74   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F75   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F76   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F77   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F78   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F79   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F7A   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F7B   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7C   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F7D   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F7E   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F7F   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01989                 count = count + 1
0F80   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F81   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F82   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F83   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F84   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F85   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F86   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F87   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F88   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F89   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F8A   0080           01987                 movwf INDF                                              ;Save to QUEUE
0F8B   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01989                 count = count + 1
0F8C   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F8D   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8E   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8F   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F90   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F91   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F92   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F93   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F94   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F95   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0F96   0080           01987                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F97   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01989                 count = count + 1
0F98   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0F99   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9A   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9B   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0F9C   0080           01981                 movwf INDF                                              ;Save to QUEUE
0F9D   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0F9E   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0F9F   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA0   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA1   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FA2   0080           01987                 movwf INDF                                              ;Save to QUEUE
0FA3   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01989                 count = count + 1
0FA4   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0FA5   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA6   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA7   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FA8   0080           01981                 movwf INDF                                              ;Save to QUEUE
0FA9   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0FAA   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0FAB   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAC   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAD   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FAE   0080           01987                 movwf INDF                                              ;Save to QUEUE
0FAF   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01989                 count = count + 1
0FB0   0808           01977                 movf ADC_DATAPORT, W                    ;Sample Y
0FB1   1409           01978                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB2   1009           01979                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB3   1489           01980                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0FB4   0080           01981                 movwf INDF                                              ;Save to QUEUE
0FB5   0384           01982                 decf FSR, F                                             ;Increment QUEUE pointer
0FB6   0808           01983                 movf ADC_DATAPORT, W                    ;Sample X
0FB7   1409           01984                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB8   1009           01985                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB9   1089           01986                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0FBA   0080           01987                 movwf INDF                                              ;Save to QUEUE
0FBB   0384           01988                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01989                 count = count + 1
                      01990         endw
0FBC   0808           01991         movf ADC_DATAPORT, W                            ;Sample Y, last in Bank 3
0FBD   1409           01992         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
0FBE   118A           01993         bcf PCLATH, 3                                           ;insure correct program memory page
0FBF   120A           01994         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0FC0   2916           01995         goto ADCShutdown
                      01996         
                      01997 ;Fast sample
                      01998 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      01999 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      02000 ;-----------------------------------------------------------------------------
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FC1                  02001 Sample833k
0FC1   1009           02002         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02003         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0FC2   3020               M     movlw BUFFERMIN
0FC3   0084               M     movwf FSR
0FC4   0000           02004         nop
  0000                02005         local count
  00000001            02006         count = 1
                      02007         while count < BUFFERSIZE
0FC5   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FC6   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC7   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC8   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FC9   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FCA   0000           02013                 nop                                                             ;Wait a cycle
  00000002            02014                 count = count + 1
0FCB   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FCC   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCD   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCE   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FCF   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FD0   0000           02013                 nop                                                             ;Wait a cycle
  00000003            02014                 count = count + 1
0FD1   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FD2   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD3   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD4   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FD5   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FD6   0000           02013                 nop                                                             ;Wait a cycle
  00000004            02014                 count = count + 1
0FD7   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FD8   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD9   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDA   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FDB   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FDC   0000           02013                 nop                                                             ;Wait a cycle
  00000005            02014                 count = count + 1
0FDD   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FDE   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDF   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE0   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FE1   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FE2   0000           02013                 nop                                                             ;Wait a cycle
  00000006            02014                 count = count + 1
0FE3   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FE4   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE5   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE6   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FE7   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FE8   0000           02013                 nop                                                             ;Wait a cycle
  00000007            02014                 count = count + 1
0FE9   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FEA   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FEB   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEC   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FED   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FEE   0000           02013                 nop                                                             ;Wait a cycle
  00000008            02014                 count = count + 1
0FEF   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FF0   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF1   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF2   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FF3   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FF4   0000           02013                 nop                                                             ;Wait a cycle
  00000009            02014                 count = count + 1
0FF5   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FF6   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF7   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF8   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FF9   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
0FFA   0000           02013                 nop                                                             ;Wait a cycle
  0000000A            02014                 count = count + 1
0FFB   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
0FFC   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFD   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFE   0080           02011                 movwf INDF                                              ;Save to QUEUE
0FFF   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1000   0000           02013                 nop                                                             ;Wait a cycle
  0000000B            02014                 count = count + 1
1001   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1002   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1003   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1004   0080           02011                 movwf INDF                                              ;Save to QUEUE
1005   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1006   0000           02013                 nop                                                             ;Wait a cycle
  0000000C            02014                 count = count + 1
1007   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1008   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1009   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100A   0080           02011                 movwf INDF                                              ;Save to QUEUE
100B   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
100C   0000           02013                 nop                                                             ;Wait a cycle
  0000000D            02014                 count = count + 1
100D   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
100E   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100F   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1010   0080           02011                 movwf INDF                                              ;Save to QUEUE
1011   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1012   0000           02013                 nop                                                             ;Wait a cycle
  0000000E            02014                 count = count + 1
1013   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1014   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1015   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1016   0080           02011                 movwf INDF                                              ;Save to QUEUE
1017   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1018   0000           02013                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F            02014                 count = count + 1
1019   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
101A   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101B   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101C   0080           02011                 movwf INDF                                              ;Save to QUEUE
101D   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
101E   0000           02013                 nop                                                             ;Wait a cycle
  00000010            02014                 count = count + 1
101F   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1020   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1021   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1022   0080           02011                 movwf INDF                                              ;Save to QUEUE
1023   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1024   0000           02013                 nop                                                             ;Wait a cycle
  00000011            02014                 count = count + 1
1025   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1026   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1027   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1028   0080           02011                 movwf INDF                                              ;Save to QUEUE
1029   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
102A   0000           02013                 nop                                                             ;Wait a cycle
  00000012            02014                 count = count + 1
102B   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
102C   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102D   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
102E   0080           02011                 movwf INDF                                              ;Save to QUEUE
102F   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1030   0000           02013                 nop                                                             ;Wait a cycle
  00000013            02014                 count = count + 1
1031   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1032   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1033   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1034   0080           02011                 movwf INDF                                              ;Save to QUEUE
1035   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1036   0000           02013                 nop                                                             ;Wait a cycle
  00000014            02014                 count = count + 1
1037   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1038   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1039   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103A   0080           02011                 movwf INDF                                              ;Save to QUEUE
103B   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
103C   0000           02013                 nop                                                             ;Wait a cycle
  00000015            02014                 count = count + 1
103D   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
103E   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103F   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1040   0080           02011                 movwf INDF                                              ;Save to QUEUE
1041   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1042   0000           02013                 nop                                                             ;Wait a cycle
  00000016            02014                 count = count + 1
1043   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1044   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1045   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1046   0080           02011                 movwf INDF                                              ;Save to QUEUE
1047   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1048   0000           02013                 nop                                                             ;Wait a cycle
  00000017            02014                 count = count + 1
1049   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
104A   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104B   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104C   0080           02011                 movwf INDF                                              ;Save to QUEUE
104D   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
104E   0000           02013                 nop                                                             ;Wait a cycle
  00000018            02014                 count = count + 1
104F   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1050   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1051   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1052   0080           02011                 movwf INDF                                              ;Save to QUEUE
1053   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1054   0000           02013                 nop                                                             ;Wait a cycle
  00000019            02014                 count = count + 1
1055   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1056   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1057   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1058   0080           02011                 movwf INDF                                              ;Save to QUEUE
1059   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
105A   0000           02013                 nop                                                             ;Wait a cycle
  0000001A            02014                 count = count + 1
105B   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
105C   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105D   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105E   0080           02011                 movwf INDF                                              ;Save to QUEUE
105F   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1060   0000           02013                 nop                                                             ;Wait a cycle
  0000001B            02014                 count = count + 1
1061   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1062   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1063   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1064   0080           02011                 movwf INDF                                              ;Save to QUEUE
1065   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1066   0000           02013                 nop                                                             ;Wait a cycle
  0000001C            02014                 count = count + 1
1067   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1068   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1069   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106A   0080           02011                 movwf INDF                                              ;Save to QUEUE
106B   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
106C   0000           02013                 nop                                                             ;Wait a cycle
  0000001D            02014                 count = count + 1
106D   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
106E   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106F   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1070   0080           02011                 movwf INDF                                              ;Save to QUEUE
1071   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1072   0000           02013                 nop                                                             ;Wait a cycle
  0000001E            02014                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1073   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1074   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1075   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1076   0080           02011                 movwf INDF                                              ;Save to QUEUE
1077   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1078   0000           02013                 nop                                                             ;Wait a cycle
  0000001F            02014                 count = count + 1
1079   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
107A   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107B   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107C   0080           02011                 movwf INDF                                              ;Save to QUEUE
107D   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
107E   0000           02013                 nop                                                             ;Wait a cycle
  00000020            02014                 count = count + 1
107F   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1080   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1081   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1082   0080           02011                 movwf INDF                                              ;Save to QUEUE
1083   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1084   0000           02013                 nop                                                             ;Wait a cycle
  00000021            02014                 count = count + 1
1085   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1086   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1087   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1088   0080           02011                 movwf INDF                                              ;Save to QUEUE
1089   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
108A   0000           02013                 nop                                                             ;Wait a cycle
  00000022            02014                 count = count + 1
108B   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
108C   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108D   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108E   0080           02011                 movwf INDF                                              ;Save to QUEUE
108F   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1090   0000           02013                 nop                                                             ;Wait a cycle
  00000023            02014                 count = count + 1
1091   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1092   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1093   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1094   0080           02011                 movwf INDF                                              ;Save to QUEUE
1095   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1096   0000           02013                 nop                                                             ;Wait a cycle
  00000024            02014                 count = count + 1
1097   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1098   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1099   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109A   0080           02011                 movwf INDF                                              ;Save to QUEUE
109B   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
109C   0000           02013                 nop                                                             ;Wait a cycle
  00000025            02014                 count = count + 1
109D   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
109E   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109F   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A0   0080           02011                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10A1   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10A2   0000           02013                 nop                                                             ;Wait a cycle
  00000026            02014                 count = count + 1
10A3   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10A4   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A5   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A6   0080           02011                 movwf INDF                                              ;Save to QUEUE
10A7   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10A8   0000           02013                 nop                                                             ;Wait a cycle
  00000027            02014                 count = count + 1
10A9   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10AA   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AB   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AC   0080           02011                 movwf INDF                                              ;Save to QUEUE
10AD   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10AE   0000           02013                 nop                                                             ;Wait a cycle
  00000028            02014                 count = count + 1
10AF   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10B0   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B1   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B2   0080           02011                 movwf INDF                                              ;Save to QUEUE
10B3   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10B4   0000           02013                 nop                                                             ;Wait a cycle
  00000029            02014                 count = count + 1
10B5   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10B6   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B7   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B8   0080           02011                 movwf INDF                                              ;Save to QUEUE
10B9   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10BA   0000           02013                 nop                                                             ;Wait a cycle
  0000002A            02014                 count = count + 1
10BB   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10BC   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BD   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BE   0080           02011                 movwf INDF                                              ;Save to QUEUE
10BF   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10C0   0000           02013                 nop                                                             ;Wait a cycle
  0000002B            02014                 count = count + 1
10C1   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10C2   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C3   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C4   0080           02011                 movwf INDF                                              ;Save to QUEUE
10C5   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10C6   0000           02013                 nop                                                             ;Wait a cycle
  0000002C            02014                 count = count + 1
10C7   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10C8   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C9   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CA   0080           02011                 movwf INDF                                              ;Save to QUEUE
10CB   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10CC   0000           02013                 nop                                                             ;Wait a cycle
  0000002D            02014                 count = count + 1
10CD   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10CE   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CF   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D0   0080           02011                 movwf INDF                                              ;Save to QUEUE
10D1   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10D2   0000           02013                 nop                                                             ;Wait a cycle
  0000002E            02014                 count = count + 1
10D3   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10D4   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D5   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D6   0080           02011                 movwf INDF                                              ;Save to QUEUE
10D7   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10D8   0000           02013                 nop                                                             ;Wait a cycle
  0000002F            02014                 count = count + 1
10D9   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10DA   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DB   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DC   0080           02011                 movwf INDF                                              ;Save to QUEUE
10DD   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10DE   0000           02013                 nop                                                             ;Wait a cycle
  00000030            02014                 count = count + 1
10DF   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10E0   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E1   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E2   0080           02011                 movwf INDF                                              ;Save to QUEUE
10E3   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10E4   0000           02013                 nop                                                             ;Wait a cycle
  00000031            02014                 count = count + 1
10E5   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10E6   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E7   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E8   0080           02011                 movwf INDF                                              ;Save to QUEUE
10E9   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10EA   0000           02013                 nop                                                             ;Wait a cycle
  00000032            02014                 count = count + 1
10EB   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10EC   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10ED   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EE   0080           02011                 movwf INDF                                              ;Save to QUEUE
10EF   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10F0   0000           02013                 nop                                                             ;Wait a cycle
  00000033            02014                 count = count + 1
10F1   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10F2   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F3   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F4   0080           02011                 movwf INDF                                              ;Save to QUEUE
10F5   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
10F6   0000           02013                 nop                                                             ;Wait a cycle
  00000034            02014                 count = count + 1
10F7   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10F8   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F9   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FA   0080           02011                 movwf INDF                                              ;Save to QUEUE
10FB   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10FC   0000           02013                 nop                                                             ;Wait a cycle
  00000035            02014                 count = count + 1
10FD   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
10FE   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FF   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1100   0080           02011                 movwf INDF                                              ;Save to QUEUE
1101   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1102   0000           02013                 nop                                                             ;Wait a cycle
  00000036            02014                 count = count + 1
1103   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1104   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1105   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1106   0080           02011                 movwf INDF                                              ;Save to QUEUE
1107   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1108   0000           02013                 nop                                                             ;Wait a cycle
  00000037            02014                 count = count + 1
1109   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
110A   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110B   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110C   0080           02011                 movwf INDF                                              ;Save to QUEUE
110D   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
110E   0000           02013                 nop                                                             ;Wait a cycle
  00000038            02014                 count = count + 1
110F   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1110   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1111   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1112   0080           02011                 movwf INDF                                              ;Save to QUEUE
1113   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1114   0000           02013                 nop                                                             ;Wait a cycle
  00000039            02014                 count = count + 1
1115   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1116   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1117   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1118   0080           02011                 movwf INDF                                              ;Save to QUEUE
1119   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
111A   0000           02013                 nop                                                             ;Wait a cycle
  0000003A            02014                 count = count + 1
111B   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
111C   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111D   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111E   0080           02011                 movwf INDF                                              ;Save to QUEUE
111F   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1120   0000           02013                 nop                                                             ;Wait a cycle
  0000003B            02014                 count = count + 1
1121   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1122   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1123   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1124   0080           02011                 movwf INDF                                              ;Save to QUEUE
1125   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1126   0000           02013                 nop                                                             ;Wait a cycle
  0000003C            02014                 count = count + 1
1127   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1128   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1129   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112A   0080           02011                 movwf INDF                                              ;Save to QUEUE
112B   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
112C   0000           02013                 nop                                                             ;Wait a cycle
  0000003D            02014                 count = count + 1
112D   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
112E   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112F   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1130   0080           02011                 movwf INDF                                              ;Save to QUEUE
1131   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1132   0000           02013                 nop                                                             ;Wait a cycle
  0000003E            02014                 count = count + 1
1133   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
1134   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1135   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1136   0080           02011                 movwf INDF                                              ;Save to QUEUE
1137   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
1138   0000           02013                 nop                                                             ;Wait a cycle
  0000003F            02014                 count = count + 1
1139   0808           02008                 movf ADC_DATAPORT, W                    ;Sample
113A   1409           02009                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113B   1009           02010                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113C   0080           02011                 movwf INDF                                              ;Save to QUEUE
113D   0A84           02012                 incf FSR, F                                             ;Increment QUEUE pointer
113E   0000           02013                 nop                                                             ;Wait a cycle
  00000040            02014                 count = count + 1
                      02015         endw
113F   0808           02016         movf ADC_DATAPORT, W
1140   1409           02017         bsf ADC_CONTROLPORT, RDD
1141   1009           02018         bcf ADC_CONTROLPORT, RDD
1142   0080           02019         movwf INDF
1143   1784           02020         bsf FSR, 7                                                      ;goto bank 2
1144   0000           02021         nop                                                                     ;Wait a cycle
  00000001            02022         count = 1
                      02023         while count < BUFFERSIZE
1145   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1146   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1147   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1148   0080           02027                 movwf INDF                                              ;Save to QUEUE
1149   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
114A   0000           02029                 nop                                                             ;Wait a cycle
  00000002            02030                 count = count + 1
114B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
114C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114E   0080           02027                 movwf INDF                                              ;Save to QUEUE
114F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1150   0000           02029                 nop                                                             ;Wait a cycle
  00000003            02030                 count = count + 1
1151   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1152   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1153   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1154   0080           02027                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1155   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1156   0000           02029                 nop                                                             ;Wait a cycle
  00000004            02030                 count = count + 1
1157   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1158   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1159   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115A   0080           02027                 movwf INDF                                              ;Save to QUEUE
115B   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
115C   0000           02029                 nop                                                             ;Wait a cycle
  00000005            02030                 count = count + 1
115D   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
115E   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115F   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1160   0080           02027                 movwf INDF                                              ;Save to QUEUE
1161   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1162   0000           02029                 nop                                                             ;Wait a cycle
  00000006            02030                 count = count + 1
1163   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1164   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1165   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1166   0080           02027                 movwf INDF                                              ;Save to QUEUE
1167   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1168   0000           02029                 nop                                                             ;Wait a cycle
  00000007            02030                 count = count + 1
1169   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
116A   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116B   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
116C   0080           02027                 movwf INDF                                              ;Save to QUEUE
116D   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
116E   0000           02029                 nop                                                             ;Wait a cycle
  00000008            02030                 count = count + 1
116F   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1170   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1171   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1172   0080           02027                 movwf INDF                                              ;Save to QUEUE
1173   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1174   0000           02029                 nop                                                             ;Wait a cycle
  00000009            02030                 count = count + 1
1175   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1176   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1177   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1178   0080           02027                 movwf INDF                                              ;Save to QUEUE
1179   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
117A   0000           02029                 nop                                                             ;Wait a cycle
  0000000A            02030                 count = count + 1
117B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
117C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117E   0080           02027                 movwf INDF                                              ;Save to QUEUE
117F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1180   0000           02029                 nop                                                             ;Wait a cycle
  0000000B            02030                 count = count + 1
1181   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1182   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1183   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1184   0080           02027                 movwf INDF                                              ;Save to QUEUE
1185   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1186   0000           02029                 nop                                                             ;Wait a cycle
  0000000C            02030                 count = count + 1
1187   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1188   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1189   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118A   0080           02027                 movwf INDF                                              ;Save to QUEUE
118B   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
118C   0000           02029                 nop                                                             ;Wait a cycle
  0000000D            02030                 count = count + 1
118D   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
118E   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118F   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1190   0080           02027                 movwf INDF                                              ;Save to QUEUE
1191   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1192   0000           02029                 nop                                                             ;Wait a cycle
  0000000E            02030                 count = count + 1
1193   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1194   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1195   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1196   0080           02027                 movwf INDF                                              ;Save to QUEUE
1197   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1198   0000           02029                 nop                                                             ;Wait a cycle
  0000000F            02030                 count = count + 1
1199   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
119A   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119B   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119C   0080           02027                 movwf INDF                                              ;Save to QUEUE
119D   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
119E   0000           02029                 nop                                                             ;Wait a cycle
  00000010            02030                 count = count + 1
119F   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11A0   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A1   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A2   0080           02027                 movwf INDF                                              ;Save to QUEUE
11A3   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11A4   0000           02029                 nop                                                             ;Wait a cycle
  00000011            02030                 count = count + 1
11A5   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11A6   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A7   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A8   0080           02027                 movwf INDF                                              ;Save to QUEUE
11A9   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11AA   0000           02029                 nop                                                             ;Wait a cycle
  00000012            02030                 count = count + 1
11AB   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11AC   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AD   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11AE   0080           02027                 movwf INDF                                              ;Save to QUEUE
11AF   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11B0   0000           02029                 nop                                                             ;Wait a cycle
  00000013            02030                 count = count + 1
11B1   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11B2   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B3   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B4   0080           02027                 movwf INDF                                              ;Save to QUEUE
11B5   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11B6   0000           02029                 nop                                                             ;Wait a cycle
  00000014            02030                 count = count + 1
11B7   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11B8   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B9   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BA   0080           02027                 movwf INDF                                              ;Save to QUEUE
11BB   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11BC   0000           02029                 nop                                                             ;Wait a cycle
  00000015            02030                 count = count + 1
11BD   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11BE   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BF   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C0   0080           02027                 movwf INDF                                              ;Save to QUEUE
11C1   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11C2   0000           02029                 nop                                                             ;Wait a cycle
  00000016            02030                 count = count + 1
11C3   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11C4   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C5   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C6   0080           02027                 movwf INDF                                              ;Save to QUEUE
11C7   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11C8   0000           02029                 nop                                                             ;Wait a cycle
  00000017            02030                 count = count + 1
11C9   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11CA   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CB   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CC   0080           02027                 movwf INDF                                              ;Save to QUEUE
11CD   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11CE   0000           02029                 nop                                                             ;Wait a cycle
  00000018            02030                 count = count + 1
11CF   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11D0   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D1   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D2   0080           02027                 movwf INDF                                              ;Save to QUEUE
11D3   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11D4   0000           02029                 nop                                                             ;Wait a cycle
  00000019            02030                 count = count + 1
11D5   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11D6   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D7   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D8   0080           02027                 movwf INDF                                              ;Save to QUEUE
11D9   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11DA   0000           02029                 nop                                                             ;Wait a cycle
  0000001A            02030                 count = count + 1
11DB   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11DC   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11DD   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DE   0080           02027                 movwf INDF                                              ;Save to QUEUE
11DF   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11E0   0000           02029                 nop                                                             ;Wait a cycle
  0000001B            02030                 count = count + 1
11E1   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11E2   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E3   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E4   0080           02027                 movwf INDF                                              ;Save to QUEUE
11E5   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11E6   0000           02029                 nop                                                             ;Wait a cycle
  0000001C            02030                 count = count + 1
11E7   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11E8   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E9   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EA   0080           02027                 movwf INDF                                              ;Save to QUEUE
11EB   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11EC   0000           02029                 nop                                                             ;Wait a cycle
  0000001D            02030                 count = count + 1
11ED   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11EE   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EF   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F0   0080           02027                 movwf INDF                                              ;Save to QUEUE
11F1   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11F2   0000           02029                 nop                                                             ;Wait a cycle
  0000001E            02030                 count = count + 1
11F3   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11F4   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F5   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F6   0080           02027                 movwf INDF                                              ;Save to QUEUE
11F7   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11F8   0000           02029                 nop                                                             ;Wait a cycle
  0000001F            02030                 count = count + 1
11F9   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
11FA   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FB   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FC   0080           02027                 movwf INDF                                              ;Save to QUEUE
11FD   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
11FE   0000           02029                 nop                                                             ;Wait a cycle
  00000020            02030                 count = count + 1
11FF   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1200   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1201   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1202   0080           02027                 movwf INDF                                              ;Save to QUEUE
1203   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1204   0000           02029                 nop                                                             ;Wait a cycle
  00000021            02030                 count = count + 1
1205   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1206   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1207   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1208   0080           02027                 movwf INDF                                              ;Save to QUEUE
1209   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
120A   0000           02029                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000022            02030                 count = count + 1
120B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
120C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120E   0080           02027                 movwf INDF                                              ;Save to QUEUE
120F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1210   0000           02029                 nop                                                             ;Wait a cycle
  00000023            02030                 count = count + 1
1211   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1212   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1213   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1214   0080           02027                 movwf INDF                                              ;Save to QUEUE
1215   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1216   0000           02029                 nop                                                             ;Wait a cycle
  00000024            02030                 count = count + 1
1217   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1218   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1219   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121A   0080           02027                 movwf INDF                                              ;Save to QUEUE
121B   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
121C   0000           02029                 nop                                                             ;Wait a cycle
  00000025            02030                 count = count + 1
121D   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
121E   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121F   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1220   0080           02027                 movwf INDF                                              ;Save to QUEUE
1221   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1222   0000           02029                 nop                                                             ;Wait a cycle
  00000026            02030                 count = count + 1
1223   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1224   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1225   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1226   0080           02027                 movwf INDF                                              ;Save to QUEUE
1227   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1228   0000           02029                 nop                                                             ;Wait a cycle
  00000027            02030                 count = count + 1
1229   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
122A   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122B   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122C   0080           02027                 movwf INDF                                              ;Save to QUEUE
122D   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
122E   0000           02029                 nop                                                             ;Wait a cycle
  00000028            02030                 count = count + 1
122F   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1230   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1231   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1232   0080           02027                 movwf INDF                                              ;Save to QUEUE
1233   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1234   0000           02029                 nop                                                             ;Wait a cycle
  00000029            02030                 count = count + 1
1235   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1236   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1237   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1238   0080           02027                 movwf INDF                                              ;Save to QUEUE
1239   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
123A   0000           02029                 nop                                                             ;Wait a cycle
  0000002A            02030                 count = count + 1
123B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
123C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123E   0080           02027                 movwf INDF                                              ;Save to QUEUE
123F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1240   0000           02029                 nop                                                             ;Wait a cycle
  0000002B            02030                 count = count + 1
1241   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1242   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1243   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1244   0080           02027                 movwf INDF                                              ;Save to QUEUE
1245   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1246   0000           02029                 nop                                                             ;Wait a cycle
  0000002C            02030                 count = count + 1
1247   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1248   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1249   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124A   0080           02027                 movwf INDF                                              ;Save to QUEUE
124B   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
124C   0000           02029                 nop                                                             ;Wait a cycle
  0000002D            02030                 count = count + 1
124D   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
124E   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124F   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1250   0080           02027                 movwf INDF                                              ;Save to QUEUE
1251   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1252   0000           02029                 nop                                                             ;Wait a cycle
  0000002E            02030                 count = count + 1
1253   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1254   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1255   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1256   0080           02027                 movwf INDF                                              ;Save to QUEUE
1257   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1258   0000           02029                 nop                                                             ;Wait a cycle
  0000002F            02030                 count = count + 1
1259   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
125A   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125B   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125C   0080           02027                 movwf INDF                                              ;Save to QUEUE
125D   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
125E   0000           02029                 nop                                                             ;Wait a cycle
  00000030            02030                 count = count + 1
125F   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1260   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1261   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1262   0080           02027                 movwf INDF                                              ;Save to QUEUE
1263   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1264   0000           02029                 nop                                                             ;Wait a cycle
  00000031            02030                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1265   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1266   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1267   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1268   0080           02027                 movwf INDF                                              ;Save to QUEUE
1269   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
126A   0000           02029                 nop                                                             ;Wait a cycle
  00000032            02030                 count = count + 1
126B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
126C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126E   0080           02027                 movwf INDF                                              ;Save to QUEUE
126F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1270   0000           02029                 nop                                                             ;Wait a cycle
  00000033            02030                 count = count + 1
1271   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1272   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1273   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1274   0080           02027                 movwf INDF                                              ;Save to QUEUE
1275   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1276   0000           02029                 nop                                                             ;Wait a cycle
  00000034            02030                 count = count + 1
1277   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1278   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1279   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127A   0080           02027                 movwf INDF                                              ;Save to QUEUE
127B   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
127C   0000           02029                 nop                                                             ;Wait a cycle
  00000035            02030                 count = count + 1
127D   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
127E   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127F   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1280   0080           02027                 movwf INDF                                              ;Save to QUEUE
1281   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1282   0000           02029                 nop                                                             ;Wait a cycle
  00000036            02030                 count = count + 1
1283   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1284   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1285   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1286   0080           02027                 movwf INDF                                              ;Save to QUEUE
1287   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1288   0000           02029                 nop                                                             ;Wait a cycle
  00000037            02030                 count = count + 1
1289   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
128A   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128B   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128C   0080           02027                 movwf INDF                                              ;Save to QUEUE
128D   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
128E   0000           02029                 nop                                                             ;Wait a cycle
  00000038            02030                 count = count + 1
128F   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1290   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1291   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1292   0080           02027                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1293   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
1294   0000           02029                 nop                                                             ;Wait a cycle
  00000039            02030                 count = count + 1
1295   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
1296   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1297   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1298   0080           02027                 movwf INDF                                              ;Save to QUEUE
1299   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
129A   0000           02029                 nop                                                             ;Wait a cycle
  0000003A            02030                 count = count + 1
129B   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
129C   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129D   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129E   0080           02027                 movwf INDF                                              ;Save to QUEUE
129F   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12A0   0000           02029                 nop                                                             ;Wait a cycle
  0000003B            02030                 count = count + 1
12A1   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
12A2   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A3   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A4   0080           02027                 movwf INDF                                              ;Save to QUEUE
12A5   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12A6   0000           02029                 nop                                                             ;Wait a cycle
  0000003C            02030                 count = count + 1
12A7   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
12A8   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A9   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AA   0080           02027                 movwf INDF                                              ;Save to QUEUE
12AB   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12AC   0000           02029                 nop                                                             ;Wait a cycle
  0000003D            02030                 count = count + 1
12AD   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
12AE   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AF   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B0   0080           02027                 movwf INDF                                              ;Save to QUEUE
12B1   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12B2   0000           02029                 nop                                                             ;Wait a cycle
  0000003E            02030                 count = count + 1
12B3   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
12B4   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B5   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B6   0080           02027                 movwf INDF                                              ;Save to QUEUE
12B7   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12B8   0000           02029                 nop                                                             ;Wait a cycle
  0000003F            02030                 count = count + 1
12B9   0808           02024                 movf ADC_DATAPORT, W                    ;Sample
12BA   1409           02025                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BB   1009           02026                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BC   0080           02027                 movwf INDF                                              ;Save to QUEUE
12BD   0384           02028                 decf FSR, F                                             ;Increment QUEUE pointer
12BE   0000           02029                 nop                                                             ;Wait a cycle
  00000040            02030                 count = count + 1
                      02031         endw
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12BF   0808           02032         movf ADC_DATAPORT, W
12C0   1409           02033         bsf ADC_CONTROLPORT, RDD
12C1   1009           02034         bcf ADC_CONTROLPORT, RDD
12C2   0080           02035         movwf INDF
12C3   1783           02036         bsf STATUS, IRP                                         ;goto bank 4
12C4   0000           02037         nop                                                                     ;Wait a cycle
  00000001            02038         count = 1
                      02039         while count < D'44'
12C5   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12C6   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C7   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C8   0080           02043                 movwf INDF                                              ;Save to QUEUE
12C9   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12CA   0000           02045                 nop                                                             ;Wait a cycle
  00000002            02046                 count = count + 1
12CB   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12CC   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CD   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CE   0080           02043                 movwf INDF                                              ;Save to QUEUE
12CF   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12D0   0000           02045                 nop                                                             ;Wait a cycle
  00000003            02046                 count = count + 1
12D1   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12D2   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D3   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D4   0080           02043                 movwf INDF                                              ;Save to QUEUE
12D5   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12D6   0000           02045                 nop                                                             ;Wait a cycle
  00000004            02046                 count = count + 1
12D7   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12D8   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12D9   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DA   0080           02043                 movwf INDF                                              ;Save to QUEUE
12DB   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12DC   0000           02045                 nop                                                             ;Wait a cycle
  00000005            02046                 count = count + 1
12DD   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12DE   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DF   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E0   0080           02043                 movwf INDF                                              ;Save to QUEUE
12E1   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12E2   0000           02045                 nop                                                             ;Wait a cycle
  00000006            02046                 count = count + 1
12E3   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12E4   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E5   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E6   0080           02043                 movwf INDF                                              ;Save to QUEUE
12E7   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12E8   0000           02045                 nop                                                             ;Wait a cycle
  00000007            02046                 count = count + 1
12E9   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12EA   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12EB   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12EC   0080           02043                 movwf INDF                                              ;Save to QUEUE
12ED   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12EE   0000           02045                 nop                                                             ;Wait a cycle
  00000008            02046                 count = count + 1
12EF   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12F0   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F1   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F2   0080           02043                 movwf INDF                                              ;Save to QUEUE
12F3   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12F4   0000           02045                 nop                                                             ;Wait a cycle
  00000009            02046                 count = count + 1
12F5   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12F6   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F7   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F8   0080           02043                 movwf INDF                                              ;Save to QUEUE
12F9   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
12FA   0000           02045                 nop                                                             ;Wait a cycle
  0000000A            02046                 count = count + 1
12FB   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
12FC   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FD   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FE   0080           02043                 movwf INDF                                              ;Save to QUEUE
12FF   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1300   0000           02045                 nop                                                             ;Wait a cycle
  0000000B            02046                 count = count + 1
1301   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1302   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1303   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1304   0080           02043                 movwf INDF                                              ;Save to QUEUE
1305   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1306   0000           02045                 nop                                                             ;Wait a cycle
  0000000C            02046                 count = count + 1
1307   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1308   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1309   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130A   0080           02043                 movwf INDF                                              ;Save to QUEUE
130B   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
130C   0000           02045                 nop                                                             ;Wait a cycle
  0000000D            02046                 count = count + 1
130D   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
130E   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130F   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1310   0080           02043                 movwf INDF                                              ;Save to QUEUE
1311   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1312   0000           02045                 nop                                                             ;Wait a cycle
  0000000E            02046                 count = count + 1
1313   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1314   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1315   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1316   0080           02043                 movwf INDF                                              ;Save to QUEUE
1317   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1318   0000           02045                 nop                                                             ;Wait a cycle
  0000000F            02046                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1319   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
131A   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131B   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131C   0080           02043                 movwf INDF                                              ;Save to QUEUE
131D   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
131E   0000           02045                 nop                                                             ;Wait a cycle
  00000010            02046                 count = count + 1
131F   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1320   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1321   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1322   0080           02043                 movwf INDF                                              ;Save to QUEUE
1323   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1324   0000           02045                 nop                                                             ;Wait a cycle
  00000011            02046                 count = count + 1
1325   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1326   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1327   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1328   0080           02043                 movwf INDF                                              ;Save to QUEUE
1329   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
132A   0000           02045                 nop                                                             ;Wait a cycle
  00000012            02046                 count = count + 1
132B   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
132C   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132D   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
132E   0080           02043                 movwf INDF                                              ;Save to QUEUE
132F   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1330   0000           02045                 nop                                                             ;Wait a cycle
  00000013            02046                 count = count + 1
1331   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1332   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1333   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1334   0080           02043                 movwf INDF                                              ;Save to QUEUE
1335   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1336   0000           02045                 nop                                                             ;Wait a cycle
  00000014            02046                 count = count + 1
1337   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1338   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1339   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133A   0080           02043                 movwf INDF                                              ;Save to QUEUE
133B   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
133C   0000           02045                 nop                                                             ;Wait a cycle
  00000015            02046                 count = count + 1
133D   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
133E   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133F   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1340   0080           02043                 movwf INDF                                              ;Save to QUEUE
1341   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1342   0000           02045                 nop                                                             ;Wait a cycle
  00000016            02046                 count = count + 1
1343   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1344   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1345   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1346   0080           02043                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1347   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1348   0000           02045                 nop                                                             ;Wait a cycle
  00000017            02046                 count = count + 1
1349   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
134A   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134B   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134C   0080           02043                 movwf INDF                                              ;Save to QUEUE
134D   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
134E   0000           02045                 nop                                                             ;Wait a cycle
  00000018            02046                 count = count + 1
134F   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1350   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1351   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1352   0080           02043                 movwf INDF                                              ;Save to QUEUE
1353   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1354   0000           02045                 nop                                                             ;Wait a cycle
  00000019            02046                 count = count + 1
1355   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1356   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1357   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1358   0080           02043                 movwf INDF                                              ;Save to QUEUE
1359   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
135A   0000           02045                 nop                                                             ;Wait a cycle
  0000001A            02046                 count = count + 1
135B   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
135C   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135D   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135E   0080           02043                 movwf INDF                                              ;Save to QUEUE
135F   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1360   0000           02045                 nop                                                             ;Wait a cycle
  0000001B            02046                 count = count + 1
1361   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1362   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1363   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1364   0080           02043                 movwf INDF                                              ;Save to QUEUE
1365   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1366   0000           02045                 nop                                                             ;Wait a cycle
  0000001C            02046                 count = count + 1
1367   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1368   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1369   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136A   0080           02043                 movwf INDF                                              ;Save to QUEUE
136B   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
136C   0000           02045                 nop                                                             ;Wait a cycle
  0000001D            02046                 count = count + 1
136D   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
136E   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136F   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1370   0080           02043                 movwf INDF                                              ;Save to QUEUE
1371   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1372   0000           02045                 nop                                                             ;Wait a cycle
  0000001E            02046                 count = count + 1
1373   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1374   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1375   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1376   0080           02043                 movwf INDF                                              ;Save to QUEUE
1377   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1378   0000           02045                 nop                                                             ;Wait a cycle
  0000001F            02046                 count = count + 1
1379   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
137A   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137B   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137C   0080           02043                 movwf INDF                                              ;Save to QUEUE
137D   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
137E   0000           02045                 nop                                                             ;Wait a cycle
  00000020            02046                 count = count + 1
137F   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1380   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1381   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1382   0080           02043                 movwf INDF                                              ;Save to QUEUE
1383   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1384   0000           02045                 nop                                                             ;Wait a cycle
  00000021            02046                 count = count + 1
1385   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1386   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1387   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1388   0080           02043                 movwf INDF                                              ;Save to QUEUE
1389   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
138A   0000           02045                 nop                                                             ;Wait a cycle
  00000022            02046                 count = count + 1
138B   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
138C   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138D   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138E   0080           02043                 movwf INDF                                              ;Save to QUEUE
138F   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1390   0000           02045                 nop                                                             ;Wait a cycle
  00000023            02046                 count = count + 1
1391   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1392   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1393   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1394   0080           02043                 movwf INDF                                              ;Save to QUEUE
1395   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
1396   0000           02045                 nop                                                             ;Wait a cycle
  00000024            02046                 count = count + 1
1397   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
1398   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1399   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139A   0080           02043                 movwf INDF                                              ;Save to QUEUE
139B   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
139C   0000           02045                 nop                                                             ;Wait a cycle
  00000025            02046                 count = count + 1
139D   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
139E   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139F   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A0   0080           02043                 movwf INDF                                              ;Save to QUEUE
13A1   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13A2   0000           02045                 nop                                                             ;Wait a cycle
  00000026            02046                 count = count + 1
13A3   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13A4   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A5   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A6   0080           02043                 movwf INDF                                              ;Save to QUEUE
13A7   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13A8   0000           02045                 nop                                                             ;Wait a cycle
  00000027            02046                 count = count + 1
13A9   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13AA   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AB   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AC   0080           02043                 movwf INDF                                              ;Save to QUEUE
13AD   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13AE   0000           02045                 nop                                                             ;Wait a cycle
  00000028            02046                 count = count + 1
13AF   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13B0   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B1   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B2   0080           02043                 movwf INDF                                              ;Save to QUEUE
13B3   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13B4   0000           02045                 nop                                                             ;Wait a cycle
  00000029            02046                 count = count + 1
13B5   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13B6   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B7   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B8   0080           02043                 movwf INDF                                              ;Save to QUEUE
13B9   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13BA   0000           02045                 nop                                                             ;Wait a cycle
  0000002A            02046                 count = count + 1
13BB   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13BC   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BD   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BE   0080           02043                 movwf INDF                                              ;Save to QUEUE
13BF   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13C0   0000           02045                 nop                                                             ;Wait a cycle
  0000002B            02046                 count = count + 1
13C1   0808           02040                 movf ADC_DATAPORT, W                    ;Sample
13C2   1409           02041                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C3   1009           02042                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C4   0080           02043                 movwf INDF                                              ;Save to QUEUE
13C5   0A84           02044                 incf FSR, F                                             ;Increment QUEUE pointer
13C6   0000           02045                 nop                                                             ;Wait a cycle
  0000002C            02046                 count = count + 1
                      02047         endw
13C7                  02048 Sample833kEnd
                      02049         while count < BUFFERSIZE
13C7   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13C8   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C9   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CA   0080           02053                 movwf INDF                                              ;Save to QUEUE
13CB   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13CC   0000           02055                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002D            02056                 count = count + 1
13CD   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13CE   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CF   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D0   0080           02053                 movwf INDF                                              ;Save to QUEUE
13D1   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13D2   0000           02055                 nop                                                             ;Wait a cycle
  0000002E            02056                 count = count + 1
13D3   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13D4   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D5   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D6   0080           02053                 movwf INDF                                              ;Save to QUEUE
13D7   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13D8   0000           02055                 nop                                                             ;Wait a cycle
  0000002F            02056                 count = count + 1
13D9   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13DA   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DB   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DC   0080           02053                 movwf INDF                                              ;Save to QUEUE
13DD   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13DE   0000           02055                 nop                                                             ;Wait a cycle
  00000030            02056                 count = count + 1
13DF   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13E0   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E1   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E2   0080           02053                 movwf INDF                                              ;Save to QUEUE
13E3   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13E4   0000           02055                 nop                                                             ;Wait a cycle
  00000031            02056                 count = count + 1
13E5   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13E6   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E7   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13E8   0080           02053                 movwf INDF                                              ;Save to QUEUE
13E9   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13EA   0000           02055                 nop                                                             ;Wait a cycle
  00000032            02056                 count = count + 1
13EB   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13EC   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13ED   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EE   0080           02053                 movwf INDF                                              ;Save to QUEUE
13EF   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13F0   0000           02055                 nop                                                             ;Wait a cycle
  00000033            02056                 count = count + 1
13F1   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13F2   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F3   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F4   0080           02053                 movwf INDF                                              ;Save to QUEUE
13F5   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13F6   0000           02055                 nop                                                             ;Wait a cycle
  00000034            02056                 count = count + 1
13F7   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13F8   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F9   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13FA   0080           02053                 movwf INDF                                              ;Save to QUEUE
13FB   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
13FC   0000           02055                 nop                                                             ;Wait a cycle
  00000035            02056                 count = count + 1
13FD   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
13FE   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FF   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1400   0080           02053                 movwf INDF                                              ;Save to QUEUE
1401   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1402   0000           02055                 nop                                                             ;Wait a cycle
  00000036            02056                 count = count + 1
1403   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1404   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1405   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1406   0080           02053                 movwf INDF                                              ;Save to QUEUE
1407   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1408   0000           02055                 nop                                                             ;Wait a cycle
  00000037            02056                 count = count + 1
1409   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
140A   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140B   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140C   0080           02053                 movwf INDF                                              ;Save to QUEUE
140D   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
140E   0000           02055                 nop                                                             ;Wait a cycle
  00000038            02056                 count = count + 1
140F   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1410   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1411   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1412   0080           02053                 movwf INDF                                              ;Save to QUEUE
1413   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1414   0000           02055                 nop                                                             ;Wait a cycle
  00000039            02056                 count = count + 1
1415   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1416   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1417   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1418   0080           02053                 movwf INDF                                              ;Save to QUEUE
1419   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
141A   0000           02055                 nop                                                             ;Wait a cycle
  0000003A            02056                 count = count + 1
141B   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
141C   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141D   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141E   0080           02053                 movwf INDF                                              ;Save to QUEUE
141F   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1420   0000           02055                 nop                                                             ;Wait a cycle
  0000003B            02056                 count = count + 1
1421   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1422   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1423   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1424   0080           02053                 movwf INDF                                              ;Save to QUEUE
1425   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1426   0000           02055                 nop                                                             ;Wait a cycle
  0000003C            02056                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1427   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1428   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1429   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142A   0080           02053                 movwf INDF                                              ;Save to QUEUE
142B   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
142C   0000           02055                 nop                                                             ;Wait a cycle
  0000003D            02056                 count = count + 1
142D   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
142E   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142F   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1430   0080           02053                 movwf INDF                                              ;Save to QUEUE
1431   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1432   0000           02055                 nop                                                             ;Wait a cycle
  0000003E            02056                 count = count + 1
1433   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
1434   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1435   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1436   0080           02053                 movwf INDF                                              ;Save to QUEUE
1437   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
1438   0000           02055                 nop                                                             ;Wait a cycle
  0000003F            02056                 count = count + 1
1439   0808           02050                 movf ADC_DATAPORT, W                    ;Sample
143A   1409           02051                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143B   1009           02052                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143C   0080           02053                 movwf INDF                                              ;Save to QUEUE
143D   0A84           02054                 incf FSR, F                                             ;Increment QUEUE pointer
143E   0000           02055                 nop                                                             ;Wait a cycle
  00000040            02056                 count = count + 1
                      02057         endw
143F   0808           02058         movf ADC_DATAPORT, W
1440   1409           02059         bsf ADC_CONTROLPORT, RDD
1441   1009           02060         bcf ADC_CONTROLPORT, RDD
1442   0080           02061         movwf INDF
1443   1384           02062         bcf FSR, 7                                                      ;goto bank 3
1444   0000           02063         nop                                                                     ;Wait a cycle
  00000001            02064         count = 1
                      02065         while count < BUFFERSIZE
1445   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1446   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1447   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1448   0080           02069                 movwf INDF                                              ;Save to QUEUE
1449   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
144A   0000           02071                 nop                                                             ;Wait a cycle
  00000002            02072                 count = count + 1
144B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
144C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144E   0080           02069                 movwf INDF                                              ;Save to QUEUE
144F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1450   0000           02071                 nop                                                             ;Wait a cycle
  00000003            02072                 count = count + 1
1451   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1452   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1453   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1454   0080           02069                 movwf INDF                                              ;Save to QUEUE
1455   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1456   0000           02071                 nop                                                             ;Wait a cycle
  00000004            02072                 count = count + 1
1457   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1458   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1459   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145A   0080           02069                 movwf INDF                                              ;Save to QUEUE
145B   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
145C   0000           02071                 nop                                                             ;Wait a cycle
  00000005            02072                 count = count + 1
145D   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
145E   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145F   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1460   0080           02069                 movwf INDF                                              ;Save to QUEUE
1461   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1462   0000           02071                 nop                                                             ;Wait a cycle
  00000006            02072                 count = count + 1
1463   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1464   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1465   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1466   0080           02069                 movwf INDF                                              ;Save to QUEUE
1467   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1468   0000           02071                 nop                                                             ;Wait a cycle
  00000007            02072                 count = count + 1
1469   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
146A   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146B   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146C   0080           02069                 movwf INDF                                              ;Save to QUEUE
146D   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
146E   0000           02071                 nop                                                             ;Wait a cycle
  00000008            02072                 count = count + 1
146F   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1470   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1471   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1472   0080           02069                 movwf INDF                                              ;Save to QUEUE
1473   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1474   0000           02071                 nop                                                             ;Wait a cycle
  00000009            02072                 count = count + 1
1475   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1476   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1477   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1478   0080           02069                 movwf INDF                                              ;Save to QUEUE
1479   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
147A   0000           02071                 nop                                                             ;Wait a cycle
  0000000A            02072                 count = count + 1
147B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
147C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147E   0080           02069                 movwf INDF                                              ;Save to QUEUE
147F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1480   0000           02071                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            02072                 count = count + 1
1481   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1482   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1483   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1484   0080           02069                 movwf INDF                                              ;Save to QUEUE
1485   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1486   0000           02071                 nop                                                             ;Wait a cycle
  0000000C            02072                 count = count + 1
1487   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1488   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1489   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148A   0080           02069                 movwf INDF                                              ;Save to QUEUE
148B   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
148C   0000           02071                 nop                                                             ;Wait a cycle
  0000000D            02072                 count = count + 1
148D   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
148E   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148F   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1490   0080           02069                 movwf INDF                                              ;Save to QUEUE
1491   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1492   0000           02071                 nop                                                             ;Wait a cycle
  0000000E            02072                 count = count + 1
1493   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1494   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1495   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1496   0080           02069                 movwf INDF                                              ;Save to QUEUE
1497   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1498   0000           02071                 nop                                                             ;Wait a cycle
  0000000F            02072                 count = count + 1
1499   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
149A   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149B   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149C   0080           02069                 movwf INDF                                              ;Save to QUEUE
149D   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
149E   0000           02071                 nop                                                             ;Wait a cycle
  00000010            02072                 count = count + 1
149F   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14A0   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A1   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A2   0080           02069                 movwf INDF                                              ;Save to QUEUE
14A3   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14A4   0000           02071                 nop                                                             ;Wait a cycle
  00000011            02072                 count = count + 1
14A5   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14A6   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A7   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A8   0080           02069                 movwf INDF                                              ;Save to QUEUE
14A9   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14AA   0000           02071                 nop                                                             ;Wait a cycle
  00000012            02072                 count = count + 1
14AB   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14AC   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14AD   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14AE   0080           02069                 movwf INDF                                              ;Save to QUEUE
14AF   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14B0   0000           02071                 nop                                                             ;Wait a cycle
  00000013            02072                 count = count + 1
14B1   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14B2   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B3   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14B4   0080           02069                 movwf INDF                                              ;Save to QUEUE
14B5   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14B6   0000           02071                 nop                                                             ;Wait a cycle
  00000014            02072                 count = count + 1
14B7   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14B8   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14B9   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14BA   0080           02069                 movwf INDF                                              ;Save to QUEUE
14BB   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14BC   0000           02071                 nop                                                             ;Wait a cycle
  00000015            02072                 count = count + 1
14BD   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14BE   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14BF   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C0   0080           02069                 movwf INDF                                              ;Save to QUEUE
14C1   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14C2   0000           02071                 nop                                                             ;Wait a cycle
  00000016            02072                 count = count + 1
14C3   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14C4   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14C5   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14C6   0080           02069                 movwf INDF                                              ;Save to QUEUE
14C7   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14C8   0000           02071                 nop                                                             ;Wait a cycle
  00000017            02072                 count = count + 1
14C9   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14CA   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14CB   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14CC   0080           02069                 movwf INDF                                              ;Save to QUEUE
14CD   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14CE   0000           02071                 nop                                                             ;Wait a cycle
  00000018            02072                 count = count + 1
14CF   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14D0   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D1   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D2   0080           02069                 movwf INDF                                              ;Save to QUEUE
14D3   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14D4   0000           02071                 nop                                                             ;Wait a cycle
  00000019            02072                 count = count + 1
14D5   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14D6   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14D7   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14D8   0080           02069                 movwf INDF                                              ;Save to QUEUE
14D9   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14DA   0000           02071                 nop                                                             ;Wait a cycle
  0000001A            02072                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14DB   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14DC   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14DD   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14DE   0080           02069                 movwf INDF                                              ;Save to QUEUE
14DF   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14E0   0000           02071                 nop                                                             ;Wait a cycle
  0000001B            02072                 count = count + 1
14E1   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14E2   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E3   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14E4   0080           02069                 movwf INDF                                              ;Save to QUEUE
14E5   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14E6   0000           02071                 nop                                                             ;Wait a cycle
  0000001C            02072                 count = count + 1
14E7   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14E8   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14E9   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14EA   0080           02069                 movwf INDF                                              ;Save to QUEUE
14EB   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14EC   0000           02071                 nop                                                             ;Wait a cycle
  0000001D            02072                 count = count + 1
14ED   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14EE   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14EF   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F0   0080           02069                 movwf INDF                                              ;Save to QUEUE
14F1   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14F2   0000           02071                 nop                                                             ;Wait a cycle
  0000001E            02072                 count = count + 1
14F3   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14F4   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14F5   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14F6   0080           02069                 movwf INDF                                              ;Save to QUEUE
14F7   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14F8   0000           02071                 nop                                                             ;Wait a cycle
  0000001F            02072                 count = count + 1
14F9   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
14FA   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14FB   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14FC   0080           02069                 movwf INDF                                              ;Save to QUEUE
14FD   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
14FE   0000           02071                 nop                                                             ;Wait a cycle
  00000020            02072                 count = count + 1
14FF   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1500   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1501   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1502   0080           02069                 movwf INDF                                              ;Save to QUEUE
1503   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1504   0000           02071                 nop                                                             ;Wait a cycle
  00000021            02072                 count = count + 1
1505   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1506   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1507   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1508   0080           02069                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1509   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
150A   0000           02071                 nop                                                             ;Wait a cycle
  00000022            02072                 count = count + 1
150B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
150C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
150D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
150E   0080           02069                 movwf INDF                                              ;Save to QUEUE
150F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1510   0000           02071                 nop                                                             ;Wait a cycle
  00000023            02072                 count = count + 1
1511   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1512   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1513   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1514   0080           02069                 movwf INDF                                              ;Save to QUEUE
1515   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1516   0000           02071                 nop                                                             ;Wait a cycle
  00000024            02072                 count = count + 1
1517   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1518   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1519   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
151A   0080           02069                 movwf INDF                                              ;Save to QUEUE
151B   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
151C   0000           02071                 nop                                                             ;Wait a cycle
  00000025            02072                 count = count + 1
151D   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
151E   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
151F   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1520   0080           02069                 movwf INDF                                              ;Save to QUEUE
1521   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1522   0000           02071                 nop                                                             ;Wait a cycle
  00000026            02072                 count = count + 1
1523   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1524   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1525   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1526   0080           02069                 movwf INDF                                              ;Save to QUEUE
1527   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1528   0000           02071                 nop                                                             ;Wait a cycle
  00000027            02072                 count = count + 1
1529   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
152A   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
152B   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
152C   0080           02069                 movwf INDF                                              ;Save to QUEUE
152D   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
152E   0000           02071                 nop                                                             ;Wait a cycle
  00000028            02072                 count = count + 1
152F   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1530   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1531   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1532   0080           02069                 movwf INDF                                              ;Save to QUEUE
1533   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1534   0000           02071                 nop                                                             ;Wait a cycle
  00000029            02072                 count = count + 1
1535   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1536   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1537   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1538   0080           02069                 movwf INDF                                              ;Save to QUEUE
1539   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
153A   0000           02071                 nop                                                             ;Wait a cycle
  0000002A            02072                 count = count + 1
153B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
153C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
153D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
153E   0080           02069                 movwf INDF                                              ;Save to QUEUE
153F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1540   0000           02071                 nop                                                             ;Wait a cycle
  0000002B            02072                 count = count + 1
1541   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1542   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1543   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1544   0080           02069                 movwf INDF                                              ;Save to QUEUE
1545   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1546   0000           02071                 nop                                                             ;Wait a cycle
  0000002C            02072                 count = count + 1
1547   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1548   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1549   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
154A   0080           02069                 movwf INDF                                              ;Save to QUEUE
154B   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
154C   0000           02071                 nop                                                             ;Wait a cycle
  0000002D            02072                 count = count + 1
154D   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
154E   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
154F   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1550   0080           02069                 movwf INDF                                              ;Save to QUEUE
1551   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1552   0000           02071                 nop                                                             ;Wait a cycle
  0000002E            02072                 count = count + 1
1553   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1554   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1555   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1556   0080           02069                 movwf INDF                                              ;Save to QUEUE
1557   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1558   0000           02071                 nop                                                             ;Wait a cycle
  0000002F            02072                 count = count + 1
1559   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
155A   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
155B   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
155C   0080           02069                 movwf INDF                                              ;Save to QUEUE
155D   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
155E   0000           02071                 nop                                                             ;Wait a cycle
  00000030            02072                 count = count + 1
155F   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1560   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1561   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1562   0080           02069                 movwf INDF                                              ;Save to QUEUE
1563   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1564   0000           02071                 nop                                                             ;Wait a cycle
  00000031            02072                 count = count + 1
1565   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1566   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1567   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1568   0080           02069                 movwf INDF                                              ;Save to QUEUE
1569   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
156A   0000           02071                 nop                                                             ;Wait a cycle
  00000032            02072                 count = count + 1
156B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
156C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
156D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
156E   0080           02069                 movwf INDF                                              ;Save to QUEUE
156F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1570   0000           02071                 nop                                                             ;Wait a cycle
  00000033            02072                 count = count + 1
1571   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1572   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1573   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1574   0080           02069                 movwf INDF                                              ;Save to QUEUE
1575   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1576   0000           02071                 nop                                                             ;Wait a cycle
  00000034            02072                 count = count + 1
1577   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1578   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1579   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
157A   0080           02069                 movwf INDF                                              ;Save to QUEUE
157B   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
157C   0000           02071                 nop                                                             ;Wait a cycle
  00000035            02072                 count = count + 1
157D   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
157E   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
157F   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1580   0080           02069                 movwf INDF                                              ;Save to QUEUE
1581   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1582   0000           02071                 nop                                                             ;Wait a cycle
  00000036            02072                 count = count + 1
1583   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1584   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1585   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1586   0080           02069                 movwf INDF                                              ;Save to QUEUE
1587   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1588   0000           02071                 nop                                                             ;Wait a cycle
  00000037            02072                 count = count + 1
1589   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
158A   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
158B   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
158C   0080           02069                 movwf INDF                                              ;Save to QUEUE
158D   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
158E   0000           02071                 nop                                                             ;Wait a cycle
  00000038            02072                 count = count + 1
158F   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1590   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1591   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1592   0080           02069                 movwf INDF                                              ;Save to QUEUE
1593   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
1594   0000           02071                 nop                                                             ;Wait a cycle
  00000039            02072                 count = count + 1
1595   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
1596   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1597   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1598   0080           02069                 movwf INDF                                              ;Save to QUEUE
1599   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
159A   0000           02071                 nop                                                             ;Wait a cycle
  0000003A            02072                 count = count + 1
159B   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
159C   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
159D   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
159E   0080           02069                 movwf INDF                                              ;Save to QUEUE
159F   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15A0   0000           02071                 nop                                                             ;Wait a cycle
  0000003B            02072                 count = count + 1
15A1   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
15A2   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A3   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15A4   0080           02069                 movwf INDF                                              ;Save to QUEUE
15A5   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15A6   0000           02071                 nop                                                             ;Wait a cycle
  0000003C            02072                 count = count + 1
15A7   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
15A8   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15A9   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15AA   0080           02069                 movwf INDF                                              ;Save to QUEUE
15AB   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15AC   0000           02071                 nop                                                             ;Wait a cycle
  0000003D            02072                 count = count + 1
15AD   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
15AE   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15AF   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B0   0080           02069                 movwf INDF                                              ;Save to QUEUE
15B1   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15B2   0000           02071                 nop                                                             ;Wait a cycle
  0000003E            02072                 count = count + 1
15B3   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
15B4   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15B5   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15B6   0080           02069                 movwf INDF                                              ;Save to QUEUE
15B7   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15B8   0000           02071                 nop                                                             ;Wait a cycle
  0000003F            02072                 count = count + 1
15B9   0808           02066                 movf ADC_DATAPORT, W                    ;Sample
15BA   1409           02067                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
15BB   1009           02068                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
15BC   0080           02069                 movwf INDF                                              ;Save to QUEUE
15BD   0384           02070                 decf FSR, F                                             ;Increment QUEUE pointer
15BE   0000           02071                 nop                                                             ;Wait a cycle
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            02072                 count = count + 1
                      02073         endw
15BF   0808           02074         movf ADC_DATAPORT, W                            ;Last sample
15C0   1409           02075         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15C1   118A           02076         bcf PCLATH, 3                                           ;insure correct program memory page
15C2   120A           02077         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
15C3   2916           02078         goto ADCShutdown
                      02079 
                      02080 ;Repetitive sample
                      02081 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      02082 ;-----------------------------------------------------------------------------
15C4                  02083 SampleRep5M
15C4   3015           02084         movlw high SampleRep5MPickSt
15C5   008A           02085         movwf PCLATH
15C6   0877           02086         movf gbl_modetempb, w
15C7   0782           02087         addwf PCL, f
15C8                  02088 SampleRep5MPickSt
                      02089         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
15C8   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15C9   118A               M                 bcf PCLATH, 3
                          M         endif
15CA   2DD7               M         goto SampleRep5MStep1
                      02090         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
15CB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15CC   118A               M                 bcf PCLATH, 3
                          M         endif
15CD   2EE7               M         goto SampleRep5MStep2
                      02091         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
15CE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15CF   118A               M                 bcf PCLATH, 3
                          M         endif
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15D0   2FEA               M         goto SampleRep5MStep3
                      02092         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
15D1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
15D2   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15D3   28ED               M         goto SampleRep5MStep4
                      02093         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
15D4   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
15D5   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15D6   29F1               M         goto SampleRep5MStep5
15D7                  02094 SampleRep5MPickEn
15D7                  02095 SampleRep5MStep1
15D7   1009           02096         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02097         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
15D8   3020               M     movlw BUFFERMIN
15D9   0084               M     movwf FSR
15DA   0000           02098         nop
  0000                02099         local count
  00000001            02100         count = 1
                      02101         while count < D'52'
15DB   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15DC   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15DD   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15DE   0080           02105                 movwf INDF                                              ;Save to QUEUE
15DF   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02107                 count = count + 1
15E0   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E1   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E2   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15E3   0080           02105                 movwf INDF                                              ;Save to QUEUE
15E4   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02107                 count = count + 1
15E5   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E6   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E7   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15E8   0080           02105                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15E9   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02107                 count = count + 1
15EA   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15EB   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EC   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15ED   0080           02105                 movwf INDF                                              ;Save to QUEUE
15EE   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02107                 count = count + 1
15EF   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F0   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F1   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15F2   0080           02105                 movwf INDF                                              ;Save to QUEUE
15F3   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02107                 count = count + 1
15F4   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F5   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F6   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15F7   0080           02105                 movwf INDF                                              ;Save to QUEUE
15F8   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02107                 count = count + 1
15F9   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FA   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15FB   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
15FC   0080           02105                 movwf INDF                                              ;Save to QUEUE
15FD   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02107                 count = count + 1
15FE   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FF   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1600   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1601   0080           02105                 movwf INDF                                              ;Save to QUEUE
1602   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02107                 count = count + 1
1603   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1604   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1605   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1606   0080           02105                 movwf INDF                                              ;Save to QUEUE
1607   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02107                 count = count + 1
1608   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1609   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160A   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
160B   0080           02105                 movwf INDF                                              ;Save to QUEUE
160C   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02107                 count = count + 1
160D   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
160E   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
160F   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1610   0080           02105                 movwf INDF                                              ;Save to QUEUE
1611   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02107                 count = count + 1
1612   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1613   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1614   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1615   0080           02105                 movwf INDF                                              ;Save to QUEUE
1616   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02107                 count = count + 1
1617   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1618   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1619   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
161A   0080           02105                 movwf INDF                                              ;Save to QUEUE
161B   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02107                 count = count + 1
161C   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
161D   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
161E   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
161F   0080           02105                 movwf INDF                                              ;Save to QUEUE
1620   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02107                 count = count + 1
1621   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1622   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1623   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1624   0080           02105                 movwf INDF                                              ;Save to QUEUE
1625   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02107                 count = count + 1
1626   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1627   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1628   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1629   0080           02105                 movwf INDF                                              ;Save to QUEUE
162A   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02107                 count = count + 1
162B   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
162C   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
162D   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
162E   0080           02105                 movwf INDF                                              ;Save to QUEUE
162F   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02107                 count = count + 1
1630   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1631   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1632   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1633   0080           02105                 movwf INDF                                              ;Save to QUEUE
1634   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02107                 count = count + 1
1635   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1636   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1637   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1638   0080           02105                 movwf INDF                                              ;Save to QUEUE
1639   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02107                 count = count + 1
163A   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
163B   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
163C   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
163D   0080           02105                 movwf INDF                                              ;Save to QUEUE
163E   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02107                 count = count + 1
163F   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1640   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1641   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1642   0080           02105                 movwf INDF                                              ;Save to QUEUE
1643   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02107                 count = count + 1
1644   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1645   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1646   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1647   0080           02105                 movwf INDF                                              ;Save to QUEUE
1648   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02107                 count = count + 1
1649   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164A   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
164B   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
164C   0080           02105                 movwf INDF                                              ;Save to QUEUE
164D   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02107                 count = count + 1
164E   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
164F   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1650   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1651   0080           02105                 movwf INDF                                              ;Save to QUEUE
1652   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02107                 count = count + 1
1653   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1654   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1655   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1656   0080           02105                 movwf INDF                                              ;Save to QUEUE
1657   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02107                 count = count + 1
1658   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1659   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165A   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
165B   0080           02105                 movwf INDF                                              ;Save to QUEUE
165C   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02107                 count = count + 1
165D   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
165E   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
165F   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1660   0080           02105                 movwf INDF                                              ;Save to QUEUE
1661   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02107                 count = count + 1
1662   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1663   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1664   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1665   0080           02105                 movwf INDF                                              ;Save to QUEUE
1666   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02107                 count = count + 1
1667   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1668   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1669   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
166A   0080           02105                 movwf INDF                                              ;Save to QUEUE
166B   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02107                 count = count + 1
166C   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

166D   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
166E   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
166F   0080           02105                 movwf INDF                                              ;Save to QUEUE
1670   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02107                 count = count + 1
1671   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1672   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1673   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1674   0080           02105                 movwf INDF                                              ;Save to QUEUE
1675   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            02107                 count = count + 1
1676   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1677   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1678   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1679   0080           02105                 movwf INDF                                              ;Save to QUEUE
167A   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02107                 count = count + 1
167B   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
167C   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
167D   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
167E   0080           02105                 movwf INDF                                              ;Save to QUEUE
167F   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02107                 count = count + 1
1680   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1681   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1682   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1683   0080           02105                 movwf INDF                                              ;Save to QUEUE
1684   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02107                 count = count + 1
1685   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1686   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1687   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1688   0080           02105                 movwf INDF                                              ;Save to QUEUE
1689   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02107                 count = count + 1
168A   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
168B   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
168C   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
168D   0080           02105                 movwf INDF                                              ;Save to QUEUE
168E   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02107                 count = count + 1
168F   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1690   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1691   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1692   0080           02105                 movwf INDF                                              ;Save to QUEUE
1693   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02107                 count = count + 1
1694   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1695   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1696   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
1697   0080           02105                 movwf INDF                                              ;Save to QUEUE
1698   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            02107                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1699   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169A   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
169B   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
169C   0080           02105                 movwf INDF                                              ;Save to QUEUE
169D   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            02107                 count = count + 1
169E   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
169F   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A0   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16A1   0080           02105                 movwf INDF                                              ;Save to QUEUE
16A2   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            02107                 count = count + 1
16A3   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A4   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16A5   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16A6   0080           02105                 movwf INDF                                              ;Save to QUEUE
16A7   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            02107                 count = count + 1
16A8   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16A9   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AA   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16AB   0080           02105                 movwf INDF                                              ;Save to QUEUE
16AC   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            02107                 count = count + 1
16AD   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16AE   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16AF   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16B0   0080           02105                 movwf INDF                                              ;Save to QUEUE
16B1   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            02107                 count = count + 1
16B2   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B3   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B4   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16B5   0080           02105                 movwf INDF                                              ;Save to QUEUE
16B6   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            02107                 count = count + 1
16B7   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16B8   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16B9   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16BA   0080           02105                 movwf INDF                                              ;Save to QUEUE
16BB   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            02107                 count = count + 1
16BC   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16BD   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16BE   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16BF   0080           02105                 movwf INDF                                              ;Save to QUEUE
16C0   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            02107                 count = count + 1
16C1   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C2   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C3   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16C4   0080           02105                 movwf INDF                                              ;Save to QUEUE
16C5   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            02107                 count = count + 1
16C6   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16C7   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16C8   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16C9   0080           02105                 movwf INDF                                              ;Save to QUEUE
16CA   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            02107                 count = count + 1
16CB   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16CC   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16CD   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16CE   0080           02105                 movwf INDF                                              ;Save to QUEUE
16CF   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            02107                 count = count + 1
16D0   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D1   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D2   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16D3   0080           02105                 movwf INDF                                              ;Save to QUEUE
16D4   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            02107                 count = count + 1
16D5   1409           02102                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16D6   1009           02103                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16D7   0808           02104                 movf ADC_DATAPORT, W                    ;Save Sample
16D8   0080           02105                 movwf INDF                                              ;Save to QUEUE
16D9   0A84           02106                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            02107                 count = count + 1
                      02108         endw
16DA   1409           02109         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16DB   0808           02110         movf ADC_DATAPORT, W                            ;Sample
16DC                  02111 SampleRep5MEndA
16DC   0080           02112         movwf INDF
16DD   0A84           02113         incf FSR, F
16DE   2EE1           02114         goto SampleRep5MEndB
16DF                  02115 SampleRep5MEndC
16DF   0080           02116         movwf INDF
16E0   0384           02117         decf FSR, F
16E1                  02118 SampleRep5MEndB
                      02119         ADDLF D'3', gbl_modetempb, f
16E1   3003               M     movlw D'3'
16E2   07F7               M     addwf gbl_modetempb, f
16E3   1486           02120         bsf ADC_PORT, CS
                      02121         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
16E4   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16E5   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
16E6   287B               M         goto MainB
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02122         
16E7                  02123 SampleRep5MStep2
16E7   0000           02124         nop
16E8   1009           02125         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
16E9   2EEA           02126         goto $ + 1
16EA   0000           02127         nop
  0000                02128         local count
  00000001            02129         count = 1
                      02130         while count < D'12'
16EB   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16EC   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16ED   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
16EE   0080           02134                 movwf INDF                                              ;Save to QUEUE
16EF   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02136                 count = count + 1
16F0   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F1   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F2   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
16F3   0080           02134                 movwf INDF                                              ;Save to QUEUE
16F4   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02136                 count = count + 1
16F5   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16F6   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16F7   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
16F8   0080           02134                 movwf INDF                                              ;Save to QUEUE
16F9   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02136                 count = count + 1
16FA   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
16FB   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
16FC   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
16FD   0080           02134                 movwf INDF                                              ;Save to QUEUE
16FE   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02136                 count = count + 1
16FF   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1700   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1701   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
1702   0080           02134                 movwf INDF                                              ;Save to QUEUE
1703   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02136                 count = count + 1
1704   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1705   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1706   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
1707   0080           02134                 movwf INDF                                              ;Save to QUEUE
1708   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02136                 count = count + 1
1709   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170A   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
170B   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
170C   0080           02134                 movwf INDF                                              ;Save to QUEUE
170D   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02136                 count = count + 1
170E   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
170F   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1710   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
1711   0080           02134                 movwf INDF                                              ;Save to QUEUE
1712   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02136                 count = count + 1
1713   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1714   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1715   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
1716   0080           02134                 movwf INDF                                              ;Save to QUEUE
1717   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02136                 count = count + 1
1718   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1719   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171A   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
171B   0080           02134                 movwf INDF                                              ;Save to QUEUE
171C   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02136                 count = count + 1
171D   1409           02131                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
171E   1009           02132                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
171F   0808           02133                 movf ADC_DATAPORT, W                    ;Save Sample
1720   0080           02134                 movwf INDF                                              ;Save to QUEUE
1721   0A84           02135                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02136                 count = count + 1
                      02137         endw
1722   1409           02138         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1723   1009           02139         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1724   0808           02140         movf ADC_DATAPORT, W                            ;Sample
1725   0080           02141         movwf INDF
1726   1784           02142         bsf FSR, 7                                                      ;goto bank 2
  00000001            02143         count = 1
                      02144         while count < D'39'
1727   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1728   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1729   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
172A   0080           02148                 movwf INDF                                              ;Save to QUEUE
172B   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02150                 count = count + 1
172C   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
172D   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
172E   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
172F   0080           02148                 movwf INDF                                              ;Save to QUEUE
1730   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02150                 count = count + 1
1731   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1732   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1733   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1734   0080           02148                 movwf INDF                                              ;Save to QUEUE
1735   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02150                 count = count + 1
1736   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1737   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1738   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1739   0080           02148                 movwf INDF                                              ;Save to QUEUE
173A   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000005            02150                 count = count + 1
173B   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173C   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
173D   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
173E   0080           02148                 movwf INDF                                              ;Save to QUEUE
173F   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02150                 count = count + 1
1740   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1741   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1742   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1743   0080           02148                 movwf INDF                                              ;Save to QUEUE
1744   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02150                 count = count + 1
1745   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1746   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1747   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1748   0080           02148                 movwf INDF                                              ;Save to QUEUE
1749   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02150                 count = count + 1
174A   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174B   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174C   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
174D   0080           02148                 movwf INDF                                              ;Save to QUEUE
174E   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02150                 count = count + 1
174F   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1750   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1751   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1752   0080           02148                 movwf INDF                                              ;Save to QUEUE
1753   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02150                 count = count + 1
1754   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1755   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1756   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1757   0080           02148                 movwf INDF                                              ;Save to QUEUE
1758   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02150                 count = count + 1
1759   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175A   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175B   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
175C   0080           02148                 movwf INDF                                              ;Save to QUEUE
175D   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02150                 count = count + 1
175E   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175F   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1760   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1761   0080           02148                 movwf INDF                                              ;Save to QUEUE
1762   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02150                 count = count + 1
1763   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1764   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1765   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1766   0080           02148                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1767   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02150                 count = count + 1
1768   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1769   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176A   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
176B   0080           02148                 movwf INDF                                              ;Save to QUEUE
176C   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02150                 count = count + 1
176D   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176E   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176F   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1770   0080           02148                 movwf INDF                                              ;Save to QUEUE
1771   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            02150                 count = count + 1
1772   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1773   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1774   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1775   0080           02148                 movwf INDF                                              ;Save to QUEUE
1776   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02150                 count = count + 1
1777   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1778   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1779   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
177A   0080           02148                 movwf INDF                                              ;Save to QUEUE
177B   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02150                 count = count + 1
177C   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177D   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177E   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
177F   0080           02148                 movwf INDF                                              ;Save to QUEUE
1780   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02150                 count = count + 1
1781   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1782   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1783   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1784   0080           02148                 movwf INDF                                              ;Save to QUEUE
1785   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02150                 count = count + 1
1786   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1787   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1788   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1789   0080           02148                 movwf INDF                                              ;Save to QUEUE
178A   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02150                 count = count + 1
178B   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178C   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178D   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
178E   0080           02148                 movwf INDF                                              ;Save to QUEUE
178F   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02150                 count = count + 1
1790   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1791   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1792   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1793   0080           02148                 movwf INDF                                              ;Save to QUEUE
1794   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02150                 count = count + 1
1795   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1796   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1797   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
1798   0080           02148                 movwf INDF                                              ;Save to QUEUE
1799   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02150                 count = count + 1
179A   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179B   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179C   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
179D   0080           02148                 movwf INDF                                              ;Save to QUEUE
179E   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02150                 count = count + 1
179F   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A0   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A1   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17A2   0080           02148                 movwf INDF                                              ;Save to QUEUE
17A3   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02150                 count = count + 1
17A4   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A5   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A6   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17A7   0080           02148                 movwf INDF                                              ;Save to QUEUE
17A8   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02150                 count = count + 1
17A9   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AA   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AB   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17AC   0080           02148                 movwf INDF                                              ;Save to QUEUE
17AD   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02150                 count = count + 1
17AE   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AF   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B0   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17B1   0080           02148                 movwf INDF                                              ;Save to QUEUE
17B2   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02150                 count = count + 1
17B3   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B4   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B5   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17B6   0080           02148                 movwf INDF                                              ;Save to QUEUE
17B7   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02150                 count = count + 1
17B8   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B9   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BA   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17BB   0080           02148                 movwf INDF                                              ;Save to QUEUE
17BC   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02150                 count = count + 1
17BD   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BE   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17BF   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17C0   0080           02148                 movwf INDF                                              ;Save to QUEUE
17C1   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            02150                 count = count + 1
17C2   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C3   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C4   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17C5   0080           02148                 movwf INDF                                              ;Save to QUEUE
17C6   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            02150                 count = count + 1
17C7   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C8   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C9   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17CA   0080           02148                 movwf INDF                                              ;Save to QUEUE
17CB   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            02150                 count = count + 1
17CC   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CD   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CE   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17CF   0080           02148                 movwf INDF                                              ;Save to QUEUE
17D0   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            02150                 count = count + 1
17D1   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D2   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D3   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17D4   0080           02148                 movwf INDF                                              ;Save to QUEUE
17D5   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            02150                 count = count + 1
17D6   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17D7   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17D8   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17D9   0080           02148                 movwf INDF                                              ;Save to QUEUE
17DA   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            02150                 count = count + 1
17DB   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DC   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17DD   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17DE   0080           02148                 movwf INDF                                              ;Save to QUEUE
17DF   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            02150                 count = count + 1
17E0   1409           02145                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E1   1009           02146                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E2   0808           02147                 movf ADC_DATAPORT, W                    ;Sample
17E3   0080           02148                 movwf INDF                                              ;Save to QUEUE
17E4   0384           02149                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            02150                 count = count + 1
                      02151         endw
17E5   1409           02152         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
17E6   0808           02153         movf ADC_DATAPORT, W                            ;Sample
                      02154         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
17E7   160A               M                 bsf PCLATH, 4
                          M         else
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17E8   118A               M                 bcf PCLATH, 3
                          M         endif
17E9   2EDF               M         goto SampleRep5MEndC
                      02155         
17EA                  02156 SampleRep5MStep3
17EA   2FEB           02157         goto $ + 1
17EB   1009           02158         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17EC   2FED           02159         goto $ + 1
17ED   0000           02160         nop
  0000                02161         local count
  00000001            02162         count = 1
                      02163         while count < D'25'
17EE   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EF   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F0   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
17F1   0080           02167                 movwf INDF                                              ;Save to QUEUE
17F2   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02169                 count = count + 1
17F3   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F4   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F5   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
17F6   0080           02167                 movwf INDF                                              ;Save to QUEUE
17F7   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02169                 count = count + 1
17F8   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F9   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FA   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
17FB   0080           02167                 movwf INDF                                              ;Save to QUEUE
17FC   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02169                 count = count + 1
17FD   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FE   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FF   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1800   0080           02167                 movwf INDF                                              ;Save to QUEUE
1801   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02169                 count = count + 1
1802   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1803   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1804   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1805   0080           02167                 movwf INDF                                              ;Save to QUEUE
1806   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02169                 count = count + 1
1807   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1808   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1809   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
180A   0080           02167                 movwf INDF                                              ;Save to QUEUE
180B   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02169                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

180C   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180D   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180E   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
180F   0080           02167                 movwf INDF                                              ;Save to QUEUE
1810   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02169                 count = count + 1
1811   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1812   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1813   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1814   0080           02167                 movwf INDF                                              ;Save to QUEUE
1815   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02169                 count = count + 1
1816   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1817   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1818   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1819   0080           02167                 movwf INDF                                              ;Save to QUEUE
181A   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02169                 count = count + 1
181B   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181C   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181D   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
181E   0080           02167                 movwf INDF                                              ;Save to QUEUE
181F   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02169                 count = count + 1
1820   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1821   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1822   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1823   0080           02167                 movwf INDF                                              ;Save to QUEUE
1824   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02169                 count = count + 1
1825   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1826   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1827   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1828   0080           02167                 movwf INDF                                              ;Save to QUEUE
1829   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02169                 count = count + 1
182A   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182B   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182C   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
182D   0080           02167                 movwf INDF                                              ;Save to QUEUE
182E   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02169                 count = count + 1
182F   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1830   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1831   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1832   0080           02167                 movwf INDF                                              ;Save to QUEUE
1833   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02169                 count = count + 1
1834   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1835   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1836   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1837   0080           02167                 movwf INDF                                              ;Save to QUEUE
1838   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000010            02169                 count = count + 1
1839   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183A   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183B   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
183C   0080           02167                 movwf INDF                                              ;Save to QUEUE
183D   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            02169                 count = count + 1
183E   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183F   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1840   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1841   0080           02167                 movwf INDF                                              ;Save to QUEUE
1842   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            02169                 count = count + 1
1843   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1844   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1845   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1846   0080           02167                 movwf INDF                                              ;Save to QUEUE
1847   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            02169                 count = count + 1
1848   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1849   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184A   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
184B   0080           02167                 movwf INDF                                              ;Save to QUEUE
184C   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            02169                 count = count + 1
184D   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184E   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184F   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1850   0080           02167                 movwf INDF                                              ;Save to QUEUE
1851   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            02169                 count = count + 1
1852   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1853   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1854   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1855   0080           02167                 movwf INDF                                              ;Save to QUEUE
1856   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            02169                 count = count + 1
1857   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1858   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1859   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
185A   0080           02167                 movwf INDF                                              ;Save to QUEUE
185B   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            02169                 count = count + 1
185C   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185D   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185E   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
185F   0080           02167                 movwf INDF                                              ;Save to QUEUE
1860   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            02169                 count = count + 1
1861   1409           02164                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1862   1009           02165                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1863   0808           02166                 movf ADC_DATAPORT, W                    ;Sample
1864   0080           02167                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1865   0384           02168                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            02169                 count = count + 1
                      02170         endw
1866   1409           02171         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
1867   1009           02172         bcf ADC_CONTROLPORT, RDD
1868   0808           02173         movf ADC_DATAPORT, W                            ;Sample
1869   0080           02174         movwf INDF
186A   1783           02175         bsf STATUS, IRP                                         ;goto bank 4
  00000001            02176         count = 1
                      02177         while count < D'26'
186B   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186C   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186D   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
186E   0080           02181                 movwf INDF                                              ;Save to QUEUE
186F   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02183                 count = count + 1
1870   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1871   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1872   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1873   0080           02181                 movwf INDF                                              ;Save to QUEUE
1874   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02183                 count = count + 1
1875   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1876   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1877   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1878   0080           02181                 movwf INDF                                              ;Save to QUEUE
1879   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02183                 count = count + 1
187A   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187B   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187C   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
187D   0080           02181                 movwf INDF                                              ;Save to QUEUE
187E   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02183                 count = count + 1
187F   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1880   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1881   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1882   0080           02181                 movwf INDF                                              ;Save to QUEUE
1883   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02183                 count = count + 1
1884   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1885   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1886   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1887   0080           02181                 movwf INDF                                              ;Save to QUEUE
1888   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02183                 count = count + 1
1889   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188A   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188B   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
188C   0080           02181                 movwf INDF                                              ;Save to QUEUE
188D   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02183                 count = count + 1
188E   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

188F   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1890   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1891   0080           02181                 movwf INDF                                              ;Save to QUEUE
1892   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02183                 count = count + 1
1893   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1894   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1895   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
1896   0080           02181                 movwf INDF                                              ;Save to QUEUE
1897   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02183                 count = count + 1
1898   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1899   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189A   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
189B   0080           02181                 movwf INDF                                              ;Save to QUEUE
189C   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02183                 count = count + 1
189D   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189E   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189F   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18A0   0080           02181                 movwf INDF                                              ;Save to QUEUE
18A1   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02183                 count = count + 1
18A2   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A3   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A4   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18A5   0080           02181                 movwf INDF                                              ;Save to QUEUE
18A6   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02183                 count = count + 1
18A7   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A8   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A9   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18AA   0080           02181                 movwf INDF                                              ;Save to QUEUE
18AB   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02183                 count = count + 1
18AC   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AD   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AE   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18AF   0080           02181                 movwf INDF                                              ;Save to QUEUE
18B0   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02183                 count = count + 1
18B1   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B2   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B3   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18B4   0080           02181                 movwf INDF                                              ;Save to QUEUE
18B5   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02183                 count = count + 1
18B6   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B7   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B8   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18B9   0080           02181                 movwf INDF                                              ;Save to QUEUE
18BA   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02183                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18BB   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BC   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BD   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18BE   0080           02181                 movwf INDF                                              ;Save to QUEUE
18BF   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02183                 count = count + 1
18C0   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C1   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C2   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18C3   0080           02181                 movwf INDF                                              ;Save to QUEUE
18C4   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02183                 count = count + 1
18C5   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C6   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C7   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18C8   0080           02181                 movwf INDF                                              ;Save to QUEUE
18C9   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02183                 count = count + 1
18CA   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CB   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CC   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18CD   0080           02181                 movwf INDF                                              ;Save to QUEUE
18CE   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02183                 count = count + 1
18CF   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D0   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D1   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18D2   0080           02181                 movwf INDF                                              ;Save to QUEUE
18D3   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02183                 count = count + 1
18D4   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D5   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D6   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18D7   0080           02181                 movwf INDF                                              ;Save to QUEUE
18D8   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02183                 count = count + 1
18D9   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DA   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18DB   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18DC   0080           02181                 movwf INDF                                              ;Save to QUEUE
18DD   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02183                 count = count + 1
18DE   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18DF   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E0   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18E1   0080           02181                 movwf INDF                                              ;Save to QUEUE
18E2   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02183                 count = count + 1
18E3   1409           02178                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18E4   1009           02179                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18E5   0808           02180                 movf ADC_DATAPORT, W                    ;Sample
18E6   0080           02181                 movwf INDF                                              ;Save to QUEUE
18E7   0A84           02182                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001A            02183                 count = count + 1
                      02184         endw
18E8   1409           02185         bsf ADC_CONTROLPORT, RDD
18E9   0808           02186         movf ADC_DATAPORT, W                            ;Sample
                      02187         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
18EA   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18EB   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18EC   2EDC               M         goto SampleRep5MEndA
                      02188         
18ED                  02189 SampleRep5MStep4
18ED   28EE           02190         goto $ + 1
18EE   0000           02191         nop
18EF   1009           02192         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18F0   28F1           02193         goto $ + 1
18F1   0000           02194         nop
  0000                02195         local count
  00000001            02196         count = 1
                      02197         while count < D'38'
18F2   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F3   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F4   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
18F5   0080           02201                 movwf INDF                                              ;Save to QUEUE
18F6   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            02203                 count = count + 1
18F7   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18F8   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18F9   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
18FA   0080           02201                 movwf INDF                                              ;Save to QUEUE
18FB   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            02203                 count = count + 1
18FC   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18FD   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18FE   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
18FF   0080           02201                 movwf INDF                                              ;Save to QUEUE
1900   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            02203                 count = count + 1
1901   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1902   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1903   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1904   0080           02201                 movwf INDF                                              ;Save to QUEUE
1905   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            02203                 count = count + 1
1906   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1907   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1908   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1909   0080           02201                 movwf INDF                                              ;Save to QUEUE
190A   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            02203                 count = count + 1
190B   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
190C   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
190D   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
190E   0080           02201                 movwf INDF                                              ;Save to QUEUE
190F   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            02203                 count = count + 1
1910   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1911   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1912   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1913   0080           02201                 movwf INDF                                              ;Save to QUEUE
1914   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            02203                 count = count + 1
1915   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1916   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1917   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1918   0080           02201                 movwf INDF                                              ;Save to QUEUE
1919   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            02203                 count = count + 1
191A   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
191B   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
191C   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
191D   0080           02201                 movwf INDF                                              ;Save to QUEUE
191E   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02203                 count = count + 1
191F   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1920   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1921   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1922   0080           02201                 movwf INDF                                              ;Save to QUEUE
1923   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02203                 count = count + 1
1924   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1925   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1926   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1927   0080           02201                 movwf INDF                                              ;Save to QUEUE
1928   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02203                 count = count + 1
1929   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192A   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
192B   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
192C   0080           02201                 movwf INDF                                              ;Save to QUEUE
192D   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02203                 count = count + 1
192E   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
192F   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1930   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1931   0080           02201                 movwf INDF                                              ;Save to QUEUE
1932   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            02203                 count = count + 1
1933   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1934   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1935   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1936   0080           02201                 movwf INDF                                              ;Save to QUEUE
1937   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            02203                 count = count + 1
1938   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1939   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193A   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
193B   0080           02201                 movwf INDF                                              ;Save to QUEUE
193C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            02203                 count = count + 1
193D   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
193E   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
193F   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1940   0080           02201                 movwf INDF                                              ;Save to QUEUE
1941   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            02203                 count = count + 1
1942   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1943   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1944   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1945   0080           02201                 movwf INDF                                              ;Save to QUEUE
1946   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            02203                 count = count + 1
1947   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1948   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1949   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
194A   0080           02201                 movwf INDF                                              ;Save to QUEUE
194B   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            02203                 count = count + 1
194C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
194D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
194E   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
194F   0080           02201                 movwf INDF                                              ;Save to QUEUE
1950   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            02203                 count = count + 1
1951   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1952   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1953   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1954   0080           02201                 movwf INDF                                              ;Save to QUEUE
1955   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            02203                 count = count + 1
1956   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1957   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1958   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1959   0080           02201                 movwf INDF                                              ;Save to QUEUE
195A   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            02203                 count = count + 1
195B   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
195C   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
195D   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
195E   0080           02201                 movwf INDF                                              ;Save to QUEUE
195F   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            02203                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1960   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1961   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1962   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1963   0080           02201                 movwf INDF                                              ;Save to QUEUE
1964   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            02203                 count = count + 1
1965   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1966   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1967   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1968   0080           02201                 movwf INDF                                              ;Save to QUEUE
1969   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            02203                 count = count + 1
196A   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
196B   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
196C   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
196D   0080           02201                 movwf INDF                                              ;Save to QUEUE
196E   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            02203                 count = count + 1
196F   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1970   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1971   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1972   0080           02201                 movwf INDF                                              ;Save to QUEUE
1973   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            02203                 count = count + 1
1974   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1975   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1976   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1977   0080           02201                 movwf INDF                                              ;Save to QUEUE
1978   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            02203                 count = count + 1
1979   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197A   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
197B   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
197C   0080           02201                 movwf INDF                                              ;Save to QUEUE
197D   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            02203                 count = count + 1
197E   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
197F   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1980   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1981   0080           02201                 movwf INDF                                              ;Save to QUEUE
1982   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            02203                 count = count + 1
1983   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1984   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1985   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1986   0080           02201                 movwf INDF                                              ;Save to QUEUE
1987   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            02203                 count = count + 1
1988   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1989   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198A   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
198B   0080           02201                 movwf INDF                                              ;Save to QUEUE
198C   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000020            02203                 count = count + 1
198D   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
198E   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
198F   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1990   0080           02201                 movwf INDF                                              ;Save to QUEUE
1991   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            02203                 count = count + 1
1992   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1993   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1994   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
1995   0080           02201                 movwf INDF                                              ;Save to QUEUE
1996   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            02203                 count = count + 1
1997   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1998   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1999   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
199A   0080           02201                 movwf INDF                                              ;Save to QUEUE
199B   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            02203                 count = count + 1
199C   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
199D   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
199E   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
199F   0080           02201                 movwf INDF                                              ;Save to QUEUE
19A0   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            02203                 count = count + 1
19A1   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A2   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A3   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
19A4   0080           02201                 movwf INDF                                              ;Save to QUEUE
19A5   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            02203                 count = count + 1
19A6   1409           02198                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19A7   1009           02199                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19A8   0808           02200                 movf ADC_DATAPORT, W                    ;Sample
19A9   0080           02201                 movwf INDF                                              ;Save to QUEUE
19AA   0A84           02202                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            02203                 count = count + 1
                      02204         endw
19AB   1409           02205         bsf ADC_CONTROLPORT, RDD
19AC   1009           02206         bcf ADC_CONTROLPORT, RDD
19AD   0808           02207         movf ADC_DATAPORT, W                            ;Sample
19AE   0080           02208         movwf INDF
19AF   1384           02209         bcf FSR, 7                                                      ;goto bank 3
  00000001            02210         count = 1
                      02211         while count < D'13'
19B0   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B1   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19B2   0808           02214                 movf ADC_DATAPORT, W
19B3   0080           02215                 movwf INDF                                              ;Save to QUEUE
19B4   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            02217                 count = count + 1
19B5   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19B6   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19B7   0808           02214                 movf ADC_DATAPORT, W
19B8   0080           02215                 movwf INDF                                              ;Save to QUEUE
19B9   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            02217                 count = count + 1
19BA   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19BB   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19BC   0808           02214                 movf ADC_DATAPORT, W
19BD   0080           02215                 movwf INDF                                              ;Save to QUEUE
19BE   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            02217                 count = count + 1
19BF   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C0   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C1   0808           02214                 movf ADC_DATAPORT, W
19C2   0080           02215                 movwf INDF                                              ;Save to QUEUE
19C3   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            02217                 count = count + 1
19C4   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19C5   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19C6   0808           02214                 movf ADC_DATAPORT, W
19C7   0080           02215                 movwf INDF                                              ;Save to QUEUE
19C8   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            02217                 count = count + 1
19C9   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CA   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19CB   0808           02214                 movf ADC_DATAPORT, W
19CC   0080           02215                 movwf INDF                                              ;Save to QUEUE
19CD   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            02217                 count = count + 1
19CE   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19CF   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D0   0808           02214                 movf ADC_DATAPORT, W
19D1   0080           02215                 movwf INDF                                              ;Save to QUEUE
19D2   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            02217                 count = count + 1
19D3   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D4   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19D5   0808           02214                 movf ADC_DATAPORT, W
19D6   0080           02215                 movwf INDF                                              ;Save to QUEUE
19D7   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            02217                 count = count + 1
19D8   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19D9   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DA   0808           02214                 movf ADC_DATAPORT, W
19DB   0080           02215                 movwf INDF                                              ;Save to QUEUE
19DC   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            02217                 count = count + 1
19DD   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19DE   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19DF   0808           02214                 movf ADC_DATAPORT, W
19E0   0080           02215                 movwf INDF                                              ;Save to QUEUE
19E1   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            02217                 count = count + 1
19E2   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19E3   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E4   0808           02214                 movf ADC_DATAPORT, W
19E5   0080           02215                 movwf INDF                                              ;Save to QUEUE
19E6   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            02217                 count = count + 1
19E7   1409           02212                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
19E8   1009           02213                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
19E9   0808           02214                 movf ADC_DATAPORT, W
19EA   0080           02215                 movwf INDF                                              ;Save to QUEUE
19EB   0384           02216                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            02217                 count = count + 1
                      02218         endw
19EC   1409           02219         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
19ED   0808           02220         movf ADC_DATAPORT, W                            ;Sample
                      02221         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
19EE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
19EF   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
19F0   2EDF               M         goto SampleRep5MEndC
                      02222 
19F1                  02223 SampleRep5MStep5
19F1   29F2           02224         goto $ + 1
                      02225         if (Sample1MhzEnd & (0x1000))
                      02226                 bsf PCLATH, 4
                      02227         else
19F2   120A           02228                 bcf PCLATH, 4
                      02229         endif
                      02230         if (Sample1MhzEnd & (0x800))
19F3   158A           02231                 bsf PCLATH, 3
                      02232         else
                      02233                 bcf PCLATH, 3
                      02234         endif
19F4   1009           02235         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
19F5   0000           02236         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
19F6   28BF           02237         goto Sample1MhzEnd
                      02238         
                      02239 ;Repetitive sample
                      02240 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      02241 ;-----------------------------------------------------------------------------
19F7                  02242 SampleRep2M
19F7   3019           02243         movlw high SampleRep2MPickSt
19F8   008A           02244         movwf PCLATH
19F9   0877           02245         movf gbl_modetempb, w
19FA   0782           02246         addwf PCL, f
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19FB                  02247 SampleRep2MPickSt
                      02248         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
19FB   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
19FC   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
19FD   2A04               M         goto SampleRep2MStep1
                      02249         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
19FE   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
19FF   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A00   2C0B               M         goto SampleRep2MStep2
                      02250         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
1A01   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
1A02   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
1A03   2E0C               M         goto SampleRep2MStep3
1A04                  02251 SampleRep2MPickEn
1A04                  02252 SampleRep2MStep1
1A04   1009           02253         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      02254         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
1A05   3020               M     movlw BUFFERMIN
1A06   0084               M     movwf FSR
1A07   0000           02255         nop
  0000                02256         local count
  00000001            02257         count = 1
                      02258         while count < BUFFERSIZE
1A08   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A09   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A0A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A0B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A0C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A0D   0000           02264                 nop
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            02265                 count = count + 1
1A0E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A0F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A10   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A11   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A12   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A13   0000           02264                 nop
  00000003            02265                 count = count + 1
1A14   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A15   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A16   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A17   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A18   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A19   0000           02264                 nop
  00000004            02265                 count = count + 1
1A1A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A1B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A1C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A1D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A1E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A1F   0000           02264                 nop
  00000005            02265                 count = count + 1
1A20   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A21   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A22   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A23   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A24   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A25   0000           02264                 nop
  00000006            02265                 count = count + 1
1A26   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A27   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A28   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A29   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A2A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A2B   0000           02264                 nop
  00000007            02265                 count = count + 1
1A2C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A2D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A2E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A2F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A30   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A31   0000           02264                 nop
  00000008            02265                 count = count + 1
1A32   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A33   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A34   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A35   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A36   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A37   0000           02264                 nop
  00000009            02265                 count = count + 1
1A38   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A39   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A3B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A3C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A3D   0000           02264                 nop
  0000000A            02265                 count = count + 1
1A3E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A3F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A40   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A41   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A42   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A43   0000           02264                 nop
  0000000B            02265                 count = count + 1
1A44   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A45   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A46   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A47   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A48   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A49   0000           02264                 nop
  0000000C            02265                 count = count + 1
1A4A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A4B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A4E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A4F   0000           02264                 nop
  0000000D            02265                 count = count + 1
1A50   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A51   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A52   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A53   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A54   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A55   0000           02264                 nop
  0000000E            02265                 count = count + 1
1A56   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A57   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A58   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A59   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A5A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A5B   0000           02264                 nop
  0000000F            02265                 count = count + 1
1A5C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A5D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A60   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A61   0000           02264                 nop
  00000010            02265                 count = count + 1
1A62   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A63   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A64   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A65   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A66   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A67   0000           02264                 nop
  00000011            02265                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A68   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A69   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A6A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A6B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A6C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A6D   0000           02264                 nop
  00000012            02265                 count = count + 1
1A6E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A6F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A70   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A71   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A72   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A73   0000           02264                 nop
  00000013            02265                 count = count + 1
1A74   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A75   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A76   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A77   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A78   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A79   0000           02264                 nop
  00000014            02265                 count = count + 1
1A7A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A7B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A7C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A7D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A7E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A7F   0000           02264                 nop
  00000015            02265                 count = count + 1
1A80   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A81   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A82   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A83   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A84   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A85   0000           02264                 nop
  00000016            02265                 count = count + 1
1A86   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A87   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A88   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A89   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A8A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A8B   0000           02264                 nop
  00000017            02265                 count = count + 1
1A8C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A8D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A8E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A8F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A90   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A91   0000           02264                 nop
  00000018            02265                 count = count + 1
1A92   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A93   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A94   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A95   0080           02262                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A96   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A97   0000           02264                 nop
  00000019            02265                 count = count + 1
1A98   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A99   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A9A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A9B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1A9C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1A9D   0000           02264                 nop
  0000001A            02265                 count = count + 1
1A9E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1A9F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA0   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA1   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AA2   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AA3   0000           02264                 nop
  0000001B            02265                 count = count + 1
1AA4   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AA5   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AA6   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AA7   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AA8   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AA9   0000           02264                 nop
  0000001C            02265                 count = count + 1
1AAA   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AAB   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AAC   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AAD   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AAE   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AAF   0000           02264                 nop
  0000001D            02265                 count = count + 1
1AB0   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AB1   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB2   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB3   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AB4   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AB5   0000           02264                 nop
  0000001E            02265                 count = count + 1
1AB6   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AB7   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AB8   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AB9   0080           02262                 movwf INDF                                              ;Save to QUEUE
1ABA   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1ABB   0000           02264                 nop
  0000001F            02265                 count = count + 1
1ABC   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1ABD   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ABE   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ABF   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AC0   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AC1   0000           02264                 nop
  00000020            02265                 count = count + 1
1AC2   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AC3   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AC4   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AC5   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AC6   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AC7   0000           02264                 nop
  00000021            02265                 count = count + 1
1AC8   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AC9   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ACA   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ACB   0080           02262                 movwf INDF                                              ;Save to QUEUE
1ACC   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1ACD   0000           02264                 nop
  00000022            02265                 count = count + 1
1ACE   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1ACF   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD0   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD1   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AD2   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AD3   0000           02264                 nop
  00000023            02265                 count = count + 1
1AD4   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AD5   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AD6   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AD7   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AD8   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AD9   0000           02264                 nop
  00000024            02265                 count = count + 1
1ADA   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1ADB   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1ADC   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1ADD   0080           02262                 movwf INDF                                              ;Save to QUEUE
1ADE   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1ADF   0000           02264                 nop
  00000025            02265                 count = count + 1
1AE0   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AE1   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE2   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE3   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AE4   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AE5   0000           02264                 nop
  00000026            02265                 count = count + 1
1AE6   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AE7   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AE8   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AE9   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AEA   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AEB   0000           02264                 nop
  00000027            02265                 count = count + 1
1AEC   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AED   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AEE   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AEF   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AF0   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AF1   0000           02264                 nop
  00000028            02265                 count = count + 1
1AF2   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AF3   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AF4   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AF5   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AF6   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AF7   0000           02264                 nop
  00000029            02265                 count = count + 1
1AF8   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AF9   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1AFA   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1AFB   0080           02262                 movwf INDF                                              ;Save to QUEUE
1AFC   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1AFD   0000           02264                 nop
  0000002A            02265                 count = count + 1
1AFE   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1AFF   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B00   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B01   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B02   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B03   0000           02264                 nop
  0000002B            02265                 count = count + 1
1B04   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B05   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B06   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B07   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B08   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B09   0000           02264                 nop
  0000002C            02265                 count = count + 1
1B0A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B0B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B0C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B0D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B0E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B0F   0000           02264                 nop
  0000002D            02265                 count = count + 1
1B10   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B11   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B12   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B13   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B14   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B15   0000           02264                 nop
  0000002E            02265                 count = count + 1
1B16   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B17   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B18   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B19   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B1A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B1B   0000           02264                 nop
  0000002F            02265                 count = count + 1
1B1C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B1D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B1E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B1F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B20   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B21   0000           02264                 nop
  00000030            02265                 count = count + 1
1B22   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B23   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B24   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B25   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B26   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B27   0000           02264                 nop
  00000031            02265                 count = count + 1
1B28   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B29   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B2A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B2B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B2C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B2D   0000           02264                 nop
  00000032            02265                 count = count + 1
1B2E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B2F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B30   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B31   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B32   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B33   0000           02264                 nop
  00000033            02265                 count = count + 1
1B34   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B35   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B36   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B37   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B38   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B39   0000           02264                 nop
  00000034            02265                 count = count + 1
1B3A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B3B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B3C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B3D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B3E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B3F   0000           02264                 nop
  00000035            02265                 count = count + 1
1B40   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B41   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B42   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B43   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B44   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B45   0000           02264                 nop
  00000036            02265                 count = count + 1
1B46   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B47   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B48   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B49   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B4A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B4B   0000           02264                 nop
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000037            02265                 count = count + 1
1B4C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B4D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B4E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B4F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B50   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B51   0000           02264                 nop
  00000038            02265                 count = count + 1
1B52   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B53   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B54   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B55   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B56   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B57   0000           02264                 nop
  00000039            02265                 count = count + 1
1B58   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B59   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B5A   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B5B   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B5C   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B5D   0000           02264                 nop
  0000003A            02265                 count = count + 1
1B5E   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B5F   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B60   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B61   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B62   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B63   0000           02264                 nop
  0000003B            02265                 count = count + 1
1B64   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B65   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B66   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B67   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B68   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B69   0000           02264                 nop
  0000003C            02265                 count = count + 1
1B6A   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B6B   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B6C   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B6D   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B6E   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B6F   0000           02264                 nop
  0000003D            02265                 count = count + 1
1B70   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B71   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B72   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B73   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B74   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B75   0000           02264                 nop
  0000003E            02265                 count = count + 1
1B76   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B77   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B78   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B79   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B7A   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B7B   0000           02264                 nop
  0000003F            02265                 count = count + 1
1B7C   0808           02259                 movf ADC_DATAPORT, W                    ;Save Sample
1B7D   1409           02260                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1B7E   1009           02261                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1B7F   0080           02262                 movwf INDF                                              ;Save to QUEUE
1B80   0A84           02263                 incf FSR, F                                             ;Increment QUEUE pointer
1B81   0000           02264                 nop
  00000040            02265                 count = count + 1
                      02266         endw
1B82   0808           02267         movf ADC_DATAPORT, W
1B83   1409           02268         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1B84   1009           02269         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1B85   0080           02270         movwf INDF
1B86   1784           02271         bsf FSR, 7                                                      ;goto bank 2
1B87   0000           02272         nop
  00000001            02273         count = 1
                      02274         while count < D'22'
1B88   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1B89   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B8A   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B8B   0080           02278                 movwf INDF                                              ;Save to QUEUE
1B8C   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1B8D   0000           02280                 nop
  00000002            02281                 count = count + 1
1B8E   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1B8F   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B90   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B91   0080           02278                 movwf INDF                                              ;Save to QUEUE
1B92   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1B93   0000           02280                 nop
  00000003            02281                 count = count + 1
1B94   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1B95   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B96   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B97   0080           02278                 movwf INDF                                              ;Save to QUEUE
1B98   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1B99   0000           02280                 nop
  00000004            02281                 count = count + 1
1B9A   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1B9B   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B9C   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B9D   0080           02278                 movwf INDF                                              ;Save to QUEUE
1B9E   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1B9F   0000           02280                 nop
  00000005            02281                 count = count + 1
1BA0   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BA1   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA2   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA3   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BA4   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BA5   0000           02280                 nop
  00000006            02281                 count = count + 1
1BA6   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BA7   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA8   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA9   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BAA   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BAB   0000           02280                 nop
  00000007            02281                 count = count + 1
1BAC   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BAD   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BAE   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BAF   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BB0   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BB1   0000           02280                 nop
  00000008            02281                 count = count + 1
1BB2   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BB3   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB4   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB5   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BB6   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BB7   0000           02280                 nop
  00000009            02281                 count = count + 1
1BB8   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BB9   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBA   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBB   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BBC   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BBD   0000           02280                 nop
  0000000A            02281                 count = count + 1
1BBE   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BBF   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC0   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC1   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BC2   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BC3   0000           02280                 nop
  0000000B            02281                 count = count + 1
1BC4   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BC5   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC6   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC7   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BC8   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BC9   0000           02280                 nop
  0000000C            02281                 count = count + 1
1BCA   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BCB   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCC   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCD   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BCE   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BCF   0000           02280                 nop
  0000000D            02281                 count = count + 1
1BD0   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BD1   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BD2   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD3   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BD4   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BD5   0000           02280                 nop
  0000000E            02281                 count = count + 1
1BD6   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BD7   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD8   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD9   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BDA   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BDB   0000           02280                 nop
  0000000F            02281                 count = count + 1
1BDC   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BDD   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDE   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDF   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BE0   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BE1   0000           02280                 nop
  00000010            02281                 count = count + 1
1BE2   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BE3   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE4   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE5   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BE6   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BE7   0000           02280                 nop
  00000011            02281                 count = count + 1
1BE8   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BE9   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BEA   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BEB   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BEC   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BED   0000           02280                 nop
  00000012            02281                 count = count + 1
1BEE   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BEF   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF0   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF1   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BF2   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BF3   0000           02280                 nop
  00000013            02281                 count = count + 1
1BF4   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BF5   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF6   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF7   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BF8   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BF9   0000           02280                 nop
  00000014            02281                 count = count + 1
1BFA   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1BFB   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BFC   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BFD   0080           02278                 movwf INDF                                              ;Save to QUEUE
1BFE   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1BFF   0000           02280                 nop
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000015            02281                 count = count + 1
1C00   0808           02275                 movf ADC_DATAPORT, W                    ;Sample
1C01   1409           02276                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C02   1009           02277                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C03   0080           02278                 movwf INDF                                              ;Save to QUEUE
1C04   0384           02279                 decf FSR, F                                             ;Increment QUEUE pointer
1C05   0000           02280                 nop
  00000016            02281                 count = count + 1
                      02282         endw
1C06   0808           02283         movf ADC_DATAPORT, W                            ;Sample
1C07   1409           02284         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      02285         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1C08   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1C09   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1C0A   2EDF               M         goto SampleRep5MEndC
                      02286 
1C0B                  02287 SampleRep2MStep2
1C0B   2C0C           02288         goto $ + 1                                                      ;Delay 2
1C0C   1009           02289         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1C0D   2C0E           02290         goto $ + 1                                                      ;Wait three cycles
1C0E   0000           02291         nop
  0000                02292         local count
  00000001            02293         count = 1
                      02294         while count < D'42'
1C0F   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C10   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C11   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C12   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C13   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C14   0000           02300                 nop
  00000002            02301                 count = count + 1
1C15   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C16   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C17   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C18   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C19   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C1A   0000           02300                 nop
  00000003            02301                 count = count + 1
1C1B   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C1C   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1D   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1E   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C1F   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C20   0000           02300                 nop
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            02301                 count = count + 1
1C21   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C22   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C23   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C24   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C25   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C26   0000           02300                 nop
  00000005            02301                 count = count + 1
1C27   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C28   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C29   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C2A   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C2B   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C2C   0000           02300                 nop
  00000006            02301                 count = count + 1
1C2D   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C2E   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C2F   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C30   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C31   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C32   0000           02300                 nop
  00000007            02301                 count = count + 1
1C33   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C34   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C35   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C36   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C37   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C38   0000           02300                 nop
  00000008            02301                 count = count + 1
1C39   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C3A   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3B   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3C   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C3D   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C3E   0000           02300                 nop
  00000009            02301                 count = count + 1
1C3F   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C40   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C41   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C42   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C43   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C44   0000           02300                 nop
  0000000A            02301                 count = count + 1
1C45   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C46   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C47   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C48   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C49   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C4A   0000           02300                 nop
  0000000B            02301                 count = count + 1
1C4B   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C4C   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4D   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C4E   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C4F   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C50   0000           02300                 nop
  0000000C            02301                 count = count + 1
1C51   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C52   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C53   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C54   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C55   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C56   0000           02300                 nop
  0000000D            02301                 count = count + 1
1C57   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C58   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C59   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5A   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C5B   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C5C   0000           02300                 nop
  0000000E            02301                 count = count + 1
1C5D   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C5E   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5F   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C60   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C61   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C62   0000           02300                 nop
  0000000F            02301                 count = count + 1
1C63   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C64   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C65   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C66   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C67   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C68   0000           02300                 nop
  00000010            02301                 count = count + 1
1C69   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C6A   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6B   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6C   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C6D   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C6E   0000           02300                 nop
  00000011            02301                 count = count + 1
1C6F   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C70   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C71   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C72   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C73   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C74   0000           02300                 nop
  00000012            02301                 count = count + 1
1C75   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C76   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C77   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C78   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C79   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C7A   0000           02300                 nop
  00000013            02301                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C7B   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C7C   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7D   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7E   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C7F   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C80   0000           02300                 nop
  00000014            02301                 count = count + 1
1C81   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C82   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C83   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C84   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C85   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C86   0000           02300                 nop
  00000015            02301                 count = count + 1
1C87   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C88   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C89   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8A   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C8B   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C8C   0000           02300                 nop
  00000016            02301                 count = count + 1
1C8D   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C8E   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8F   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C90   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C91   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C92   0000           02300                 nop
  00000017            02301                 count = count + 1
1C93   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C94   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C95   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C96   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C97   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C98   0000           02300                 nop
  00000018            02301                 count = count + 1
1C99   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1C9A   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9B   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9C   0080           02298                 movwf INDF                                              ;Save to QUEUE
1C9D   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1C9E   0000           02300                 nop
  00000019            02301                 count = count + 1
1C9F   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CA0   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA1   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA2   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CA3   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CA4   0000           02300                 nop
  0000001A            02301                 count = count + 1
1CA5   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CA6   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA7   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA8   0080           02298                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CA9   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CAA   0000           02300                 nop
  0000001B            02301                 count = count + 1
1CAB   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CAC   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAD   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAE   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CAF   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CB0   0000           02300                 nop
  0000001C            02301                 count = count + 1
1CB1   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CB2   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB3   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB4   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CB5   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CB6   0000           02300                 nop
  0000001D            02301                 count = count + 1
1CB7   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CB8   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB9   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBA   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CBB   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CBC   0000           02300                 nop
  0000001E            02301                 count = count + 1
1CBD   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CBE   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBF   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC0   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CC1   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CC2   0000           02300                 nop
  0000001F            02301                 count = count + 1
1CC3   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CC4   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC5   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC6   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CC7   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CC8   0000           02300                 nop
  00000020            02301                 count = count + 1
1CC9   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CCA   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCB   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCC   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CCD   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CCE   0000           02300                 nop
  00000021            02301                 count = count + 1
1CCF   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CD0   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD1   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD2   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CD3   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CD4   0000           02300                 nop
  00000022            02301                 count = count + 1
1CD5   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CD6   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD7   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD8   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CD9   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CDA   0000           02300                 nop
  00000023            02301                 count = count + 1
1CDB   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CDC   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDD   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDE   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CDF   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CE0   0000           02300                 nop
  00000024            02301                 count = count + 1
1CE1   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CE2   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE3   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE4   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CE5   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CE6   0000           02300                 nop
  00000025            02301                 count = count + 1
1CE7   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CE8   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE9   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEA   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CEB   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CEC   0000           02300                 nop
  00000026            02301                 count = count + 1
1CED   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CEE   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CEF   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF0   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CF1   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CF2   0000           02300                 nop
  00000027            02301                 count = count + 1
1CF3   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CF4   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CF5   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CF6   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CF7   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CF8   0000           02300                 nop
  00000028            02301                 count = count + 1
1CF9   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1CFA   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CFB   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CFC   0080           02298                 movwf INDF                                              ;Save to QUEUE
1CFD   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
1CFE   0000           02300                 nop
  00000029            02301                 count = count + 1
1CFF   0808           02295                 movf ADC_DATAPORT, W                    ;Sample
1D00   1409           02296                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D01   1009           02297                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D02   0080           02298                 movwf INDF                                              ;Save to QUEUE
1D03   0384           02299                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D04   0000           02300                 nop
  0000002A            02301                 count = count + 1
                      02302         endw
1D05   0808           02303         movf ADC_DATAPORT, W
1D06   1409           02304         bsf ADC_CONTROLPORT, RDD
1D07   1009           02305         bcf ADC_CONTROLPORT, RDD
1D08   0080           02306         movwf INDF
1D09   1783           02307         bsf STATUS, IRP                                         ;goto bank 4
1D0A   0000           02308         nop
  00000001            02309         count = 1
                      02310         while count < D'43'
1D0B   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D0C   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D0D   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D0E   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D0F   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D10   0000           02316                 nop
  00000002            02317                 count = count + 1
1D11   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D12   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D13   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D14   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D15   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D16   0000           02316                 nop
  00000003            02317                 count = count + 1
1D17   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D18   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D19   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D1A   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D1B   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D1C   0000           02316                 nop
  00000004            02317                 count = count + 1
1D1D   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D1E   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D1F   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D20   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D21   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D22   0000           02316                 nop
  00000005            02317                 count = count + 1
1D23   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D24   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D25   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D26   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D27   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D28   0000           02316                 nop
  00000006            02317                 count = count + 1
1D29   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D2A   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D2B   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D2C   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D2D   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D2E   0000           02316                 nop
  00000007            02317                 count = count + 1
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D2F   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D30   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D31   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D32   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D33   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D34   0000           02316                 nop
  00000008            02317                 count = count + 1
1D35   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D36   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D37   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D38   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D39   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D3A   0000           02316                 nop
  00000009            02317                 count = count + 1
1D3B   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D3C   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D3D   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D3E   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D3F   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D40   0000           02316                 nop
  0000000A            02317                 count = count + 1
1D41   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D42   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D43   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D44   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D45   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D46   0000           02316                 nop
  0000000B            02317                 count = count + 1
1D47   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D48   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D49   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D4A   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D4B   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D4C   0000           02316                 nop
  0000000C            02317                 count = count + 1
1D4D   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D4E   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D4F   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D50   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D51   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D52   0000           02316                 nop
  0000000D            02317                 count = count + 1
1D53   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D54   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D55   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D56   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D57   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D58   0000           02316                 nop
  0000000E            02317                 count = count + 1
1D59   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D5A   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D5B   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D5C   0080           02314                 movwf INDF                                              ;Save to QUEUE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D5D   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D5E   0000           02316                 nop
  0000000F            02317                 count = count + 1
1D5F   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D60   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D61   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D62   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D63   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D64   0000           02316                 nop
  00000010            02317                 count = count + 1
1D65   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D66   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D67   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D68   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D69   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D6A   0000           02316                 nop
  00000011            02317                 count = count + 1
1D6B   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D6C   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D6D   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D6E   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D6F   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D70   0000           02316                 nop
  00000012            02317                 count = count + 1
1D71   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D72   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D73   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D74   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D75   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D76   0000           02316                 nop
  00000013            02317                 count = count + 1
1D77   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D78   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D79   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D7A   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D7B   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D7C   0000           02316                 nop
  00000014            02317                 count = count + 1
1D7D   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D7E   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D7F   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D80   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D81   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D82   0000           02316                 nop
  00000015            02317                 count = count + 1
1D83   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D84   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D85   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D86   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D87   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D88   0000           02316                 nop
  00000016            02317                 count = count + 1
1D89   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D8A   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D8B   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D8C   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D8D   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D8E   0000           02316                 nop
  00000017            02317                 count = count + 1
1D8F   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D90   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D91   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D92   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D93   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D94   0000           02316                 nop
  00000018            02317                 count = count + 1
1D95   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D96   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D97   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D98   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D99   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1D9A   0000           02316                 nop
  00000019            02317                 count = count + 1
1D9B   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1D9C   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1D9D   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1D9E   0080           02314                 movwf INDF                                              ;Save to QUEUE
1D9F   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DA0   0000           02316                 nop
  0000001A            02317                 count = count + 1
1DA1   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DA2   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA3   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DA4   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DA5   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DA6   0000           02316                 nop
  0000001B            02317                 count = count + 1
1DA7   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DA8   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DA9   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DAA   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DAB   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DAC   0000           02316                 nop
  0000001C            02317                 count = count + 1
1DAD   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DAE   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DAF   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB0   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DB1   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DB2   0000           02316                 nop
  0000001D            02317                 count = count + 1
1DB3   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DB4   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DB5   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DB6   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DB7   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DB8   0000           02316                 nop
  0000001E            02317                 count = count + 1
1DB9   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DBA   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DBB   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DBC   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DBD   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DBE   0000           02316                 nop
  0000001F            02317                 count = count + 1
1DBF   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DC0   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC1   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC2   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DC3   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DC4   0000           02316                 nop
  00000020            02317                 count = count + 1
1DC5   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DC6   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DC7   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DC8   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DC9   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DCA   0000           02316                 nop
  00000021            02317                 count = count + 1
1DCB   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DCC   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DCD   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DCE   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DCF   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DD0   0000           02316                 nop
  00000022            02317                 count = count + 1
1DD1   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DD2   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD3   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DD4   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DD5   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DD6   0000           02316                 nop
  00000023            02317                 count = count + 1
1DD7   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DD8   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DD9   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DDA   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DDB   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DDC   0000           02316                 nop
  00000024            02317                 count = count + 1
1DDD   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DDE   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DDF   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE0   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DE1   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DE2   0000           02316                 nop
  00000025            02317                 count = count + 1
1DE3   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DE4   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DE5   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DE6   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DE7   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DE8   0000           02316                 nop
  00000026            02317                 count = count + 1
1DE9   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DEA   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DEB   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DEC   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DED   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DEE   0000           02316                 nop
  00000027            02317                 count = count + 1
1DEF   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DF0   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF1   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF2   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DF3   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DF4   0000           02316                 nop
  00000028            02317                 count = count + 1
1DF5   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DF6   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DF7   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DF8   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DF9   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1DFA   0000           02316                 nop
  00000029            02317                 count = count + 1
1DFB   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1DFC   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1DFD   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1DFE   0080           02314                 movwf INDF                                              ;Save to QUEUE
1DFF   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1E00   0000           02316                 nop
  0000002A            02317                 count = count + 1
1E01   0808           02311                 movf ADC_DATAPORT, W                    ;Sample
1E02   1409           02312                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1E03   1009           02313                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1E04   0080           02314                 movwf INDF                                              ;Save to QUEUE
1E05   0A84           02315                 incf FSR, F                                             ;Increment QUEUE pointer
1E06   0000           02316                 nop
  0000002B            02317                 count = count + 1
                      02318         endw
1E07   0808           02319         movf ADC_DATAPORT, W                            ;Sample
1E08   1409           02320         bsf ADC_CONTROLPORT, RDD
                      02321         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1E09   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1E0A   118A               M                 bcf PCLATH, 3
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1E0B   2EDC               M         goto SampleRep5MEndA
                      02322 
1E0C                  02323 SampleRep2MStep3
1E0C   2E0D           02324         goto $ + 1                                                      ;Delay 4
                      02325         if (Sample833kEnd & (0x1000))
1E0D   160A           02326                 bsf PCLATH, 4
                      02327         else
                      02328                 bcf PCLATH, 4
                      02329         endif
                      02330         if (Sample833kEnd & (0x800))
                      02331                 bsf PCLATH, 3
                      02332         else
1E0E   118A           02333                 bcf PCLATH, 3
                      02334         endif
1E0F   1009           02335         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1E10   0000           02336         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1E11   2BC7           02337         goto Sample833kEnd
                      02338 
                      02339 
                      02340 ;=============================================================================
                      02341 end             ;end of program
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       00000116
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BANK0                             00000000
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

BANK1                             00000080
BANK2                             00000100
BANK3                             00000180
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1SEL                            00000001
CH1SELG                           00000004
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CS                                00000001
CSRC                              00000007
ChannelConfSend                   0000022A
ChannelConfStore                  00000236
ConfReceive                       000001ED
ConfReceiveRateOnly               00000204
ConfSend                          0000020F
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             0000010B
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

DelayFive                         00000424
DelayLoop                         0000010C
DelaySeven                        00000423
DelayTwo                          00000426
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEINTDRVN                 0000000C
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           000000F5
GetByteB                          000000F7
GetByteC                          000000FB
GetByteD                          000000FF
GetByteE                          00000103
HTS                               00000002
I2C_DATA                          00000005
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000050
IntHandler                        00000004
IrqServiceTimer1                  0000011B
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000079
MainB                             0000007B
MainSelect                        00000011
MainWTrigB                        00000099
MainWaitTrig                      00000088
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           00000106
PutByteSerial                     00000106
R                                 00000002
RBIE                              00000003
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAMPLEBANK0                       00000000
SAMPLEBANK1                       00000001
SAMPLEBANK2                       00000003
SAMPLEBANK3                       00000002
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000004BA
Sample1MhzEnd                     000008BF
Sample250kA                       000003D4
Sample250kB                       000003EB
Sample250kC                       00000402
Sample250kD                       00000419
Sample417k250k                    000003C4
Sample417kA                       000003D5
Sample417kB                       000003EC
Sample417kC                       00000403
Sample417kD                       0000041A
Sample417kLoopA                   000003CD
Sample417kLoopB                   000003E4
Sample417kLoopC                   000003FB
Sample417kLoopD                   00000412
Sample625k                        00000381
Sample625kLoopA                   00000387
Sample625kLoopB                   00000397
Sample625kLoopC                   000003A7
Sample625kLoopD                   000003B7
Sample833k                        00000FC1
Sample833kEnd                     000013C7
SampleDelayed                     00000273
SampleDelayedLoopA                0000027E
SampleDelayedLoopB                00000298
SampleDelayedLoopC                000002B2
SampleDelayedLoopD                000002CC
SampleIntDrvn                     0000016A
SampleRealTime                    000001EC
SampleRep2M                       000019F7
SampleRep2MPickEn                 00001A04
SampleRep2MPickSt                 000019FB
SampleRep2MStep1                  00001A04
SampleRep2MStep2                  00001C0B
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep2MStep3                  00001E0C
SampleRep5M                       000015C4
SampleRep5MEndA                   000016DC
SampleRep5MEndB                   000016E1
SampleRep5MEndC                   000016DF
SampleRep5MPickEn                 000015D7
SampleRep5MPickSt                 000015C8
SampleRep5MStep1                  000015D7
SampleRep5MStep2                  000016E7
SampleRep5MStep3                  000017EA
SampleRep5MStep4                  000018ED
SampleRep5MStep5                  000019F1
SampleXY250k192k                  00000427
SampleXY250kLA                    00000436
SampleXY250kLB                    0000045A
SampleXY250kLC                    0000047E
SampleXY250kLD                    000004A2
SampleXY417k                      000009BE
SampleXYDelayed                   000002DE
SampleXYDelayedLA                 000002F0
SampleXYDelayedLB                 00000318
SampleXYDelayedLC                 00000340
SampleXYDelayedLD                 00000368
StSample417kLoopB                 000003E9
StSample417kLoopC                 00000400
StSample417kLoopD                 00000417
StSampleDelayedLoopA              00000283
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitComm                          000000A4
WaitComm_Break                    000000ED
WaitComm_Conf                     000000D7
WaitComm_Data                     000000A5
WaitComm_Rec                      000000E0
WaitComm_SendDataA                000000B0
WaitComm_SendDataB                000000BA
WaitComm_SendDataC                000000C4
WaitComm_SendDataD                000000CE
WaitComm_SendDataExit             000000D4
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
b0_fsr_temp                       00000066
b0_sampleAddr                     00000064
b0_sampleBank                     00000065
b0_triggerDelay1                  00000060
b0_triggerDelay2                  00000061
b0_triggerDelay3                  00000062
b0_triggerLevel                   00000063
b0_unused0                        0000006F
b0_unused1                        0000006E
b0_unused2                        0000006D
b0_unused3                        0000006C
b0_unused4                        0000006B
b0_unused5                        0000006A
b0_unused6                        00000069
b0_unused7                        00000068
b0_unused8                        00000067
b1_unused0                        000000EF
b1_unused1                        000000EE
b1_unused2                        000000ED
b1_unused3                        000000EC
b1_unused4                        000000EB
b1_unused5                        000000EA
b1_unused6                        000000E9
b1_unused7                        000000E8
b1_unused8                        000000E7
b1_unused9                        000000E6
b1_unusedA                        000000E5
b1_unusedB                        000000E4
b1_unusedC                        000000E3
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

b1_unusedD                        000000E2
b1_unusedE                        000000E1
b1_unusedF                        000000E0
b2_unused0                        0000016F
b2_unused1                        0000016E
b2_unused10                       0000011F
b2_unused11                       0000011E
b2_unused12                       0000011D
b2_unused13                       0000011C
b2_unused14                       0000011B
b2_unused15                       0000011A
b2_unused16                       00000119
b2_unused17                       00000118
b2_unused18                       00000117
b2_unused19                       00000116
b2_unused1A                       00000115
b2_unused1B                       00000114
b2_unused1C                       00000113
b2_unused1D                       00000112
b2_unused1E                       00000111
b2_unused1F                       00000110
b2_unused2                        0000016D
b2_unused3                        0000016C
b2_unused4                        0000016B
b2_unused5                        0000016A
b2_unused6                        00000169
b2_unused7                        00000168
b2_unused8                        00000167
b2_unused9                        00000166
b2_unusedA                        00000165
b2_unusedB                        00000164
b2_unusedC                        00000163
b2_unusedD                        00000162
b2_unusedE                        00000161
b2_unusedF                        00000160
b3_unused0                        000001EF
b3_unused1                        000001EE
b3_unused10                       0000019F
b3_unused11                       0000019E
b3_unused12                       0000019D
b3_unused13                       0000019C
b3_unused14                       0000019B
b3_unused15                       0000019A
b3_unused16                       00000199
b3_unused17                       00000198
b3_unused18                       00000197
b3_unused19                       00000196
b3_unused1A                       00000195
b3_unused1B                       00000194
b3_unused1C                       00000193
b3_unused1D                       00000192
b3_unused1E                       00000191
b3_unused1F                       00000190
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

b3_unused2                        000001ED
b3_unused3                        000001EC
b3_unused4                        000001EB
b3_unused5                        000001EA
b3_unused6                        000001E9
b3_unused7                        000001E8
b3_unused8                        000001E7
b3_unused9                        000001E6
b3_unusedA                        000001E5
b3_unusedB                        000001E4
b3_unusedC                        000001E3
b3_unusedD                        000001E2
b3_unusedE                        000001E1
b3_unusedF                        000001E0
clockFreq                         00000020
f                                 00000001
gbl_cntra                         00000073
gbl_cntrb                         00000074
gbl_cntrc                         00000075
gbl_configLoc1                    00000070
gbl_dataConfig                    00000079
gbl_modetemp                      00000076
gbl_modetempb                     00000077
gbl_pclath_temp                   0000007C
gbl_sampleRate1                   00000071
gbl_sampleRate2                   00000072
gbl_spdata                        00000078
gbl_status_temp                   0000007B
gbl_unused0                       0000007F
gbl_unused1                       0000007E
gbl_unused2                       0000007D
gbl_w_temp                        0000007A
ih_1                              0000000A
ih_2                              00000042
ih_3                              0000004B
irqst1_5                          00000165
irqst1_6                          00000159
irqst1_7                          0000015B
sid_Exit                          000001E2
sid_GetByte                       0000017F
sid_GetByteB                      00000187
sid_GetByteC                      0000018B
sid_GetByteD                      0000018F
sid_GetByteE                      00000193
sid_WaitComm_Break                000001DA
sid_WaitComm_Conf                 000001C8
sid_WaitComm_Data                 00000195
sid_WaitComm_Rec                  000001D1
sid_WaitComm_SendDataA            000001A1
sid_WaitComm_SendDataB            000001AB
sid_WaitComm_SendDataC            000001B5
sid_WaitComm_SendDataD            000001BF
sid_WaitComm_SendDataExit         000001C5
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
w                                 00000000


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 221


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 222


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.46          DSOSCOPEA03_20120928.ASM   9-28-2012  21:51:04         PAGE 223


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XX-------------- ---------------- ----------------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7698
Program Memory Words Free:   494


Errors   :     0
Warnings :     0 reported,  1133 suppressed
Messages :    16 reported,    26 suppressed

