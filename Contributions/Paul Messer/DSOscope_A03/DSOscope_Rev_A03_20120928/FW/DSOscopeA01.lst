MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: An oscilloscope program based on the PIC16F877 and the MAX118
                      00005 ;*Version: 1.200
                      00006 ;*Date: 6/28/2011
                      00007 ;*Filename: osc.asm
                      00008 ;
                      00009 ;Versions:      1.000 - 3/29/2003
                      00010 ;                       1.000 - 7/26/2004
                      00011 ;                       1.000 - 4/2/2005
                      00012 ;                       1.000 - 9/29/2005 -- Additional Header comments and license added
                      00013 ;                       1.101 - 11/3/2005 -- Began to modify for use on PIC16F877
                      00014 ;                       1.102 - 3/28/2006 -- Made trigger interrupt based, expanded sampling
                      00015 ;                               to 256 samples across modes
                      00016 ;                       1.102 - 4/12/2006 -- Finished expanding sampling to 256 samples.
                      00017 ;                               Still need to test communication, sampleDelayed and sampleXY
                      00018 ;                               modes.
                      00019 ;                       1.103 - 4/29/2007 -- Fixed interlaced sampling, modified so sample
                      00020 ;                               data configuration and trigger level are measured after the
                      00021 ;                               data buffer if filled instead of at communication.
                      00022 ;                       1.104 - 6/27/2007 -- Added faster XY sampling modes
                      00023 ;                       1.105 - 7/18/2007 -- Added repetitive sampling and wait for trigger
                      00024 ;                               in WaitComm so the scope will respond to the PC
                      00025 ;                       1.106 - 3/1/2009 -- changed the trigger back to not respond to PC
                      00026 ;                       1.107 - 3/1/2009 -- Changed the trigger code to shorten the 
                      00027 ;                               trigger delay. - NEED TO TEST
                      00028 ;                               Made scope responsive to trigger change message. - NEED TO TEST
                      00029 ;                               Removed the use of the slave parallel port. - NEED TO TEST
                      00030 ;                               Combined SampleXY250 and SampleXY192. - NEED TO TEST - tested 3/5/2009
                      00031 ;                       1.108 - 3/9/2009 -- changed trigger code to broaden range of trigger
                      00032 ;                               delay - NEED TO TEST
                      00033 ;                       1.109 - 10/28/2009 -- tested and fixed bug with trigger code
                      00034 ;                       1.110 - 5/12/2010 -- Added serial port support to code.  NEED TO TEST
                      00035 ;                       1.111 - 2/1/2011 -- fixed a bug with the trigger code (another one)
                      00036 ;                       1.200 - 6/28/2011 - Modified code to handle conditional compile for
                      00037 ;                               hardware version 1.0 or hardware version 1.2
                      00038 
                      00039 ;*****BEGIN PM DSOscope CHANGE************************************************
                      00040 ;NEW VERSION CREATED:   A01
                      00041 ;       20120522.1 - by PM
                      00042 ;               Changes for working with new DSOscope hardware (uses PIC16F887
                      00043 ;               instead of PIC16F877A).  Changes made for serial port configuration
                      00044 ;               and disabling of PIC ADC so port pins work as digital.
                      00045 ;               Changes made to eliminate I2C references/accesses.
                      00046 ;*****END PM DSOscope CHANGE**************************************************
                      00047 ;
                      00048 ;
                      00049 ;Copyright (C) 2003-2011 Jonathan Weaver
                      00050 ;
                      00051 ;This program is free software; you can redistribute it and/or modify it under
                      00052 ;the terms of the GNU General Public License as published by the Free Software
                      00053 ;Foundation; either version 2 of the License, or (at your option) any later
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;version.
                      00055 ;
                      00056 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00057 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00058 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00059 ;details.
                      00060 ;
                      00061 ;You should have received a copy of the GNU General Public License along with
                      00062 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00063 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00064 ;
                      00065 ;==============================================================================
                      00066 
                      00067 ;=============================================================================
                      00068 ; C O N F I G U R A T I O N
                      00069 ;=============================================================================
                      00070 
                      00071         LIST P=16F887
                      00072 
                      00073         errorlevel      -302, -205, -207                ;Suppress bank selection messages
                      00074 
                      00075 
                      00076 ;*****************************************************
                      00077 ;       === Configuration Word Definitions ===
                      00078 ;*****************************************************
                      00079 ; Defines for PIC16F887 operation in the DSOscope CPU Board
                      00080 
                      00081 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00082 ; The labels following the directive are located in the respective .inc file.
                      00083 ; See respective data sheet for additional information on configuration word.
                      00084 
2007   20F2           00085         __CONFIG _CONFIG1, _DEBUG_OFF & _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OF
                            F & _MCLRE_ON & _PWRTE_OFF & _WDT_OFF & _HS_OSC
2008   3FFF           00086         __CONFIG _CONFIG2, _WRT_OFF & _BOR40V
                      00087 
                      00088 ; '__idlocs' sets the four ID locations to the hexadecimal value of expression.
                      00089 ; These are not readable by the cpu, but can be read by the programning hardware.
                      00090 
2000   0001 0002 0003 00091         __idlocs        0x1234
       0004 
                      00092 
  00000020            00093         clockFreq = 20                                  ;20 = 20 MHZ, 4 = 4 MHZ
                      00094 
                      00095 ;=============================================================================
                      00096 ; C O N S T A N T S
                      00097 ;=============================================================================
                      00098 
  00000020            00099 BUFFERMIN               equ     0x20    ;Memory restrictions for the buffer
  00000040            00100 BUFFERSIZE              equ     D'64'   ;Number of data points to store.  In single channel
                      00101                                                         ;mode, all data points are for one channel, in X
                            Y mode
                      00102                                                         ;the data points alternate between channel 1 and
                      00103                                                         ;channel 2
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000005F            00104 BUFFERMAX               equ     BUFFERMIN+BUFFERSIZE-1
  00000100            00105 TOTALBUFFERSIZE equ     BUFFERSIZE*4
                      00106 
                      00107 ;I/O Pin maps
                      00108 ;-----------------------------------------------------------------------------
  00000007            00109         SERIALPORT      set     PORTC
  00000007            00110                 RX              equ     0x07
  00000006            00111                 TX              equ     0x06
                      00112 
  00000009            00113         ADC_CONTROLPORT set     PORTE
  00000000            00114                 RDD             equ     0x00
  00000001            00115                 ADDR0   equ     0x01
                      00116 
  00000006            00117         TRIGGERPORT     set     PORTB
  00000000            00118                 TRIGGER equ     0x00
                      00119 
  00000006            00120         ADC_PORT        set     PORTB
  00000003            00121                 ADDR2   equ     0x03
  00000002            00122                 ADDR1   equ     0x02
  00000001            00123                 CS              equ     0x01
                      00124 
  00000008            00125         ADC_DATAPORT    set     PORTD
                      00126 
  00000007            00127         ANALOG_SEL      set     PORTC
  00000001            00128                 CH1SEL  equ     0x01
  00000002            00129                 CH2SEL  equ     0x02
                      00130 
  00000005            00131         ANALOG_GAIN     set     PORTA
  00000000            00132                 GAIN1   equ     0x00
  00000001            00133                 GAIN5   equ     0x01
  00000004            00134                 CH1SELG equ     0x04
  00000005            00135                 CH2SELG equ     0x05
                      00136 
  00000007            00137         ANALOG_ACDC     set     PORTC
  00000000            00138                 ACDCMODE        equ     0x00
                      00139 
                      00140 ;Configuration memory map
                      00141 ;-----------------------------------------------------------------------------
                      00142 ;Bit map for configLoc1
  00000007            00143         TRIGGERPOSBIT           equ     0x07    ;1 is positive slope trigger, 0 is negative slope
  00000006            00144         TRIGGERENBIT            equ     0x06    ;1 is trigger enabled, 0 is no trigger
  00000005            00145         CLOCKFREQBIT            equ     0x05    ;1 is 20 MHz, 0 is 4 MHz
  00000004            00146         CHANNELBIT                      equ     0x04    ;1 is channel 2, 0 is channel 1
  00000003            00147         FREQMODEBIT3            equ     0x03    ;Reserve the bits in CONFIGLOC1 for the frequency modes
  00000002            00148         FREQMODEBIT2            equ     0x02
  00000001            00149         FREQMODEBIT1            equ     0x01
  00000000            00150         FREQMODEBIT0            equ     0x00
                      00151 
  00000000            00152         FREQSAMPLE1M            equ     D'0'    ;Table of frequency modes, 0 to 15
  00000001            00153         FREQSAMPLE833K          equ     D'1'
  00000002            00154         FREQSAMPLE625K          equ     D'2'
  00000003            00155         FREQSAMPLE417K          equ     D'3'
  00000004            00156         FREQSAMPLE250K          equ     D'4'
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000005            00157         FREQSAMPLEDELAYED       equ     D'5'
  00000006            00158         FREQSAMPLEREP5M         equ     D'6'    ;Ensure trigger is enabled
  00000007            00159         FREQSAMPLEREP2M         equ     D'7'    ;Ensure trigger is enabled
  00000008            00160         FREQSAMPLEXY417K        equ     D'8'
  00000009            00161         FREQSAMPLEXY250K        equ     D'9'
  0000000A            00162         FREQSAMPLEXY192K        equ     D'10'
  0000000B            00163         FREQSAMPLEXYDELAYED     equ     D'11'
                      00164 
                      00165 ;=============================================================================
                      00166 ; V A R I A B L E S
                      00167 ;=============================================================================
                      00168 
                      00169 CBLOCK  0x70                    ;Shared General Purpose Registers, accessible anywhere
  00000070            00170         configLoc1                      ;Configuration mode
  00000071            00171         triggerDelay1           ;trigger delay (3 bytes)
  00000072            00172         triggerDelay2
  00000073            00173         triggerDelay3
  00000074            00174         sampleRate1                     ;sample rate delay (2 bytes)
  00000075            00175         sampleRate2
  00000076            00176         cntra                           ;general use counter
  00000077            00177         cntrb                           ;second counter
  00000078            00178         cntrc                           ;third counter
  00000079            00179         modetemp                        ;temporary mode variable
  0000007A            00180         modetempb                       ;temporary mode for repetitive sampling
  0000007B            00181         cntr                            ;counter variable (use to throttle serial port for USB converter
                            )
  0000007C            00182         spdata                          ;data to/from serial port
  0000007D            00183         dataConfig                      ;the data configuration
  0000007E            00184         triggerLevel            ;the trigger level
                      00185 ENDC
                      00186 
                      00187 
                      00188 ;=============================================================================
                      00189 ; I N C L U D E S
                      00190 ;=============================================================================
                      00191         include "p16F887.inc"
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
                      00192         include "equality.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description: A set of equality testing macros.  Assumes all registers and literals are signed bytes.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 7/10/2003
                      00007 ;*Filename: equality.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 -- Code finished.  Added comments.
                      00010 ;                       1.0 - 9/29/2005 -- Additional Header comments and license added
                      00011 ;
                      00012 ;Copyright (C) 2005 Jonathan Weaver
                      00013 ;
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00014 ;This program is free software; you can redistribute it and/or modify it under 
                      00015 ;the terms of the GNU General Public License as published by the Free Software 
                      00016 ;Foundation; either version 2 of the License, or (at your option) any later 
                      00017 ;version.
                      00018 ;
                      00019 ;This program is distributed in the hope that it will be useful, but WITHOUT 
                      00020 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00021 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
                      00022 ;details.
                      00023 ;
                      00024 ;You should have received a copy of the GNU General Public License along with 
                      00025 ;this program; if not, write to the Free Software Foundation, Inc., 
                      00026 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00027 ;
                      00028 ;==============================================================================
                      00029 
                      00030 ;================================================================================
                      00031 ; M A C R O S
                      00032 ;================================================================================
                      00033 
                      00034 ;*This macro skips the next line if regA is equal to regB
                      00035 skipEqFF macro regA,regB ;public
                      00036         movf regA, w
                      00037         xorwf regB, w
                      00038         btfss STATUS, Z
                      00039 endm
                      00040 
                      00041 ;*This macro skips the next line if regA is greater than or equal to regB
                      00042 skipGrEqFF macro regA, regB ;public
                      00043         movf regB, w
                      00044         subwf regA, w
                      00045         andlw B'10000000'
                      00046         btfss STATUS, Z
                      00047 endm
                      00048 
                      00049 ;*This macro skips the next line if regA is greater than regB
                      00050 skipGrFF macro regA, regB ;public
                      00051         movf regA, w
                      00052         subwf regB, w
                      00053         andlw B'10000000'
                      00054         btfsc STATUS, Z
                      00055 endm
                      00056 
                      00057 ;*This macro skips the next line if the literal is equal to regB
                      00058 skipEqLF macro lit, regB ;public
                      00059         movf regB, w
                      00060         xorlw lit
                      00061         btfss STATUS, Z
                      00062 endm
                      00063 
                      00064 ;*This macro skips the next line if the literal is greater than or equal to regB
                      00065 skipGrEqLF macro lit, regB ;public
                      00066         movf regB, w
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00067         sublw lit
                      00068         andlw B'10000000'
                      00069         btfss STATUS, Z
                      00070 endm
                      00071 
                      00072 ;*This macro skips the next line if the literal is greater than regB
                      00073 skipGrLF macro lit, regB ;public
                      00074         movlw lit
                      00075         subwf regB, w
                      00076         andlw B'10000000'
                      00077         btfsc STATUS, Z
                      00078 endm
                      00079 
                      00080 ;*This macro skips the next line if the regA is greater than or equal to the literal
                      00081 skipGrEqFL macro regA, lit ;public
                      00082         movlw lit
                      00083         subwf regA, w
                      00084         andlw B'10000000'
                      00085         btfss STATUS, Z
                      00086 endm
                      00087 
                      00088 ;*This macro skips the next line if the regA is greater than the literal
                      00089 skipGrFL macro regA, lit ;public
                      00090         movf regA, w
                      00091         sublw regB
                      00092         andlw B'10000000'
                      00093         btfsc STATUS, Z
                      00094 endm
                      00095 
                      00096 ;*This macro skips the next line if the result of the previous line is zero
                      00097 skipZero macro ;public
                      00098         btfss STATUS, Z
                      00099 endm
                      00100 
                      00101 ;*This macro skips the next line if the result of the previous line is not zero
                      00102 skipNotZero macro ;public
                      00103         btfsc STATUS, Z
                      00104 endm
                      00105 
                      00106 ;*This macro skips the next line if the result of the previous line is less than zero
                      00107 skipLessZero macro ;public
                      00108         andlw B'10000000'
                      00109         btfsc STATUS, Z
                      00110 endm
                      00111 
                      00112 ;*This macro skips the next line if the result of the previous line is more than or equal to zero
                      00113 skipMoreEqZero macro ;public
                      00114         andlw B'10000000'
                      00115         btfss STATUS, Z
                      00116 endm
                      00117 
                      00118 ;*This macro skips the next line if the result of the previous line is less than or equal to zero
                      00119 skipLessEqZero macro ;public
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00120         addlw B'01111111'
                      00121         andlw B'10000000'
                      00122         btfss STATUS, Z
                      00123 endm
                      00124 
                      00125 ;*This macro skips the next line if the result of the previous line is more than zero
                      00126 skipMoreZero macro ;public
                      00127         addlw B'01111111'
                      00128         andlw B'10000000'
                      00129         btfsc STATUS, Z
                      00130 endm
                      00193         include "banks.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Banking macro.  A replacement for the banksel command.  Uses minimal bit set/clear comma
                            nds to set desired bank.
                      00005 ;*Version: 2.0
                      00006 ;*Date: 11/9/2005
                      00007 ;*Filename:  banks.inc
                      00008 ;
                      00009 ;Versions:  1.0 - 7/10/2003 - Created Unit
                      00010 ;                       1.0 - 9/29/2005 - Added comments and license
                      00011 ;                       2.0 - 11/9/2005 - Complete change in file, generalized for
                      00012 ;                                                         different processor banking, selects bank base
                            d
                      00013 ;                                                         on label passed to BNKSEL function.
                      00014 ;                                                         Removed BANK0 and BANK1 macros (for flexibilit
                            y)
                      00015 ;
                      00016 ;Copyright (C) 2005 Jonathan Weaver
                      00017 ;
                      00018 ;This program is free software; you can redistribute it and/or modify it under
                      00019 ;the terms of the GNU General Public License as published by the Free Software
                      00020 ;Foundation; either version 2 of the License, or (at your option) any later
                      00021 ;version.
                      00022 ;
                      00023 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00024 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00025 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00026 ;details.
                      00027 ;
                      00028 ;You should have received a copy of the GNU General Public License along with
                      00029 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00030 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00031 ;
                      00032 ;==============================================================================
                      00033 
  0000                00034 variable CURRENTBANK
  00000000            00035 CURRENTBANK set 0x0000
                      00036 
                      00037 
                      00038 ;*Sets the STATUS bits RP0 and RP1 correctly depending on the label passed.
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ; Comparable to banksel command, except that it remembers the last bank selected
                      00040 ; in a variable named CURRENTBANK.  Based on CURRENTBANK and label, it will
                      00041 ; execute only necessary bsf, bcf commands.  1 to 2 program words and cycles.
                      00042 ;*reg: the register whose bank to select
                      00043 BNKSEL macro reg ;public
                      00044         if reg & 0x0100
                      00045                 if (CURRENTBANK & 0x0100) == 0
                      00046                         bsf STATUS, RP1
                      00047                 endif
                      00048         else
                      00049                 if (CURRENTBANK & 0x0100) == 0x0100
                      00050                         bcf STATUS, RP1
                      00051                 endif
                      00052         endif
                      00053         if reg & 0x0080
                      00054                 if (CURRENTBANK & 0x0080) == 0
                      00055                         bsf STATUS, RP0
                      00056                 endif
                      00057         else
                      00058                 if (CURRENTBANK & 0x0080) == 0x0080
                      00059                         bcf STATUS, RP0
                      00060                 endif
                      00061         endif
                      00062         CURRENTBANK set reg & 0x180
                      00063 endm
                      00064 
                      00065 
                      00194         include "asmext.inc"
                      00001 ;==============================================================================
                      00002 ;*Author:  Jonathan Weaver, jonw0224@aim.com
                      00003 ;E-mail Contact: jonw0224@aim.com
                      00004 ;*Description:  Extention of assembly instructions on registers and literals.
                      00005 ;*Version: 1.0
                      00006 ;*Date: 11/1/2005
                      00007 ;*Filename: asmext.inc
                      00008 ;
                      00009 ;Copyright (C) 2005 Jonathan Weaver
                      00010 ;
                      00011 ;This program is free software; you can redistribute it and/or modify it under
                      00012 ;the terms of the GNU General Public License as published by the Free Software
                      00013 ;Foundation; either version 2 of the License, or (at your option) any later
                      00014 ;version.
                      00015 ;
                      00016 ;This program is distributed in the hope that it will be useful, but WITHOUT
                      00017 ;ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
                      00018 ;FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
                      00019 ;details.
                      00020 ;
                      00021 ;You should have received a copy of the GNU General Public License along with
                      00022 ;this program; if not, write to the Free Software Foundation, Inc.,
                      00023 ;51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
                      00024 ;
                      00025 ;Versions:  1.0 - 1/5/2005 - Defined headers, began writing macros
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00026 ;           1.0 - 1/6/2005 - Wrote more macros
                      00027 ;           1.0 - 7/1/2005 - Tested macros, fixed bugs.  Rewrote SHIFTX and ROTX.
                      00028 ;                       1.0 - 7/11/2005 - Finished testing macros.  Added comments to headers.
                      00029 ;                       1.0 - 11/1/2005 - Wrote VROTF and VSHIFTF macros.
                      00030 ;==============================================================================
                      00031 
  00000001            00032 f equ F
  00000000            00033 w equ W
                      00034 
                      00035 ;------------------------------------------------------------------------------
                      00036 ;*Adds regA to regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00037 ;*regA: the register to add to regB
                      00038 ;*regB: the register to add to regA
                      00039 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00040 ADDFF macro regA, regB, dest    ;public
                      00041     movf regA, w
                      00042     addwf regB, dest
                      00043 endm
                      00044 
                      00045 ;------------------------------------------------------------------------------
                      00046 ;*Ands regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00047 ;*regA: the register to and with regB
                      00048 ;*regB: the register to and with regA
                      00049 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00050 ANDFF macro regA, regB, dest    ;public
                      00051     movf regA, w
                      00052     andwf regB, dest
                      00053 endm
                      00054 
                      00055 ;------------------------------------------------------------------------------
                      00056 ;*Inclusive ors regA and regB and stores in WREG or regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00057 ;*regA: the register to or with regB
                      00058 ;*regB: the register to or with regA
                      00059 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00060 IORFF macro regA, regB, dest    ;public
                      00061     movf regA, w
                      00062     iorwf regB, dest
                      00063 endm
                      00064 
                      00065 ;------------------------------------------------------------------------------
                      00066 ;*Moves the value in regA to regB.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00067 ;*regA: the register to move to regB
                      00068 ;*regB: the destination register
                      00069 MOVFF macro regA, regB  ;public
                      00070     movf regA, w
                      00071     movwf regB
                      00072 endm
                      00073 
                      00074 ;------------------------------------------------------------------------------
                      00075 ;*Shifts the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cycl
                            es.
                      00076 ;*reg: the register to shift
                      00077 ;*lit: a literal containing the number of bits to shift left
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00078 SHIFTL macro reg, lit   ;public
                      00079     local cnt
                      00080     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00081         cnt = lit
                      00082         while cnt > 0
                      00083             rlf reg, f
                      00084             cnt--
                      00085         endw
                      00086         if (lit) == 1
                      00087             bcf reg, 0
                      00088         else
                      00089             if (lit) == 2
                      00090                 bcf reg, 0
                      00091                 bcf reg, 1
                      00092             else
                      00093                 movlw (0xFF << (lit))
                      00094                     andwf reg, f
                      00095                 endif
                      00096         endif
                      00097     else
                      00098         if (lit) < 6
                      00099             if (lit) == 4           ;4 -> 3 cycles
                      00100                 swapf reg, f
                      00101                 movlw 0xF0
                      00102                 andwf reg, f
                      00103             else                    ;5 -> 4 cycles
                      00104                 swapf reg, f
                      00105                 rlf reg, f
                      00106                 movlw B'11100000'
                      00107                 andwf reg, f
                      00108             endif
                      00109         else
                      00110             if (lit) == 6           ;6 -> 5 cycles
                      00111                 rrf reg, f
                      00112                 rrf reg, f
                      00113                 rrf reg, f
                      00114                 movlw B'11000000'
                      00115                 andwf reg, f
                      00116             else                    ;7 -> 3 cycles
                      00117                 rrf reg, f
                      00118                 clrf reg
                      00119                 rrf reg, f
                      00120             endif
                      00121         endif
                      00122     endif
                      00123 endm
                      00124 
                      00125 ;------------------------------------------------------------------------------
                      00126 ;*Shifts the value in reg right by lit and stores in reg.  Affects WREG, STATUS.  2 to 5 Instruction Cyc
                            les.
                      00127 ;*reg: the register to shift
                      00128 ;*lit: a literal containing the number of bits to shift left
                      00129 SHIFTR macro reg, lit   ;public
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00130     local cnt
                      00131     if (lit) < 4                    ;1 -> 2 cycles, 2 -> 4 cycles, 3 -> 5 cycles
                      00132         cnt = lit
                      00133         while cnt > 0
                      00134             rrf reg, f
                      00135             cnt--
                      00136         endw
                      00137         if (lit) == 1
                      00138             bcf reg, 7
                      00139         else
                      00140             movlw (0xFF >> (lit))
                      00141             andwf reg, f
                      00142         endif
                      00143     else
                      00144         if (lit) < 6
                      00145             if (lit) == 4           ;4 -> 3 cycles
                      00146                 swapf reg, f
                      00147                 movlw 0x0F
                      00148                 andwf reg, f
                      00149             else                    ;5 -> 4 cycles
                      00150                 swapf reg, f
                      00151                 rrf reg, f
                      00152                 movlw B'00000111'
                      00153                 andwf reg, f
                      00154             endif
                      00155         else
                      00156             if (lit) == 6           ;6 -> 5 cycles
                      00157                 rlf reg, f
                      00158                 rlf reg, f
                      00159                 rlf reg, f
                      00160                 movlw B'00000011'
                      00161                 andwf reg, f
                      00162             else                    ;7 -> 3 cycles
                      00163                 rlf reg, f
                      00164                 clrf reg
                      00165                 rlf reg, f
                      00166             endif
                      00167         endif
                      00168     endif
                      00169 endm
                      00170 
                      00171 ;------------------------------------------------------------------------------
                      00172 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00173 ;*reg: the register to shift
                      00174 ;*lit: a literal containing the number of bits to shift left
                      00175 ROTL macro reg, lit     ;public
                      00176     local cnt
                      00177     if (lit) < 3                    ;1 -> 2 cycles, 2 -> 4 cycles
                      00178         cnt = lit
                      00179         while cnt > 0
                      00180             rlf reg, w
                      00181             rlf reg, f
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00182             cnt--
                      00183         endw
                      00184     else
                      00185         if (lit) < 6
                      00186             swapf reg, f            ;4 -> 1 cycles
                      00187             if (lit) == 3           ;3 -> 3 cycles
                      00188                 rrf reg, w
                      00189                 rrf reg, f
                      00190             endif
                      00191             if (lit) == 5
                      00192                 rlf reg, w          ;5 -> 3 cycles
                      00193                 rlf reg, f
                      00194             endif
                      00195         else                        ;6 -> 4 cycles, 7 -> 2 cycles
                      00196             cnt = 8 - (lit)
                      00197             while cnt > 0
                      00198                 rrf reg, w
                      00199                 rrf reg, f
                      00200                 cnt--
                      00201             endw
                      00202         endif
                      00203     endif
                      00204 endm
                      00205 
                      00206 ;------------------------------------------------------------------------------
                      00207 ;*Rotates the value in reg left by lit and stores in reg.  Affects WREG, STATUS.  1 to 4 Instruction Cyc
                            les.
                      00208 ;*reg: the register to shift
                      00209 ;*lit: a literal containing the number of bits to shift left
                      00210 ROTR macro reg, lit     ;public
                      00211     ROTL reg, 8-lit
                      00212 endm
                      00213 
                      00214 ;------------------------------------------------------------------------------
                      00215 ;*Shifts regA left by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00216 ;*regA: register to shift
                      00217 ;*regB: register that determines shift (7 to 0 are valid)
                      00218 VSHIFTL macro regA, regB ;public
                      00219     bcf STATUS, C   ;Conditional shift by 1
                      00220     btfsc regB, 0
                      00221         rlf regA, f
                      00222     bcf STATUS, C   ;Conditional shift by 2
                      00223     btfsc regB, 1
                      00224         rlf regA, f
                      00225     bcf STATUS, C
                      00226     btfsc regB, 1
                      00227         rlf regA, f
                      00228     swapf regA, w      ;Conditional shift by 4
                      00229     andlw 0xF0
                      00230     btfsc regB, 2
                      00231         movwf regA
                      00232 endm
                      00233 
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234 ;------------------------------------------------------------------------------
                      00235 ;*Shifts regA right by regB.  Requires 13 program words and 13 cycles.  Affects WREG and STATUS.
                      00236 ;*regA: register to shift
                      00237 ;*regB: register that determines shift (7 to 0 are valid)
                      00238 VSHIFTR macro regA, regB ;public
                      00239     bcf STATUS, C   ;Conditional shift by 1
                      00240     btfsc regB, 0
                      00241         rrf regA, f
                      00242     bcf STATUS, C   ;Conditional shift by 2
                      00243     btfsc regB, 1
                      00244         rrf regA, f
                      00245     bcf STATUS, C
                      00246     btfsc regB, 1
                      00247         rrf regA, f
                      00248     swapf regA, w      ;Conditional shift by 4
                      00249     andlw 0x0F
                      00250     btfsc regB, 2
                      00251         movwf regA
                      00252 endm
                      00253 
                      00254 ;------------------------------------------------------------------------------
                      00255 ;*Rotates regA left by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00256 ;*regA: register to rotate
                      00257 ;*regB: register that determines rotate (7 to 0 are valid)
                      00258 VROTL macro regA, regB ;public
                      00259     rlf regA, w        ;Conditional rotate by 1
                      00260     btfsc regB, 0
                      00261         rlf regA, f
                      00262     rlf regA, w        ;Conditional rotate by 2
                      00263     btfsc regB, 1
                      00264         rlf regA, f
                      00265     rlf regA, w
                      00266     btfsc regB, 1
                      00267         rlf regA, f
                      00268     btfsc regB, 2      ;Conditional rotate by 4
                      00269         swapf regA, f
                      00270 endm
                      00271 
                      00272 ;------------------------------------------------------------------------------
                      00273 ;*Rotates regA right by regB.  Requires 11 program words and 11 cycles.  Affects WREG and STATUS.
                      00274 ;*regA: register to rotate
                      00275 ;*regB: register that determines rotate (7 to 0 are valid)
                      00276 VROTR macro regA, regB ;public
                      00277     rrf regA, w        ;Conditional rotate by 1
                      00278     btfsc regB, 0
                      00279         rrf regA, f
                      00280     rrf regA, w        ;Conditional rotate by 2
                      00281     btfsc regB, 1
                      00282         rrf regA, f
                      00283     rrf regA, w
                      00284     btfsc regB, 1
                      00285         rrf regA, f
                      00286     btfsc regB, 2      ;Conditional rotate by 4
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00287         swapf regA, f
                      00288 endm
                      00289 
                      00290 ;------------------------------------------------------------------------------
                      00291 ;*Subracts regA from regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00292 ;*regA: the register to subtract
                      00293 ;*regB: the register to subtract from
                      00294 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00295 SUBFF macro regA, regB, dest    ;public
                      00296     movf regA, w
                      00297     subwf regB, dest
                      00298 endm
                      00299 
                      00300 ;------------------------------------------------------------------------------
                      00301 ;*Exclusive ors regA and regB and stores in WREG or regB.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00302 ;*regA: the register to exclusive or with regB
                      00303 ;*regB: the register to exclusive or with regA
                      00304 ;*dest: literal equal to F to store in regB, W to store in WREG
                      00305 XORFF macro regA, regB, dest    ;public
                      00306     movf regA, w
                      00307     xorwf regB, dest
                      00308 endm
                      00309 
                      00310 ;------------------------------------------------------------------------------
                      00311 ;*Adds lit and reg and stores in WREG or reg.  Affects STATUS, WREG.  2 Instruction Cycles.
                      00312 ;*lit: the literal to add with reg
                      00313 ;*reg: the register to add with lit
                      00314 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00315 ADDLF macro lit, reg, dest      ;public
                      00316     movlw lit
                      00317     addwf reg, dest
                      00318 endm
                      00319 
                      00320 ;------------------------------------------------------------------------------
                      00321 ;*Ands lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00322 ;*lit: literal to and with reg
                      00323 ;*reg: register to and with lit
                      00324 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00325 ANDLF macro lit, reg, dest      ;public
                      00326     movlw lit
                      00327     andwf reg, dest
                      00328 endm
                      00329 
                      00330 ;------------------------------------------------------------------------------
                      00331 ;*Inclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00332 ;*lit: literal to inclusive or with reg
                      00333 ;*reg: register to inclusive or with lit
                      00334 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00335 IORLF macro lit, reg, dest      ;public
                      00336     movlw lit
                      00337     iorwf reg, dest
                      00338 endm
                      00339 
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00340 ;------------------------------------------------------------------------------
                      00341 ;*Moves lit to reg.  Affects WREG.  2 Instruction Cycles.
                      00342 ;*lit: literal to move
                      00343 ;*reg: register to move literal to
                      00344 MOVLF macro lit, reg    ;public
                      00345     movlw lit
                      00346     movwf reg
                      00347 endm
                      00348 
                      00349 ;------------------------------------------------------------------------------
                      00350 ;*Subtracts reg from lit and stores in WREG or reg.  Affects WREG, STATUS.  2 to 3 Instruction Cycles.
                      00351 ;*lit: literal to subtract from
                      00352 ;*reg: register to subtract from literal
                      00353 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00354 SUBLF macro lit, reg, dest      ;public
                      00355     movf reg, w
                      00356     sublw lit
                      00357     if dest == 1
                      00358         movwf reg
                      00359     endif
                      00360 endm
                      00361 
                      00362 ;------------------------------------------------------------------------------
                      00363 ;*Exclusive ors lit and reg and stores in WREG or reg.  Affects WREG, STATUS.  2 Instruction Cycles.
                      00364 ;*lit: literal to exclusive or with reg
                      00365 ;*reg: register to exclusive or with literal
                      00366 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00367 XORLF macro lit, reg, dest      ;public
                      00368     movlw lit
                      00369     xorwf reg, dest
                      00370 endm
                      00371 
                      00372 ;------------------------------------------------------------------------------
                      00373 ;*Negates reg and stores in WREG or reg.  Affects STATUS.  2 Instruction Cycles.
                      00374 ;*reg: register to negate (result is 0 - register)
                      00375 ;*dest: literal equal to F to store in reg, W to store in WREG
                      00376 NEGATEF macro reg, dest ;public
                      00377     if dest == 1
                      00378         comf reg, f
                      00379         incf reg, f
                      00380     else
                      00381         movf reg, w
                      00382         sublw 0x00      ;WREG = 0 - reg
                      00383     endif
                      00384 endm
                      00385 
                      00386 ;------------------------------------------------------------------------------
                      00387 ;*Sets WREG equal to reg and reg equal to WREG.  Affects STATUS.  2 Instruction Cycles.
                      00388 ;*reg: the register to swap with WREG
                      00389 SWAPWF macro reg        ;public
                      00390     xorwf reg, f        ;reg = reg xor WREG
                      00391     xorwf reg, w        ;WREG = reg xor WREG xor WREG = reg
                      00392     xorwf reg, f        ;reg = reg xor WREG xor reg = WREG
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00393 endm
                      00394 
                      00395 ;------------------------------------------------------------------------------
                      00396 ;*Sets regA equal to regB and regB equal to regA.  Affects STATUS, WREG.  4 Instruction Cycles.
                      00397 ;*regA: register to move to regB
                      00398 ;*regB: register to move to regA
                      00399 SWAPFF macro regA, regB ;public
                      00400     movf regA, w
                      00401     xorwf regB, w       ;WREG = regA xor regB
                      00402     xorwf regA, f       ;regA = regA xor regB xor regA = regB
                      00403     xorwf regB, f       ;regB = regB xor regA xor regB = regA
                      00404 endm
                      00405 
                      00406 ;------------------------------------------------------------------------------
                      00407 ;*Adds regA to regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00408 ;*regA: register to add to regB
                      00409 ;*regB: register to add to regA
                      00410 ADDFF_TW macro regA, regB       ;public
                      00411     xorwf regA, f       ;regA = regA xor WREG
                      00412     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00413     addwf regB, f       ;regB = regB - regA
                      00414     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00415     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00416 endm
                      00417 
                      00418 ;------------------------------------------------------------------------------
                      00419 ;*Ands regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles.
                      00420 ;*regA: register to and with regB
                      00421 ;*regB: register to and with regA
                      00422 ANDFF_TW macro regA, regB       ;public
                      00423     xorwf regA, f       ;regA = regA xor WREG
                      00424     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00425     andwf regB, f       ;regB = regB and regA
                      00426     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00427     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00428 endm
                      00429 
                      00430 ;------------------------------------------------------------------------------
                      00431 ;*Inclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00432 ;*regA: register to inclusive or with regB
                      00433 ;*regB: register to inclusive or with regA
                      00434 IORFF_TW macro regA, regB       ;public
                      00435     xorwf regA, f       ;regA = regA xor WREG
                      00436     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00437     iorwf regB, f       ;regB = regB or regA
                      00438     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00439     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00440 endm
                      00441 
                      00442 ;------------------------------------------------------------------------------
                      00443 ;*Moves the value in regA to regB, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00444 ;*regA: register to move to regB
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00445 ;*regB: destination register
                      00446 MOVFF_TW macro regA, regB       ;public
                      00447     xorwf regA, w
                      00448     movwf regB          ;regB = regA xor WREG
                      00449     xorwf regA, w       ;WREG = regA xor WREG xor regA = WREG
                      00450     xorwf regB, f       ;regB = regA xor WREG xor WREG = regA
                      00451 endm
                      00452 
                      00453 ;------------------------------------------------------------------------------
                      00454 ;*Subracts regA from regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cycles
                            .
                      00455 ;*regA: register to subtract from regB
                      00456 ;*regB: register regA is subtracted from and the destination register
                      00457 SUBFF_TW macro regA, regB       ;public
                      00458     xorwf regA, f       ;regA = regA xor WREG
                      00459     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00460     subwf regB, f       ;regB = regB - regA
                      00461     xorwf regA, w       ;WREG = regA xor regA xor WREG = WREG
                      00462     xorwf regA, f       ;regA = regA xor WREG xor WREG = regA
                      00463 endm
                      00464 
                      00465 ;------------------------------------------------------------------------------
                      00466 ;*Exclusive ors regA and regB and stores in regB, but preserves WREG.  Affects STATUS.  5 Instruction Cy
                            cles.
                      00467 ;*regA: register to exclusive or with regB
                      00468 ;*regB: register to exclusive or with regA
                      00469 XORFF_TW macro regA, regB       ;public
                      00470     xorwf regB, f       ;regB = WREG xor regB
                      00471     xorwf regA, w       ;WREG = WREG xor regA
                      00472     xorwf regB, f       ;regB = WREG xor regB xor WREG xor regA = regA xor regB
                      00473     xorwf regA, w       ;WREG = WREG xor regA xor regA = WREG
                      00474 endm
                      00475 
                      00476 ;------------------------------------------------------------------------------
                      00477 ;*Adds lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycles.
                      00478 ;*lit: literal to add to reg
                      00479 ;*reg: register which to add literal
                      00480 ADDLF_TW macro lit, reg ;public
                      00481     subwf reg, f        ;reg = reg - WREG
                      00482     addlw lit           ;WREG = WREG + lit
                      00483     addwf reg, f        ;reg = reg - WREG + WREG + lit = reg + lit
                      00484     addlw 0-lit         ;WREG = WREG - lit
                      00485 endm
                      00486 
                      00487 ;------------------------------------------------------------------------------
                      00488 ;*Ands lit and reg and stores in reg, but preserves WREG.  Affect STATUS.  7 Instruction Cycles.
                      00489 ;*lit: literal to and with reg
                      00490 ;*reg: register which to and with literal
                      00491 ANDLF_TW macro lit, reg ;public
                      00492     SWAPWF reg
                      00493     andlw lit           ;WREG = reg and lit
                      00494     SWAPWF reg
                      00495 endm
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00496 
                      00497 ;------------------------------------------------------------------------------
                      00498 ;*Inclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  7 Instruction Cycle
                            s.
                      00499 ;*lit: literal to inclusive or with reg
                      00500 ;*reg: register which to inclusive or with literal
                      00501 IORLF_TW macro lit, reg ;public
                      00502     SWAPWF reg
                      00503     iorlw lit           ;WREG = reg or lit
                      00504     SWAPWF reg
                      00505 endm
                      00506 
                      00507 ;------------------------------------------------------------------------------
                      00508 ;*Moves lit to reg, but preserves WREG.  Affects STATUS.  4 instruction cycles.
                      00509 ;*lit: literal to move
                      00510 ;*reg: register to move literal to
                      00511 MOVLF_TW macro lit, reg ;public
                      00512     movwf reg           ;reg = WREG
                      00513     xorlw lit           ;WREG = WREG xor lit
                      00514     xorwf reg, f        ;reg = WREG xor WREG xor lit = lit
                      00515     xorlw lit           ;WREG = WREG xor lit xor lit
                      00516 endm
                      00517 
                      00518 ;------------------------------------------------------------------------------
                      00519 ;*Subtracts reg from lit and stores in reg, but preserves WREG.  Affects STATUS.  6 Instruction Cycles.
                      00520 ;*lit: literal to subtract reg from
                      00521 ;*reg: register to subtract from lit and destination register
                      00522 SUBLF_TW macro lit, reg ;public
                      00523     subwf reg, f        ;reg = reg - WREG
                      00524     addlw 0-lit         ;WREG = WREG - lit
                      00525     addwf reg, f        ;reg = reg - WREG + WREG - lit = reg - lit
                      00526     addlw lit           ;WREG = WREG - lit + lit = WREG
                      00527     NEGATEF reg, f      ;Negate reg, 2 cycles
                      00528 endm
                      00529 
                      00530 ;------------------------------------------------------------------------------
                      00531 ;*Exclusive ors lit and reg and stores in reg, but preserves WREG.  Affects STATUS.  4 Instruction Cycle
                            s.
                      00532 ;*lit: literal to exclusive or reg with
                      00533 ;*reg: register to exclusive or with lit and destination register
                      00534 XORLF_TW macro lit, reg ;public
                      00535     xorwf reg, f        ;reg = reg xor WREG
                      00536     xorlw lit           ;WREG = WREG xor lit
                      00537     xorwf reg, f        ;reg = reg xor WREG xor WREG xor lit = reg xor lit
                      00538     xorlw lit           ;WREG = WREG xor lit xor lit = WREG
                      00539 endm
                      00540 
                      00541 ;------------------------------------------------------------------------------
                      00542 ;*Sets regA equal to regB and regB equal to regA, but preserves WREG.  Affects STATUS.  8 Instruction Cy
                            cles.
                      00543 ;*regA: register to move regB to
                      00544 ;*regB: register to more regA to
                      00545 SWAPFF_TW macro regA, regB      ;public
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00546     xorwf regA, f       ;regA = regA xor WREG
                      00547     xorwf regB, f       ;regB = regB xor WREG
                      00548     xorwf regA, w       ;WREG = WREG xor regA xor WREG = regA
                      00549     xorwf regB, w       ;WREG = regA xor WREG xor regB
                      00550     xorwf regA, f       ;regA = WREG xor regA xor regB xor regA xor WREG = regB
                      00551     xorwf regB, f       ;regB = WREG xor regA xor regB xor regB xor WREG = regA
                      00552     xorwf regA, w       ;WREG = WREG xor regA xor regB xor regA = WREG xor regB
                      00553     xorwf regB, w       ;WREG = WREG xor regB xor regB = WREG
                      00554 endm
                      00555 
                      00556 ;------------------------------------------------------------------------------
                      00557 ;*Adds WREG to the Program Counter.  Usually used to lookup a value in a table of retlw between labels T
                            ableStart and TableEnd.  1 to 6 Instruction Cycles.
                      00558 ;*TableStart:  starting address in program memory of the table, should be immediately following call to 
                            ADDWPC
                      00559 ;*TableEnd:  ending address in program memory of the table.  For support if table crosses a page boundar
                            y (gives warning).
                      00560 ADDWPC macro TableStart, TableEnd       ;public
                      00561     if (high TableStart)
                      00562         movlw high TableStart
                      00563         movwf PCLATH
                      00564     endif
                      00565     if (high TableStart) == (high TableEnd)
                      00566         addwf PCL, f
                      00567     else
                      00568         messg "Table crosses page boundary"
                      00569         addwf PCL, w
                      00570         btfss STATUS, C
                      00571             incf PCLATH, f
                      00572         movwf PCL
                      00573     endif
                      00574 endm
                      00575 
                      00576 
                      00195 
                      00196 
                      00197 ;=============================================================================
                      00198 ; M A C R O S
                      00199 ;=============================================================================
                      00200 
                      00201 MGOTO macro address
                      00202         if (address & (0x1000))
                      00203                 bsf PCLATH, 4
                      00204         else
                      00205                 bcf PCLATH, 4
                      00206         endif
                      00207         if (address & (0x800))
                      00208                 bsf PCLATH, 3
                      00209         else
                      00210                 bcf PCLATH, 3
                      00211         endif
                      00212         goto address
                      00213         endm
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00214 
                      00215 CONFRECEIVE macro
                      00216         call GetByte                                    ;Receive ConfigLoc1
                      00217         movf spdata, w
                      00218         andlw ~(1 << CLOCKFREQBIT)              ;Don't accept flag for clock, but set it
                      00219         if clockFreq == 20                              ;if necessary
                      00220                 iorlw 1 << CLOCKFREQBIT
                      00221         endif
                      00222         movwf configLoc1
                      00223         call GetByte                                    ;Receive trigger delay
                      00224         MOVFF spdata, triggerDelay1
                      00225         call GetByte
                      00226         MOVFF spdata, triggerDelay2
                      00227         call GetByte
                      00228         MOVFF spdata, triggerDelay3
                      00229         call GetByte                                    ;Receive sample rate
                      00230         MOVFF spdata, sampleRate1
                      00231         call GetByte
                      00232         MOVFF spdata, sampleRate2
                      00233         endm
                      00234 
                      00235 CONFSEND macro
                      00236         ;Send number of datapoints (2 bytes)
                      00237         MOVLF high TOTALBUFFERSIZE, spdata
                      00238         call PutByte
                      00239         MOVLF low TOTALBUFFERSIZE, spdata
                      00240         call PutByte
                      00241         ;Send clock frequency configuration
                      00242         MOVFF configLoc1, spdata
                      00243         call PutByte
                      00244         MOVFF triggerDelay1, spdata
                      00245         call PutByte
                      00246         MOVFF triggerDelay2, spdata
                      00247         call PutByte
                      00248         MOVFF triggerDelay3, spdata
                      00249         call PutByte
                      00250         MOVFF sampleRate1, spdata
                      00251         call PutByte
                      00252         MOVFF sampleRate2, spdata
                      00253         call PutByte
                      00254         endm
                      00255 
                      00256 CHANNELCONFSEND macro
                      00257         MOVFF dataConfig, spdata                ;Channel configuration
                      00258         call PutByte
                      00259         clrf spdata
                      00260         call PutByte                                    ;Channel 1 offset
                      00261         call PutByte                                    ;Channel 2 offset
                      00262         MOVFF triggerLevel, spdata
                      00263         call PutByte                                    ;Triggerlevel
                      00264         endm
                      00265 
                      00266 CHANNELCONFSTORE macro
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00267         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                      00268         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                      00269         ;                                                                               Channel 2 Scale 
                            (2) bits
                      00270         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                      00271         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                      00272         ;                                                                               Two least signif
                            icant bits = 0
                      00273         clrf dataConfig
                      00274         BNKSEL TRISC
                      00275         bsf TRISC, CH2SEL                               ;Ch2Sel high Z
                      00276         bcf TRISC, CH1SEL                               ;Ch1Sel output
                      00277         bsf TRISA, CH2SELG                              ;Ch2Sel high Z
                      00278         bcf TRISA, CH1SELG                              ;Ch1Sel output
                      00279         BNKSEL ANALOG_SEL       
                      00280         bcf ANALOG_SEL, CH1SEL                  ;Ch1Sel low
                      00281         bcf ANALOG_GAIN, CH1SELG                ;Ch1SelG low
                      00282         bsf dataConfig, 6                               ;Assume Gain = 2
                      00283         btfss ANALOG_GAIN, GAIN1                ;If Gain1 then unmark
                      00284                 bcf dataConfig, 6
                      00285         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then unmark
                      00286                 bcf dataConfig, 6
                      00287         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then mark
                      00288                 bsf dataConfig, 7
                      00289         btfsc ANALOG_ACDC, ACDCMODE             ;If DC coupling open (implies AC coupling) then mark
                      00290                 bsf dataConfig, 3
                      00291         bsf ANALOG_SEL, CH1SEL                  ;Recharge ACDCMODE signal line if it was driven low by a
                            bove checks
                      00292         bsf ANALOG_GAIN, CH1SELG                ;Recharge GAIN5 or GAIN1 signal line if it was driven lo
                            w by above checks
                      00293 
                      00294         BNKSEL TRISC
                      00295         bsf TRISC, CH1SEL                               ;Ch1Sel high Z
                      00296         bcf TRISC, CH2SEL                               ;Ch2Sel output
                      00297         bsf TRISA, CH1SELG                              ;Ch1Sel high Z
                      00298         bcf TRISA, CH2SELG                              ;Ch2Sel output
                      00299         BNKSEL ANALOG_SEL
                      00300         bcf ANALOG_SEL, CH2SEL                  ;Ch2Sel low
                      00301         bcf ANALOG_GAIN, CH2SELG                ;Ch1SelG low
                      00302         bsf dataConfig, 4                               ;Assume Gain = 2
                      00303         btfss ANALOG_GAIN, GAIN1                ;If Gain1 then unmark
                      00304                 bcf dataConfig, 4
                      00305         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then unmark
                      00306                 bcf dataConfig, 4
                      00307         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then mark
                      00308                 bsf dataConfig, 5
                      00309         btfsc ANALOG_ACDC, ACDCMODE             ;If DC coupling open (implies AC coupling) then mark
                      00310                 bsf dataConfig, 2
                      00311         bsf ANALOG_SEL, CH2SEL                  ;Recharge ACDCMODE signal line if it was driven low by a
                            bove checks
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         bsf ANALOG_GAIN, CH2SELG                ;Recharge GAIN5 or GAIN1 signal line if it was driven lo
                            w by above checks
                      00313 
                      00314         ;Next byte is Trigger Level
                      00315         bcf ADC_CONTROLPORT, ADDR0              ;Select address for trigger level
                      00316         bsf ADC_PORT, ADDR1
                      00317         bcf ADC_PORT, ADDR2
                      00318         bcf ADC_PORT, CS                                ;Select maxim ADC
                      00319         bcf ADC_CONTROLPORT, RDD                ;Begin conversion
                      00320         goto $ + 1                                              ;Wait 3
                      00321         nop
                      00322         movf ADC_DATAPORT, w                    ;Save trigger level
                      00323         bsf ADC_CONTROLPORT, RDD                ;stop conversion
                      00324         bsf ADC_PORT, CS                                ;unselect
                      00325         bcf ADC_CONTROLPORT, ADDR0              ;Unselect address for trigger level
                      00326         bcf ADC_PORT, ADDR1
                      00327         bcf ADC_PORT, ADDR2
                      00328         movwf triggerLevel
                      00329         endm
                      00330 
                      00331 ;=============================================================================
                      00332 ; I N T E R R U P T S
                      00333 ;=============================================================================
                      00334 
0000                  00335 org 0x000       ;Reset Vector
                      00336 ;First three lines of initialization included here to save on memory.
                      00337         MOVLF B'00000001', ADC_CONTROLPORT
0000   3001               M     movlw B'00000001'
0001   0089               M     movwf ADC_CONTROLPORT
0002   0188           00338         clrf ADC_DATAPORT
0003   2832           00339         goto Initial
                      00340 
0004                  00341 org 0x004       ;Interrupt Vector
0004                  00342 IntHandler
0004   1283           00343         bcf STATUS, RP0                                         ;Ensure we're in Bank0
0005   1303           00344         bcf     STATUS, RP1
0006   0BF6           00345         decfsz cntra, f
0007   2804           00346                 goto IntHandler
0008   0BF7           00347         decfsz cntrb, f
0009   2804           00348                 goto IntHandler
000A   0BF8           00349         decfsz cntrc, f
000B   2804           00350                 goto IntHandler
000C   0879           00351         movf modetemp, w
000D                  00352 MainSelect
000D   0782           00353         addwf PCL, f                                            ;Add freqMode to Program Counter
                      00354         MGOTO Sample1M                                          ;FreqMode = 0
                          M         if (Sample1M & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
000E   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample1M & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
000F   118A               M                 bcf PCLATH, 3
                          M         endif
0010   2BA2               M         goto Sample1M
                      00355         MGOTO Sample833k                                        ;FreqMode = 1
                          M         if (Sample833k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0011   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample833k & (0x800))
0012   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0013   2EA9               M         goto Sample833k
                      00356         MGOTO Sample625k                                        ;FreqMode = 2
                          M         if (Sample625k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0014   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample625k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0015   118A               M                 bcf PCLATH, 3
                          M         endif
0016   2A68               M         goto Sample625k
                      00357         MGOTO Sample417k250k                            ;FreqMode = 3
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0017   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0018   118A               M                 bcf PCLATH, 3
                          M         endif
0019   2AAB               M         goto Sample417k250k
                      00358         MGOTO Sample417k250k                            ;FreqMode = 4
                          M         if (Sample417k250k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001A   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (Sample417k250k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001B   118A               M                 bcf PCLATH, 3
                          M         endif
001C   2AAB               M         goto Sample417k250k
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00359         MGOTO SampleDelayed                                     ;FreqMode = 5
                          M         if (SampleDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
001D   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
001E   118A               M                 bcf PCLATH, 3
                          M         endif
001F   295A               M         goto SampleDelayed
                      00360         MGOTO SampleRep5M                                       ;FreqMode = 6
                          M         if (SampleRep5M & (0x1000))
0020   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5M & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0021   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0022   2CAC               M         goto SampleRep5M
                      00361         MGOTO SampleRep2M                                       ;FreqMode = 7
                          M         if (SampleRep2M & (0x1000))
0023   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2M & (0x800))
0024   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0025   28DF               M         goto SampleRep2M
                      00362         MGOTO SampleXY417k                                      ;FreqMode = 8
                          M         if (SampleXY417k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
0026   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY417k & (0x800))
0027   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
0028   28A6               M         goto SampleXY417k
                      00363         MGOTO SampleXY250k192k                          ;FreqMode = 9
                          M         if (SampleXY250k192k & (0x1000))
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 bsf PCLATH, 4
                          M         else
0029   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002A   118A               M                 bcf PCLATH, 3
                          M         endif
002B   2B0F               M         goto SampleXY250k192k
                      00364         MGOTO SampleXY250k192k                          ;FreqMode = 10
                          M         if (SampleXY250k192k & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002C   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXY250k192k & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
002D   118A               M                 bcf PCLATH, 3
                          M         endif
002E   2B0F               M         goto SampleXY250k192k
                      00365         MGOTO SampleXYDelayed                           ;FreqMode = 11
                          M         if (SampleXYDelayed & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
002F   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleXYDelayed & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
0030   118A               M                 bcf PCLATH, 3
                          M         endif
0031   29C5               M         goto SampleXYDelayed
                      00366         ;MGOTO WaitComm                                         ;Invalid FreqMode = 12
                      00367         ;MGOTO WaitComm                                         ;Invalid FreqMode = 13
                      00368         ;MGOTO WaitComm                                         ;Invalid FreqMode = 14
                      00369         ;MGOTO WaitComm                                         ;Invalid FreqMode = 15
                      00370 
                      00371 ;=============================================================================
                      00372 ; M A I N
                      00373 ;=============================================================================
                      00374 ;Initalize for the program
                      00375 ;-----------------------------------------------------------------------------
0032                  00376 Initial
0032   0185           00377         clrf PORTA
                      00378         BNKSEL TRISA
                          M         if TRISA & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if TRISA & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
0033   1683               M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000080                M         CURRENTBANK set TRISA & 0x180
                      00379         MOVLF B'00010111', TRISA                        ;Configure PORTA
0034   3017               M     movlw B'00010111'
0035   0085               M     movwf TRISA
                      00380         MOVLF B'11000000', OPTION_REG           ;Interrupt on rising edge of RB0
0036   30C0               M     movlw B'11000000'
0037   0081               M     movwf OPTION_REG
                      00381         MOVLF B'00010000', INTCON                       ;Interrupt on RB0 only, but not enabled yet
0038   3010               M     movlw B'00010000'
0039   008B               M     movwf INTCON
                      00382         MOVLF B'00110001', TRISB
003A   3031               M     movlw B'00110001'
003B   0086               M     movwf TRISB
                      00383         MOVLF B'11111111', TRISD
003C   30FF               M     movlw B'11111111'
003D   0088               M     movwf TRISD
                      00384         MOVLF B'00000100', TRISE                        ;Set up USB detect as input, CS and ADDR0 as out
                            puts
003E   3004               M     movlw B'00000100'
003F   0089               M     movwf TRISE
                      00385         MOVLF B'10111001', TRISC                        ;Configure PORTC
0040   30B9               M     movlw B'10111001'
0041   0087               M     movwf TRISC
                      00386 
                      00387         BNKSEL  ANSEL
                          M         if ANSEL & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
0042   1703               M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if ANSEL & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 endif
                          M         endif
  00000180                M         CURRENTBANK set ANSEL & 0x180
0043   0188           00388         clrf    ANSEL           ;Turn off analog mode on RE2,1,0 and RA5,3,2,1,0 so the pins read digita
                            l
0044   0189           00389         clrf    ANSELH          ;Turn off analog mode on RB5,0,4,1,3,2 so the pins read digital
                      00390 
                      00391         ;Initialize Serial Port
                      00392 
                      00393         BNKSEL  BAUDCTL         ;Access bank 3
                          M         if BAUDCTL & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if BAUDCTL & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000180                M         CURRENTBANK set BAUDCTL & 0x180
0045   3008           00394         movlw   0x08            ;Set the Serial Port baud rate generators
0046   0087           00395         movwf   BAUDCTL
                      00396         BNKSEL  SPBRG           ;Return to bank 1 and continue setting baud rate generators
                          M         if SPBRG & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
0047   1303               M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if SPBRG & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000080                M         CURRENTBANK set SPBRG & 0x180
0048   3056           00397         movlw   0x56            ; for 57.6K baud
0049   0099           00398         movwf   SPBRG
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004A   3000           00399         movlw   0x00
004B   009A           00400         movwf   SPBRGH
004C   3024           00401         movlw   0x24            ;Set the Serial Port Transmitter configuration
004D   0098           00402         movwf   TXSTA
                      00403 ;       bsf PIE1,TXIE           ;Enable transmit interrupts
004E   0000           00404         nop
                      00405 ;       bsf PIE1,RCIE           ;Enable receive interrupts
                      00406         BNKSEL  RCSTA           ;Access bank 0
                          M         if RCSTA & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if RCSTA & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
004F   1283               M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000000                M         CURRENTBANK set RCSTA & 0x180
0050   3090           00407         movlw   0x90            ;Set the Serial Port Receiver configuration
0051   0098           00408         movwf   RCSTA
                      00409 
0052   1383           00410         bcf STATUS, IRP         ;Ensure indirect addressing of Bank0 and Bank1
0053   019F           00411         clrf ADCON0                     ;Make sure PIC's ADC is off
                      00412         
0054                  00413 Main
0054   207C           00414         call WaitComm
                      00415 
0055   01FA           00416         clrf modetempb                                          ;Clear the modetempb for repetitive samp
                            ling
                      00417         
0056                  00418 MainB
0056   1089           00419         bcf ADC_CONTROLPORT, ADDR0                      ;Select Channel
0057   1A70           00420         btfsc configLoc1, CHANNELBIT
0058   1489           00421                 bsf ADC_CONTROLPORT, ADDR0
                      00422         if (high MainSelect)
                      00423                 movlw high MainSelect                   ;Prepare for jump
                      00424                 movwf PCLATH
                      00425         else
0059   018A           00426                 clrf PCLATH
                      00427         endif
005A   0870           00428         movf configLoc1, w                                      ;Put configuration in WREG
005B   390F           00429         andlw ((1<<FREQMODEBIT3)|(1<<FREQMODEBIT2)|(1<<FREQMODEBIT1)|(1<<FREQMODEBIT0)) ;Unmask FreqMode
005C   00F9           00430         movwf modetemp                                          ;Multiply by 3
005D   1003           00431         bcf STATUS, C
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005E   0DF9           00432         rlf modetemp, f
005F   0779           00433         addwf modetemp, w                                       ; and put the result into W register for
                             later computed jump
0060   1086           00434         bcf ADC_PORT, CS                                        ;Select MAX118
0061   1F70           00435         btfss configLoc1, TRIGGERENBIT          ;Decide if trigger is enabled.  If so, wait on interrupt
0062   280D           00436                 goto MainSelect
0063                  00437 MainWaitTrig                                                    ;Trigger is enabled, set up interrupt
0063   00F9           00438         movwf modetemp                                          ;Store the jump for main select (freqmod
                            e)
0064   0A73           00439         incf triggerDelay3, w                           ;Get the trigger delay ready
0065   00F6           00440         movwf cntra
0066   0A72           00441         incf triggerDelay2, w   
0067   00F7           00442         movwf cntrb
0068   0A71           00443         incf triggerDelay1, w
0069   00F8           00444         movwf cntrc
                      00445         BNKSEL OPTION_REG
                          M         if OPTION_REG & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if OPTION_REG & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
006A   1683               M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000080                M         CURRENTBANK set OPTION_REG & 0x180
006B   1301           00446         bcf OPTION_REG, INTEDG                          ;Assume trigger on falling edge
006C   0870           00447         movf configLoc1, w                                      ;Get the trigger status
006D   3980           00448         andlw (0x01 << TRIGGERPOSBIT)
                      00449         skipZero                                                        ;Positive or negative trigger
006E   1D03               M         btfss STATUS, Z
006F   1701           00450                 bsf OPTION_REG, INTEDG                  ;Trigger on rising edge
                      00451         BNKSEL 0x0000
                          M         if 0x0000 & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if 0x0000 & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
0070   1283               M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000000                M         CURRENTBANK set 0x0000 & 0x180
0071   108B           00452         bcf INTCON, INTF                                        ;Ensure that the RB0 interrupt flag is c
                            lear
0072   178B           00453         bsf INTCON, GIE                                         ;Enable RB0 Interrupt
0073                  00454 MainWTrigB
0073   2100           00455         call WaitByte                                           ;Wait for the trigger unless a "break tr
                            igger"
                      00456         skipEqLF B'11110011', spdata            ;message is received
0074   087C               M         movf spdata, w
0075   3AF3               M         xorlw B'11110011'
0076   1D03               M         btfss STATUS, Z
0077   2873           00457                 goto MainWTrigB
                      00458         MOVLF B'11011100', spdata                       ;Respond
0078   30DC               M     movlw B'11011100'
0079   00FC               M     movwf spdata
007A   2111           00459         call PutByte
007B   2854           00460         goto Main                                                       ;Abort
                      00461 
                      00462                                                                                 ;Note that the jitter on
                             the interrupt is
                      00463                                                                                 ;1 cycles.  This transla
                            tes to 200 ns
                      00464                                                                                 ;on the PIC running at 2
                            0 MHz
                      00465 
                      00466 ;=============================================================================
                      00467 ; S U B R O U T I N E S
                      00468 ;=============================================================================
                      00469 
                      00470 ;Wait for command from computer and respond accordingly
                      00471 ;-----------------------------------------------------------------------------
007C                  00472 WaitComm
007C   2100           00473         call WaitByte                                   ;Wait for receive
007D                  00474 WaitComm_Test                                           ;Determine the command and the response
                      00475         skipEqLF B'11111000', spdata
007D   087C               M         movf spdata, w
007E   3AF8               M         xorlw B'11111000'
007F   1D03               M         btfss STATUS, Z
0080   28C4           00476                 goto WaitComm_Conf
0081                  00477 WaitComm_Data
                      00478         MOVLF B'11011100', spdata               ;Send beginning of message
0081   30DC               M     movlw B'11011100'
0082   00FC               M     movwf spdata
0083   2111           00479         call PutByte
                      00480         MOVLF BUFFERMIN, FSR                    ;Set pointer to beginning of queue
0084   3020               M     movlw BUFFERMIN
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085   0084               M     movwf FSR
                      00481         MOVLF BUFFERSIZE, cntrb                 ;Set counter
0086   3040               M     movlw BUFFERSIZE
0087   00F7               M     movwf cntrb
0088                  00482 WaitComm_SendDataA
                      00483         MOVFF INDF, spdata                              ;Get data ready to send
0088   0800               M     movf INDF, w
0089   00FC               M     movwf spdata
008A   0A84           00484         incf FSR, F                                             ;Increment pointer
008B   2111           00485         call PutByte                                    ;Send data
008C   39FF           00486         andlw 0xFF                                              ;Until end of queue
                      00487         skipZero
008D   1D03               M         btfss STATUS, Z
008E   28B8           00488                 goto WaitComm_SendDataExit
008F   0BF7           00489         decfsz cntrb, f
0090   2888           00490                 goto WaitComm_SendDataA
                      00491         MOVLF BUFFERSIZE, cntrb                 ;Set counter
0091   3040               M     movlw BUFFERSIZE
0092   00F7               M     movwf cntrb
0093   1784           00492         bsf FSR, 7                                              ;Bank 1
0094   0384           00493         decf FSR, f
0095                  00494 WaitComm_SendDataB
                      00495         MOVFF INDF, spdata                              ;Get data ready to send
0095   0800               M     movf INDF, w
0096   00FC               M     movwf spdata
0097   0384           00496         decf FSR, F                                             ;Increment pointer
0098   2111           00497         call PutByte                                    ;Send data
0099   39FF           00498         andlw 0xFF                                              ;Until end of queue
                      00499         skipZero
009A   1D03               M         btfss STATUS, Z
009B   28B8           00500                 goto WaitComm_SendDataExit
009C   0BF7           00501         decfsz cntrb, f
009D   2895           00502                 goto WaitComm_SendDataB
                      00503         MOVLF BUFFERSIZE, cntrb                 ;Set counter
009E   3040               M     movlw BUFFERSIZE
009F   00F7               M     movwf cntrb
00A0   1783           00504         bsf STATUS, IRP                                 ;Bank 3
00A1   0A84           00505         incf FSR, f
00A2                  00506 WaitComm_SendDataC
                      00507         MOVFF INDF, spdata                              ;Get data ready to send
00A2   0800               M     movf INDF, w
00A3   00FC               M     movwf spdata
00A4   0A84           00508         incf FSR, F                                             ;Increment pointer
00A5   2111           00509         call PutByte                                    ;Send data
00A6   39FF           00510         andlw 0xFF                                              ;Until end of queue
                      00511         skipZero
00A7   1D03               M         btfss STATUS, Z
00A8   28B8           00512                 goto WaitComm_SendDataExit
00A9   0BF7           00513         decfsz cntrb, f
00AA   28A2           00514                 goto WaitComm_SendDataC
                      00515         MOVLF BUFFERSIZE, cntrb                 ;Set counter
00AB   3040               M     movlw BUFFERSIZE
00AC   00F7               M     movwf cntrb
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AD   1384           00516         bcf FSR, 7                                              ;Bank 3
00AE   0384           00517         decf FSR, f
00AF                  00518 WaitComm_SendDataD
                      00519         MOVFF INDF, spdata                              ;Get data ready to send
00AF   0800               M     movf INDF, w
00B0   00FC               M     movwf spdata
00B1   0384           00520         decf FSR, F                                             ;Increment pointer
00B2   2111           00521         call PutByte                                    ;Send data
00B3   39FF           00522         andlw 0xFF                                              ;Until end of queue
                      00523         skipZero
00B4   1D03               M         btfss STATUS, Z
00B5   28B8           00524                 goto WaitComm_SendDataExit
00B6   0BF7           00525         decfsz cntrb, f
00B7   28AF           00526                 goto WaitComm_SendDataD
00B8                  00527 WaitComm_SendDataExit
00B8   1384           00528         bcf FSR, 7                                              ;Bank 0
00B9   1383           00529         bcf STATUS, IRP
                      00530         CHANNELCONFSEND
                          M         MOVFF dataConfig, spdata                ;Channel configuration
00BA   087D               M     movf dataConfig, w
00BB   00FC               M     movwf spdata
00BC   2111               M         call PutByte
00BD   01FC               M         clrf spdata
00BE   2111               M         call PutByte                                    ;Channel 1 offset
00BF   2111               M         call PutByte                                    ;Channel 2 offset
                          M         MOVFF triggerLevel, spdata
00C0   087E               M     movf triggerLevel, w
00C1   00FC               M     movwf spdata
00C2   2111               M         call PutByte                                    ;Triggerlevel
00C3   287C           00531         goto WaitComm
                      00532 
00C4                  00533 WaitComm_Conf
                      00534         skipEqLF B'11111001', spdata
00C4   087C               M         movf spdata, w
00C5   3AF9               M         xorlw B'11111001'
00C6   1D03               M         btfss STATUS, Z
00C7   28E4           00535                 goto WaitComm_Rec
                      00536         MOVLF B'11011101', spdata               ;Send beginning of message
00C8   30DD               M     movlw B'11011101'
00C9   00FC               M     movwf spdata
00CA   2111           00537         call PutByte    
                      00538         CONFSEND
                          M         ;Send number of datapoints (2 bytes)
                          M         MOVLF high TOTALBUFFERSIZE, spdata
00CB   3001               M     movlw high TOTALBUFFERSIZE
00CC   00FC               M     movwf spdata
00CD   2111               M         call PutByte
                          M         MOVLF low TOTALBUFFERSIZE, spdata
00CE   3000               M     movlw low TOTALBUFFERSIZE
00CF   00FC               M     movwf spdata
00D0   2111               M         call PutByte
                          M         ;Send clock frequency configuration
                          M         MOVFF configLoc1, spdata
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D1   0870               M     movf configLoc1, w
00D2   00FC               M     movwf spdata
00D3   2111               M         call PutByte
                          M         MOVFF triggerDelay1, spdata
00D4   0871               M     movf triggerDelay1, w
00D5   00FC               M     movwf spdata
00D6   2111               M         call PutByte
                          M         MOVFF triggerDelay2, spdata
00D7   0872               M     movf triggerDelay2, w
00D8   00FC               M     movwf spdata
00D9   2111               M         call PutByte
                          M         MOVFF triggerDelay3, spdata
00DA   0873               M     movf triggerDelay3, w
00DB   00FC               M     movwf spdata
00DC   2111               M         call PutByte
                          M         MOVFF sampleRate1, spdata
00DD   0874               M     movf sampleRate1, w
00DE   00FC               M     movwf spdata
00DF   2111               M         call PutByte
                          M         MOVFF sampleRate2, spdata
00E0   0875               M     movf sampleRate2, w
00E1   00FC               M     movwf spdata
00E2   2111               M         call PutByte
00E3   287C           00539         goto WaitComm
                      00540 
00E4                  00541 WaitComm_Rec
                      00542         skipEqLF B'11111010', spdata
00E4   087C               M         movf spdata, w
00E5   3AFA               M         xorlw B'11111010'
00E6   1D03               M         btfss STATUS, Z
00E7   287C           00543                 goto WaitComm                           ;No valid message sent
                      00544         MOVLF B'11011110', spdata               ;Send beginning of message
00E8   30DE               M     movlw B'11011110'
00E9   00FC               M     movwf spdata
00EA   2111           00545         call PutByte
                      00546         CONFRECEIVE
00EB   2100               M         call GetByte                                    ;Receive ConfigLoc1
00EC   087C               M         movf spdata, w
00ED   39DF               M         andlw ~(1 << CLOCKFREQBIT)              ;Don't accept flag for clock, but set it
                          M         if clockFreq == 20                              ;if necessary
00EE   3820               M                 iorlw 1 << CLOCKFREQBIT
                          M         endif
00EF   00F0               M         movwf configLoc1
00F0   2100               M         call GetByte                                    ;Receive trigger delay
                          M         MOVFF spdata, triggerDelay1
00F1   087C               M     movf spdata, w
00F2   00F1               M     movwf triggerDelay1
00F3   2100               M         call GetByte
                          M         MOVFF spdata, triggerDelay2
00F4   087C               M     movf spdata, w
00F5   00F2               M     movwf triggerDelay2
00F6   2100               M         call GetByte
                          M         MOVFF spdata, triggerDelay3
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F7   087C               M     movf spdata, w
00F8   00F3               M     movwf triggerDelay3
00F9   2100               M         call GetByte                                    ;Receive sample rate
                          M         MOVFF spdata, sampleRate1
00FA   087C               M     movf spdata, w
00FB   00F4               M     movwf sampleRate1
00FC   2100               M         call GetByte
                          M         MOVFF spdata, sampleRate2
00FD   087C               M     movf spdata, w
00FE   00F5               M     movwf sampleRate2
                      00547         
                      00548 ;       goto WaitComm                                   ;For DEBUGGING, simply return to WaitComm
00FF   0008           00549         return
                      00550 
                      00551 ;WaitByte is used to wait for a byte on the serial port
                      00552 ;------------------------------------------------------------------------------
0100                  00553 WaitByte
                      00554 
                      00555 ;GetByte is used to receive a byte on the serial port
                      00556 ;------------------------------------------------------------------------------
0100                  00557 GetByte
0100                  00558 GetByteSerial
0100   1E8C           00559         btfss PIR1, RCIF                        
0101   2900           00560                 goto GetByteSerial
0102                  00561 GetByteSerialB
0102   1D18           00562         btfss RCSTA, FERR                       ;Handle the frame error
0103   2906           00563                 goto GetByteSerialC
0104   081A           00564         movf RCREG, w                           ;Throw away data with errors
0105   2900           00565         goto GetByteSerial
0106                  00566 GetByteSerialC
0106   1C98           00567         btfss RCSTA, OERR                       ;Handle the over run error
0107   290E           00568                 goto GetByteSerialE
0108   1218           00569         bcf RCSTA, CREN                         ;Reset the receive logic
0109   1618           00570         bsf RCSTA, CREN
010A                  00571 GetByteSerialD
010A   081A           00572         movf RCREG, w                           ;Throw away data with errors
010B   1A8C           00573         btfsc PIR1, RCIF
010C   290A           00574                 goto GetByteSerialD
010D   2900           00575         goto GetByteSerial
010E                  00576 GetByteSerialE                                  ;No errors if we got here       
                      00577         MOVFF RCREG, spdata                     ;Read byte from serial FIFO
010E   081A               M     movf RCREG, w
010F   00FC               M     movwf spdata
0110   3400           00578         retlw 0
                      00579         
                      00580 ;PutByte is used to put a byte on the serial port
                      00581 ;------------------------------------------------------------------------------
0111                  00582 PutByte
0111                  00583 PutByteSerial
0111   1E0C           00584         btfss PIR1, TXIF
0112   2911           00585                 goto PutByteSerial
                      00586         MOVFF spdata, TXREG
0113   087C               M     movf spdata, w
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   0099               M     movwf TXREG
0115   3400           00587         retlw 0
                      00588 
                      00589 ;Delay used to adjust sample rate and trigger delay
                      00590 ;Any delay due to using a call must be added (i.e. delay doesn't include call
                      00591 ;statement)
                      00592 ;Delay = 5+7*(cntrb:cntra)+3*cntrb if cntra > 0, cntrb >= 0
                      00593 ;If cntra = 0 then delay as if cntra = 256
                      00594 ;If cntrb:cntra = 0x0000 then Delay as if cntrb = 255, cntra = 256
                      00595 ;-----------------------------------------------------------------------------
0116                  00596 Delay
0116   3001           00597         movlw 0x01
0117                  00598 DelayLoop
0117   02F6           00599         subwf cntra, F
0118   1C03           00600         btfss STATUS, C
0119   02F7           00601                 subwf cntrb, F
011A   08F6           00602         movf cntra, F
                      00603         skipZero
011B   1D03               M         btfss STATUS, Z
011C   2917           00604                 goto DelayLoop
011D   08F7           00605         movf cntrb, F
                      00606         skipZero
011E   1D03               M         btfss STATUS, Z
011F   2917           00607                 goto DelayLoop
0120   0008           00608         return
                      00609 
                      00610 ;ADCShutdown, shutsdown the MAX118
                      00611 ;-----------------------------------------------------------------------------
0121                  00612 ADCShutdown
0121   0080           00613         movwf INDF                                              ;Save to QUEUE
0122   1486           00614         bsf ADC_PORT, CS                                ;Unselect MAX118
0123   1383           00615         bcf STATUS, IRP                                 ;Set bank = 0
                      00616         CHANNELCONFSTORE
                          M         ;Format of channel configuration is:    Channel 1 Scale (2) bits
                          M         ;                                                                                       For scal
                            e, 00 = 1, 01 = 2, 10 = 5
                          M         ;                                                                               Channel 2 Scale 
                            (2) bits
                          M         ;                                                                               Channel 1 AC = 1
                             / DC = 0 (1) bit
                          M         ;                                                                               Channel 2 AC = 1
                             / DC = 0 (1) bit
                          M         ;                                                                               Two least signif
                            icant bits = 0
0124   01FD               M         clrf dataConfig
                          M         BNKSEL TRISC
                          M         if TRISC & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 endif
                          M         endif
                          M         if TRISC & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
0125   1683               M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000080                M         CURRENTBANK set TRISC & 0x180
0126   1507               M         bsf TRISC, CH2SEL                               ;Ch2Sel high Z
0127   1087               M         bcf TRISC, CH1SEL                               ;Ch1Sel output
0128   1685               M         bsf TRISA, CH2SELG                              ;Ch2Sel high Z
0129   1205               M         bcf TRISA, CH1SELG                              ;Ch1Sel output
                          M         BNKSEL ANALOG_SEL       
                          M         if ANALOG_SEL & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if ANALOG_SEL & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
012A   1283               M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000000                M         CURRENTBANK set ANALOG_SEL & 0x180
012B   1087               M         bcf ANALOG_SEL, CH1SEL                  ;Ch1Sel low
012C   1205               M         bcf ANALOG_GAIN, CH1SELG                ;Ch1SelG low
012D   177D               M         bsf dataConfig, 6                               ;Assume Gain = 2
012E   1C05               M         btfss ANALOG_GAIN, GAIN1                ;If Gain1 then unmark
012F   137D               M                 bcf dataConfig, 6
0130   1C85               M         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then unmark
0131   137D               M                 bcf dataConfig, 6
0132   1C85               M         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then mark
0133   17FD               M                 bsf dataConfig, 7
0134   1807               M         btfsc ANALOG_ACDC, ACDCMODE             ;If DC coupling open (implies AC coupling) then mark
0135   15FD               M                 bsf dataConfig, 3
0136   1487               M         bsf ANALOG_SEL, CH1SEL                  ;Recharge ACDCMODE signal line if it was driven low by a
                            bove checks
0137   1605               M         bsf ANALOG_GAIN, CH1SELG                ;Recharge GAIN5 or GAIN1 signal line if it was driven lo
                            w by above checks
                          M 
                          M         BNKSEL TRISC
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if TRISC & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if TRISC & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
0138   1683               M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
                          M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000080                M         CURRENTBANK set TRISC & 0x180
0139   1487               M         bsf TRISC, CH1SEL                               ;Ch1Sel high Z
013A   1107               M         bcf TRISC, CH2SEL                               ;Ch2Sel output
013B   1605               M         bsf TRISA, CH1SELG                              ;Ch1Sel high Z
013C   1285               M         bcf TRISA, CH2SELG                              ;Ch2Sel output
                          M         BNKSEL ANALOG_SEL
                          M         if ANALOG_SEL & 0x0100
                          M                 if (CURRENTBANK & 0x0100) == 0
                          M                         bsf STATUS, RP1
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0100) == 0x0100
                          M                         bcf STATUS, RP1
                          M                 endif
                          M         endif
                          M         if ANALOG_SEL & 0x0080
                          M                 if (CURRENTBANK & 0x0080) == 0
                          M                         bsf STATUS, RP0
                          M                 endif
                          M         else
                          M                 if (CURRENTBANK & 0x0080) == 0x0080
013D   1283               M                         bcf STATUS, RP0
                          M                 endif
                          M         endif
  00000000                M         CURRENTBANK set ANALOG_SEL & 0x180
013E   1107               M         bcf ANALOG_SEL, CH2SEL                  ;Ch2Sel low
013F   1285               M         bcf ANALOG_GAIN, CH2SELG                ;Ch1SelG low
0140   167D               M         bsf dataConfig, 4                               ;Assume Gain = 2
0141   1C05               M         btfss ANALOG_GAIN, GAIN1                ;If Gain1 then unmark
0142   127D               M                 bcf dataConfig, 4
0143   1C85               M         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then unmark
0144   127D               M                 bcf dataConfig, 4
0145   1C85               M         btfss ANALOG_GAIN, GAIN5                ;If Gain5 then mark
0146   16FD               M                 bsf dataConfig, 5
0147   1807               M         btfsc ANALOG_ACDC, ACDCMODE             ;If DC coupling open (implies AC coupling) then mark
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0148   157D               M                 bsf dataConfig, 2
0149   1507               M         bsf ANALOG_SEL, CH2SEL                  ;Recharge ACDCMODE signal line if it was driven low by a
                            bove checks
014A   1685               M         bsf ANALOG_GAIN, CH2SELG                ;Recharge GAIN5 or GAIN1 signal line if it was driven lo
                            w by above checks
                          M 
                          M         ;Next byte is Trigger Level
014B   1089               M         bcf ADC_CONTROLPORT, ADDR0              ;Select address for trigger level
014C   1506               M         bsf ADC_PORT, ADDR1
014D   1186               M         bcf ADC_PORT, ADDR2
014E   1086               M         bcf ADC_PORT, CS                                ;Select maxim ADC
014F   1009               M         bcf ADC_CONTROLPORT, RDD                ;Begin conversion
0150   2951               M         goto $ + 1                                              ;Wait 3
0151   0000               M         nop
0152   0808               M         movf ADC_DATAPORT, w                    ;Save trigger level
0153   1409               M         bsf ADC_CONTROLPORT, RDD                ;stop conversion
0154   1486               M         bsf ADC_PORT, CS                                ;unselect
0155   1089               M         bcf ADC_CONTROLPORT, ADDR0              ;Unselect address for trigger level
0156   1106               M         bcf ADC_PORT, ADDR1
0157   1186               M         bcf ADC_PORT, ADDR2
0158   00FE               M         movwf triggerLevel
0159   2854           00617         goto Main
                      00618 
                      00619 ;Sample Delayed
                      00620 ;Sampling rate = 5e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      00621 ;Sampling rate = 1e6 / (19 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      00622 ;-----------------------------------------------------------------------------
015A                  00623 SampleDelayed
015A   1009           00624         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
                      00625         MOVLF BUFFERSIZE-1, cntrc               ;Initialize counter, use cntrc as counter
015B   303F               M     movlw BUFFERSIZE-1
015C   00F8               M     movwf cntrc
                      00626         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
015D   3020               M     movlw BUFFERMIN
015E   0084               M     movwf FSR
                      00627         MOVFF sampleRate2, cntra                ;Restore cntra
015F   0875               M     movf sampleRate2, w
0160   00F6               M     movwf cntra
                      00628         MOVFF sampleRate1, cntrb                ;Restore cntrb
0161   0874               M     movf sampleRate1, w
0162   00F7               M     movwf cntrb
0163   0000           00629         nop
0164   2116           00630         call Delay
0165                  00631 SampleDelayedLoopA
0165   0808           00632         movf ADC_DATAPORT, W                    ;Sample
0166   1409           00633         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0167   1009           00634         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0168   0080           00635         movwf INDF                                              ;Save to QUEUE
0169   0A84           00636         incf FSR, F                                             ;Increment QUEUE pointer
016A                  00637 StSampleDelayedLoopA
                      00638         MOVFF sampleRate2, cntra                ;Restore cntra
016A   0875               M     movf sampleRate2, w
016B   00F6               M     movwf cntra
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00639         MOVFF sampleRate1, cntrb                ;Restore cntrb
016C   0874               M     movf sampleRate1, w
016D   00F7               M     movwf cntrb
016E   2116           00640         call Delay
016F   0BF8           00641         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0170   2965           00642                 goto SampleDelayedLoopA
0171   0000           00643         nop
0172   0808           00644         movf ADC_DATAPORT, W                    ;Last sample in Bank 1
0173   1409           00645         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0174   1009           00646         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0175   0080           00647         movwf INDF                                              ;Save to QUEUE
0176   1784           00648         bsf FSR, 7                                              ;Move QUEUE pointer to Bank 2
                      00649         MOVLF BUFFERSIZE-1, cntrc
0177   303F               M     movlw BUFFERSIZE-1
0178   00F8               M     movwf cntrc
                      00650         MOVFF sampleRate2, cntra                ;Restore cntra
0179   0875               M     movf sampleRate2, w
017A   00F6               M     movwf cntra
                      00651         MOVFF sampleRate1, cntrb                ;Restore cntrb
017B   0874               M     movf sampleRate1, w
017C   00F7               M     movwf cntrb
017D   2116           00652         call Delay
017E   0000           00653         nop
017F                  00654 SampleDelayedLoopB
017F   0808           00655         movf ADC_DATAPORT, W                    ;Sample
0180   1409           00656         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0181   1009           00657         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0182   0080           00658         movwf INDF                                              ;Save to QUEUE
0183   0384           00659         decf FSR, F                                             ;Increment QUEUE pointer
                      00660         MOVFF sampleRate2, cntra                ;Restore cntra
0184   0875               M     movf sampleRate2, w
0185   00F6               M     movwf cntra
                      00661         MOVFF sampleRate1, cntrb                ;Restore cntrb
0186   0874               M     movf sampleRate1, w
0187   00F7               M     movwf cntrb
0188   2116           00662         call Delay
0189   0BF8           00663         decfsz cntrc, F                                 ;Increment counter, 64 samples?
018A   297F           00664                 goto SampleDelayedLoopB
018B   0000           00665         nop
018C   0808           00666         movf ADC_DATAPORT, W                    ;Last sample in Bank 2
018D   1409           00667         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
018E   1009           00668         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
018F   0080           00669         movwf INDF                                              ;Save to QUEUE
0190   1783           00670         bsf STATUS, IRP                                 ;Move QUEUE pointer to Bank 4
                      00671         MOVLF BUFFERSIZE-1, cntrc
0191   303F               M     movlw BUFFERSIZE-1
0192   00F8               M     movwf cntrc
                      00672         MOVFF sampleRate2, cntra                ;Restore cntra
0193   0875               M     movf sampleRate2, w
0194   00F6               M     movwf cntra
                      00673         MOVFF sampleRate1, cntrb                ;Restore cntrb
0195   0874               M     movf sampleRate1, w
0196   00F7               M     movwf cntrb
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0197   2116           00674         call Delay
0198   0000           00675         nop
0199                  00676 SampleDelayedLoopC
0199   0808           00677         movf ADC_DATAPORT, W                    ;Sample
019A   1409           00678         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
019B   1009           00679         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
019C   0080           00680         movwf INDF                                              ;Save to QUEUE
019D   0A84           00681         incf FSR, F                                             ;Increment QUEUE pointer
                      00682         MOVFF sampleRate2, cntra                ;Restore cntra
019E   0875               M     movf sampleRate2, w
019F   00F6               M     movwf cntra
                      00683         MOVFF sampleRate1, cntrb                ;Restore cntrb
01A0   0874               M     movf sampleRate1, w
01A1   00F7               M     movwf cntrb
01A2   2116           00684         call Delay
01A3   0BF8           00685         decfsz cntrc, F                                 ;Increment counter, 64 samples?
01A4   2999           00686                 goto SampleDelayedLoopC
01A5   0000           00687         nop
01A6   0808           00688         movf ADC_DATAPORT, W                    ;Last sample in Bank 4
01A7   1409           00689         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01A8   1009           00690         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01A9   0080           00691         movwf INDF                                              ;Save to QUEUE
01AA   1384           00692         bcf FSR, 7                                              ;Move QUEUE pointer to Bank 2
                      00693         MOVLF BUFFERSIZE-1, cntrc
01AB   303F               M     movlw BUFFERSIZE-1
01AC   00F8               M     movwf cntrc
                      00694         MOVFF sampleRate2, cntra                ;Restore cntra
01AD   0875               M     movf sampleRate2, w
01AE   00F6               M     movwf cntra
                      00695         MOVFF sampleRate1, cntrb                ;Restore cntrb
01AF   0874               M     movf sampleRate1, w
01B0   00F7               M     movwf cntrb
01B1   2116           00696         call Delay
01B2   0000           00697         nop
01B3                  00698 SampleDelayedLoopD
01B3   0808           00699         movf ADC_DATAPORT, W                    ;Sample
01B4   1409           00700         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01B5   1009           00701         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01B6   0080           00702         movwf INDF                                              ;Save to QUEUE
01B7   0384           00703         decf FSR, F                                             ;Increment QUEUE pointer
                      00704         MOVFF sampleRate2, cntra                ;Restore cntra
01B8   0875               M     movf sampleRate2, w
01B9   00F6               M     movwf cntra
                      00705         MOVFF sampleRate1, cntrb                ;Restore cntrb
01BA   0874               M     movf sampleRate1, w
01BB   00F7               M     movwf cntrb
01BC   2116           00706         call Delay
01BD   0BF8           00707         decfsz cntrc, F                                 ;Increment counter, 64 samples?
01BE   29B3           00708                 goto SampleDelayedLoopD
01BF   0000           00709         nop
01C0   0808           00710         movf ADC_DATAPORT, W                    ;Last sample
01C1   1409           00711         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01C2   118A           00712         bcf PCLATH, 3                                   ;insure correct program memory page
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C3   120A           00713         bcf PCLATH, 4
01C4   2921           00714         goto ADCShutdown
                      00715 
                      00716 ;SampleXYDelayed
                      00717 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 20 MHz clock
                      00718 ;Sampling rate = 5e6 / (26 + 7 * SAMPLERATE1:SAMPLERATE2 + 3 * SAMPLERATE1) with 4 MHz clock
                      00719 ;SampleXYDelayed does not sample X and Y at the same time.  Y is sampled 6 clock cycles
                      00720 ;behind X.  For a 20 MHz clock this is 1.2 uS, for a 4 MHz clock this is 6 uS.
                      00721 ;-----------------------------------------------------------------------------
01C5                  00722 SampleXYDelayed
01C5   1009           00723         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
01C6   1489           00724         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
                      00725         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
01C7   3020               M     movlw BUFFERMIN
01C8   0084               M     movwf FSR
01C9   0808           00726         movf ADC_DATAPORT, W                    ;Sample X
01CA   1409           00727         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01CB   1009           00728         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01CC   1089           00729         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
01CD   0080           00730         movwf INDF                                              ;Save to QUEUE
01CE   0A84           00731         incf FSR, F                                             ;Increment QUEUE pointer
                      00732         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
01CF   301F               M     movlw BUFFERSIZE/2-1
01D0   00F8               M     movwf cntrc
                      00733         MOVFF sampleRate2, cntra                ;Restore cntra
01D1   0875               M     movf sampleRate2, w
01D2   00F6               M     movwf cntra
                      00734         MOVFF sampleRate1, cntrb                ;Restore cntrb
01D3   0874               M     movf sampleRate1, w
01D4   00F7               M     movwf cntrb
01D5   2116           00735         call Delay
01D6   0000           00736         nop
01D7                  00737 SampleXYDelayedLA
01D7   0808           00738         movf ADC_DATAPORT, W                    ;Sample Y
01D8   1409           00739         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01D9   1009           00740         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01DA   1489           00741         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
01DB   0080           00742         movwf INDF                                              ;Save to QUEUE
01DC   0A84           00743         incf FSR, F                                             ;Increment QUEUE pointer
01DD   0808           00744         movf ADC_DATAPORT, W                    ;Sample X
01DE   1409           00745         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01DF   1009           00746         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01E0   1089           00747         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
01E1   0080           00748         movwf INDF                                              ;Save to QUEUE
01E2   0A84           00749         incf FSR, F                                             ;Increment QUEUE pointer
                      00750         MOVFF sampleRate2, cntra                ;Restore cntra
01E3   0875               M     movf sampleRate2, w
01E4   00F6               M     movwf cntra
                      00751         MOVFF sampleRate1, cntrb                ;Restore cntrb
01E5   0874               M     movf sampleRate1, w
01E6   00F7               M     movwf cntrb
01E7   2116           00752         call Delay
01E8   0BF8           00753         decfsz cntrc, F                                 ;Increment counter, 64 samples?
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E9   29D7           00754                 goto SampleXYDelayedLA
01EA   0000           00755         nop
01EB   0808           00756         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 1
01EC   1409           00757         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01ED   1009           00758         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01EE   1489           00759         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
01EF   0080           00760         movwf INDF                                              ;Save to QUEUE
01F0   1784           00761         bsf FSR, 7                                              ;Move QUEUE pointer to Bank 2
01F1   0808           00762         movf ADC_DATAPORT, W                    ;Sample X
01F2   1409           00763         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
01F3   1009           00764         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
01F4   1089           00765         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
01F5   0080           00766         movwf INDF                                              ;Save to QUEUE
01F6   0384           00767         decf FSR, f                                             ;Increment QUEUE pointer
                      00768         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
01F7   301F               M     movlw BUFFERSIZE/2-1
01F8   00F8               M     movwf cntrc
                      00769         MOVFF sampleRate2, cntra                ;Restore cntra
01F9   0875               M     movf sampleRate2, w
01FA   00F6               M     movwf cntra
                      00770         MOVFF sampleRate1, cntrb                ;Restore cntrb
01FB   0874               M     movf sampleRate1, w
01FC   00F7               M     movwf cntrb
01FD   2116           00771         call Delay
01FE   0000           00772         nop
01FF                  00773 SampleXYDelayedLB
01FF   0808           00774         movf ADC_DATAPORT, W                    ;Sample Y
0200   1409           00775         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0201   1009           00776         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0202   1489           00777         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0203   0080           00778         movwf INDF                                              ;Save to QUEUE
0204   0384           00779         decf FSR, F                                             ;Increment QUEUE pointer
0205   0808           00780         movf ADC_DATAPORT, W                    ;Sample X
0206   1409           00781         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0207   1009           00782         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0208   1089           00783         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0209   0080           00784         movwf INDF                                              ;Save to QUEUE
020A   0384           00785         decf FSR, F                                             ;Increment QUEUE pointer
                      00786         MOVFF sampleRate2, cntra                ;Restore cntra
020B   0875               M     movf sampleRate2, w
020C   00F6               M     movwf cntra
                      00787         MOVFF sampleRate1, cntrb                ;Restore cntrb
020D   0874               M     movf sampleRate1, w
020E   00F7               M     movwf cntrb
020F   2116           00788         call Delay
0210   0BF8           00789         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0211   29FF           00790                 goto SampleXYDelayedLB
0212   0000           00791         nop
0213   0808           00792         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 2
0214   1409           00793         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0215   1009           00794         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0216   1489           00795         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0217   0080           00796         movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0218   1783           00797         bsf STATUS, IRP                                 ;Move QUEUE pointer to Bank 4
0219   0808           00798         movf ADC_DATAPORT, W                    ;Sample X
021A   1409           00799         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
021B   1009           00800         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
021C   1089           00801         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
021D   0080           00802         movwf INDF                                              ;Save to QUEUE
021E   0A84           00803         incf FSR, f                                             ;Increment QUEUE pointer
                      00804         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
021F   301F               M     movlw BUFFERSIZE/2-1
0220   00F8               M     movwf cntrc
                      00805         MOVFF sampleRate2, cntra                ;Restore cntra
0221   0875               M     movf sampleRate2, w
0222   00F6               M     movwf cntra
                      00806         MOVFF sampleRate1, cntrb                ;Restore cntrb
0223   0874               M     movf sampleRate1, w
0224   00F7               M     movwf cntrb
0225   2116           00807         call Delay
0226   0000           00808         nop
0227                  00809 SampleXYDelayedLC
0227   0808           00810         movf ADC_DATAPORT, W                    ;Sample Y
0228   1409           00811         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0229   1009           00812         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
022A   1489           00813         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
022B   0080           00814         movwf INDF                                              ;Save to QUEUE
022C   0A84           00815         incf FSR, F                                             ;Increment QUEUE pointer
022D   0808           00816         movf ADC_DATAPORT, W                    ;Sample X
022E   1409           00817         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
022F   1009           00818         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0230   1089           00819         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0231   0080           00820         movwf INDF                                              ;Save to QUEUE
0232   0A84           00821         incf FSR, F                                             ;Increment QUEUE pointer
                      00822         MOVFF sampleRate2, cntra                ;Restore cntra
0233   0875               M     movf sampleRate2, w
0234   00F6               M     movwf cntra
                      00823         MOVFF sampleRate1, cntrb                ;Restore cntrb
0235   0874               M     movf sampleRate1, w
0236   00F7               M     movwf cntrb
0237   2116           00824         call Delay
0238   0BF8           00825         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0239   2A27           00826                 goto SampleXYDelayedLC
023A   0000           00827         nop
023B   0808           00828         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 4
023C   1409           00829         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
023D   1009           00830         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
023E   1489           00831         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
023F   0080           00832         movwf INDF                                              ;Save to QUEUE
0240   1384           00833         bcf FSR, 7                                              ;Move QUEUE pointer to Bank 3
0241   0808           00834         movf ADC_DATAPORT, W                    ;Sample X
0242   1409           00835         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0243   1009           00836         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0244   1089           00837         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0245   0080           00838         movwf INDF                                              ;Save to QUEUE
0246   0384           00839         decf FSR, f                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00840         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
0247   301F               M     movlw BUFFERSIZE/2-1
0248   00F8               M     movwf cntrc
                      00841         MOVFF sampleRate2, cntra                ;Restore cntra
0249   0875               M     movf sampleRate2, w
024A   00F6               M     movwf cntra
                      00842         MOVFF sampleRate1, cntrb                ;Restore cntrb
024B   0874               M     movf sampleRate1, w
024C   00F7               M     movwf cntrb
024D   2116           00843         call Delay
024E   0000           00844         nop
024F                  00845 SampleXYDelayedLD
024F   0808           00846         movf ADC_DATAPORT, W                    ;Sample Y
0250   1409           00847         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0251   1009           00848         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0252   1489           00849         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0253   0080           00850         movwf INDF                                              ;Save to QUEUE
0254   0384           00851         decf FSR, F                                             ;Increment QUEUE pointer
0255   0808           00852         movf ADC_DATAPORT, W                    ;Sample X
0256   1409           00853         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0257   1009           00854         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0258   1089           00855         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0259   0080           00856         movwf INDF                                              ;Save to QUEUE
025A   0384           00857         decf FSR, F                                             ;Increment QUEUE pointer
                      00858         MOVFF sampleRate2, cntra                ;Restore cntra
025B   0875               M     movf sampleRate2, w
025C   00F6               M     movwf cntra
                      00859         MOVFF sampleRate1, cntrb                ;Restore cntrb
025D   0874               M     movf sampleRate1, w
025E   00F7               M     movwf cntrb
025F   2116           00860         call Delay
0260   0BF8           00861         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0261   2A4F           00862                 goto SampleXYDelayedLD
0262   0000           00863         nop
0263   0808           00864         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 3
0264   1409           00865         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0265   118A           00866         bcf PCLATH, 3                                   ;insure correct program memory page
0266   120A           00867         bcf PCLATH, 4
0267   2921           00868         goto ADCShutdown
                      00869 
                      00870 ;Fast sample
                      00871 ;Sampling rate = 625 kHz with 20 MHz clock
                      00872 ;Sampling rate = 125 kHz with 4 MHz clock
                      00873 ;-----------------------------------------------------------------------------
0268                  00874 Sample625k
0268   1009           00875         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
                      00876         MOVLF BUFFERSIZE-1, cntra               ;Initialize counter
0269   303F               M     movlw BUFFERSIZE-1
026A   00F6               M     movwf cntra
                      00877         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
026B   3020               M     movlw BUFFERMIN
026C   0084               M     movwf FSR
026D   0000           00878         nop
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026E                  00879 Sample625kLoopA
026E   0808           00880         movf ADC_DATAPORT, W                    ;Sample
026F   1409           00881         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0270   1009           00882         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0271   0080           00883         movwf INDF                                              ;Save to QUEUE
0272   0A84           00884         incf FSR, F                                             ;Increment QUEUE pointer
0273   0BF6           00885         decfsz cntra, F                                 ;Increment counter, 64 samples?
0274   2A6E           00886                 goto Sample625kLoopA
0275   0000           00887         nop
0276   0808           00888         movf ADC_DATAPORT, w                    ;Last sample in Bank 1
0277   1409           00889         bsf ADC_CONTROLPORT, RDD                ;stop conversion
0278   1009           00890         bcf ADC_CONTROLPORT, RDD                ;begin next conversion
0279   0080           00891         movwf INDF                                              ;Save to QUEUE
027A   1784           00892         bsf FSR, 7                                              ;Move QUEUE pointer to Bank 2
                      00893         MOVLF BUFFERSIZE-1, cntra
027B   303F               M     movlw BUFFERSIZE-1
027C   00F6               M     movwf cntra
027D   0000           00894         nop
027E                  00895 Sample625kLoopB
027E   0808           00896         movf ADC_DATAPORT, W                    ;Sample
027F   1409           00897         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0280   1009           00898         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0281   0080           00899         movwf INDF                                              ;Save to QUEUE
0282   0384           00900         decf FSR, F                                             ;Increment QUEUE pointer
0283   0BF6           00901         decfsz cntra, F                                 ;Increment counter, 64 samples?
0284   2A7E           00902                 goto Sample625kLoopB
0285   0000           00903         nop
0286   0808           00904         movf ADC_DATAPORT, w                    ;Last sample in Bank 2
0287   1409           00905         bsf ADC_CONTROLPORT, RDD                ;stop conversion
0288   1009           00906         bcf ADC_CONTROLPORT, RDD                ;begin next conversion
0289   0080           00907         movwf INDF                                              ;Save to QUEUE
028A   1783           00908         bsf STATUS, IRP                                 ;Move QUEUE pointer to Bank 4
                      00909         MOVLF BUFFERSIZE-1, cntra
028B   303F               M     movlw BUFFERSIZE-1
028C   00F6               M     movwf cntra
028D   0000           00910         nop
028E                  00911 Sample625kLoopC
028E   0808           00912         movf ADC_DATAPORT, W                    ;Sample
028F   1409           00913         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0290   1009           00914         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0291   0080           00915         movwf INDF                                              ;Save to QUEUE
0292   0A84           00916         incf FSR, F                                             ;Increment QUEUE pointer
0293   0BF6           00917         decfsz cntra, F                                 ;Increment counter, 64 samples?
0294   2A8E           00918                 goto Sample625kLoopC
0295   0000           00919         nop
0296   0808           00920         movf ADC_DATAPORT, w                    ;Last sample in Bank 4
0297   1409           00921         bsf ADC_CONTROLPORT, RDD                ;stop conversion
0298   1009           00922         bcf ADC_CONTROLPORT, RDD                ;begin next conversion
0299   0080           00923         movwf INDF                                              ;Save to QUEUE
029A   1384           00924         bcf FSR, 7                                              ;Move QUEUE pointer to Bank 3
                      00925         MOVLF BUFFERSIZE-1, cntra
029B   303F               M     movlw BUFFERSIZE-1
029C   00F6               M     movwf cntra
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029D   0000           00926         nop
029E                  00927 Sample625kLoopD
029E   0808           00928         movf ADC_DATAPORT, W                    ;Sample
029F   1409           00929         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02A0   1009           00930         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02A1   0080           00931         movwf INDF                                              ;Save to QUEUE
02A2   0384           00932         decf FSR, F                                             ;Increment QUEUE pointer
02A3   0BF6           00933         decfsz cntra, F                                 ;Increment counter, 64 samples?
02A4   2A9E           00934                 goto Sample625kLoopD
02A5   0000           00935         nop
02A6   0808           00936         movf ADC_DATAPORT, W                    ;Last sample
02A7   1409           00937         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02A8   118A           00938         bcf PCLATH, 3                                   ;insure correct program memory page
02A9   120A           00939         bcf PCLATH, 4
02AA   2921           00940         goto ADCShutdown
                      00941 
                      00942 ;Fast sample
                      00943 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      00944 ;Sampling rate =  83.333 kHz with 4 MHz clock
                      00945 ;or
                      00946 ;Sampling rate = 250 kHz with 20 MHz clock
                      00947 ;Sampling rate =  50 kHz with 4 MHz clock
                      00948 ;-----------------------------------------------------------------------------
02AB                  00949 Sample417k250k
02AB   1009           00950         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
                      00951         MOVLF BUFFERSIZE - 1, cntra             ;Initialize counter
02AC   303F               M     movlw BUFFERSIZE - 1
02AD   00F6               M     movwf cntra
                      00952         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
02AE   3020               M     movlw BUFFERMIN
02AF   0084               M     movwf FSR
02B0   2AB1           00953         goto $ + 1                                              ;Delay 3
02B1   1D70           00954         btfss configLoc1, 2                             ;Choose to delay by 3 more or by 11 more
02B2   2AB4           00955                 goto Sample417kLoopA
02B3   230A           00956         call DelaySeven                                 ;Delay 9 cycles
02B4                  00957 Sample417kLoopA
02B4   0808           00958         movf ADC_DATAPORT, W                    ;Sample
02B5   1409           00959         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02B6   1009           00960         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02B7   0080           00961         movwf INDF                                              ;Save to QUEUE
02B8   0A84           00962         incf FSR, F                                             ;Increment QUEUE pointer
02B9   1D70           00963         btfss configLoc1, 2                             ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
02BA   2ABC           00964                 goto Sample417kA                        ;Delaying 4 cycles, sample at 417k
02BB                  00965 Sample250kA
02BB   230A           00966         call DelaySeven                                 ;Delay 9 cycles
02BC                  00967 Sample417kA
02BC   0000           00968         nop
02BD   0BF6           00969         decfsz cntra, F                                 ;Increment counter, 64 samples?
02BE   2AB4           00970                 goto Sample417kLoopA
02BF   0000           00971         nop
02C0   0808           00972         movf ADC_DATAPORT, W                    ;Last sample bank 1
02C1   1409           00973         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C2   1009           00974         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02C3   0080           00975         movwf INDF                                              ;Save to QUEUE
02C4   1784           00976         bsf FSR, 7                                              ;Goto bank 2
                      00977         MOVLF BUFFERSIZE - 1, cntra             ;Reinitialize counter
02C5   303F               M     movlw BUFFERSIZE - 1
02C6   00F6               M     movwf cntra
02C7   2AC8           00978         goto $ + 1
02C8   1D70           00979         btfss configLoc1, 2                             ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
02C9   2ACB           00980                 goto Sample417kLoopB            ;Delaying  cycles, sample at 417k
02CA   230A           00981         call DelaySeven                                 ;Delay 9 cycles
02CB                  00982 Sample417kLoopB
02CB   0808           00983         movf ADC_DATAPORT, W                    ;Sample
02CC   1409           00984         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02CD   1009           00985         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02CE   0080           00986         movwf INDF                                              ;Save to QUEUE
02CF   0384           00987         decf FSR, F                                             ;Increment QUEUE pointer
02D0                  00988 StSample417kLoopB
02D0   1D70           00989         btfss configLoc1, 2                             ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
02D1   2AD3           00990                 goto Sample417kB                        ;Delaying 4 cycles, sample at 417k
02D2                  00991 Sample250kB
02D2   230A           00992         call DelaySeven                                 ;Delay 9 cycles
02D3                  00993 Sample417kB
02D3   0000           00994         nop
02D4   0BF6           00995         decfsz cntra, F                                 ;Increment counter, 64 samples?
02D5   2ACB           00996                 goto Sample417kLoopB
02D6   0000           00997         nop
02D7   0808           00998         movf ADC_DATAPORT, W                    ;Last sample bank 2
02D8   1409           00999         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02D9   1009           01000         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02DA   0080           01001         movwf INDF                                              ;Save to QUEUE
02DB   1783           01002         bsf STATUS, IRP                                 ;Goto bank 4
                      01003         MOVLF BUFFERSIZE - 1, cntra             ;Reinitialize counter
02DC   303F               M     movlw BUFFERSIZE - 1
02DD   00F6               M     movwf cntra
02DE   2ADF           01004         goto $ + 1
02DF   1D70           01005         btfss configLoc1, 2                             ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
02E0   2AE2           01006                 goto Sample417kLoopC            ;Delaying  cycles, sample at 417k
02E1   230A           01007         call DelaySeven                                 ;Delay 9 cycles
02E2                  01008 Sample417kLoopC
02E2   0808           01009         movf ADC_DATAPORT, W                    ;Sample
02E3   1409           01010         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02E4   1009           01011         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02E5   0080           01012         movwf INDF                                              ;Save to QUEUE
02E6   0A84           01013         incf FSR, F                                             ;Increment QUEUE pointer
02E7                  01014 StSample417kLoopC
02E7   1D70           01015         btfss configLoc1, 2                             ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
02E8   2AEA           01016                 goto Sample417kC                        ;Delaying 4 cycles, sample at 417k
02E9                  01017 Sample250kC
02E9   230A           01018         call DelaySeven                                 ;Delay 9 cycles
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EA                  01019 Sample417kC
02EA   0000           01020         nop
02EB   0BF6           01021         decfsz cntra, F                                 ;Increment counter, 64 samples?
02EC   2AE2           01022                 goto Sample417kLoopC
02ED   0000           01023         nop
02EE   0808           01024         movf ADC_DATAPORT, W                    ;Last sample bank 4
02EF   1409           01025         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02F0   1009           01026         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02F1   0080           01027         movwf INDF                                              ;Save to QUEUE
02F2   1384           01028         bcf FSR, 7                                              ;Goto bank 3
                      01029         MOVLF BUFFERSIZE - 1, cntra             ;Reinitialize counter
02F3   303F               M     movlw BUFFERSIZE - 1
02F4   00F6               M     movwf cntra
02F5   2AF6           01030         goto $ + 1
02F6   1D70           01031         btfss configLoc1, 2                             ;Choose to delay 5 cycles or 13 cycles depending
                             on mode
02F7   2AF9           01032                 goto Sample417kLoopD            ;Delaying  cycles, sample at 417k
02F8   230A           01033         call DelaySeven                                 ;Delay 9 cycles
02F9                  01034 Sample417kLoopD
02F9   0808           01035         movf ADC_DATAPORT, W                    ;Sample
02FA   1409           01036         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
02FB   1009           01037         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
02FC   0080           01038         movwf INDF                                              ;Save to QUEUE
02FD   0384           01039         decf FSR, F                                             ;Increment QUEUE pointer
02FE                  01040 StSample417kLoopD
02FE   1D70           01041         btfss configLoc1, 2                             ;Choose to delay 4 cycles or 12 cycles depending
                             on mode
02FF   2B01           01042                 goto Sample417kD                        ;Delaying 4 cycles, sample at 417k
0300                  01043 Sample250kD
0300   230A           01044         call DelaySeven                                 ;Delay 9 cycles
0301                  01045 Sample417kD
0301   0000           01046         nop
0302   0BF6           01047         decfsz cntra, F                                 ;Increment counter, 64 samples?
0303   2AF9           01048                 goto Sample417kLoopD
0304   0000           01049         nop
0305   0808           01050         movf ADC_DATAPORT, W                    ;Last sample
0306   1409           01051         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0307   118A           01052         bcf PCLATH, 3                                   ;insure correct program memory page
0308   120A           01053         bcf PCLATH, 4
0309   2921           01054         goto ADCShutdown
                      01055 
                      01056 ;Delay Seven Cycles, helper to Sample417k250k
030A                  01057 DelaySeven
030A   0000           01058         nop                                                             ;1
030B                  01059 DelaySix
030B   0000           01060         nop
030C                  01061 DelayFive
030C   0000           01062         nop
030D                  01063 DelayFour
030D   2B0E           01064         goto $ + 1                                              ;5
030E                  01065 DelayTwo
030E   0008           01066         return                                                  ;7
                      01067 
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01068 
                      01069 ;Fast sample XY
                      01070 ;Sampling rate = 250 kHz with 20 MHz clock
030F                  01071 SampleXY250k192k
030F   1009           01072         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
0310   1489           01073         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
                      01074         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
0311   3020               M     movlw BUFFERMIN
0312   0084               M     movwf FSR
0313   0808           01075         movf ADC_DATAPORT, W                    ;Sample X
0314   1409           01076         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0315   1009           01077         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0316   1089           01078         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0317   0080           01079         movwf INDF                                              ;Save to QUEUE
0318   0A84           01080         incf FSR, F                                             ;Increment QUEUE pointer
                      01081         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
0319   301F               M     movlw BUFFERSIZE/2-1
031A   00F8               M     movwf cntrc
031B   1C70           01082         btfss configLoc1, 0                             ;Delay 250k or 192k
031C   230C           01083                 call DelayFive                  ;192k
031D   230E           01084         call DelayTwo
031E                  01085 SampleXY250kLA
031E   0808           01086         movf ADC_DATAPORT, W                    ;Sample Y
031F   1409           01087         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0320   1009           01088         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0321   1489           01089         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0322   0080           01090         movwf INDF                                              ;Save to QUEUE
0323   0A84           01091         incf FSR, F                                             ;Increment QUEUE pointer
0324   0808           01092         movf ADC_DATAPORT, W                    ;Sample X
0325   1409           01093         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0326   1009           01094         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0327   1089           01095         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0328   0080           01096         movwf INDF                                              ;Save to QUEUE
0329   0A84           01097         incf FSR, F                                             ;Increment QUEUE pointer
032A   1C70           01098         btfss configLoc1, 0                     ;Delay 250k or 192k
032B   230C           01099                 call DelayFive                  ;192k
032C   2B2D           01100         goto $ + 1
032D   0000           01101         nop
032E   0BF8           01102         decfsz cntrc, F                                 ;Increment counter, 64 samples?
032F   2B1E           01103                 goto SampleXY250kLA
0330   0000           01104         nop
0331   0808           01105         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 1
0332   1409           01106         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0333   1009           01107         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0334   1489           01108         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0335   0080           01109         movwf INDF                                              ;Save to QUEUE
0336   1784           01110         bsf FSR, 7                                              ;Move QUEUE pointer to Bank 2
0337   0808           01111         movf ADC_DATAPORT, W                    ;Sample X
0338   1409           01112         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0339   1009           01113         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
033A   1089           01114         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
033B   0080           01115         movwf INDF                                              ;Save to QUEUE
033C   0384           01116         decf FSR, f                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01117         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
033D   301F               M     movlw BUFFERSIZE/2-1
033E   00F8               M     movwf cntrc
033F   1C70           01118         btfss configLoc1, 0                     ;Delay 250k or 192k
0340   230C           01119                 call DelayFive                  ;192k
0341   230E           01120         call DelayTwo
0342                  01121 SampleXY250kLB
0342   0808           01122         movf ADC_DATAPORT, W                    ;Sample Y
0343   1409           01123         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0344   1009           01124         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0345   1489           01125         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0346   0080           01126         movwf INDF                                              ;Save to QUEUE
0347   0384           01127         decf FSR, F                                             ;Increment QUEUE pointer
0348   0808           01128         movf ADC_DATAPORT, W                    ;Sample X
0349   1409           01129         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
034A   1009           01130         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
034B   1089           01131         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
034C   0080           01132         movwf INDF                                              ;Save to QUEUE
034D   0384           01133         decf FSR, F                                             ;Increment QUEUE pointer
034E   1C70           01134         btfss configLoc1, 0                     ;Delay 250k or 192k
034F   230C           01135                 call DelayFive                  ;192k
0350   2B51           01136         goto $ + 1
0351   0000           01137         nop
0352   0BF8           01138         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0353   2B42           01139                 goto SampleXY250kLB
0354   0000           01140         nop
0355   0808           01141         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 2
0356   1409           01142         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0357   1009           01143         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0358   1489           01144         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0359   0080           01145         movwf INDF                                              ;Save to QUEUE
035A   1783           01146         bsf STATUS, IRP                                 ;Move QUEUE pointer to Bank 4
035B   0808           01147         movf ADC_DATAPORT, W                    ;Sample X
035C   1409           01148         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
035D   1009           01149         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
035E   1089           01150         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
035F   0080           01151         movwf INDF                                              ;Save to QUEUE
0360   0A84           01152         incf FSR, f                                             ;Increment QUEUE pointer
                      01153         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
0361   301F               M     movlw BUFFERSIZE/2-1
0362   00F8               M     movwf cntrc
0363   1C70           01154         btfss configLoc1, 0                     ;Delay 250k or 192k
0364   230C           01155                 call DelayFive                  ;192k
0365   230E           01156         call DelayTwo
0366                  01157 SampleXY250kLC
0366   0808           01158         movf ADC_DATAPORT, W                    ;Sample Y
0367   1409           01159         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0368   1009           01160         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0369   1489           01161         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
036A   0080           01162         movwf INDF                                              ;Save to QUEUE
036B   0A84           01163         incf FSR, F                                             ;Increment QUEUE pointer
036C   0808           01164         movf ADC_DATAPORT, W                    ;Sample X
036D   1409           01165         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036E   1009           01166         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
036F   1089           01167         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0370   0080           01168         movwf INDF                                              ;Save to QUEUE
0371   0A84           01169         incf FSR, F                                             ;Increment QUEUE pointer
0372   1C70           01170         btfss configLoc1, 0                     ;Delay 250k or 192k
0373   230C           01171                 call DelayFive                  ;192k
0374   2B75           01172         goto $ + 1
0375   0000           01173         nop
0376   0BF8           01174         decfsz cntrc, F                                 ;Increment counter, 64 samples?
0377   2B66           01175                 goto SampleXY250kLC
0378   0000           01176         nop
0379   0808           01177         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 4
037A   1409           01178         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
037B   1009           01179         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
037C   1489           01180         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
037D   0080           01181         movwf INDF                                              ;Save to QUEUE
037E   1384           01182         bcf FSR, 7                                              ;Move QUEUE pointer to Bank 3
037F   0808           01183         movf ADC_DATAPORT, W                    ;Sample X
0380   1409           01184         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0381   1009           01185         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0382   1089           01186         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0383   0080           01187         movwf INDF                                              ;Save to QUEUE
0384   0384           01188         decf FSR, f                                             ;Increment QUEUE pointer
                      01189         MOVLF BUFFERSIZE/2-1, cntrc             ;Initialize counter, use cntrc as counter
0385   301F               M     movlw BUFFERSIZE/2-1
0386   00F8               M     movwf cntrc
0387   1C70           01190         btfss configLoc1, 0                     ;Delay 250k or 192k
0388   230C           01191                 call DelayFive                  ;192k
0389   230E           01192         call DelayTwo
038A                  01193 SampleXY250kLD
038A   0808           01194         movf ADC_DATAPORT, W                    ;Sample Y
038B   1409           01195         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
038C   1009           01196         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
038D   1489           01197         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
038E   0080           01198         movwf INDF                                              ;Save to QUEUE
038F   0384           01199         decf FSR, F                                             ;Increment QUEUE pointer
0390   0808           01200         movf ADC_DATAPORT, W                    ;Sample X
0391   1409           01201         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0392   1009           01202         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0393   1089           01203         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0394   0080           01204         movwf INDF                                              ;Save to QUEUE
0395   0384           01205         decf FSR, F                                             ;Increment QUEUE pointer
0396   1C70           01206         btfss configLoc1, 0                     ;Delay 250k or 192k
0397   230C           01207                 call DelayFive                  ;192k
0398   2B99           01208         goto $ + 1
0399   0000           01209         nop
039A   0BF8           01210         decfsz cntrc, F                                 ;Increment counter, 64 samples?
039B   2B8A           01211                 goto SampleXY250kLD
039C   0000           01212         nop
039D   0808           01213         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 3
039E   1409           01214         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
039F   118A           01215         bcf PCLATH, 3                                   ;insure correct program memory page
03A0   120A           01216         bcf PCLATH, 4
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A1   2921           01217         goto ADCShutdown
                      01218 
                      01219 ;Fastest sample
                      01220 ;Sampling rate = 1 MHz with 20 MHz clock
                      01221 ;Sampling rate = 200 kHz with 4 MHz clock
                      01222 ;-----------------------------------------------------------------------------
03A2                  01223 Sample1M
03A2   1009           01224         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01225         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
03A3   3020               M     movlw BUFFERMIN
03A4   0084               M     movwf FSR
03A5   0000           01226         nop
  0000                01227         local count
  00000001            01228         count = 1
                      01229         while count < BUFFERSIZE
03A6   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03A7   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03A8   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03A9   0080           01233                 movwf INDF                                              ;Save to QUEUE
03AA   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01235                 count = count + 1
03AB   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03AC   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03AD   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03AE   0080           01233                 movwf INDF                                              ;Save to QUEUE
03AF   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01235                 count = count + 1
03B0   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03B1   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03B2   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03B3   0080           01233                 movwf INDF                                              ;Save to QUEUE
03B4   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01235                 count = count + 1
03B5   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03B6   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03B7   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03B8   0080           01233                 movwf INDF                                              ;Save to QUEUE
03B9   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01235                 count = count + 1
03BA   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03BB   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03BC   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03BD   0080           01233                 movwf INDF                                              ;Save to QUEUE
03BE   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01235                 count = count + 1
03BF   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03C0   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03C1   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03C2   0080           01233                 movwf INDF                                              ;Save to QUEUE
03C3   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01235                 count = count + 1
03C4   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03C5   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C6   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03C7   0080           01233                 movwf INDF                                              ;Save to QUEUE
03C8   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01235                 count = count + 1
03C9   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03CA   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03CB   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03CC   0080           01233                 movwf INDF                                              ;Save to QUEUE
03CD   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01235                 count = count + 1
03CE   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03CF   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03D0   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03D1   0080           01233                 movwf INDF                                              ;Save to QUEUE
03D2   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01235                 count = count + 1
03D3   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03D4   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03D5   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03D6   0080           01233                 movwf INDF                                              ;Save to QUEUE
03D7   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01235                 count = count + 1
03D8   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03D9   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03DA   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03DB   0080           01233                 movwf INDF                                              ;Save to QUEUE
03DC   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01235                 count = count + 1
03DD   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03DE   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03DF   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03E0   0080           01233                 movwf INDF                                              ;Save to QUEUE
03E1   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01235                 count = count + 1
03E2   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03E3   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03E4   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03E5   0080           01233                 movwf INDF                                              ;Save to QUEUE
03E6   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01235                 count = count + 1
03E7   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03E8   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03E9   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03EA   0080           01233                 movwf INDF                                              ;Save to QUEUE
03EB   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01235                 count = count + 1
03EC   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03ED   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03EE   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03EF   0080           01233                 movwf INDF                                              ;Save to QUEUE
03F0   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01235                 count = count + 1
03F1   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F2   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03F3   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03F4   0080           01233                 movwf INDF                                              ;Save to QUEUE
03F5   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01235                 count = count + 1
03F6   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03F7   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03F8   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03F9   0080           01233                 movwf INDF                                              ;Save to QUEUE
03FA   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01235                 count = count + 1
03FB   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
03FC   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
03FD   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
03FE   0080           01233                 movwf INDF                                              ;Save to QUEUE
03FF   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01235                 count = count + 1
0400   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0401   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0402   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0403   0080           01233                 movwf INDF                                              ;Save to QUEUE
0404   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01235                 count = count + 1
0405   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0406   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0407   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0408   0080           01233                 movwf INDF                                              ;Save to QUEUE
0409   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01235                 count = count + 1
040A   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
040B   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
040C   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
040D   0080           01233                 movwf INDF                                              ;Save to QUEUE
040E   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01235                 count = count + 1
040F   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0410   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0411   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0412   0080           01233                 movwf INDF                                              ;Save to QUEUE
0413   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01235                 count = count + 1
0414   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0415   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0416   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0417   0080           01233                 movwf INDF                                              ;Save to QUEUE
0418   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01235                 count = count + 1
0419   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
041A   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
041B   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
041C   0080           01233                 movwf INDF                                              ;Save to QUEUE
041D   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01235                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041E   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
041F   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0420   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0421   0080           01233                 movwf INDF                                              ;Save to QUEUE
0422   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01235                 count = count + 1
0423   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0424   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0425   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0426   0080           01233                 movwf INDF                                              ;Save to QUEUE
0427   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01235                 count = count + 1
0428   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0429   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
042A   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
042B   0080           01233                 movwf INDF                                              ;Save to QUEUE
042C   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01235                 count = count + 1
042D   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
042E   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
042F   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0430   0080           01233                 movwf INDF                                              ;Save to QUEUE
0431   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01235                 count = count + 1
0432   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0433   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0434   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0435   0080           01233                 movwf INDF                                              ;Save to QUEUE
0436   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01235                 count = count + 1
0437   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0438   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0439   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
043A   0080           01233                 movwf INDF                                              ;Save to QUEUE
043B   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01235                 count = count + 1
043C   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
043D   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
043E   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
043F   0080           01233                 movwf INDF                                              ;Save to QUEUE
0440   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01235                 count = count + 1
0441   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0442   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0443   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0444   0080           01233                 movwf INDF                                              ;Save to QUEUE
0445   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01235                 count = count + 1
0446   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0447   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0448   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0449   0080           01233                 movwf INDF                                              ;Save to QUEUE
044A   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000022            01235                 count = count + 1
044B   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
044C   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
044D   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
044E   0080           01233                 movwf INDF                                              ;Save to QUEUE
044F   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01235                 count = count + 1
0450   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0451   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0452   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0453   0080           01233                 movwf INDF                                              ;Save to QUEUE
0454   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01235                 count = count + 1
0455   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0456   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0457   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0458   0080           01233                 movwf INDF                                              ;Save to QUEUE
0459   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01235                 count = count + 1
045A   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
045B   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
045C   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
045D   0080           01233                 movwf INDF                                              ;Save to QUEUE
045E   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01235                 count = count + 1
045F   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0460   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0461   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0462   0080           01233                 movwf INDF                                              ;Save to QUEUE
0463   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01235                 count = count + 1
0464   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0465   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0466   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0467   0080           01233                 movwf INDF                                              ;Save to QUEUE
0468   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01235                 count = count + 1
0469   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
046A   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
046B   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
046C   0080           01233                 movwf INDF                                              ;Save to QUEUE
046D   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01235                 count = count + 1
046E   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
046F   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0470   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0471   0080           01233                 movwf INDF                                              ;Save to QUEUE
0472   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01235                 count = count + 1
0473   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0474   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0475   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0476   0080           01233                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0477   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01235                 count = count + 1
0478   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0479   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
047A   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
047B   0080           01233                 movwf INDF                                              ;Save to QUEUE
047C   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01235                 count = count + 1
047D   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
047E   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
047F   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0480   0080           01233                 movwf INDF                                              ;Save to QUEUE
0481   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01235                 count = count + 1
0482   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0483   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0484   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0485   0080           01233                 movwf INDF                                              ;Save to QUEUE
0486   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01235                 count = count + 1
0487   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0488   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0489   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
048A   0080           01233                 movwf INDF                                              ;Save to QUEUE
048B   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01235                 count = count + 1
048C   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
048D   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
048E   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
048F   0080           01233                 movwf INDF                                              ;Save to QUEUE
0490   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01235                 count = count + 1
0491   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0492   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0493   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0494   0080           01233                 movwf INDF                                              ;Save to QUEUE
0495   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01235                 count = count + 1
0496   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
0497   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
0498   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
0499   0080           01233                 movwf INDF                                              ;Save to QUEUE
049A   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01235                 count = count + 1
049B   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
049C   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
049D   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
049E   0080           01233                 movwf INDF                                              ;Save to QUEUE
049F   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01235                 count = count + 1
04A0   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04A1   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04A2   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A3   0080           01233                 movwf INDF                                              ;Save to QUEUE
04A4   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01235                 count = count + 1
04A5   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04A6   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04A7   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04A8   0080           01233                 movwf INDF                                              ;Save to QUEUE
04A9   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01235                 count = count + 1
04AA   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04AB   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04AC   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04AD   0080           01233                 movwf INDF                                              ;Save to QUEUE
04AE   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01235                 count = count + 1
04AF   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04B0   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04B1   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04B2   0080           01233                 movwf INDF                                              ;Save to QUEUE
04B3   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01235                 count = count + 1
04B4   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04B5   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04B6   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04B7   0080           01233                 movwf INDF                                              ;Save to QUEUE
04B8   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01235                 count = count + 1
04B9   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04BA   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04BB   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04BC   0080           01233                 movwf INDF                                              ;Save to QUEUE
04BD   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01235                 count = count + 1
04BE   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04BF   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C0   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04C1   0080           01233                 movwf INDF                                              ;Save to QUEUE
04C2   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01235                 count = count + 1
04C3   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C4   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04C5   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04C6   0080           01233                 movwf INDF                                              ;Save to QUEUE
04C7   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01235                 count = count + 1
04C8   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04C9   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04CA   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04CB   0080           01233                 movwf INDF                                              ;Save to QUEUE
04CC   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01235                 count = count + 1
04CD   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04CE   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CF   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04D0   0080           01233                 movwf INDF                                              ;Save to QUEUE
04D1   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01235                 count = count + 1
04D2   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D3   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D4   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04D5   0080           01233                 movwf INDF                                              ;Save to QUEUE
04D6   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01235                 count = count + 1
04D7   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04D8   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04D9   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04DA   0080           01233                 movwf INDF                                              ;Save to QUEUE
04DB   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01235                 count = count + 1
04DC   1409           01230                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
04DD   1009           01231                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
04DE   0808           01232                 movf ADC_DATAPORT, W                    ;Save Sample
04DF   0080           01233                 movwf INDF                                              ;Save to QUEUE
04E0   0A84           01234                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01235                 count = count + 1
                      01236         endw
04E1   1409           01237         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
04E2   1009           01238         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
04E3   0808           01239         movf ADC_DATAPORT, W
04E4   0080           01240         movwf INDF
04E5   1784           01241         bsf FSR, 7                                                      ;goto bank 2
  00000001            01242         count = 1
                      01243         while count < BUFFERSIZE
04E6   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
04E7   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
04E8   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
04E9   0080           01247                 movwf INDF                                              ;Save to QUEUE
04EA   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01249                 count = count + 1
04EB   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
04EC   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
04ED   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
04EE   0080           01247                 movwf INDF                                              ;Save to QUEUE
04EF   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01249                 count = count + 1
04F0   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
04F1   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
04F2   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
04F3   0080           01247                 movwf INDF                                              ;Save to QUEUE
04F4   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01249                 count = count + 1
04F5   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
04F6   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
04F7   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
04F8   0080           01247                 movwf INDF                                              ;Save to QUEUE
04F9   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000005            01249                 count = count + 1
04FA   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
04FB   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
04FC   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
04FD   0080           01247                 movwf INDF                                              ;Save to QUEUE
04FE   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01249                 count = count + 1
04FF   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0500   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0501   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0502   0080           01247                 movwf INDF                                              ;Save to QUEUE
0503   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01249                 count = count + 1
0504   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0505   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0506   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0507   0080           01247                 movwf INDF                                              ;Save to QUEUE
0508   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01249                 count = count + 1
0509   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
050A   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
050B   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
050C   0080           01247                 movwf INDF                                              ;Save to QUEUE
050D   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01249                 count = count + 1
050E   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
050F   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0510   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0511   0080           01247                 movwf INDF                                              ;Save to QUEUE
0512   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01249                 count = count + 1
0513   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0514   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0515   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0516   0080           01247                 movwf INDF                                              ;Save to QUEUE
0517   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01249                 count = count + 1
0518   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0519   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
051A   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
051B   0080           01247                 movwf INDF                                              ;Save to QUEUE
051C   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01249                 count = count + 1
051D   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
051E   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
051F   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0520   0080           01247                 movwf INDF                                              ;Save to QUEUE
0521   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01249                 count = count + 1
0522   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0523   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0524   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0525   0080           01247                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0526   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01249                 count = count + 1
0527   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0528   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0529   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
052A   0080           01247                 movwf INDF                                              ;Save to QUEUE
052B   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01249                 count = count + 1
052C   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
052D   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
052E   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
052F   0080           01247                 movwf INDF                                              ;Save to QUEUE
0530   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01249                 count = count + 1
0531   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0532   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0533   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0534   0080           01247                 movwf INDF                                              ;Save to QUEUE
0535   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01249                 count = count + 1
0536   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0537   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0538   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0539   0080           01247                 movwf INDF                                              ;Save to QUEUE
053A   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01249                 count = count + 1
053B   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
053C   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
053D   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
053E   0080           01247                 movwf INDF                                              ;Save to QUEUE
053F   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01249                 count = count + 1
0540   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0541   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0542   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0543   0080           01247                 movwf INDF                                              ;Save to QUEUE
0544   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01249                 count = count + 1
0545   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0546   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0547   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0548   0080           01247                 movwf INDF                                              ;Save to QUEUE
0549   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01249                 count = count + 1
054A   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
054B   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
054C   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
054D   0080           01247                 movwf INDF                                              ;Save to QUEUE
054E   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01249                 count = count + 1
054F   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0550   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0551   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0552   0080           01247                 movwf INDF                                              ;Save to QUEUE
0553   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01249                 count = count + 1
0554   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0555   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0556   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0557   0080           01247                 movwf INDF                                              ;Save to QUEUE
0558   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01249                 count = count + 1
0559   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
055A   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
055B   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
055C   0080           01247                 movwf INDF                                              ;Save to QUEUE
055D   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01249                 count = count + 1
055E   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
055F   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0560   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0561   0080           01247                 movwf INDF                                              ;Save to QUEUE
0562   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01249                 count = count + 1
0563   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0564   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0565   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0566   0080           01247                 movwf INDF                                              ;Save to QUEUE
0567   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01249                 count = count + 1
0568   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0569   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
056A   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
056B   0080           01247                 movwf INDF                                              ;Save to QUEUE
056C   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01249                 count = count + 1
056D   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
056E   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
056F   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0570   0080           01247                 movwf INDF                                              ;Save to QUEUE
0571   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01249                 count = count + 1
0572   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0573   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0574   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0575   0080           01247                 movwf INDF                                              ;Save to QUEUE
0576   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01249                 count = count + 1
0577   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0578   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0579   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
057A   0080           01247                 movwf INDF                                              ;Save to QUEUE
057B   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01249                 count = count + 1
057C   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
057D   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

057E   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
057F   0080           01247                 movwf INDF                                              ;Save to QUEUE
0580   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01249                 count = count + 1
0581   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0582   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0583   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0584   0080           01247                 movwf INDF                                              ;Save to QUEUE
0585   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01249                 count = count + 1
0586   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0587   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0588   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0589   0080           01247                 movwf INDF                                              ;Save to QUEUE
058A   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01249                 count = count + 1
058B   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
058C   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
058D   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
058E   0080           01247                 movwf INDF                                              ;Save to QUEUE
058F   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01249                 count = count + 1
0590   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0591   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0592   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0593   0080           01247                 movwf INDF                                              ;Save to QUEUE
0594   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01249                 count = count + 1
0595   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0596   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0597   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0598   0080           01247                 movwf INDF                                              ;Save to QUEUE
0599   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01249                 count = count + 1
059A   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
059B   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
059C   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
059D   0080           01247                 movwf INDF                                              ;Save to QUEUE
059E   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01249                 count = count + 1
059F   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05A0   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05A1   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05A2   0080           01247                 movwf INDF                                              ;Save to QUEUE
05A3   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01249                 count = count + 1
05A4   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05A5   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05A6   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05A7   0080           01247                 movwf INDF                                              ;Save to QUEUE
05A8   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01249                 count = count + 1
05A9   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05AA   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05AB   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05AC   0080           01247                 movwf INDF                                              ;Save to QUEUE
05AD   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01249                 count = count + 1
05AE   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05AF   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05B0   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05B1   0080           01247                 movwf INDF                                              ;Save to QUEUE
05B2   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01249                 count = count + 1
05B3   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05B4   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05B5   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05B6   0080           01247                 movwf INDF                                              ;Save to QUEUE
05B7   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01249                 count = count + 1
05B8   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05B9   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05BA   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05BB   0080           01247                 movwf INDF                                              ;Save to QUEUE
05BC   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01249                 count = count + 1
05BD   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05BE   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05BF   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05C0   0080           01247                 movwf INDF                                              ;Save to QUEUE
05C1   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01249                 count = count + 1
05C2   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05C3   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05C4   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05C5   0080           01247                 movwf INDF                                              ;Save to QUEUE
05C6   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01249                 count = count + 1
05C7   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05C8   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05C9   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05CA   0080           01247                 movwf INDF                                              ;Save to QUEUE
05CB   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01249                 count = count + 1
05CC   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05CD   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05CE   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05CF   0080           01247                 movwf INDF                                              ;Save to QUEUE
05D0   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01249                 count = count + 1
05D1   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05D2   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05D3   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05D4   0080           01247                 movwf INDF                                              ;Save to QUEUE
05D5   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01249                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05D6   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05D7   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05D8   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05D9   0080           01247                 movwf INDF                                              ;Save to QUEUE
05DA   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01249                 count = count + 1
05DB   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05DC   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05DD   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05DE   0080           01247                 movwf INDF                                              ;Save to QUEUE
05DF   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01249                 count = count + 1
05E0   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05E1   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05E2   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05E3   0080           01247                 movwf INDF                                              ;Save to QUEUE
05E4   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01249                 count = count + 1
05E5   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05E6   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05E7   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05E8   0080           01247                 movwf INDF                                              ;Save to QUEUE
05E9   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01249                 count = count + 1
05EA   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05EB   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05EC   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05ED   0080           01247                 movwf INDF                                              ;Save to QUEUE
05EE   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01249                 count = count + 1
05EF   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05F0   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05F1   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05F2   0080           01247                 movwf INDF                                              ;Save to QUEUE
05F3   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01249                 count = count + 1
05F4   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05F5   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05F6   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05F7   0080           01247                 movwf INDF                                              ;Save to QUEUE
05F8   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01249                 count = count + 1
05F9   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FA   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
05FB   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
05FC   0080           01247                 movwf INDF                                              ;Save to QUEUE
05FD   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01249                 count = count + 1
05FE   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
05FF   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0600   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0601   0080           01247                 movwf INDF                                              ;Save to QUEUE
0602   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003A            01249                 count = count + 1
0603   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0604   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0605   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0606   0080           01247                 movwf INDF                                              ;Save to QUEUE
0607   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01249                 count = count + 1
0608   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0609   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060A   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
060B   0080           01247                 movwf INDF                                              ;Save to QUEUE
060C   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01249                 count = count + 1
060D   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
060E   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
060F   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0610   0080           01247                 movwf INDF                                              ;Save to QUEUE
0611   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01249                 count = count + 1
0612   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0613   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0614   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
0615   0080           01247                 movwf INDF                                              ;Save to QUEUE
0616   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01249                 count = count + 1
0617   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0618   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0619   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
061A   0080           01247                 movwf INDF                                              ;Save to QUEUE
061B   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01249                 count = count + 1
061C   1409           01244                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
061D   1009           01245                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
061E   0808           01246                 movf ADC_DATAPORT, W                    ;Sample
061F   0080           01247                 movwf INDF                                              ;Save to QUEUE
0620   0384           01248                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01249                 count = count + 1
                      01250         endw
0621   1409           01251         bsf ADC_CONTROLPORT, RDD
0622   1009           01252         bcf ADC_CONTROLPORT, RDD
0623   0808           01253         movf ADC_DATAPORT, W
0624   0080           01254         movwf INDF
0625   1783           01255         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01256         count = 1
                      01257         while count < BUFFERSIZE
0626   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0627   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0628   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0629   0080           01261                 movwf INDF                                              ;Save to QUEUE
062A   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01263                 count = count + 1
062B   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
062C   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

062D   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
062E   0080           01261                 movwf INDF                                              ;Save to QUEUE
062F   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01263                 count = count + 1
0630   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0631   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0632   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0633   0080           01261                 movwf INDF                                              ;Save to QUEUE
0634   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01263                 count = count + 1
0635   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0636   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0637   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0638   0080           01261                 movwf INDF                                              ;Save to QUEUE
0639   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01263                 count = count + 1
063A   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
063B   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
063C   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
063D   0080           01261                 movwf INDF                                              ;Save to QUEUE
063E   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01263                 count = count + 1
063F   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0640   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0641   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0642   0080           01261                 movwf INDF                                              ;Save to QUEUE
0643   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01263                 count = count + 1
0644   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0645   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0646   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0647   0080           01261                 movwf INDF                                              ;Save to QUEUE
0648   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01263                 count = count + 1
0649   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064A   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
064B   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
064C   0080           01261                 movwf INDF                                              ;Save to QUEUE
064D   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01263                 count = count + 1
064E   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
064F   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0650   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0651   0080           01261                 movwf INDF                                              ;Save to QUEUE
0652   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01263                 count = count + 1
0653   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0654   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0655   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0656   0080           01261                 movwf INDF                                              ;Save to QUEUE
0657   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01263                 count = count + 1
0658   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0659   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065A   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
065B   0080           01261                 movwf INDF                                              ;Save to QUEUE
065C   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01263                 count = count + 1
065D   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
065E   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
065F   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0660   0080           01261                 movwf INDF                                              ;Save to QUEUE
0661   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01263                 count = count + 1
0662   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0663   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0664   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0665   0080           01261                 movwf INDF                                              ;Save to QUEUE
0666   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01263                 count = count + 1
0667   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0668   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0669   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
066A   0080           01261                 movwf INDF                                              ;Save to QUEUE
066B   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01263                 count = count + 1
066C   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
066D   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
066E   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
066F   0080           01261                 movwf INDF                                              ;Save to QUEUE
0670   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01263                 count = count + 1
0671   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0672   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0673   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0674   0080           01261                 movwf INDF                                              ;Save to QUEUE
0675   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01263                 count = count + 1
0676   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0677   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0678   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0679   0080           01261                 movwf INDF                                              ;Save to QUEUE
067A   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01263                 count = count + 1
067B   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
067C   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
067D   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
067E   0080           01261                 movwf INDF                                              ;Save to QUEUE
067F   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01263                 count = count + 1
0680   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0681   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0682   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0683   0080           01261                 movwf INDF                                              ;Save to QUEUE
0684   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01263                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0685   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0686   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0687   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0688   0080           01261                 movwf INDF                                              ;Save to QUEUE
0689   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01263                 count = count + 1
068A   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
068B   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
068C   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
068D   0080           01261                 movwf INDF                                              ;Save to QUEUE
068E   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01263                 count = count + 1
068F   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0690   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0691   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0692   0080           01261                 movwf INDF                                              ;Save to QUEUE
0693   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01263                 count = count + 1
0694   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0695   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0696   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0697   0080           01261                 movwf INDF                                              ;Save to QUEUE
0698   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01263                 count = count + 1
0699   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069A   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
069B   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
069C   0080           01261                 movwf INDF                                              ;Save to QUEUE
069D   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01263                 count = count + 1
069E   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
069F   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A0   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06A1   0080           01261                 movwf INDF                                              ;Save to QUEUE
06A2   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01263                 count = count + 1
06A3   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A4   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06A5   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06A6   0080           01261                 movwf INDF                                              ;Save to QUEUE
06A7   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01263                 count = count + 1
06A8   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06A9   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AA   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06AB   0080           01261                 movwf INDF                                              ;Save to QUEUE
06AC   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01263                 count = count + 1
06AD   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06AE   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06AF   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06B0   0080           01261                 movwf INDF                                              ;Save to QUEUE
06B1   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001D            01263                 count = count + 1
06B2   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B3   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B4   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06B5   0080           01261                 movwf INDF                                              ;Save to QUEUE
06B6   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01263                 count = count + 1
06B7   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06B8   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06B9   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06BA   0080           01261                 movwf INDF                                              ;Save to QUEUE
06BB   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01263                 count = count + 1
06BC   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06BD   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06BE   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06BF   0080           01261                 movwf INDF                                              ;Save to QUEUE
06C0   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01263                 count = count + 1
06C1   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C2   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C3   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06C4   0080           01261                 movwf INDF                                              ;Save to QUEUE
06C5   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01263                 count = count + 1
06C6   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06C7   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06C8   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06C9   0080           01261                 movwf INDF                                              ;Save to QUEUE
06CA   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01263                 count = count + 1
06CB   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06CC   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06CD   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06CE   0080           01261                 movwf INDF                                              ;Save to QUEUE
06CF   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01263                 count = count + 1
06D0   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D1   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D2   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06D3   0080           01261                 movwf INDF                                              ;Save to QUEUE
06D4   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01263                 count = count + 1
06D5   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06D6   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06D7   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06D8   0080           01261                 movwf INDF                                              ;Save to QUEUE
06D9   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01263                 count = count + 1
06DA   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06DB   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06DC   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06DD   0080           01261                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06DE   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01263                 count = count + 1
06DF   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E0   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E1   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06E2   0080           01261                 movwf INDF                                              ;Save to QUEUE
06E3   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01263                 count = count + 1
06E4   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06E5   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06E6   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06E7   0080           01261                 movwf INDF                                              ;Save to QUEUE
06E8   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01263                 count = count + 1
06E9   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EA   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06EB   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06EC   0080           01261                 movwf INDF                                              ;Save to QUEUE
06ED   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01263                 count = count + 1
06EE   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06EF   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F0   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06F1   0080           01261                 movwf INDF                                              ;Save to QUEUE
06F2   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01263                 count = count + 1
06F3   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F4   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06F5   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06F6   0080           01261                 movwf INDF                                              ;Save to QUEUE
06F7   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01263                 count = count + 1
06F8   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06F9   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FA   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
06FB   0080           01261                 movwf INDF                                              ;Save to QUEUE
06FC   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01263                 count = count + 1
06FD   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
06FE   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
06FF   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0700   0080           01261                 movwf INDF                                              ;Save to QUEUE
0701   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01263                 count = count + 1
0702   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0703   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0704   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0705   0080           01261                 movwf INDF                                              ;Save to QUEUE
0706   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01263                 count = count + 1
0707   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0708   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0709   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

070A   0080           01261                 movwf INDF                                              ;Save to QUEUE
070B   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01263                 count = count + 1
070C   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
070D   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
070E   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
070F   0080           01261                 movwf INDF                                              ;Save to QUEUE
0710   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01263                 count = count + 1
0711   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0712   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0713   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0714   0080           01261                 movwf INDF                                              ;Save to QUEUE
0715   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01263                 count = count + 1
0716   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0717   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0718   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0719   0080           01261                 movwf INDF                                              ;Save to QUEUE
071A   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01263                 count = count + 1
071B   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
071C   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
071D   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
071E   0080           01261                 movwf INDF                                              ;Save to QUEUE
071F   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01263                 count = count + 1
0720   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0721   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0722   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0723   0080           01261                 movwf INDF                                              ;Save to QUEUE
0724   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01263                 count = count + 1
0725   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0726   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0727   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0728   0080           01261                 movwf INDF                                              ;Save to QUEUE
0729   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000035            01263                 count = count + 1
072A   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
072B   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
072C   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
072D   0080           01261                 movwf INDF                                              ;Save to QUEUE
072E   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000036            01263                 count = count + 1
072F   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0730   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0731   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0732   0080           01261                 movwf INDF                                              ;Save to QUEUE
0733   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000037            01263                 count = count + 1
0734   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0735   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0736   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0737   0080           01261                 movwf INDF                                              ;Save to QUEUE
0738   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000038            01263                 count = count + 1
0739   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073A   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
073B   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
073C   0080           01261                 movwf INDF                                              ;Save to QUEUE
073D   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000039            01263                 count = count + 1
073E   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
073F   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0740   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0741   0080           01261                 movwf INDF                                              ;Save to QUEUE
0742   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01263                 count = count + 1
0743   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0744   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0745   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0746   0080           01261                 movwf INDF                                              ;Save to QUEUE
0747   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01263                 count = count + 1
0748   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0749   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074A   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
074B   0080           01261                 movwf INDF                                              ;Save to QUEUE
074C   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01263                 count = count + 1
074D   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
074E   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
074F   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0750   0080           01261                 movwf INDF                                              ;Save to QUEUE
0751   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01263                 count = count + 1
0752   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0753   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0754   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
0755   0080           01261                 movwf INDF                                              ;Save to QUEUE
0756   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01263                 count = count + 1
0757   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0758   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0759   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
075A   0080           01261                 movwf INDF                                              ;Save to QUEUE
075B   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01263                 count = count + 1
075C   1409           01258                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
075D   1009           01259                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
075E   0808           01260                 movf ADC_DATAPORT, W                    ;Sample
075F   0080           01261                 movwf INDF                                              ;Save to QUEUE
0760   0A84           01262                 incf FSR, F                                             ;Increment QUEUE pointer
  00000040            01263                 count = count + 1
                      01264         endw
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0761   1409           01265         bsf ADC_CONTROLPORT, RDD
0762   1009           01266         bcf ADC_CONTROLPORT, RDD
0763   0808           01267         movf ADC_DATAPORT, W                    ;Sample
0764   0080           01268         movwf INDF
0765   1384           01269         bcf FSR, 7                                                      ;goto bank 3
  00000001            01270         count = 1
                      01271         while count < D'14'
0766   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0767   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0768   0808           01274                 movf ADC_DATAPORT, W
0769   0080           01275                 movwf INDF                                              ;Save to QUEUE
076A   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01277                 count = count + 1
076B   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
076C   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
076D   0808           01274                 movf ADC_DATAPORT, W
076E   0080           01275                 movwf INDF                                              ;Save to QUEUE
076F   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01277                 count = count + 1
0770   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0771   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0772   0808           01274                 movf ADC_DATAPORT, W
0773   0080           01275                 movwf INDF                                              ;Save to QUEUE
0774   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01277                 count = count + 1
0775   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0776   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0777   0808           01274                 movf ADC_DATAPORT, W
0778   0080           01275                 movwf INDF                                              ;Save to QUEUE
0779   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01277                 count = count + 1
077A   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
077B   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
077C   0808           01274                 movf ADC_DATAPORT, W
077D   0080           01275                 movwf INDF                                              ;Save to QUEUE
077E   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01277                 count = count + 1
077F   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0780   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0781   0808           01274                 movf ADC_DATAPORT, W
0782   0080           01275                 movwf INDF                                              ;Save to QUEUE
0783   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01277                 count = count + 1
0784   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0785   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0786   0808           01274                 movf ADC_DATAPORT, W
0787   0080           01275                 movwf INDF                                              ;Save to QUEUE
0788   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01277                 count = count + 1
0789   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078A   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
078B   0808           01274                 movf ADC_DATAPORT, W
078C   0080           01275                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

078D   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01277                 count = count + 1
078E   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
078F   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0790   0808           01274                 movf ADC_DATAPORT, W
0791   0080           01275                 movwf INDF                                              ;Save to QUEUE
0792   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01277                 count = count + 1
0793   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0794   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0795   0808           01274                 movf ADC_DATAPORT, W
0796   0080           01275                 movwf INDF                                              ;Save to QUEUE
0797   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01277                 count = count + 1
0798   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0799   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079A   0808           01274                 movf ADC_DATAPORT, W
079B   0080           01275                 movwf INDF                                              ;Save to QUEUE
079C   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01277                 count = count + 1
079D   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
079E   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
079F   0808           01274                 movf ADC_DATAPORT, W
07A0   0080           01275                 movwf INDF                                              ;Save to QUEUE
07A1   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01277                 count = count + 1
07A2   1409           01272                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A3   1009           01273                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A4   0808           01274                 movf ADC_DATAPORT, W
07A5   0080           01275                 movwf INDF                                              ;Save to QUEUE
07A6   0384           01276                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01277                 count = count + 1
                      01278         endw
07A7                  01279 Sample1MhzEnd
                      01280         while count < BUFFERSIZE
07A7   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07A8   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07A9   0808           01283                 movf ADC_DATAPORT, W
07AA   0080           01284                 movwf INDF                                              ;Save to QUEUE
07AB   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01286                 count = count + 1
07AC   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07AD   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07AE   0808           01283                 movf ADC_DATAPORT, W
07AF   0080           01284                 movwf INDF                                              ;Save to QUEUE
07B0   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01286                 count = count + 1
07B1   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B2   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B3   0808           01283                 movf ADC_DATAPORT, W
07B4   0080           01284                 movwf INDF                                              ;Save to QUEUE
07B5   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01286                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07B6   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07B7   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07B8   0808           01283                 movf ADC_DATAPORT, W
07B9   0080           01284                 movwf INDF                                              ;Save to QUEUE
07BA   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01286                 count = count + 1
07BB   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07BC   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07BD   0808           01283                 movf ADC_DATAPORT, W
07BE   0080           01284                 movwf INDF                                              ;Save to QUEUE
07BF   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01286                 count = count + 1
07C0   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C1   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C2   0808           01283                 movf ADC_DATAPORT, W
07C3   0080           01284                 movwf INDF                                              ;Save to QUEUE
07C4   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01286                 count = count + 1
07C5   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07C6   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07C7   0808           01283                 movf ADC_DATAPORT, W
07C8   0080           01284                 movwf INDF                                              ;Save to QUEUE
07C9   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01286                 count = count + 1
07CA   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07CB   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07CC   0808           01283                 movf ADC_DATAPORT, W
07CD   0080           01284                 movwf INDF                                              ;Save to QUEUE
07CE   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01286                 count = count + 1
07CF   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D0   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D1   0808           01283                 movf ADC_DATAPORT, W
07D2   0080           01284                 movwf INDF                                              ;Save to QUEUE
07D3   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01286                 count = count + 1
07D4   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07D5   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07D6   0808           01283                 movf ADC_DATAPORT, W
07D7   0080           01284                 movwf INDF                                              ;Save to QUEUE
07D8   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01286                 count = count + 1
07D9   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DA   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07DB   0808           01283                 movf ADC_DATAPORT, W
07DC   0080           01284                 movwf INDF                                              ;Save to QUEUE
07DD   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01286                 count = count + 1
07DE   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07DF   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E0   0808           01283                 movf ADC_DATAPORT, W
07E1   0080           01284                 movwf INDF                                              ;Save to QUEUE
07E2   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001A            01286                 count = count + 1
07E3   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E4   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07E5   0808           01283                 movf ADC_DATAPORT, W
07E6   0080           01284                 movwf INDF                                              ;Save to QUEUE
07E7   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01286                 count = count + 1
07E8   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07E9   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EA   0808           01283                 movf ADC_DATAPORT, W
07EB   0080           01284                 movwf INDF                                              ;Save to QUEUE
07EC   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01286                 count = count + 1
07ED   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07EE   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07EF   0808           01283                 movf ADC_DATAPORT, W
07F0   0080           01284                 movwf INDF                                              ;Save to QUEUE
07F1   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01286                 count = count + 1
07F2   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F3   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F4   0808           01283                 movf ADC_DATAPORT, W
07F5   0080           01284                 movwf INDF                                              ;Save to QUEUE
07F6   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01286                 count = count + 1
07F7   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07F8   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07F9   0808           01283                 movf ADC_DATAPORT, W
07FA   0080           01284                 movwf INDF                                              ;Save to QUEUE
07FB   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01286                 count = count + 1
07FC   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
07FD   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
07FE   0808           01283                 movf ADC_DATAPORT, W
07FF   0080           01284                 movwf INDF                                              ;Save to QUEUE
0800   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01286                 count = count + 1
0801   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0802   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0803   0808           01283                 movf ADC_DATAPORT, W
0804   0080           01284                 movwf INDF                                              ;Save to QUEUE
0805   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01286                 count = count + 1
0806   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0807   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0808   0808           01283                 movf ADC_DATAPORT, W
0809   0080           01284                 movwf INDF                                              ;Save to QUEUE
080A   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01286                 count = count + 1
080B   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
080C   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
080D   0808           01283                 movf ADC_DATAPORT, W
080E   0080           01284                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

080F   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01286                 count = count + 1
0810   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0811   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0812   0808           01283                 movf ADC_DATAPORT, W
0813   0080           01284                 movwf INDF                                              ;Save to QUEUE
0814   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01286                 count = count + 1
0815   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0816   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0817   0808           01283                 movf ADC_DATAPORT, W
0818   0080           01284                 movwf INDF                                              ;Save to QUEUE
0819   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01286                 count = count + 1
081A   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
081B   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
081C   0808           01283                 movf ADC_DATAPORT, W
081D   0080           01284                 movwf INDF                                              ;Save to QUEUE
081E   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000026            01286                 count = count + 1
081F   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0820   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0821   0808           01283                 movf ADC_DATAPORT, W
0822   0080           01284                 movwf INDF                                              ;Save to QUEUE
0823   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01286                 count = count + 1
0824   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0825   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0826   0808           01283                 movf ADC_DATAPORT, W
0827   0080           01284                 movwf INDF                                              ;Save to QUEUE
0828   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000028            01286                 count = count + 1
0829   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082A   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
082B   0808           01283                 movf ADC_DATAPORT, W
082C   0080           01284                 movwf INDF                                              ;Save to QUEUE
082D   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000029            01286                 count = count + 1
082E   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
082F   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0830   0808           01283                 movf ADC_DATAPORT, W
0831   0080           01284                 movwf INDF                                              ;Save to QUEUE
0832   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01286                 count = count + 1
0833   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0834   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0835   0808           01283                 movf ADC_DATAPORT, W
0836   0080           01284                 movwf INDF                                              ;Save to QUEUE
0837   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01286                 count = count + 1
0838   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0839   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083A   0808           01283                 movf ADC_DATAPORT, W
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

083B   0080           01284                 movwf INDF                                              ;Save to QUEUE
083C   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01286                 count = count + 1
083D   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
083E   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
083F   0808           01283                 movf ADC_DATAPORT, W
0840   0080           01284                 movwf INDF                                              ;Save to QUEUE
0841   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01286                 count = count + 1
0842   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0843   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0844   0808           01283                 movf ADC_DATAPORT, W
0845   0080           01284                 movwf INDF                                              ;Save to QUEUE
0846   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01286                 count = count + 1
0847   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0848   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0849   0808           01283                 movf ADC_DATAPORT, W
084A   0080           01284                 movwf INDF                                              ;Save to QUEUE
084B   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01286                 count = count + 1
084C   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
084D   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
084E   0808           01283                 movf ADC_DATAPORT, W
084F   0080           01284                 movwf INDF                                              ;Save to QUEUE
0850   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000030            01286                 count = count + 1
0851   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0852   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0853   0808           01283                 movf ADC_DATAPORT, W
0854   0080           01284                 movwf INDF                                              ;Save to QUEUE
0855   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000031            01286                 count = count + 1
0856   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0857   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0858   0808           01283                 movf ADC_DATAPORT, W
0859   0080           01284                 movwf INDF                                              ;Save to QUEUE
085A   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000032            01286                 count = count + 1
085B   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
085C   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
085D   0808           01283                 movf ADC_DATAPORT, W
085E   0080           01284                 movwf INDF                                              ;Save to QUEUE
085F   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000033            01286                 count = count + 1
0860   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0861   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0862   0808           01283                 movf ADC_DATAPORT, W
0863   0080           01284                 movwf INDF                                              ;Save to QUEUE
0864   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000034            01286                 count = count + 1
0865   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0866   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0867   0808           01283                 movf ADC_DATAPORT, W
0868   0080           01284                 movwf INDF                                              ;Save to QUEUE
0869   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000035            01286                 count = count + 1
086A   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
086B   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
086C   0808           01283                 movf ADC_DATAPORT, W
086D   0080           01284                 movwf INDF                                              ;Save to QUEUE
086E   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000036            01286                 count = count + 1
086F   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0870   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0871   0808           01283                 movf ADC_DATAPORT, W
0872   0080           01284                 movwf INDF                                              ;Save to QUEUE
0873   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000037            01286                 count = count + 1
0874   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0875   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0876   0808           01283                 movf ADC_DATAPORT, W
0877   0080           01284                 movwf INDF                                              ;Save to QUEUE
0878   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000038            01286                 count = count + 1
0879   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087A   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
087B   0808           01283                 movf ADC_DATAPORT, W
087C   0080           01284                 movwf INDF                                              ;Save to QUEUE
087D   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000039            01286                 count = count + 1
087E   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
087F   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0880   0808           01283                 movf ADC_DATAPORT, W
0881   0080           01284                 movwf INDF                                              ;Save to QUEUE
0882   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003A            01286                 count = count + 1
0883   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0884   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0885   0808           01283                 movf ADC_DATAPORT, W
0886   0080           01284                 movwf INDF                                              ;Save to QUEUE
0887   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003B            01286                 count = count + 1
0888   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0889   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088A   0808           01283                 movf ADC_DATAPORT, W
088B   0080           01284                 movwf INDF                                              ;Save to QUEUE
088C   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003C            01286                 count = count + 1
088D   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
088E   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
088F   0808           01283                 movf ADC_DATAPORT, W
0890   0080           01284                 movwf INDF                                              ;Save to QUEUE
0891   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003D            01286                 count = count + 1
0892   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0893   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0894   0808           01283                 movf ADC_DATAPORT, W
0895   0080           01284                 movwf INDF                                              ;Save to QUEUE
0896   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003E            01286                 count = count + 1
0897   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0898   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0899   0808           01283                 movf ADC_DATAPORT, W
089A   0080           01284                 movwf INDF                                              ;Save to QUEUE
089B   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  0000003F            01286                 count = count + 1
089C   1409           01281                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
089D   1009           01282                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
089E   0808           01283                 movf ADC_DATAPORT, W
089F   0080           01284                 movwf INDF                                              ;Save to QUEUE
08A0   0384           01285                 decf FSR, F                                             ;Increment QUEUE pointer
  00000040            01286                 count = count + 1
                      01287         endw
08A1   1409           01288         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
08A2   0808           01289         movf ADC_DATAPORT, W                            ;Sample
08A3   118A           01290         bcf PCLATH, 3                                           ;insure correct program memory page
08A4   120A           01291         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
08A5   2921           01292         goto ADCShutdown
                      01293 
                      01294 ;Fastest XY sample
                      01295 ;Sampling rate = 416.667 kHz with 20 MHz clock
                      01296 ;Sampling rate =  83.333 kHz with 4 MHz clock
08A6                  01297 SampleXY417k
08A6   1009           01298         bcf ADC_CONTROLPORT, RDD                ;Begin Conversion
08A7   1489           01299         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
                      01300         MOVLF BUFFERMIN, FSR                    ;Initialize pointer
08A8   3020               M     movlw BUFFERMIN
08A9   0084               M     movwf FSR
08AA   0808           01301         movf ADC_DATAPORT, W                    ;Sample X
08AB   1409           01302         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08AC   1009           01303         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08AD   1089           01304         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08AE   0080           01305         movwf INDF                                              ;Save to QUEUE
08AF   0A84           01306         incf FSR, F                                             ;Increment QUEUE pointer
  00000001            01307         count = 1
                      01308         while count < BUFFERSIZE / 2
08B0   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08B1   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B2   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B3   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08B4   0080           01313                 movwf INDF                                              ;Save to QUEUE
08B5   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08B6   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08B7   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08B8   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08B9   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08BA   0080           01319                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08BB   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01321                 count = count + 1
08BC   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08BD   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08BE   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08BF   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08C0   0080           01313                 movwf INDF                                              ;Save to QUEUE
08C1   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08C2   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08C3   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08C4   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08C5   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08C6   0080           01319                 movwf INDF                                              ;Save to QUEUE
08C7   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01321                 count = count + 1
08C8   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08C9   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08CA   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08CB   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08CC   0080           01313                 movwf INDF                                              ;Save to QUEUE
08CD   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08CE   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08CF   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D0   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D1   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08D2   0080           01319                 movwf INDF                                              ;Save to QUEUE
08D3   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01321                 count = count + 1
08D4   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08D5   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08D6   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08D7   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08D8   0080           01313                 movwf INDF                                              ;Save to QUEUE
08D9   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08DA   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08DB   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08DC   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08DD   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08DE   0080           01319                 movwf INDF                                              ;Save to QUEUE
08DF   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01321                 count = count + 1
08E0   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08E1   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E2   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E3   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08E4   0080           01313                 movwf INDF                                              ;Save to QUEUE
08E5   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08E6   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08E7   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08E8   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08E9   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08EA   0080           01319                 movwf INDF                                              ;Save to QUEUE
08EB   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            01321                 count = count + 1
08EC   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08ED   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08EE   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08EF   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08F0   0080           01313                 movwf INDF                                              ;Save to QUEUE
08F1   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08F2   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08F3   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08F4   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08F5   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
08F6   0080           01319                 movwf INDF                                              ;Save to QUEUE
08F7   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01321                 count = count + 1
08F8   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
08F9   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
08FA   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
08FB   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
08FC   0080           01313                 movwf INDF                                              ;Save to QUEUE
08FD   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
08FE   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
08FF   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0900   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0901   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0902   0080           01319                 movwf INDF                                              ;Save to QUEUE
0903   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01321                 count = count + 1
0904   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0905   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0906   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0907   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0908   0080           01313                 movwf INDF                                              ;Save to QUEUE
0909   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
090A   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
090B   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
090C   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
090D   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
090E   0080           01319                 movwf INDF                                              ;Save to QUEUE
090F   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01321                 count = count + 1
0910   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0911   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0912   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0913   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0914   0080           01313                 movwf INDF                                              ;Save to QUEUE
0915   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0916   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0917   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0918   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0919   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
091A   0080           01319                 movwf INDF                                              ;Save to QUEUE
091B   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01321                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

091C   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
091D   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
091E   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
091F   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0920   0080           01313                 movwf INDF                                              ;Save to QUEUE
0921   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0922   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0923   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0924   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0925   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0926   0080           01319                 movwf INDF                                              ;Save to QUEUE
0927   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01321                 count = count + 1
0928   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0929   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
092A   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
092B   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
092C   0080           01313                 movwf INDF                                              ;Save to QUEUE
092D   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
092E   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
092F   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0930   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0931   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0932   0080           01319                 movwf INDF                                              ;Save to QUEUE
0933   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01321                 count = count + 1
0934   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0935   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0936   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0937   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0938   0080           01313                 movwf INDF                                              ;Save to QUEUE
0939   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
093A   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
093B   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
093C   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
093D   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
093E   0080           01319                 movwf INDF                                              ;Save to QUEUE
093F   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01321                 count = count + 1
0940   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0941   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0942   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0943   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0944   0080           01313                 movwf INDF                                              ;Save to QUEUE
0945   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0946   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0947   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0948   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0949   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
094A   0080           01319                 movwf INDF                                              ;Save to QUEUE
094B   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01321                 count = count + 1
094C   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

094D   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
094E   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
094F   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0950   0080           01313                 movwf INDF                                              ;Save to QUEUE
0951   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0952   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0953   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0954   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0955   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0956   0080           01319                 movwf INDF                                              ;Save to QUEUE
0957   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01321                 count = count + 1
0958   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0959   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
095A   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
095B   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
095C   0080           01313                 movwf INDF                                              ;Save to QUEUE
095D   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
095E   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
095F   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0960   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0961   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0962   0080           01319                 movwf INDF                                              ;Save to QUEUE
0963   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01321                 count = count + 1
0964   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0965   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0966   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0967   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0968   0080           01313                 movwf INDF                                              ;Save to QUEUE
0969   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
096A   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
096B   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
096C   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
096D   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
096E   0080           01319                 movwf INDF                                              ;Save to QUEUE
096F   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01321                 count = count + 1
0970   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0971   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0972   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0973   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0974   0080           01313                 movwf INDF                                              ;Save to QUEUE
0975   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0976   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0977   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0978   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0979   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
097A   0080           01319                 movwf INDF                                              ;Save to QUEUE
097B   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01321                 count = count + 1
097C   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
097D   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

097E   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
097F   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0980   0080           01313                 movwf INDF                                              ;Save to QUEUE
0981   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0982   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0983   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0984   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0985   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0986   0080           01319                 movwf INDF                                              ;Save to QUEUE
0987   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01321                 count = count + 1
0988   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0989   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
098A   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
098B   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
098C   0080           01313                 movwf INDF                                              ;Save to QUEUE
098D   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
098E   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
098F   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0990   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0991   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0992   0080           01319                 movwf INDF                                              ;Save to QUEUE
0993   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01321                 count = count + 1
0994   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0995   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0996   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0997   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0998   0080           01313                 movwf INDF                                              ;Save to QUEUE
0999   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
099A   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
099B   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
099C   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
099D   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
099E   0080           01319                 movwf INDF                                              ;Save to QUEUE
099F   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01321                 count = count + 1
09A0   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09A1   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A2   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A3   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09A4   0080           01313                 movwf INDF                                              ;Save to QUEUE
09A5   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09A6   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09A7   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09A8   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09A9   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09AA   0080           01319                 movwf INDF                                              ;Save to QUEUE
09AB   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01321                 count = count + 1
09AC   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09AD   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09AE   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09AF   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09B0   0080           01313                 movwf INDF                                              ;Save to QUEUE
09B1   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09B2   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09B3   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09B4   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09B5   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09B6   0080           01319                 movwf INDF                                              ;Save to QUEUE
09B7   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01321                 count = count + 1
09B8   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09B9   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09BA   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09BB   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09BC   0080           01313                 movwf INDF                                              ;Save to QUEUE
09BD   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09BE   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09BF   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C0   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C1   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09C2   0080           01319                 movwf INDF                                              ;Save to QUEUE
09C3   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01321                 count = count + 1
09C4   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09C5   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09C6   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09C7   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09C8   0080           01313                 movwf INDF                                              ;Save to QUEUE
09C9   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09CA   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09CB   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09CC   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09CD   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09CE   0080           01319                 movwf INDF                                              ;Save to QUEUE
09CF   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01321                 count = count + 1
09D0   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09D1   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D2   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D3   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09D4   0080           01313                 movwf INDF                                              ;Save to QUEUE
09D5   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09D6   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09D7   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09D8   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09D9   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09DA   0080           01319                 movwf INDF                                              ;Save to QUEUE
09DB   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01321                 count = count + 1
09DC   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09DD   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09DE   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09DF   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09E0   0080           01313                 movwf INDF                                              ;Save to QUEUE
09E1   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09E2   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09E3   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09E4   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09E5   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09E6   0080           01319                 movwf INDF                                              ;Save to QUEUE
09E7   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01321                 count = count + 1
09E8   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09E9   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09EA   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09EB   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09EC   0080           01313                 movwf INDF                                              ;Save to QUEUE
09ED   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09EE   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09EF   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F0   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F1   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09F2   0080           01319                 movwf INDF                                              ;Save to QUEUE
09F3   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01321                 count = count + 1
09F4   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
09F5   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09F6   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09F7   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
09F8   0080           01313                 movwf INDF                                              ;Save to QUEUE
09F9   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
09FA   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
09FB   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
09FC   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
09FD   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
09FE   0080           01319                 movwf INDF                                              ;Save to QUEUE
09FF   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01321                 count = count + 1
0A00   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0A01   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A02   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A03   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A04   0080           01313                 movwf INDF                                              ;Save to QUEUE
0A05   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0A06   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0A07   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A08   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A09   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A0A   0080           01319                 movwf INDF                                              ;Save to QUEUE
0A0B   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01321                 count = count + 1
0A0C   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0A0D   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A0E   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A0F   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A10   0080           01313                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A11   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0A12   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0A13   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A14   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A15   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A16   0080           01319                 movwf INDF                                              ;Save to QUEUE
0A17   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01321                 count = count + 1
0A18   0808           01309                 movf ADC_DATAPORT, W                    ;Sample Y
0A19   1409           01310                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A1A   1009           01311                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A1B   1489           01312                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A1C   0080           01313                 movwf INDF                                              ;Save to QUEUE
0A1D   0A84           01314                 incf FSR, F                                             ;Increment QUEUE pointer
0A1E   0808           01315                 movf ADC_DATAPORT, W                    ;Sample X
0A1F   1409           01316                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A20   1009           01317                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A21   1089           01318                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A22   0080           01319                 movwf INDF                                              ;Save to QUEUE
0A23   0A84           01320                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01321                 count = count + 1
                      01322         endw
0A24   0808           01323         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 1
0A25   1409           01324         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A26   1009           01325         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A27   1489           01326         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A28   0080           01327         movwf INDF                                              ;Save to QUEUE
0A29   1784           01328         bsf FSR, 7                                              ;Move QUEUE pointer to Bank 2
0A2A   0808           01329         movf ADC_DATAPORT, W                    ;Sample X
0A2B   1409           01330         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A2C   1009           01331         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A2D   1089           01332         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A2E   0080           01333         movwf INDF                                              ;Save to QUEUE
0A2F   0384           01334         decf FSR, f                                             ;Increment QUEUE pointer
  00000001            01335         count = 1
                      01336         while count < BUFFERSIZE / 2
0A30   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A31   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A32   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A33   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A34   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A35   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A36   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A37   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A38   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A39   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A3A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A3B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01349                 count = count + 1
0A3C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A3D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A3E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A3F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A40   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A41   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A42   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A43   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A44   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A45   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A46   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A47   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01349                 count = count + 1
0A48   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A49   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A4A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A4B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A4C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A4D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A4E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A4F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A50   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A51   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A52   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A53   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01349                 count = count + 1
0A54   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A55   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A56   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A57   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A58   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A59   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A5A   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A5B   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A5C   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A5D   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A5E   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A5F   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01349                 count = count + 1
0A60   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A61   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A62   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A63   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A64   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A65   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A66   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A67   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A68   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A69   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A6A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A6B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01349                 count = count + 1
0A6C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A6D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A6E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A6F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A70   0080           01341                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A71   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A72   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A73   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A74   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A75   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A76   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A77   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01349                 count = count + 1
0A78   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A79   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A7A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A7B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A7C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A7D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A7E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A7F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A80   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A81   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A82   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A83   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01349                 count = count + 1
0A84   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A85   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A86   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A87   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A88   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A89   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A8A   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A8B   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A8C   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A8D   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A8E   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A8F   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01349                 count = count + 1
0A90   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A91   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A92   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A93   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0A94   0080           01341                 movwf INDF                                              ;Save to QUEUE
0A95   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0A96   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0A97   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A98   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A99   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0A9A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0A9B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01349                 count = count + 1
0A9C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0A9D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0A9E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0A9F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AA0   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AA1   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AA2   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0AA3   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AA4   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AA5   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AA6   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AA7   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01349                 count = count + 1
0AA8   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AA9   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AAA   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AAB   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AAC   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AAD   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0AAE   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0AAF   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB0   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB1   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AB2   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AB3   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01349                 count = count + 1
0AB4   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AB5   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AB6   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AB7   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AB8   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AB9   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0ABA   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0ABB   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ABC   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ABD   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ABE   0080           01347                 movwf INDF                                              ;Save to QUEUE
0ABF   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01349                 count = count + 1
0AC0   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AC1   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC2   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC3   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AC4   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AC5   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0AC6   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0AC7   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AC8   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AC9   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0ACA   0080           01347                 movwf INDF                                              ;Save to QUEUE
0ACB   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01349                 count = count + 1
0ACC   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0ACD   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ACE   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ACF   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AD0   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AD1   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0AD2   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AD3   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AD4   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AD5   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AD6   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AD7   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01349                 count = count + 1
0AD8   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AD9   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ADA   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ADB   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0ADC   0080           01341                 movwf INDF                                              ;Save to QUEUE
0ADD   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0ADE   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0ADF   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE0   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE1   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AE2   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AE3   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01349                 count = count + 1
0AE4   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AE5   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AE6   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AE7   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AE8   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AE9   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0AEA   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0AEB   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AEC   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AED   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AEE   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AEF   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01349                 count = count + 1
0AF0   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AF1   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF2   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF3   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0AF4   0080           01341                 movwf INDF                                              ;Save to QUEUE
0AF5   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0AF6   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0AF7   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AF8   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AF9   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0AFA   0080           01347                 movwf INDF                                              ;Save to QUEUE
0AFB   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01349                 count = count + 1
0AFC   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0AFD   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0AFE   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0AFF   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B00   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B01   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B02   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B03   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B04   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B05   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B06   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B07   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01349                 count = count + 1
0B08   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B09   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B0A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B0B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B0C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B0D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B0E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B0F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B10   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B11   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B12   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B13   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01349                 count = count + 1
0B14   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B15   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B16   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B17   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B18   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B19   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B1A   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B1B   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B1C   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B1D   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B1E   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B1F   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01349                 count = count + 1
0B20   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B21   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B22   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B23   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B24   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B25   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B26   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B27   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B28   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B29   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B2A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B2B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01349                 count = count + 1
0B2C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B2D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B2E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B2F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B30   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B31   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B32   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B33   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B34   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B35   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B36   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B37   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01349                 count = count + 1
0B38   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B39   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B3A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B3B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B3C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B3D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B3E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B3F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B40   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B41   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B42   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B43   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01349                 count = count + 1
0B44   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B45   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B46   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B47   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B48   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B49   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B4A   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B4B   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B4C   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B4D   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B4E   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B4F   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01349                 count = count + 1
0B50   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B51   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B52   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B53   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B54   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B55   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B56   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B57   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B58   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B59   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B5A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B5B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01349                 count = count + 1
0B5C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B5D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B5E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B5F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B60   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B61   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B62   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B63   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B64   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B65   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B66   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B67   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01349                 count = count + 1
0B68   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B69   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B6A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B6B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B6C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B6D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B6E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B6F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B70   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B71   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B72   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B73   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01349                 count = count + 1
0B74   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B75   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B76   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B77   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B78   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B79   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B7A   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B7B   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B7C   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B7D   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B7E   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B7F   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01349                 count = count + 1
0B80   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B81   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B82   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B83   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B84   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B85   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B86   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B87   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B88   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B89   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B8A   0080           01347                 movwf INDF                                              ;Save to QUEUE
0B8B   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01349                 count = count + 1
0B8C   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B8D   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B8E   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B8F   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B90   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B91   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B92   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B93   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B94   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B95   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0B96   0080           01347                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B97   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01349                 count = count + 1
0B98   0808           01337                 movf ADC_DATAPORT, W                    ;Sample Y
0B99   1409           01338                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0B9A   1009           01339                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0B9B   1489           01340                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0B9C   0080           01341                 movwf INDF                                              ;Save to QUEUE
0B9D   0384           01342                 decf FSR, F                                             ;Increment QUEUE pointer
0B9E   0808           01343                 movf ADC_DATAPORT, W                    ;Sample X
0B9F   1409           01344                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA0   1009           01345                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA1   1089           01346                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BA2   0080           01347                 movwf INDF                                              ;Save to QUEUE
0BA3   0384           01348                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01349                 count = count + 1
                      01350         endw
0BA4   0808           01351         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 2
0BA5   1409           01352         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BA6   1009           01353         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BA7   1489           01354         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BA8   0080           01355         movwf INDF                                              ;Save to QUEUE
0BA9   1783           01356         bsf STATUS, IRP                                 ;Move QUEUE pointer to Bank 4
0BAA   0808           01357         movf ADC_DATAPORT, W                    ;Sample X
0BAB   1409           01358         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BAC   1009           01359         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BAD   1089           01360         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BAE   0080           01361         movwf INDF                                              ;Save to QUEUE
0BAF   0A84           01362         incf FSR, f                                             ;Increment QUEUE pointer
  00000001            01363         count = 1
                      01364         while count < BUFFERSIZE / 2
0BB0   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BB1   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB2   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB3   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BB4   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BB5   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BB6   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BB7   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BB8   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BB9   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BBA   0080           01375                 movwf INDF                                              ;Save to QUEUE
0BBB   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01377                 count = count + 1
0BBC   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BBD   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BBE   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BBF   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BC0   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BC1   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BC2   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BC3   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BC4   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BC5   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BC6   0080           01375                 movwf INDF                                              ;Save to QUEUE
0BC7   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01377                 count = count + 1
0BC8   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BC9   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BCA   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BCB   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BCC   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BCD   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BCE   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BCF   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD0   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD1   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BD2   0080           01375                 movwf INDF                                              ;Save to QUEUE
0BD3   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01377                 count = count + 1
0BD4   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BD5   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BD6   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BD7   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BD8   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BD9   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BDA   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BDB   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BDC   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BDD   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BDE   0080           01375                 movwf INDF                                              ;Save to QUEUE
0BDF   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01377                 count = count + 1
0BE0   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BE1   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE2   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE3   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BE4   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BE5   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BE6   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BE7   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BE8   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BE9   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BEA   0080           01375                 movwf INDF                                              ;Save to QUEUE
0BEB   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01377                 count = count + 1
0BEC   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BED   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BEE   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BEF   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BF0   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BF1   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BF2   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BF3   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BF4   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BF5   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0BF6   0080           01375                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0BF7   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01377                 count = count + 1
0BF8   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0BF9   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0BFA   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0BFB   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0BFC   0080           01369                 movwf INDF                                              ;Save to QUEUE
0BFD   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0BFE   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0BFF   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C00   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C01   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C02   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C03   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01377                 count = count + 1
0C04   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C05   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C06   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C07   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C08   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C09   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C0A   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C0B   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C0C   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C0D   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C0E   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C0F   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01377                 count = count + 1
0C10   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C11   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C12   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C13   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C14   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C15   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C16   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C17   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C18   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C19   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C1A   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C1B   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01377                 count = count + 1
0C1C   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C1D   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C1E   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C1F   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C20   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C21   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C22   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C23   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C24   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C25   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C26   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C27   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            01377                 count = count + 1
0C28   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C29   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C2A   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C2B   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C2C   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C2D   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C2E   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C2F   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C30   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C31   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C32   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C33   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01377                 count = count + 1
0C34   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C35   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C36   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C37   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C38   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C39   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C3A   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C3B   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C3C   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C3D   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C3E   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C3F   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01377                 count = count + 1
0C40   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C41   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C42   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C43   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C44   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C45   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C46   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C47   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C48   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C49   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C4A   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C4B   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01377                 count = count + 1
0C4C   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C4D   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C4E   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C4F   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C50   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C51   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C52   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C53   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C54   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C55   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C56   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C57   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01377                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C58   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C59   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C5A   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C5B   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C5C   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C5D   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C5E   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C5F   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C60   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C61   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C62   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C63   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01377                 count = count + 1
0C64   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C65   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C66   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C67   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C68   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C69   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C6A   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C6B   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C6C   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C6D   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C6E   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C6F   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01377                 count = count + 1
0C70   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C71   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C72   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C73   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C74   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C75   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C76   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C77   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C78   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C79   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C7A   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C7B   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01377                 count = count + 1
0C7C   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C7D   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C7E   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C7F   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C80   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C81   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C82   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C83   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C84   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C85   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C86   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C87   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01377                 count = count + 1
0C88   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C89   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C8A   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C8B   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C8C   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C8D   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C8E   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C8F   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C90   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C91   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C92   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C93   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01377                 count = count + 1
0C94   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0C95   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C96   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C97   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0C98   0080           01369                 movwf INDF                                              ;Save to QUEUE
0C99   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0C9A   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0C9B   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0C9C   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0C9D   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0C9E   0080           01375                 movwf INDF                                              ;Save to QUEUE
0C9F   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01377                 count = count + 1
0CA0   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CA1   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA2   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA3   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CA4   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CA5   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CA6   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CA7   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CA8   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CA9   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CAA   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CAB   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01377                 count = count + 1
0CAC   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CAD   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CAE   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CAF   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CB0   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CB1   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CB2   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CB3   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CB4   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CB5   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CB6   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CB7   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01377                 count = count + 1
0CB8   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CB9   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CBA   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CBB   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CBC   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CBD   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CBE   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CBF   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC0   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC1   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CC2   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CC3   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01377                 count = count + 1
0CC4   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CC5   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CC6   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CC7   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CC8   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CC9   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CCA   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CCB   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CCC   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CCD   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CCE   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CCF   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01377                 count = count + 1
0CD0   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CD1   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD2   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD3   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CD4   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CD5   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CD6   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CD7   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CD8   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CD9   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CDA   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CDB   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01377                 count = count + 1
0CDC   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CDD   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CDE   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CDF   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CE0   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CE1   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CE2   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CE3   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CE4   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CE5   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CE6   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CE7   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01377                 count = count + 1
0CE8   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CE9   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CEA   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CEB   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CEC   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CED   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CEE   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CEF   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF0   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF1   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CF2   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CF3   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01377                 count = count + 1
0CF4   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0CF5   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CF6   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CF7   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0CF8   0080           01369                 movwf INDF                                              ;Save to QUEUE
0CF9   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0CFA   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0CFB   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0CFC   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0CFD   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0CFE   0080           01375                 movwf INDF                                              ;Save to QUEUE
0CFF   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01377                 count = count + 1
0D00   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0D01   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D02   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D03   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D04   0080           01369                 movwf INDF                                              ;Save to QUEUE
0D05   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0D06   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0D07   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D08   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D09   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D0A   0080           01375                 movwf INDF                                              ;Save to QUEUE
0D0B   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01377                 count = count + 1
0D0C   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0D0D   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D0E   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D0F   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D10   0080           01369                 movwf INDF                                              ;Save to QUEUE
0D11   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0D12   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0D13   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D14   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D15   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D16   0080           01375                 movwf INDF                                              ;Save to QUEUE
0D17   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01377                 count = count + 1
0D18   0808           01365                 movf ADC_DATAPORT, W                    ;Sample Y
0D19   1409           01366                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D1A   1009           01367                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D1B   1489           01368                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D1C   0080           01369                 movwf INDF                                              ;Save to QUEUE
0D1D   0A84           01370                 incf FSR, F                                             ;Increment QUEUE pointer
0D1E   0808           01371                 movf ADC_DATAPORT, W                    ;Sample X
0D1F   1409           01372                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D20   1009           01373                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D21   1089           01374                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D22   0080           01375                 movwf INDF                                              ;Save to QUEUE
0D23   0A84           01376                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01377                 count = count + 1
                      01378         endw
0D24   0808           01379         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 4
0D25   1409           01380         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D26   1009           01381         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D27   1489           01382         bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D28   0080           01383         movwf INDF                                              ;Save to QUEUE
0D29   1384           01384         bcf FSR, 7                                              ;Move QUEUE pointer to Bank 3
0D2A   0808           01385         movf ADC_DATAPORT, W                    ;Sample X
0D2B   1409           01386         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D2C   1009           01387         bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D2D   1089           01388         bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D2E   0080           01389         movwf INDF                                              ;Save to QUEUE
0D2F   0384           01390         decf FSR, f                                             ;Increment QUEUE pointer
  00000001            01391         count = 1
                      01392         while count < BUFFERSIZE / 2
0D30   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D31   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D32   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D33   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D34   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D35   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D36   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D37   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D38   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D39   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D3A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D3B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01405                 count = count + 1
0D3C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D3D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D3E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D3F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D40   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D41   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D42   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D43   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D44   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D45   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D46   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D47   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01405                 count = count + 1
0D48   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D49   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D4A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D4B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D4C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D4D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D4E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D4F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D50   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D51   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D52   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D53   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01405                 count = count + 1
0D54   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D55   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D56   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D57   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D58   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D59   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D5A   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D5B   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D5C   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D5D   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D5E   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D5F   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01405                 count = count + 1
0D60   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D61   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D62   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D63   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D64   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D65   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D66   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D67   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D68   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D69   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D6A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D6B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01405                 count = count + 1
0D6C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D6D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D6E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D6F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D70   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D71   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D72   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D73   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D74   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D75   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D76   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D77   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01405                 count = count + 1
0D78   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D79   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D7A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D7B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D7C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D7D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D7E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D7F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D80   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D81   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D82   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D83   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01405                 count = count + 1
0D84   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D85   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D86   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D87   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D88   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D89   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D8A   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D8B   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D8C   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D8D   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D8E   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D8F   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01405                 count = count + 1
0D90   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D91   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D92   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D93   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0D94   0080           01397                 movwf INDF                                              ;Save to QUEUE
0D95   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0D96   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0D97   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D98   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D99   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0D9A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0D9B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01405                 count = count + 1
0D9C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0D9D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0D9E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0D9F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DA0   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DA1   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DA2   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DA3   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DA4   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DA5   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DA6   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DA7   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01405                 count = count + 1
0DA8   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DA9   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DAA   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DAB   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DAC   0080           01397                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DAD   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DAE   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DAF   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB0   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB1   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DB2   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DB3   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01405                 count = count + 1
0DB4   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DB5   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DB6   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DB7   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DB8   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DB9   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DBA   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DBB   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DBC   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DBD   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DBE   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DBF   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01405                 count = count + 1
0DC0   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DC1   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC2   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC3   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DC4   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DC5   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DC6   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DC7   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DC8   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DC9   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DCA   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DCB   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01405                 count = count + 1
0DCC   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DCD   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DCE   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DCF   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DD0   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DD1   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DD2   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DD3   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DD4   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DD5   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DD6   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DD7   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01405                 count = count + 1
0DD8   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DD9   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DDA   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DDB   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DDC   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DDD   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DDE   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DDF   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE0   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE1   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DE2   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DE3   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01405                 count = count + 1
0DE4   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DE5   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DE6   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DE7   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DE8   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DE9   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DEA   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DEB   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DEC   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DED   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DEE   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DEF   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01405                 count = count + 1
0DF0   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DF1   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF2   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF3   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0DF4   0080           01397                 movwf INDF                                              ;Save to QUEUE
0DF5   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0DF6   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0DF7   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DF8   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DF9   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0DFA   0080           01403                 movwf INDF                                              ;Save to QUEUE
0DFB   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01405                 count = count + 1
0DFC   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0DFD   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0DFE   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0DFF   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E00   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E01   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E02   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E03   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E04   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E05   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E06   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E07   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01405                 count = count + 1
0E08   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E09   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E0A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E0B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E0C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E0D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E0E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E0F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E10   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E11   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E12   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E13   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01405                 count = count + 1
0E14   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E15   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E16   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E17   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E18   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E19   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E1A   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E1B   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E1C   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E1D   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E1E   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E1F   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01405                 count = count + 1
0E20   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E21   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E22   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E23   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E24   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E25   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E26   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E27   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E28   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E29   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E2A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E2B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01405                 count = count + 1
0E2C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E2D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E2E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E2F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E30   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E31   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E32   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E33   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E34   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E35   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E36   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E37   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01405                 count = count + 1
0E38   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E39   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E3A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E3B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E3C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E3D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E3E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E3F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E40   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E41   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E42   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E43   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01405                 count = count + 1
0E44   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E45   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E46   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E47   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E48   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E49   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E4A   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E4B   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E4C   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E4D   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E4E   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E4F   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01405                 count = count + 1
0E50   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E51   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E52   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E53   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E54   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E55   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E56   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E57   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E58   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E59   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E5A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E5B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01405                 count = count + 1
0E5C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E5D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E5E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E5F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E60   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E61   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E62   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E63   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E64   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E65   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E66   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E67   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01405                 count = count + 1
0E68   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E69   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E6A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E6B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E6C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E6D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E6E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E6F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E70   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E71   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E72   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E73   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01405                 count = count + 1
0E74   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E75   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E76   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E77   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E78   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E79   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E7A   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E7B   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E7C   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E7D   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E7E   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E7F   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01405                 count = count + 1
0E80   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E81   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E82   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E83   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E84   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E85   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E86   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E87   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E88   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E89   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E8A   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E8B   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01405                 count = count + 1
0E8C   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E8D   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E8E   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E8F   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E90   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E91   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E92   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E93   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E94   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E95   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
0E96   0080           01403                 movwf INDF                                              ;Save to QUEUE
0E97   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01405                 count = count + 1
0E98   0808           01393                 movf ADC_DATAPORT, W                    ;Sample Y
0E99   1409           01394                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0E9A   1009           01395                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0E9B   1489           01396                 bsf ADC_CONTROLPORT, ADDR0              ;Set channel to Y
0E9C   0080           01397                 movwf INDF                                              ;Save to QUEUE
0E9D   0384           01398                 decf FSR, F                                             ;Increment QUEUE pointer
0E9E   0808           01399                 movf ADC_DATAPORT, W                    ;Sample X
0E9F   1409           01400                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA0   1009           01401                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EA1   1089           01402                 bcf ADC_CONTROLPORT, ADDR0              ;Set channel to X
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EA2   0080           01403                 movwf INDF                                              ;Save to QUEUE
0EA3   0384           01404                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01405                 count = count + 1
                      01406         endw
0EA4   0808           01407         movf ADC_DATAPORT, W                    ;Sample Y, last in Bank 3
0EA5   1409           01408         bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EA6   118A           01409         bcf PCLATH, 3                                   ;insure correct program memory page
0EA7   120A           01410         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
0EA8   2921           01411         goto ADCShutdown
                      01412         
                      01413 ;Fast sample
                      01414 ;Sampling rate = 833.333 kHz with 20 MHz clock
                      01415 ;Sampling rate = 166.667 kHz with 4 MHz clock
                      01416 ;-----------------------------------------------------------------------------
0EA9                  01417 Sample833k
0EA9   1009           01418         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01419         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
0EAA   3020               M     movlw BUFFERMIN
0EAB   0084               M     movwf FSR
0EAC   0000           01420         nop
  0000                01421         local count
  00000001            01422         count = 1
                      01423         while count < BUFFERSIZE
0EAD   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EAE   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EAF   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB0   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EB1   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EB2   0000           01429                 nop                                                             ;Wait a cycle
  00000002            01430                 count = count + 1
0EB3   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EB4   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EB5   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EB6   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EB7   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EB8   0000           01429                 nop                                                             ;Wait a cycle
  00000003            01430                 count = count + 1
0EB9   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EBA   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EBB   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EBC   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EBD   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EBE   0000           01429                 nop                                                             ;Wait a cycle
  00000004            01430                 count = count + 1
0EBF   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EC0   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC1   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC2   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EC3   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EC4   0000           01429                 nop                                                             ;Wait a cycle
  00000005            01430                 count = count + 1
0EC5   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EC6   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EC7   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EC8   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EC9   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0ECA   0000           01429                 nop                                                             ;Wait a cycle
  00000006            01430                 count = count + 1
0ECB   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0ECC   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ECD   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ECE   0080           01427                 movwf INDF                                              ;Save to QUEUE
0ECF   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0ED0   0000           01429                 nop                                                             ;Wait a cycle
  00000007            01430                 count = count + 1
0ED1   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0ED2   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED3   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0ED4   0080           01427                 movwf INDF                                              ;Save to QUEUE
0ED5   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0ED6   0000           01429                 nop                                                             ;Wait a cycle
  00000008            01430                 count = count + 1
0ED7   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0ED8   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0ED9   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EDA   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EDB   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EDC   0000           01429                 nop                                                             ;Wait a cycle
  00000009            01430                 count = count + 1
0EDD   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EDE   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EDF   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE0   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EE1   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EE2   0000           01429                 nop                                                             ;Wait a cycle
  0000000A            01430                 count = count + 1
0EE3   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EE4   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EE5   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EE6   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EE7   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EE8   0000           01429                 nop                                                             ;Wait a cycle
  0000000B            01430                 count = count + 1
0EE9   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EEA   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EEB   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EEC   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EED   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EEE   0000           01429                 nop                                                             ;Wait a cycle
  0000000C            01430                 count = count + 1
0EEF   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EF0   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF1   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF2   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EF3   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EF4   0000           01429                 nop                                                             ;Wait a cycle
  0000000D            01430                 count = count + 1
0EF5   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EF6   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EF7   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EF8   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EF9   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0EFA   0000           01429                 nop                                                             ;Wait a cycle
  0000000E            01430                 count = count + 1
0EFB   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0EFC   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0EFD   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0EFE   0080           01427                 movwf INDF                                              ;Save to QUEUE
0EFF   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F00   0000           01429                 nop                                                             ;Wait a cycle
  0000000F            01430                 count = count + 1
0F01   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F02   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F03   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F04   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F05   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F06   0000           01429                 nop                                                             ;Wait a cycle
  00000010            01430                 count = count + 1
0F07   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F08   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F09   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F0A   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F0B   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F0C   0000           01429                 nop                                                             ;Wait a cycle
  00000011            01430                 count = count + 1
0F0D   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F0E   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F0F   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F10   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F11   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F12   0000           01429                 nop                                                             ;Wait a cycle
  00000012            01430                 count = count + 1
0F13   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F14   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F15   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F16   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F17   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F18   0000           01429                 nop                                                             ;Wait a cycle
  00000013            01430                 count = count + 1
0F19   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F1A   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F1B   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F1C   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F1D   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F1E   0000           01429                 nop                                                             ;Wait a cycle
  00000014            01430                 count = count + 1
0F1F   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F20   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F21   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F22   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F23   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F24   0000           01429                 nop                                                             ;Wait a cycle
  00000015            01430                 count = count + 1
0F25   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F26   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F27   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F28   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F29   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F2A   0000           01429                 nop                                                             ;Wait a cycle
  00000016            01430                 count = count + 1
0F2B   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F2C   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F2D   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F2E   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F2F   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F30   0000           01429                 nop                                                             ;Wait a cycle
  00000017            01430                 count = count + 1
0F31   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F32   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F33   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F34   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F35   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F36   0000           01429                 nop                                                             ;Wait a cycle
  00000018            01430                 count = count + 1
0F37   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F38   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F39   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F3A   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F3B   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F3C   0000           01429                 nop                                                             ;Wait a cycle
  00000019            01430                 count = count + 1
0F3D   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F3E   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F3F   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F40   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F41   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F42   0000           01429                 nop                                                             ;Wait a cycle
  0000001A            01430                 count = count + 1
0F43   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F44   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F45   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F46   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F47   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F48   0000           01429                 nop                                                             ;Wait a cycle
  0000001B            01430                 count = count + 1
0F49   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F4A   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F4B   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F4C   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F4D   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F4E   0000           01429                 nop                                                             ;Wait a cycle
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001C            01430                 count = count + 1
0F4F   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F50   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F51   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F52   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F53   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F54   0000           01429                 nop                                                             ;Wait a cycle
  0000001D            01430                 count = count + 1
0F55   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F56   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F57   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F58   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F59   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F5A   0000           01429                 nop                                                             ;Wait a cycle
  0000001E            01430                 count = count + 1
0F5B   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F5C   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F5D   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F5E   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F5F   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F60   0000           01429                 nop                                                             ;Wait a cycle
  0000001F            01430                 count = count + 1
0F61   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F62   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F63   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F64   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F65   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F66   0000           01429                 nop                                                             ;Wait a cycle
  00000020            01430                 count = count + 1
0F67   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F68   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F69   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F6A   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F6B   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F6C   0000           01429                 nop                                                             ;Wait a cycle
  00000021            01430                 count = count + 1
0F6D   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F6E   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F6F   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F70   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F71   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F72   0000           01429                 nop                                                             ;Wait a cycle
  00000022            01430                 count = count + 1
0F73   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F74   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F75   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F76   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F77   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F78   0000           01429                 nop                                                             ;Wait a cycle
  00000023            01430                 count = count + 1
0F79   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F7A   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F7B   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F7C   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F7D   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F7E   0000           01429                 nop                                                             ;Wait a cycle
  00000024            01430                 count = count + 1
0F7F   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F80   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F81   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F82   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F83   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F84   0000           01429                 nop                                                             ;Wait a cycle
  00000025            01430                 count = count + 1
0F85   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F86   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F87   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F88   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F89   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F8A   0000           01429                 nop                                                             ;Wait a cycle
  00000026            01430                 count = count + 1
0F8B   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F8C   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F8D   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F8E   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F8F   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F90   0000           01429                 nop                                                             ;Wait a cycle
  00000027            01430                 count = count + 1
0F91   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F92   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F93   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F94   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F95   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F96   0000           01429                 nop                                                             ;Wait a cycle
  00000028            01430                 count = count + 1
0F97   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F98   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F99   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0F9A   0080           01427                 movwf INDF                                              ;Save to QUEUE
0F9B   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0F9C   0000           01429                 nop                                                             ;Wait a cycle
  00000029            01430                 count = count + 1
0F9D   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0F9E   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0F9F   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA0   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FA1   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FA2   0000           01429                 nop                                                             ;Wait a cycle
  0000002A            01430                 count = count + 1
0FA3   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FA4   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FA5   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FA6   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FA7   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FA8   0000           01429                 nop                                                             ;Wait a cycle
  0000002B            01430                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FA9   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FAA   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FAB   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FAC   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FAD   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FAE   0000           01429                 nop                                                             ;Wait a cycle
  0000002C            01430                 count = count + 1
0FAF   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FB0   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB1   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB2   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FB3   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FB4   0000           01429                 nop                                                             ;Wait a cycle
  0000002D            01430                 count = count + 1
0FB5   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FB6   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FB7   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FB8   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FB9   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FBA   0000           01429                 nop                                                             ;Wait a cycle
  0000002E            01430                 count = count + 1
0FBB   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FBC   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FBD   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FBE   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FBF   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FC0   0000           01429                 nop                                                             ;Wait a cycle
  0000002F            01430                 count = count + 1
0FC1   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FC2   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC3   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FC4   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FC5   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FC6   0000           01429                 nop                                                             ;Wait a cycle
  00000030            01430                 count = count + 1
0FC7   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FC8   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FC9   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FCA   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FCB   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FCC   0000           01429                 nop                                                             ;Wait a cycle
  00000031            01430                 count = count + 1
0FCD   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FCE   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FCF   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD0   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FD1   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FD2   0000           01429                 nop                                                             ;Wait a cycle
  00000032            01430                 count = count + 1
0FD3   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FD4   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FD5   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FD6   0080           01427                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0FD7   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FD8   0000           01429                 nop                                                             ;Wait a cycle
  00000033            01430                 count = count + 1
0FD9   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FDA   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FDB   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FDC   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FDD   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FDE   0000           01429                 nop                                                             ;Wait a cycle
  00000034            01430                 count = count + 1
0FDF   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FE0   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE1   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE2   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FE3   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FE4   0000           01429                 nop                                                             ;Wait a cycle
  00000035            01430                 count = count + 1
0FE5   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FE6   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FE7   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FE8   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FE9   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FEA   0000           01429                 nop                                                             ;Wait a cycle
  00000036            01430                 count = count + 1
0FEB   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FEC   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FED   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FEE   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FEF   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FF0   0000           01429                 nop                                                             ;Wait a cycle
  00000037            01430                 count = count + 1
0FF1   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FF2   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF3   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FF4   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FF5   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FF6   0000           01429                 nop                                                             ;Wait a cycle
  00000038            01430                 count = count + 1
0FF7   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FF8   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FF9   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
0FFA   0080           01427                 movwf INDF                                              ;Save to QUEUE
0FFB   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
0FFC   0000           01429                 nop                                                             ;Wait a cycle
  00000039            01430                 count = count + 1
0FFD   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
0FFE   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
0FFF   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1000   0080           01427                 movwf INDF                                              ;Save to QUEUE
1001   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
1002   0000           01429                 nop                                                             ;Wait a cycle
  0000003A            01430                 count = count + 1
1003   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1004   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1005   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1006   0080           01427                 movwf INDF                                              ;Save to QUEUE
1007   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
1008   0000           01429                 nop                                                             ;Wait a cycle
  0000003B            01430                 count = count + 1
1009   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
100A   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
100B   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
100C   0080           01427                 movwf INDF                                              ;Save to QUEUE
100D   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
100E   0000           01429                 nop                                                             ;Wait a cycle
  0000003C            01430                 count = count + 1
100F   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
1010   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1011   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1012   0080           01427                 movwf INDF                                              ;Save to QUEUE
1013   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
1014   0000           01429                 nop                                                             ;Wait a cycle
  0000003D            01430                 count = count + 1
1015   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
1016   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1017   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1018   0080           01427                 movwf INDF                                              ;Save to QUEUE
1019   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
101A   0000           01429                 nop                                                             ;Wait a cycle
  0000003E            01430                 count = count + 1
101B   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
101C   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
101D   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
101E   0080           01427                 movwf INDF                                              ;Save to QUEUE
101F   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
1020   0000           01429                 nop                                                             ;Wait a cycle
  0000003F            01430                 count = count + 1
1021   0808           01424                 movf ADC_DATAPORT, W                    ;Sample
1022   1409           01425                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1023   1009           01426                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1024   0080           01427                 movwf INDF                                              ;Save to QUEUE
1025   0A84           01428                 incf FSR, F                                             ;Increment QUEUE pointer
1026   0000           01429                 nop                                                             ;Wait a cycle
  00000040            01430                 count = count + 1
                      01431         endw
1027   0808           01432         movf ADC_DATAPORT, W
1028   1409           01433         bsf ADC_CONTROLPORT, RDD
1029   1009           01434         bcf ADC_CONTROLPORT, RDD
102A   0080           01435         movwf INDF
102B   1784           01436         bsf FSR, 7                                                      ;goto bank 2
102C   0000           01437         nop                                                             ;Wait a cycle
  00000001            01438         count = 1
                      01439         while count < BUFFERSIZE
102D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
102E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
102F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1030   0080           01443                 movwf INDF                                              ;Save to QUEUE
1031   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1032   0000           01445                 nop                                                             ;Wait a cycle
  00000002            01446                 count = count + 1
1033   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1034   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1035   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1036   0080           01443                 movwf INDF                                              ;Save to QUEUE
1037   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1038   0000           01445                 nop                                                             ;Wait a cycle
  00000003            01446                 count = count + 1
1039   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
103A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
103B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
103C   0080           01443                 movwf INDF                                              ;Save to QUEUE
103D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
103E   0000           01445                 nop                                                             ;Wait a cycle
  00000004            01446                 count = count + 1
103F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1040   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1041   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1042   0080           01443                 movwf INDF                                              ;Save to QUEUE
1043   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1044   0000           01445                 nop                                                             ;Wait a cycle
  00000005            01446                 count = count + 1
1045   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1046   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1047   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1048   0080           01443                 movwf INDF                                              ;Save to QUEUE
1049   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
104A   0000           01445                 nop                                                             ;Wait a cycle
  00000006            01446                 count = count + 1
104B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
104C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
104D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
104E   0080           01443                 movwf INDF                                              ;Save to QUEUE
104F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1050   0000           01445                 nop                                                             ;Wait a cycle
  00000007            01446                 count = count + 1
1051   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1052   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1053   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1054   0080           01443                 movwf INDF                                              ;Save to QUEUE
1055   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1056   0000           01445                 nop                                                             ;Wait a cycle
  00000008            01446                 count = count + 1
1057   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1058   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1059   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
105A   0080           01443                 movwf INDF                                              ;Save to QUEUE
105B   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
105C   0000           01445                 nop                                                             ;Wait a cycle
  00000009            01446                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

105D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
105E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
105F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1060   0080           01443                 movwf INDF                                              ;Save to QUEUE
1061   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1062   0000           01445                 nop                                                             ;Wait a cycle
  0000000A            01446                 count = count + 1
1063   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1064   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1065   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1066   0080           01443                 movwf INDF                                              ;Save to QUEUE
1067   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1068   0000           01445                 nop                                                             ;Wait a cycle
  0000000B            01446                 count = count + 1
1069   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
106A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
106B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
106C   0080           01443                 movwf INDF                                              ;Save to QUEUE
106D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
106E   0000           01445                 nop                                                             ;Wait a cycle
  0000000C            01446                 count = count + 1
106F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1070   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1071   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1072   0080           01443                 movwf INDF                                              ;Save to QUEUE
1073   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1074   0000           01445                 nop                                                             ;Wait a cycle
  0000000D            01446                 count = count + 1
1075   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1076   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1077   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1078   0080           01443                 movwf INDF                                              ;Save to QUEUE
1079   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
107A   0000           01445                 nop                                                             ;Wait a cycle
  0000000E            01446                 count = count + 1
107B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
107C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
107D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
107E   0080           01443                 movwf INDF                                              ;Save to QUEUE
107F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1080   0000           01445                 nop                                                             ;Wait a cycle
  0000000F            01446                 count = count + 1
1081   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1082   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1083   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1084   0080           01443                 movwf INDF                                              ;Save to QUEUE
1085   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1086   0000           01445                 nop                                                             ;Wait a cycle
  00000010            01446                 count = count + 1
1087   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1088   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1089   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
108A   0080           01443                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

108B   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
108C   0000           01445                 nop                                                             ;Wait a cycle
  00000011            01446                 count = count + 1
108D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
108E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
108F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1090   0080           01443                 movwf INDF                                              ;Save to QUEUE
1091   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1092   0000           01445                 nop                                                             ;Wait a cycle
  00000012            01446                 count = count + 1
1093   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1094   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1095   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1096   0080           01443                 movwf INDF                                              ;Save to QUEUE
1097   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1098   0000           01445                 nop                                                             ;Wait a cycle
  00000013            01446                 count = count + 1
1099   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
109A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
109B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
109C   0080           01443                 movwf INDF                                              ;Save to QUEUE
109D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
109E   0000           01445                 nop                                                             ;Wait a cycle
  00000014            01446                 count = count + 1
109F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10A0   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A1   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A2   0080           01443                 movwf INDF                                              ;Save to QUEUE
10A3   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10A4   0000           01445                 nop                                                             ;Wait a cycle
  00000015            01446                 count = count + 1
10A5   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10A6   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10A7   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10A8   0080           01443                 movwf INDF                                              ;Save to QUEUE
10A9   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10AA   0000           01445                 nop                                                             ;Wait a cycle
  00000016            01446                 count = count + 1
10AB   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10AC   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10AD   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10AE   0080           01443                 movwf INDF                                              ;Save to QUEUE
10AF   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10B0   0000           01445                 nop                                                             ;Wait a cycle
  00000017            01446                 count = count + 1
10B1   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10B2   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B3   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10B4   0080           01443                 movwf INDF                                              ;Save to QUEUE
10B5   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10B6   0000           01445                 nop                                                             ;Wait a cycle
  00000018            01446                 count = count + 1
10B7   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10B8   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10B9   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10BA   0080           01443                 movwf INDF                                              ;Save to QUEUE
10BB   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10BC   0000           01445                 nop                                                             ;Wait a cycle
  00000019            01446                 count = count + 1
10BD   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10BE   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10BF   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C0   0080           01443                 movwf INDF                                              ;Save to QUEUE
10C1   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10C2   0000           01445                 nop                                                             ;Wait a cycle
  0000001A            01446                 count = count + 1
10C3   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10C4   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10C5   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10C6   0080           01443                 movwf INDF                                              ;Save to QUEUE
10C7   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10C8   0000           01445                 nop                                                             ;Wait a cycle
  0000001B            01446                 count = count + 1
10C9   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10CA   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10CB   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10CC   0080           01443                 movwf INDF                                              ;Save to QUEUE
10CD   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10CE   0000           01445                 nop                                                             ;Wait a cycle
  0000001C            01446                 count = count + 1
10CF   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10D0   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D1   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D2   0080           01443                 movwf INDF                                              ;Save to QUEUE
10D3   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10D4   0000           01445                 nop                                                             ;Wait a cycle
  0000001D            01446                 count = count + 1
10D5   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10D6   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10D7   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10D8   0080           01443                 movwf INDF                                              ;Save to QUEUE
10D9   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10DA   0000           01445                 nop                                                             ;Wait a cycle
  0000001E            01446                 count = count + 1
10DB   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10DC   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10DD   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10DE   0080           01443                 movwf INDF                                              ;Save to QUEUE
10DF   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10E0   0000           01445                 nop                                                             ;Wait a cycle
  0000001F            01446                 count = count + 1
10E1   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10E2   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E3   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10E4   0080           01443                 movwf INDF                                              ;Save to QUEUE
10E5   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10E6   0000           01445                 nop                                                             ;Wait a cycle
  00000020            01446                 count = count + 1
10E7   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10E8   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10E9   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10EA   0080           01443                 movwf INDF                                              ;Save to QUEUE
10EB   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10EC   0000           01445                 nop                                                             ;Wait a cycle
  00000021            01446                 count = count + 1
10ED   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10EE   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10EF   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F0   0080           01443                 movwf INDF                                              ;Save to QUEUE
10F1   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10F2   0000           01445                 nop                                                             ;Wait a cycle
  00000022            01446                 count = count + 1
10F3   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10F4   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10F5   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10F6   0080           01443                 movwf INDF                                              ;Save to QUEUE
10F7   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10F8   0000           01445                 nop                                                             ;Wait a cycle
  00000023            01446                 count = count + 1
10F9   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
10FA   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
10FB   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
10FC   0080           01443                 movwf INDF                                              ;Save to QUEUE
10FD   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
10FE   0000           01445                 nop                                                             ;Wait a cycle
  00000024            01446                 count = count + 1
10FF   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1100   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1101   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1102   0080           01443                 movwf INDF                                              ;Save to QUEUE
1103   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1104   0000           01445                 nop                                                             ;Wait a cycle
  00000025            01446                 count = count + 1
1105   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1106   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1107   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1108   0080           01443                 movwf INDF                                              ;Save to QUEUE
1109   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
110A   0000           01445                 nop                                                             ;Wait a cycle
  00000026            01446                 count = count + 1
110B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
110C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
110D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
110E   0080           01443                 movwf INDF                                              ;Save to QUEUE
110F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1110   0000           01445                 nop                                                             ;Wait a cycle
  00000027            01446                 count = count + 1
1111   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1112   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1113   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1114   0080           01443                 movwf INDF                                              ;Save to QUEUE
1115   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1116   0000           01445                 nop                                                             ;Wait a cycle
  00000028            01446                 count = count + 1
1117   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1118   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1119   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
111A   0080           01443                 movwf INDF                                              ;Save to QUEUE
111B   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
111C   0000           01445                 nop                                                             ;Wait a cycle
  00000029            01446                 count = count + 1
111D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
111E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
111F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1120   0080           01443                 movwf INDF                                              ;Save to QUEUE
1121   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1122   0000           01445                 nop                                                             ;Wait a cycle
  0000002A            01446                 count = count + 1
1123   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1124   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1125   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1126   0080           01443                 movwf INDF                                              ;Save to QUEUE
1127   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1128   0000           01445                 nop                                                             ;Wait a cycle
  0000002B            01446                 count = count + 1
1129   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
112A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
112B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
112C   0080           01443                 movwf INDF                                              ;Save to QUEUE
112D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
112E   0000           01445                 nop                                                             ;Wait a cycle
  0000002C            01446                 count = count + 1
112F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1130   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1131   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1132   0080           01443                 movwf INDF                                              ;Save to QUEUE
1133   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1134   0000           01445                 nop                                                             ;Wait a cycle
  0000002D            01446                 count = count + 1
1135   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1136   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1137   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1138   0080           01443                 movwf INDF                                              ;Save to QUEUE
1139   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
113A   0000           01445                 nop                                                             ;Wait a cycle
  0000002E            01446                 count = count + 1
113B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
113C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
113D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
113E   0080           01443                 movwf INDF                                              ;Save to QUEUE
113F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1140   0000           01445                 nop                                                             ;Wait a cycle
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002F            01446                 count = count + 1
1141   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1142   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1143   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1144   0080           01443                 movwf INDF                                              ;Save to QUEUE
1145   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1146   0000           01445                 nop                                                             ;Wait a cycle
  00000030            01446                 count = count + 1
1147   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1148   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1149   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
114A   0080           01443                 movwf INDF                                              ;Save to QUEUE
114B   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
114C   0000           01445                 nop                                                             ;Wait a cycle
  00000031            01446                 count = count + 1
114D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
114E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
114F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1150   0080           01443                 movwf INDF                                              ;Save to QUEUE
1151   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1152   0000           01445                 nop                                                             ;Wait a cycle
  00000032            01446                 count = count + 1
1153   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1154   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1155   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1156   0080           01443                 movwf INDF                                              ;Save to QUEUE
1157   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1158   0000           01445                 nop                                                             ;Wait a cycle
  00000033            01446                 count = count + 1
1159   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
115A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
115B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
115C   0080           01443                 movwf INDF                                              ;Save to QUEUE
115D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
115E   0000           01445                 nop                                                             ;Wait a cycle
  00000034            01446                 count = count + 1
115F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1160   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1161   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1162   0080           01443                 movwf INDF                                              ;Save to QUEUE
1163   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1164   0000           01445                 nop                                                             ;Wait a cycle
  00000035            01446                 count = count + 1
1165   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1166   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1167   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1168   0080           01443                 movwf INDF                                              ;Save to QUEUE
1169   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
116A   0000           01445                 nop                                                             ;Wait a cycle
  00000036            01446                 count = count + 1
116B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
116C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
116D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

116E   0080           01443                 movwf INDF                                              ;Save to QUEUE
116F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1170   0000           01445                 nop                                                             ;Wait a cycle
  00000037            01446                 count = count + 1
1171   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1172   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1173   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1174   0080           01443                 movwf INDF                                              ;Save to QUEUE
1175   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1176   0000           01445                 nop                                                             ;Wait a cycle
  00000038            01446                 count = count + 1
1177   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1178   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1179   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
117A   0080           01443                 movwf INDF                                              ;Save to QUEUE
117B   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
117C   0000           01445                 nop                                                             ;Wait a cycle
  00000039            01446                 count = count + 1
117D   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
117E   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
117F   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1180   0080           01443                 movwf INDF                                              ;Save to QUEUE
1181   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1182   0000           01445                 nop                                                             ;Wait a cycle
  0000003A            01446                 count = count + 1
1183   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1184   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1185   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1186   0080           01443                 movwf INDF                                              ;Save to QUEUE
1187   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1188   0000           01445                 nop                                                             ;Wait a cycle
  0000003B            01446                 count = count + 1
1189   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
118A   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
118B   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
118C   0080           01443                 movwf INDF                                              ;Save to QUEUE
118D   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
118E   0000           01445                 nop                                                             ;Wait a cycle
  0000003C            01446                 count = count + 1
118F   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1190   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1191   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1192   0080           01443                 movwf INDF                                              ;Save to QUEUE
1193   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
1194   0000           01445                 nop                                                             ;Wait a cycle
  0000003D            01446                 count = count + 1
1195   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
1196   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1197   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1198   0080           01443                 movwf INDF                                              ;Save to QUEUE
1199   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
119A   0000           01445                 nop                                                             ;Wait a cycle
  0000003E            01446                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

119B   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
119C   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
119D   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
119E   0080           01443                 movwf INDF                                              ;Save to QUEUE
119F   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
11A0   0000           01445                 nop                                                             ;Wait a cycle
  0000003F            01446                 count = count + 1
11A1   0808           01440                 movf ADC_DATAPORT, W                    ;Sample
11A2   1409           01441                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11A3   1009           01442                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11A4   0080           01443                 movwf INDF                                              ;Save to QUEUE
11A5   0384           01444                 decf FSR, F                                             ;Increment QUEUE pointer
11A6   0000           01445                 nop                                                             ;Wait a cycle
  00000040            01446                 count = count + 1
                      01447         endw
11A7   0808           01448         movf ADC_DATAPORT, W
11A8   1409           01449         bsf ADC_CONTROLPORT, RDD
11A9   1009           01450         bcf ADC_CONTROLPORT, RDD
11AA   0080           01451         movwf INDF
11AB   1783           01452         bsf STATUS, IRP                                         ;goto bank 4
11AC   0000           01453         nop                                                             ;Wait a cycle
  00000001            01454         count = 1
                      01455         while count < D'44'
11AD   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11AE   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11AF   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B0   0080           01459                 movwf INDF                                              ;Save to QUEUE
11B1   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11B2   0000           01461                 nop                                                             ;Wait a cycle
  00000002            01462                 count = count + 1
11B3   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11B4   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11B5   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11B6   0080           01459                 movwf INDF                                              ;Save to QUEUE
11B7   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11B8   0000           01461                 nop                                                             ;Wait a cycle
  00000003            01462                 count = count + 1
11B9   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11BA   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11BB   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11BC   0080           01459                 movwf INDF                                              ;Save to QUEUE
11BD   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11BE   0000           01461                 nop                                                             ;Wait a cycle
  00000004            01462                 count = count + 1
11BF   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11C0   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11C1   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C2   0080           01459                 movwf INDF                                              ;Save to QUEUE
11C3   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11C4   0000           01461                 nop                                                             ;Wait a cycle
  00000005            01462                 count = count + 1
11C5   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11C6   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11C7   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11C8   0080           01459                 movwf INDF                                              ;Save to QUEUE
11C9   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11CA   0000           01461                 nop                                                             ;Wait a cycle
  00000006            01462                 count = count + 1
11CB   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11CC   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11CD   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11CE   0080           01459                 movwf INDF                                              ;Save to QUEUE
11CF   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11D0   0000           01461                 nop                                                             ;Wait a cycle
  00000007            01462                 count = count + 1
11D1   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11D2   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D3   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11D4   0080           01459                 movwf INDF                                              ;Save to QUEUE
11D5   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11D6   0000           01461                 nop                                                             ;Wait a cycle
  00000008            01462                 count = count + 1
11D7   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11D8   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11D9   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11DA   0080           01459                 movwf INDF                                              ;Save to QUEUE
11DB   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11DC   0000           01461                 nop                                                             ;Wait a cycle
  00000009            01462                 count = count + 1
11DD   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11DE   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11DF   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E0   0080           01459                 movwf INDF                                              ;Save to QUEUE
11E1   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11E2   0000           01461                 nop                                                             ;Wait a cycle
  0000000A            01462                 count = count + 1
11E3   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11E4   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11E5   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11E6   0080           01459                 movwf INDF                                              ;Save to QUEUE
11E7   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11E8   0000           01461                 nop                                                             ;Wait a cycle
  0000000B            01462                 count = count + 1
11E9   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11EA   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11EB   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11EC   0080           01459                 movwf INDF                                              ;Save to QUEUE
11ED   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11EE   0000           01461                 nop                                                             ;Wait a cycle
  0000000C            01462                 count = count + 1
11EF   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11F0   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F1   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F2   0080           01459                 movwf INDF                                              ;Save to QUEUE
11F3   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11F4   0000           01461                 nop                                                             ;Wait a cycle
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000D            01462                 count = count + 1
11F5   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11F6   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11F7   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11F8   0080           01459                 movwf INDF                                              ;Save to QUEUE
11F9   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
11FA   0000           01461                 nop                                                             ;Wait a cycle
  0000000E            01462                 count = count + 1
11FB   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
11FC   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
11FD   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
11FE   0080           01459                 movwf INDF                                              ;Save to QUEUE
11FF   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1200   0000           01461                 nop                                                             ;Wait a cycle
  0000000F            01462                 count = count + 1
1201   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1202   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1203   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1204   0080           01459                 movwf INDF                                              ;Save to QUEUE
1205   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1206   0000           01461                 nop                                                             ;Wait a cycle
  00000010            01462                 count = count + 1
1207   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1208   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1209   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
120A   0080           01459                 movwf INDF                                              ;Save to QUEUE
120B   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
120C   0000           01461                 nop                                                             ;Wait a cycle
  00000011            01462                 count = count + 1
120D   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
120E   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
120F   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1210   0080           01459                 movwf INDF                                              ;Save to QUEUE
1211   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1212   0000           01461                 nop                                                             ;Wait a cycle
  00000012            01462                 count = count + 1
1213   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1214   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1215   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1216   0080           01459                 movwf INDF                                              ;Save to QUEUE
1217   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1218   0000           01461                 nop                                                             ;Wait a cycle
  00000013            01462                 count = count + 1
1219   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
121A   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
121B   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
121C   0080           01459                 movwf INDF                                              ;Save to QUEUE
121D   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
121E   0000           01461                 nop                                                             ;Wait a cycle
  00000014            01462                 count = count + 1
121F   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1220   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1221   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1222   0080           01459                 movwf INDF                                              ;Save to QUEUE
1223   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1224   0000           01461                 nop                                                             ;Wait a cycle
  00000015            01462                 count = count + 1
1225   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1226   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1227   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1228   0080           01459                 movwf INDF                                              ;Save to QUEUE
1229   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
122A   0000           01461                 nop                                                             ;Wait a cycle
  00000016            01462                 count = count + 1
122B   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
122C   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
122D   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
122E   0080           01459                 movwf INDF                                              ;Save to QUEUE
122F   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1230   0000           01461                 nop                                                             ;Wait a cycle
  00000017            01462                 count = count + 1
1231   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1232   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1233   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1234   0080           01459                 movwf INDF                                              ;Save to QUEUE
1235   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1236   0000           01461                 nop                                                             ;Wait a cycle
  00000018            01462                 count = count + 1
1237   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1238   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1239   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
123A   0080           01459                 movwf INDF                                              ;Save to QUEUE
123B   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
123C   0000           01461                 nop                                                             ;Wait a cycle
  00000019            01462                 count = count + 1
123D   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
123E   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
123F   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1240   0080           01459                 movwf INDF                                              ;Save to QUEUE
1241   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1242   0000           01461                 nop                                                             ;Wait a cycle
  0000001A            01462                 count = count + 1
1243   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1244   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1245   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1246   0080           01459                 movwf INDF                                              ;Save to QUEUE
1247   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1248   0000           01461                 nop                                                             ;Wait a cycle
  0000001B            01462                 count = count + 1
1249   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
124A   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
124B   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
124C   0080           01459                 movwf INDF                                              ;Save to QUEUE
124D   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
124E   0000           01461                 nop                                                             ;Wait a cycle
  0000001C            01462                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

124F   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1250   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1251   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1252   0080           01459                 movwf INDF                                              ;Save to QUEUE
1253   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1254   0000           01461                 nop                                                             ;Wait a cycle
  0000001D            01462                 count = count + 1
1255   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1256   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1257   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1258   0080           01459                 movwf INDF                                              ;Save to QUEUE
1259   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
125A   0000           01461                 nop                                                             ;Wait a cycle
  0000001E            01462                 count = count + 1
125B   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
125C   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
125D   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
125E   0080           01459                 movwf INDF                                              ;Save to QUEUE
125F   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1260   0000           01461                 nop                                                             ;Wait a cycle
  0000001F            01462                 count = count + 1
1261   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1262   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1263   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1264   0080           01459                 movwf INDF                                              ;Save to QUEUE
1265   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1266   0000           01461                 nop                                                             ;Wait a cycle
  00000020            01462                 count = count + 1
1267   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1268   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1269   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
126A   0080           01459                 movwf INDF                                              ;Save to QUEUE
126B   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
126C   0000           01461                 nop                                                             ;Wait a cycle
  00000021            01462                 count = count + 1
126D   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
126E   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
126F   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1270   0080           01459                 movwf INDF                                              ;Save to QUEUE
1271   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1272   0000           01461                 nop                                                             ;Wait a cycle
  00000022            01462                 count = count + 1
1273   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1274   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1275   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1276   0080           01459                 movwf INDF                                              ;Save to QUEUE
1277   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1278   0000           01461                 nop                                                             ;Wait a cycle
  00000023            01462                 count = count + 1
1279   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
127A   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
127B   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
127C   0080           01459                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

127D   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
127E   0000           01461                 nop                                                             ;Wait a cycle
  00000024            01462                 count = count + 1
127F   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1280   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1281   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1282   0080           01459                 movwf INDF                                              ;Save to QUEUE
1283   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1284   0000           01461                 nop                                                             ;Wait a cycle
  00000025            01462                 count = count + 1
1285   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1286   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1287   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1288   0080           01459                 movwf INDF                                              ;Save to QUEUE
1289   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
128A   0000           01461                 nop                                                             ;Wait a cycle
  00000026            01462                 count = count + 1
128B   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
128C   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
128D   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
128E   0080           01459                 movwf INDF                                              ;Save to QUEUE
128F   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1290   0000           01461                 nop                                                             ;Wait a cycle
  00000027            01462                 count = count + 1
1291   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1292   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1293   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1294   0080           01459                 movwf INDF                                              ;Save to QUEUE
1295   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
1296   0000           01461                 nop                                                             ;Wait a cycle
  00000028            01462                 count = count + 1
1297   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
1298   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1299   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
129A   0080           01459                 movwf INDF                                              ;Save to QUEUE
129B   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
129C   0000           01461                 nop                                                             ;Wait a cycle
  00000029            01462                 count = count + 1
129D   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
129E   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
129F   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A0   0080           01459                 movwf INDF                                              ;Save to QUEUE
12A1   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
12A2   0000           01461                 nop                                                             ;Wait a cycle
  0000002A            01462                 count = count + 1
12A3   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
12A4   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12A5   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12A6   0080           01459                 movwf INDF                                              ;Save to QUEUE
12A7   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
12A8   0000           01461                 nop                                                             ;Wait a cycle
  0000002B            01462                 count = count + 1
12A9   0808           01456                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12AA   1409           01457                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12AB   1009           01458                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12AC   0080           01459                 movwf INDF                                              ;Save to QUEUE
12AD   0A84           01460                 incf FSR, F                                             ;Increment QUEUE pointer
12AE   0000           01461                 nop                                                             ;Wait a cycle
  0000002C            01462                 count = count + 1
                      01463         endw
12AF                  01464 Sample833kEnd
                      01465         while count < BUFFERSIZE
12AF   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12B0   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B1   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B2   0080           01469                 movwf INDF                                              ;Save to QUEUE
12B3   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12B4   0000           01471                 nop                                                             ;Wait a cycle
  0000002D            01472                 count = count + 1
12B5   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12B6   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12B7   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12B8   0080           01469                 movwf INDF                                              ;Save to QUEUE
12B9   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12BA   0000           01471                 nop                                                             ;Wait a cycle
  0000002E            01472                 count = count + 1
12BB   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12BC   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12BD   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12BE   0080           01469                 movwf INDF                                              ;Save to QUEUE
12BF   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12C0   0000           01471                 nop                                                             ;Wait a cycle
  0000002F            01472                 count = count + 1
12C1   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12C2   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C3   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12C4   0080           01469                 movwf INDF                                              ;Save to QUEUE
12C5   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12C6   0000           01471                 nop                                                             ;Wait a cycle
  00000030            01472                 count = count + 1
12C7   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12C8   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12C9   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12CA   0080           01469                 movwf INDF                                              ;Save to QUEUE
12CB   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12CC   0000           01471                 nop                                                             ;Wait a cycle
  00000031            01472                 count = count + 1
12CD   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12CE   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12CF   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D0   0080           01469                 movwf INDF                                              ;Save to QUEUE
12D1   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12D2   0000           01471                 nop                                                             ;Wait a cycle
  00000032            01472                 count = count + 1
12D3   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12D4   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12D5   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12D6   0080           01469                 movwf INDF                                              ;Save to QUEUE
12D7   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12D8   0000           01471                 nop                                                             ;Wait a cycle
  00000033            01472                 count = count + 1
12D9   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12DA   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12DB   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12DC   0080           01469                 movwf INDF                                              ;Save to QUEUE
12DD   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12DE   0000           01471                 nop                                                             ;Wait a cycle
  00000034            01472                 count = count + 1
12DF   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12E0   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E1   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E2   0080           01469                 movwf INDF                                              ;Save to QUEUE
12E3   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12E4   0000           01471                 nop                                                             ;Wait a cycle
  00000035            01472                 count = count + 1
12E5   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12E6   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12E7   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12E8   0080           01469                 movwf INDF                                              ;Save to QUEUE
12E9   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12EA   0000           01471                 nop                                                             ;Wait a cycle
  00000036            01472                 count = count + 1
12EB   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12EC   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12ED   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12EE   0080           01469                 movwf INDF                                              ;Save to QUEUE
12EF   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12F0   0000           01471                 nop                                                             ;Wait a cycle
  00000037            01472                 count = count + 1
12F1   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12F2   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F3   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12F4   0080           01469                 movwf INDF                                              ;Save to QUEUE
12F5   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12F6   0000           01471                 nop                                                             ;Wait a cycle
  00000038            01472                 count = count + 1
12F7   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12F8   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12F9   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
12FA   0080           01469                 movwf INDF                                              ;Save to QUEUE
12FB   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
12FC   0000           01471                 nop                                                             ;Wait a cycle
  00000039            01472                 count = count + 1
12FD   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
12FE   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
12FF   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1300   0080           01469                 movwf INDF                                              ;Save to QUEUE
1301   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
1302   0000           01471                 nop                                                             ;Wait a cycle
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003A            01472                 count = count + 1
1303   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
1304   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1305   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1306   0080           01469                 movwf INDF                                              ;Save to QUEUE
1307   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
1308   0000           01471                 nop                                                             ;Wait a cycle
  0000003B            01472                 count = count + 1
1309   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
130A   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
130B   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
130C   0080           01469                 movwf INDF                                              ;Save to QUEUE
130D   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
130E   0000           01471                 nop                                                             ;Wait a cycle
  0000003C            01472                 count = count + 1
130F   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
1310   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1311   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1312   0080           01469                 movwf INDF                                              ;Save to QUEUE
1313   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
1314   0000           01471                 nop                                                             ;Wait a cycle
  0000003D            01472                 count = count + 1
1315   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
1316   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1317   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1318   0080           01469                 movwf INDF                                              ;Save to QUEUE
1319   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
131A   0000           01471                 nop                                                             ;Wait a cycle
  0000003E            01472                 count = count + 1
131B   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
131C   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
131D   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
131E   0080           01469                 movwf INDF                                              ;Save to QUEUE
131F   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
1320   0000           01471                 nop                                                             ;Wait a cycle
  0000003F            01472                 count = count + 1
1321   0808           01466                 movf ADC_DATAPORT, W                    ;Sample
1322   1409           01467                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1323   1009           01468                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1324   0080           01469                 movwf INDF                                              ;Save to QUEUE
1325   0A84           01470                 incf FSR, F                                             ;Increment QUEUE pointer
1326   0000           01471                 nop                                                             ;Wait a cycle
  00000040            01472                 count = count + 1
                      01473         endw
1327   0808           01474         movf ADC_DATAPORT, W
1328   1409           01475         bsf ADC_CONTROLPORT, RDD
1329   1009           01476         bcf ADC_CONTROLPORT, RDD
132A   0080           01477         movwf INDF
132B   1384           01478         bcf FSR, 7                                                      ;goto bank 3
132C   0000           01479         nop                                                             ;Wait a cycle
  00000001            01480         count = 1
                      01481         while count < BUFFERSIZE
132D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

132E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
132F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1330   0080           01485                 movwf INDF                                              ;Save to QUEUE
1331   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1332   0000           01487                 nop                                                             ;Wait a cycle
  00000002            01488                 count = count + 1
1333   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1334   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1335   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1336   0080           01485                 movwf INDF                                              ;Save to QUEUE
1337   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1338   0000           01487                 nop                                                             ;Wait a cycle
  00000003            01488                 count = count + 1
1339   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
133A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
133B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
133C   0080           01485                 movwf INDF                                              ;Save to QUEUE
133D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
133E   0000           01487                 nop                                                             ;Wait a cycle
  00000004            01488                 count = count + 1
133F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1340   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1341   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1342   0080           01485                 movwf INDF                                              ;Save to QUEUE
1343   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1344   0000           01487                 nop                                                             ;Wait a cycle
  00000005            01488                 count = count + 1
1345   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1346   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1347   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1348   0080           01485                 movwf INDF                                              ;Save to QUEUE
1349   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
134A   0000           01487                 nop                                                             ;Wait a cycle
  00000006            01488                 count = count + 1
134B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
134C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
134D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
134E   0080           01485                 movwf INDF                                              ;Save to QUEUE
134F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1350   0000           01487                 nop                                                             ;Wait a cycle
  00000007            01488                 count = count + 1
1351   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1352   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1353   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1354   0080           01485                 movwf INDF                                              ;Save to QUEUE
1355   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1356   0000           01487                 nop                                                             ;Wait a cycle
  00000008            01488                 count = count + 1
1357   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1358   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1359   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
135A   0080           01485                 movwf INDF                                              ;Save to QUEUE
135B   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

135C   0000           01487                 nop                                                             ;Wait a cycle
  00000009            01488                 count = count + 1
135D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
135E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
135F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1360   0080           01485                 movwf INDF                                              ;Save to QUEUE
1361   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1362   0000           01487                 nop                                                             ;Wait a cycle
  0000000A            01488                 count = count + 1
1363   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1364   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1365   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1366   0080           01485                 movwf INDF                                              ;Save to QUEUE
1367   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1368   0000           01487                 nop                                                             ;Wait a cycle
  0000000B            01488                 count = count + 1
1369   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
136A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
136B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
136C   0080           01485                 movwf INDF                                              ;Save to QUEUE
136D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
136E   0000           01487                 nop                                                             ;Wait a cycle
  0000000C            01488                 count = count + 1
136F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1370   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1371   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1372   0080           01485                 movwf INDF                                              ;Save to QUEUE
1373   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1374   0000           01487                 nop                                                             ;Wait a cycle
  0000000D            01488                 count = count + 1
1375   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1376   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1377   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1378   0080           01485                 movwf INDF                                              ;Save to QUEUE
1379   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
137A   0000           01487                 nop                                                             ;Wait a cycle
  0000000E            01488                 count = count + 1
137B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
137C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
137D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
137E   0080           01485                 movwf INDF                                              ;Save to QUEUE
137F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1380   0000           01487                 nop                                                             ;Wait a cycle
  0000000F            01488                 count = count + 1
1381   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1382   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1383   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1384   0080           01485                 movwf INDF                                              ;Save to QUEUE
1385   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1386   0000           01487                 nop                                                             ;Wait a cycle
  00000010            01488                 count = count + 1
1387   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1388   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1389   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
138A   0080           01485                 movwf INDF                                              ;Save to QUEUE
138B   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
138C   0000           01487                 nop                                                             ;Wait a cycle
  00000011            01488                 count = count + 1
138D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
138E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
138F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1390   0080           01485                 movwf INDF                                              ;Save to QUEUE
1391   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1392   0000           01487                 nop                                                             ;Wait a cycle
  00000012            01488                 count = count + 1
1393   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1394   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1395   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1396   0080           01485                 movwf INDF                                              ;Save to QUEUE
1397   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1398   0000           01487                 nop                                                             ;Wait a cycle
  00000013            01488                 count = count + 1
1399   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
139A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
139B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
139C   0080           01485                 movwf INDF                                              ;Save to QUEUE
139D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
139E   0000           01487                 nop                                                             ;Wait a cycle
  00000014            01488                 count = count + 1
139F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13A0   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A1   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A2   0080           01485                 movwf INDF                                              ;Save to QUEUE
13A3   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13A4   0000           01487                 nop                                                             ;Wait a cycle
  00000015            01488                 count = count + 1
13A5   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13A6   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13A7   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13A8   0080           01485                 movwf INDF                                              ;Save to QUEUE
13A9   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13AA   0000           01487                 nop                                                             ;Wait a cycle
  00000016            01488                 count = count + 1
13AB   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13AC   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13AD   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13AE   0080           01485                 movwf INDF                                              ;Save to QUEUE
13AF   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13B0   0000           01487                 nop                                                             ;Wait a cycle
  00000017            01488                 count = count + 1
13B1   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13B2   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B3   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13B4   0080           01485                 movwf INDF                                              ;Save to QUEUE
13B5   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13B6   0000           01487                 nop                                                             ;Wait a cycle
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000018            01488                 count = count + 1
13B7   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13B8   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13B9   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13BA   0080           01485                 movwf INDF                                              ;Save to QUEUE
13BB   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13BC   0000           01487                 nop                                                             ;Wait a cycle
  00000019            01488                 count = count + 1
13BD   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13BE   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13BF   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C0   0080           01485                 movwf INDF                                              ;Save to QUEUE
13C1   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13C2   0000           01487                 nop                                                             ;Wait a cycle
  0000001A            01488                 count = count + 1
13C3   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13C4   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13C5   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13C6   0080           01485                 movwf INDF                                              ;Save to QUEUE
13C7   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13C8   0000           01487                 nop                                                             ;Wait a cycle
  0000001B            01488                 count = count + 1
13C9   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13CA   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13CB   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13CC   0080           01485                 movwf INDF                                              ;Save to QUEUE
13CD   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13CE   0000           01487                 nop                                                             ;Wait a cycle
  0000001C            01488                 count = count + 1
13CF   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13D0   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D1   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D2   0080           01485                 movwf INDF                                              ;Save to QUEUE
13D3   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13D4   0000           01487                 nop                                                             ;Wait a cycle
  0000001D            01488                 count = count + 1
13D5   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13D6   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13D7   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13D8   0080           01485                 movwf INDF                                              ;Save to QUEUE
13D9   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13DA   0000           01487                 nop                                                             ;Wait a cycle
  0000001E            01488                 count = count + 1
13DB   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13DC   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13DD   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13DE   0080           01485                 movwf INDF                                              ;Save to QUEUE
13DF   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13E0   0000           01487                 nop                                                             ;Wait a cycle
  0000001F            01488                 count = count + 1
13E1   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13E2   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E3   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13E4   0080           01485                 movwf INDF                                              ;Save to QUEUE
13E5   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13E6   0000           01487                 nop                                                             ;Wait a cycle
  00000020            01488                 count = count + 1
13E7   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13E8   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13E9   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13EA   0080           01485                 movwf INDF                                              ;Save to QUEUE
13EB   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13EC   0000           01487                 nop                                                             ;Wait a cycle
  00000021            01488                 count = count + 1
13ED   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13EE   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13EF   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F0   0080           01485                 movwf INDF                                              ;Save to QUEUE
13F1   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13F2   0000           01487                 nop                                                             ;Wait a cycle
  00000022            01488                 count = count + 1
13F3   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13F4   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13F5   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13F6   0080           01485                 movwf INDF                                              ;Save to QUEUE
13F7   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13F8   0000           01487                 nop                                                             ;Wait a cycle
  00000023            01488                 count = count + 1
13F9   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
13FA   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
13FB   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
13FC   0080           01485                 movwf INDF                                              ;Save to QUEUE
13FD   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
13FE   0000           01487                 nop                                                             ;Wait a cycle
  00000024            01488                 count = count + 1
13FF   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1400   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1401   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1402   0080           01485                 movwf INDF                                              ;Save to QUEUE
1403   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1404   0000           01487                 nop                                                             ;Wait a cycle
  00000025            01488                 count = count + 1
1405   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1406   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1407   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1408   0080           01485                 movwf INDF                                              ;Save to QUEUE
1409   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
140A   0000           01487                 nop                                                             ;Wait a cycle
  00000026            01488                 count = count + 1
140B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
140C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
140D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
140E   0080           01485                 movwf INDF                                              ;Save to QUEUE
140F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1410   0000           01487                 nop                                                             ;Wait a cycle
  00000027            01488                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1411   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1412   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1413   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1414   0080           01485                 movwf INDF                                              ;Save to QUEUE
1415   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1416   0000           01487                 nop                                                             ;Wait a cycle
  00000028            01488                 count = count + 1
1417   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1418   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1419   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
141A   0080           01485                 movwf INDF                                              ;Save to QUEUE
141B   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
141C   0000           01487                 nop                                                             ;Wait a cycle
  00000029            01488                 count = count + 1
141D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
141E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
141F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1420   0080           01485                 movwf INDF                                              ;Save to QUEUE
1421   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1422   0000           01487                 nop                                                             ;Wait a cycle
  0000002A            01488                 count = count + 1
1423   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1424   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1425   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1426   0080           01485                 movwf INDF                                              ;Save to QUEUE
1427   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1428   0000           01487                 nop                                                             ;Wait a cycle
  0000002B            01488                 count = count + 1
1429   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
142A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
142B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
142C   0080           01485                 movwf INDF                                              ;Save to QUEUE
142D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
142E   0000           01487                 nop                                                             ;Wait a cycle
  0000002C            01488                 count = count + 1
142F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1430   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1431   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1432   0080           01485                 movwf INDF                                              ;Save to QUEUE
1433   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1434   0000           01487                 nop                                                             ;Wait a cycle
  0000002D            01488                 count = count + 1
1435   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1436   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1437   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1438   0080           01485                 movwf INDF                                              ;Save to QUEUE
1439   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
143A   0000           01487                 nop                                                             ;Wait a cycle
  0000002E            01488                 count = count + 1
143B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
143C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
143D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
143E   0080           01485                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

143F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1440   0000           01487                 nop                                                             ;Wait a cycle
  0000002F            01488                 count = count + 1
1441   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1442   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1443   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1444   0080           01485                 movwf INDF                                              ;Save to QUEUE
1445   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1446   0000           01487                 nop                                                             ;Wait a cycle
  00000030            01488                 count = count + 1
1447   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1448   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1449   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
144A   0080           01485                 movwf INDF                                              ;Save to QUEUE
144B   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
144C   0000           01487                 nop                                                             ;Wait a cycle
  00000031            01488                 count = count + 1
144D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
144E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
144F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1450   0080           01485                 movwf INDF                                              ;Save to QUEUE
1451   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1452   0000           01487                 nop                                                             ;Wait a cycle
  00000032            01488                 count = count + 1
1453   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1454   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1455   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1456   0080           01485                 movwf INDF                                              ;Save to QUEUE
1457   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1458   0000           01487                 nop                                                             ;Wait a cycle
  00000033            01488                 count = count + 1
1459   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
145A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
145B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
145C   0080           01485                 movwf INDF                                              ;Save to QUEUE
145D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
145E   0000           01487                 nop                                                             ;Wait a cycle
  00000034            01488                 count = count + 1
145F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1460   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1461   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1462   0080           01485                 movwf INDF                                              ;Save to QUEUE
1463   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1464   0000           01487                 nop                                                             ;Wait a cycle
  00000035            01488                 count = count + 1
1465   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1466   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1467   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1468   0080           01485                 movwf INDF                                              ;Save to QUEUE
1469   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
146A   0000           01487                 nop                                                             ;Wait a cycle
  00000036            01488                 count = count + 1
146B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

146C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
146D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
146E   0080           01485                 movwf INDF                                              ;Save to QUEUE
146F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1470   0000           01487                 nop                                                             ;Wait a cycle
  00000037            01488                 count = count + 1
1471   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1472   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1473   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1474   0080           01485                 movwf INDF                                              ;Save to QUEUE
1475   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1476   0000           01487                 nop                                                             ;Wait a cycle
  00000038            01488                 count = count + 1
1477   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1478   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1479   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
147A   0080           01485                 movwf INDF                                              ;Save to QUEUE
147B   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
147C   0000           01487                 nop                                                             ;Wait a cycle
  00000039            01488                 count = count + 1
147D   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
147E   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
147F   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1480   0080           01485                 movwf INDF                                              ;Save to QUEUE
1481   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1482   0000           01487                 nop                                                             ;Wait a cycle
  0000003A            01488                 count = count + 1
1483   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1484   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1485   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1486   0080           01485                 movwf INDF                                              ;Save to QUEUE
1487   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1488   0000           01487                 nop                                                             ;Wait a cycle
  0000003B            01488                 count = count + 1
1489   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
148A   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
148B   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
148C   0080           01485                 movwf INDF                                              ;Save to QUEUE
148D   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
148E   0000           01487                 nop                                                             ;Wait a cycle
  0000003C            01488                 count = count + 1
148F   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1490   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1491   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1492   0080           01485                 movwf INDF                                              ;Save to QUEUE
1493   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
1494   0000           01487                 nop                                                             ;Wait a cycle
  0000003D            01488                 count = count + 1
1495   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
1496   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1497   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1498   0080           01485                 movwf INDF                                              ;Save to QUEUE
1499   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

149A   0000           01487                 nop                                                             ;Wait a cycle
  0000003E            01488                 count = count + 1
149B   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
149C   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
149D   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
149E   0080           01485                 movwf INDF                                              ;Save to QUEUE
149F   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
14A0   0000           01487                 nop                                                             ;Wait a cycle
  0000003F            01488                 count = count + 1
14A1   0808           01482                 movf ADC_DATAPORT, W                    ;Sample
14A2   1409           01483                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
14A3   1009           01484                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
14A4   0080           01485                 movwf INDF                                              ;Save to QUEUE
14A5   0384           01486                 decf FSR, F                                             ;Increment QUEUE pointer
14A6   0000           01487                 nop                                                             ;Wait a cycle
  00000040            01488                 count = count + 1
                      01489         endw
14A7   0808           01490         movf ADC_DATAPORT, W                            ;Last sample
14A8   1409           01491         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
14A9   118A           01492         bcf PCLATH, 3                                           ;insure correct program memory page
14AA   120A           01493         bcf PCLATH, 4
Message[306]: Crossing page boundary -- ensure page bits are set.
14AB   2921           01494         goto ADCShutdown
                      01495 
                      01496 ;Repetitive sample
                      01497 ;Equivalent sampling rate = 5 MHz with 20 MHz clock
                      01498 ;-----------------------------------------------------------------------------
14AC                  01499 SampleRep5M
14AC   3014           01500         movlw high SampleRep5MPickSt
14AD   008A           01501         movwf PCLATH
14AE   087A           01502         movf modetempb, w
14AF   0782           01503         addwf PCL, f
14B0                  01504 SampleRep5MPickSt
                      01505         MGOTO SampleRep5MStep1
                          M         if (SampleRep5MStep1 & (0x1000))
14B0   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep1 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
14B1   118A               M                 bcf PCLATH, 3
                          M         endif
14B2   2CBF               M         goto SampleRep5MStep1
                      01506         MGOTO SampleRep5MStep2
                          M         if (SampleRep5MStep2 & (0x1000))
14B3   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep2 & (0x800))
                          M                 bsf PCLATH, 3
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
14B4   118A               M                 bcf PCLATH, 3
                          M         endif
14B5   2DCF               M         goto SampleRep5MStep2
                      01507         MGOTO SampleRep5MStep3
                          M         if (SampleRep5MStep3 & (0x1000))
14B6   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep3 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
14B7   118A               M                 bcf PCLATH, 3
                          M         endif
14B8   2ED2               M         goto SampleRep5MStep3
                      01508         MGOTO SampleRep5MStep4
                          M         if (SampleRep5MStep4 & (0x1000))
14B9   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep4 & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
14BA   118A               M                 bcf PCLATH, 3
                          M         endif
14BB   2FD5               M         goto SampleRep5MStep4
                      01509         MGOTO SampleRep5MStep5
                          M         if (SampleRep5MStep5 & (0x1000))
14BC   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MStep5 & (0x800))
14BD   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
14BE   28D9               M         goto SampleRep5MStep5
14BF                  01510 SampleRep5MPickEn
14BF                  01511 SampleRep5MStep1
14BF   1009           01512         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
                      01513         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
14C0   3020               M     movlw BUFFERMIN
14C1   0084               M     movwf FSR
14C2   0000           01514         nop
  0000                01515         local count
  00000001            01516         count = 1
                      01517         while count < D'52'
14C3   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14C4   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14C5   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14C6   0080           01521                 movwf INDF                                              ;Save to QUEUE
14C7   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01523                 count = count + 1
14C8   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14C9   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14CA   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14CB   0080           01521                 movwf INDF                                              ;Save to QUEUE
14CC   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01523                 count = count + 1
14CD   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14CE   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14CF   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14D0   0080           01521                 movwf INDF                                              ;Save to QUEUE
14D1   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01523                 count = count + 1
14D2   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14D3   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14D4   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14D5   0080           01521                 movwf INDF                                              ;Save to QUEUE
14D6   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01523                 count = count + 1
14D7   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14D8   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14D9   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14DA   0080           01521                 movwf INDF                                              ;Save to QUEUE
14DB   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01523                 count = count + 1
14DC   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14DD   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14DE   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14DF   0080           01521                 movwf INDF                                              ;Save to QUEUE
14E0   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01523                 count = count + 1
14E1   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14E2   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14E3   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14E4   0080           01521                 movwf INDF                                              ;Save to QUEUE
14E5   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01523                 count = count + 1
14E6   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14E7   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14E8   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14E9   0080           01521                 movwf INDF                                              ;Save to QUEUE
14EA   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01523                 count = count + 1
14EB   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14EC   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14ED   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14EE   0080           01521                 movwf INDF                                              ;Save to QUEUE
14EF   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01523                 count = count + 1
14F0   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14F1   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14F2   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14F3   0080           01521                 movwf INDF                                              ;Save to QUEUE
14F4   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01523                 count = count + 1
14F5   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14F6   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14F7   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14F8   0080           01521                 movwf INDF                                              ;Save to QUEUE
14F9   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01523                 count = count + 1
14FA   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
14FB   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
14FC   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
14FD   0080           01521                 movwf INDF                                              ;Save to QUEUE
14FE   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01523                 count = count + 1
14FF   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1500   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1501   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1502   0080           01521                 movwf INDF                                              ;Save to QUEUE
1503   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01523                 count = count + 1
1504   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1505   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1506   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1507   0080           01521                 movwf INDF                                              ;Save to QUEUE
1508   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01523                 count = count + 1
1509   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
150A   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
150B   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
150C   0080           01521                 movwf INDF                                              ;Save to QUEUE
150D   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01523                 count = count + 1
150E   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
150F   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1510   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1511   0080           01521                 movwf INDF                                              ;Save to QUEUE
1512   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01523                 count = count + 1
1513   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1514   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1515   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1516   0080           01521                 movwf INDF                                              ;Save to QUEUE
1517   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01523                 count = count + 1
1518   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1519   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
151A   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
151B   0080           01521                 movwf INDF                                              ;Save to QUEUE
151C   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01523                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

151D   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
151E   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
151F   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1520   0080           01521                 movwf INDF                                              ;Save to QUEUE
1521   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01523                 count = count + 1
1522   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1523   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1524   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1525   0080           01521                 movwf INDF                                              ;Save to QUEUE
1526   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01523                 count = count + 1
1527   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1528   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1529   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
152A   0080           01521                 movwf INDF                                              ;Save to QUEUE
152B   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01523                 count = count + 1
152C   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
152D   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
152E   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
152F   0080           01521                 movwf INDF                                              ;Save to QUEUE
1530   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01523                 count = count + 1
1531   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1532   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1533   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1534   0080           01521                 movwf INDF                                              ;Save to QUEUE
1535   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01523                 count = count + 1
1536   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1537   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1538   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1539   0080           01521                 movwf INDF                                              ;Save to QUEUE
153A   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01523                 count = count + 1
153B   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
153C   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
153D   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
153E   0080           01521                 movwf INDF                                              ;Save to QUEUE
153F   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01523                 count = count + 1
1540   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1541   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1542   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1543   0080           01521                 movwf INDF                                              ;Save to QUEUE
1544   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01523                 count = count + 1
1545   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1546   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1547   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1548   0080           01521                 movwf INDF                                              ;Save to QUEUE
1549   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001C            01523                 count = count + 1
154A   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
154B   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
154C   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
154D   0080           01521                 movwf INDF                                              ;Save to QUEUE
154E   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01523                 count = count + 1
154F   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1550   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1551   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1552   0080           01521                 movwf INDF                                              ;Save to QUEUE
1553   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01523                 count = count + 1
1554   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1555   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1556   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1557   0080           01521                 movwf INDF                                              ;Save to QUEUE
1558   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01523                 count = count + 1
1559   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
155A   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
155B   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
155C   0080           01521                 movwf INDF                                              ;Save to QUEUE
155D   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01523                 count = count + 1
155E   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
155F   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1560   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1561   0080           01521                 movwf INDF                                              ;Save to QUEUE
1562   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01523                 count = count + 1
1563   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1564   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1565   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1566   0080           01521                 movwf INDF                                              ;Save to QUEUE
1567   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01523                 count = count + 1
1568   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1569   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
156A   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
156B   0080           01521                 movwf INDF                                              ;Save to QUEUE
156C   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01523                 count = count + 1
156D   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
156E   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
156F   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1570   0080           01521                 movwf INDF                                              ;Save to QUEUE
1571   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01523                 count = count + 1
1572   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1573   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1574   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1575   0080           01521                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1576   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01523                 count = count + 1
1577   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1578   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1579   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
157A   0080           01521                 movwf INDF                                              ;Save to QUEUE
157B   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01523                 count = count + 1
157C   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
157D   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
157E   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
157F   0080           01521                 movwf INDF                                              ;Save to QUEUE
1580   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000027            01523                 count = count + 1
1581   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1582   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1583   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1584   0080           01521                 movwf INDF                                              ;Save to QUEUE
1585   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000028            01523                 count = count + 1
1586   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1587   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1588   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1589   0080           01521                 movwf INDF                                              ;Save to QUEUE
158A   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000029            01523                 count = count + 1
158B   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
158C   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
158D   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
158E   0080           01521                 movwf INDF                                              ;Save to QUEUE
158F   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002A            01523                 count = count + 1
1590   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1591   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1592   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1593   0080           01521                 movwf INDF                                              ;Save to QUEUE
1594   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002B            01523                 count = count + 1
1595   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1596   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1597   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
1598   0080           01521                 movwf INDF                                              ;Save to QUEUE
1599   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002C            01523                 count = count + 1
159A   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
159B   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
159C   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
159D   0080           01521                 movwf INDF                                              ;Save to QUEUE
159E   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002D            01523                 count = count + 1
159F   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15A0   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15A1   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15A2   0080           01521                 movwf INDF                                              ;Save to QUEUE
15A3   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002E            01523                 count = count + 1
15A4   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15A5   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15A6   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15A7   0080           01521                 movwf INDF                                              ;Save to QUEUE
15A8   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  0000002F            01523                 count = count + 1
15A9   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15AA   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15AB   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15AC   0080           01521                 movwf INDF                                              ;Save to QUEUE
15AD   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000030            01523                 count = count + 1
15AE   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15AF   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15B0   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15B1   0080           01521                 movwf INDF                                              ;Save to QUEUE
15B2   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000031            01523                 count = count + 1
15B3   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15B4   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15B5   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15B6   0080           01521                 movwf INDF                                              ;Save to QUEUE
15B7   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000032            01523                 count = count + 1
15B8   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15B9   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15BA   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15BB   0080           01521                 movwf INDF                                              ;Save to QUEUE
15BC   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000033            01523                 count = count + 1
15BD   1409           01518                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15BE   1009           01519                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15BF   0808           01520                 movf ADC_DATAPORT, W                    ;Save Sample
15C0   0080           01521                 movwf INDF                                              ;Save to QUEUE
15C1   0A84           01522                 incf FSR, F                                             ;Increment QUEUE pointer
  00000034            01523                 count = count + 1
                      01524         endw
15C2   1409           01525         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
15C3   0808           01526         movf ADC_DATAPORT, W                            ;Sample
15C4                  01527 SampleRep5MEndA
15C4   0080           01528         movwf INDF
15C5   0A84           01529         incf FSR, F
15C6   2DC9           01530         goto SampleRep5MEndB
15C7                  01531 SampleRep5MEndC
15C7   0080           01532         movwf INDF
15C8   0384           01533         decf FSR, F
15C9                  01534 SampleRep5MEndB
                      01535         ADDLF D'3', modetempb, f
15C9   3003               M     movlw D'3'
15CA   07FA               M     addwf modetempb, f
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15CB   1486           01536         bsf ADC_PORT, CS
                      01537         MGOTO MainB
                          M         if (MainB   & (0x1000))
                          M                 bsf PCLATH, 4
                          M         else
15CC   120A               M                 bcf PCLATH, 4
                          M         endif
                          M         if (MainB   & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
15CD   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
15CE   2856               M         goto MainB
                      01538         
15CF                  01539 SampleRep5MStep2
15CF   0000           01540         nop
15D0   1009           01541         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
15D1   2DD2           01542         goto $ + 1
15D2   0000           01543         nop
  0000                01544         local count
  00000001            01545         count = 1
                      01546         while count < D'12'
15D3   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15D4   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15D5   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15D6   0080           01550                 movwf INDF                                              ;Save to QUEUE
15D7   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01552                 count = count + 1
15D8   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15D9   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15DA   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15DB   0080           01550                 movwf INDF                                              ;Save to QUEUE
15DC   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01552                 count = count + 1
15DD   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15DE   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15DF   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15E0   0080           01550                 movwf INDF                                              ;Save to QUEUE
15E1   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01552                 count = count + 1
15E2   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E3   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E4   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15E5   0080           01550                 movwf INDF                                              ;Save to QUEUE
15E6   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01552                 count = count + 1
15E7   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15E8   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15E9   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15EA   0080           01550                 movwf INDF                                              ;Save to QUEUE
15EB   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01552                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

15EC   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15ED   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15EE   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15EF   0080           01550                 movwf INDF                                              ;Save to QUEUE
15F0   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01552                 count = count + 1
15F1   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F2   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F3   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15F4   0080           01550                 movwf INDF                                              ;Save to QUEUE
15F5   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01552                 count = count + 1
15F6   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15F7   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15F8   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15F9   0080           01550                 movwf INDF                                              ;Save to QUEUE
15FA   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01552                 count = count + 1
15FB   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
15FC   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
15FD   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
15FE   0080           01550                 movwf INDF                                              ;Save to QUEUE
15FF   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01552                 count = count + 1
1600   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1601   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1602   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
1603   0080           01550                 movwf INDF                                              ;Save to QUEUE
1604   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01552                 count = count + 1
1605   1409           01547                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1606   1009           01548                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1607   0808           01549                 movf ADC_DATAPORT, W                    ;Save Sample
1608   0080           01550                 movwf INDF                                              ;Save to QUEUE
1609   0A84           01551                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01552                 count = count + 1
                      01553         endw
160A   1409           01554         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
160B   1009           01555         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
160C   0808           01556         movf ADC_DATAPORT, W                            ;Sample
160D   0080           01557         movwf INDF
160E   1784           01558         bsf FSR, 7                                                      ;goto bank 2
  00000001            01559         count = 1
                      01560         while count < D'39'
160F   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1610   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1611   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1612   0080           01564                 movwf INDF                                              ;Save to QUEUE
1613   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01566                 count = count + 1
1614   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1615   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1616   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1617   0080           01564                 movwf INDF                                              ;Save to QUEUE
1618   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01566                 count = count + 1
1619   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
161A   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
161B   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
161C   0080           01564                 movwf INDF                                              ;Save to QUEUE
161D   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01566                 count = count + 1
161E   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
161F   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1620   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1621   0080           01564                 movwf INDF                                              ;Save to QUEUE
1622   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01566                 count = count + 1
1623   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1624   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1625   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1626   0080           01564                 movwf INDF                                              ;Save to QUEUE
1627   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01566                 count = count + 1
1628   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1629   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
162A   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
162B   0080           01564                 movwf INDF                                              ;Save to QUEUE
162C   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01566                 count = count + 1
162D   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
162E   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
162F   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1630   0080           01564                 movwf INDF                                              ;Save to QUEUE
1631   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01566                 count = count + 1
1632   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1633   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1634   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1635   0080           01564                 movwf INDF                                              ;Save to QUEUE
1636   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01566                 count = count + 1
1637   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1638   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1639   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
163A   0080           01564                 movwf INDF                                              ;Save to QUEUE
163B   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01566                 count = count + 1
163C   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
163D   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
163E   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
163F   0080           01564                 movwf INDF                                              ;Save to QUEUE
1640   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01566                 count = count + 1
1641   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1642   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1643   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1644   0080           01564                 movwf INDF                                              ;Save to QUEUE
1645   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01566                 count = count + 1
1646   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1647   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1648   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1649   0080           01564                 movwf INDF                                              ;Save to QUEUE
164A   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01566                 count = count + 1
164B   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
164C   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
164D   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
164E   0080           01564                 movwf INDF                                              ;Save to QUEUE
164F   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01566                 count = count + 1
1650   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1651   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1652   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1653   0080           01564                 movwf INDF                                              ;Save to QUEUE
1654   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01566                 count = count + 1
1655   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1656   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1657   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1658   0080           01564                 movwf INDF                                              ;Save to QUEUE
1659   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01566                 count = count + 1
165A   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
165B   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
165C   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
165D   0080           01564                 movwf INDF                                              ;Save to QUEUE
165E   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01566                 count = count + 1
165F   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1660   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1661   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1662   0080           01564                 movwf INDF                                              ;Save to QUEUE
1663   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01566                 count = count + 1
1664   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1665   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1666   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1667   0080           01564                 movwf INDF                                              ;Save to QUEUE
1668   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01566                 count = count + 1
1669   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
166A   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
166B   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
166C   0080           01564                 movwf INDF                                              ;Save to QUEUE
166D   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01566                 count = count + 1
166E   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

166F   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1670   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1671   0080           01564                 movwf INDF                                              ;Save to QUEUE
1672   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01566                 count = count + 1
1673   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1674   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1675   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1676   0080           01564                 movwf INDF                                              ;Save to QUEUE
1677   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01566                 count = count + 1
1678   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1679   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
167A   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
167B   0080           01564                 movwf INDF                                              ;Save to QUEUE
167C   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01566                 count = count + 1
167D   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
167E   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
167F   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1680   0080           01564                 movwf INDF                                              ;Save to QUEUE
1681   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01566                 count = count + 1
1682   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1683   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1684   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1685   0080           01564                 movwf INDF                                              ;Save to QUEUE
1686   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01566                 count = count + 1
1687   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1688   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1689   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
168A   0080           01564                 movwf INDF                                              ;Save to QUEUE
168B   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01566                 count = count + 1
168C   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
168D   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
168E   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
168F   0080           01564                 movwf INDF                                              ;Save to QUEUE
1690   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01566                 count = count + 1
1691   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1692   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1693   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1694   0080           01564                 movwf INDF                                              ;Save to QUEUE
1695   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01566                 count = count + 1
1696   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1697   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1698   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
1699   0080           01564                 movwf INDF                                              ;Save to QUEUE
169A   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01566                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

169B   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
169C   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
169D   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
169E   0080           01564                 movwf INDF                                              ;Save to QUEUE
169F   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01566                 count = count + 1
16A0   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16A1   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16A2   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16A3   0080           01564                 movwf INDF                                              ;Save to QUEUE
16A4   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01566                 count = count + 1
16A5   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16A6   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16A7   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16A8   0080           01564                 movwf INDF                                              ;Save to QUEUE
16A9   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000020            01566                 count = count + 1
16AA   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16AB   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16AC   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16AD   0080           01564                 movwf INDF                                              ;Save to QUEUE
16AE   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000021            01566                 count = count + 1
16AF   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16B0   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16B1   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16B2   0080           01564                 movwf INDF                                              ;Save to QUEUE
16B3   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000022            01566                 count = count + 1
16B4   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16B5   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16B6   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16B7   0080           01564                 movwf INDF                                              ;Save to QUEUE
16B8   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000023            01566                 count = count + 1
16B9   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16BA   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16BB   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16BC   0080           01564                 movwf INDF                                              ;Save to QUEUE
16BD   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000024            01566                 count = count + 1
16BE   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16BF   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16C0   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16C1   0080           01564                 movwf INDF                                              ;Save to QUEUE
16C2   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000025            01566                 count = count + 1
16C3   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16C4   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16C5   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16C6   0080           01564                 movwf INDF                                              ;Save to QUEUE
16C7   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            01566                 count = count + 1
16C8   1409           01561                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16C9   1009           01562                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16CA   0808           01563                 movf ADC_DATAPORT, W                    ;Sample
16CB   0080           01564                 movwf INDF                                              ;Save to QUEUE
16CC   0384           01565                 decf FSR, F                                             ;Increment QUEUE pointer
  00000027            01566                 count = count + 1
                      01567         endw
16CD   1409           01568         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
16CE   0808           01569         movf ADC_DATAPORT, W                            ;Sample
                      01570         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
16CF   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
16D0   118A               M                 bcf PCLATH, 3
                          M         endif
16D1   2DC7               M         goto SampleRep5MEndC
                      01571         
16D2                  01572 SampleRep5MStep3
16D2   2ED3           01573         goto $ + 1
16D3   1009           01574         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
16D4   2ED5           01575         goto $ + 1
16D5   0000           01576         nop
  0000                01577         local count
  00000001            01578         count = 1
                      01579         while count < D'25'
16D6   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16D7   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16D8   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16D9   0080           01583                 movwf INDF                                              ;Save to QUEUE
16DA   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01585                 count = count + 1
16DB   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16DC   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16DD   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16DE   0080           01583                 movwf INDF                                              ;Save to QUEUE
16DF   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01585                 count = count + 1
16E0   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16E1   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16E2   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16E3   0080           01583                 movwf INDF                                              ;Save to QUEUE
16E4   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01585                 count = count + 1
16E5   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16E6   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16E7   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16E8   0080           01583                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

16E9   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01585                 count = count + 1
16EA   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16EB   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16EC   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16ED   0080           01583                 movwf INDF                                              ;Save to QUEUE
16EE   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01585                 count = count + 1
16EF   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16F0   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16F1   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16F2   0080           01583                 movwf INDF                                              ;Save to QUEUE
16F3   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01585                 count = count + 1
16F4   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16F5   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16F6   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16F7   0080           01583                 movwf INDF                                              ;Save to QUEUE
16F8   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01585                 count = count + 1
16F9   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16FA   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
16FB   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
16FC   0080           01583                 movwf INDF                                              ;Save to QUEUE
16FD   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01585                 count = count + 1
16FE   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
16FF   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1700   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1701   0080           01583                 movwf INDF                                              ;Save to QUEUE
1702   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01585                 count = count + 1
1703   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1704   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1705   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1706   0080           01583                 movwf INDF                                              ;Save to QUEUE
1707   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01585                 count = count + 1
1708   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1709   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
170A   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
170B   0080           01583                 movwf INDF                                              ;Save to QUEUE
170C   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01585                 count = count + 1
170D   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
170E   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
170F   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1710   0080           01583                 movwf INDF                                              ;Save to QUEUE
1711   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01585                 count = count + 1
1712   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1713   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1714   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1715   0080           01583                 movwf INDF                                              ;Save to QUEUE
1716   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01585                 count = count + 1
1717   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1718   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1719   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
171A   0080           01583                 movwf INDF                                              ;Save to QUEUE
171B   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01585                 count = count + 1
171C   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
171D   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
171E   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
171F   0080           01583                 movwf INDF                                              ;Save to QUEUE
1720   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000010            01585                 count = count + 1
1721   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1722   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1723   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1724   0080           01583                 movwf INDF                                              ;Save to QUEUE
1725   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000011            01585                 count = count + 1
1726   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1727   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1728   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1729   0080           01583                 movwf INDF                                              ;Save to QUEUE
172A   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000012            01585                 count = count + 1
172B   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
172C   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
172D   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
172E   0080           01583                 movwf INDF                                              ;Save to QUEUE
172F   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000013            01585                 count = count + 1
1730   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1731   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1732   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1733   0080           01583                 movwf INDF                                              ;Save to QUEUE
1734   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000014            01585                 count = count + 1
1735   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1736   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1737   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1738   0080           01583                 movwf INDF                                              ;Save to QUEUE
1739   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000015            01585                 count = count + 1
173A   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
173B   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
173C   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
173D   0080           01583                 movwf INDF                                              ;Save to QUEUE
173E   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000016            01585                 count = count + 1
173F   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1740   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1741   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1742   0080           01583                 movwf INDF                                              ;Save to QUEUE
1743   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000017            01585                 count = count + 1
1744   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1745   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1746   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
1747   0080           01583                 movwf INDF                                              ;Save to QUEUE
1748   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000018            01585                 count = count + 1
1749   1409           01580                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
174A   1009           01581                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
174B   0808           01582                 movf ADC_DATAPORT, W                    ;Sample
174C   0080           01583                 movwf INDF                                              ;Save to QUEUE
174D   0384           01584                 decf FSR, F                                             ;Increment QUEUE pointer
  00000019            01585                 count = count + 1
                      01586         endw
174E   1409           01587         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
174F   1009           01588         bcf ADC_CONTROLPORT, RDD
1750   0808           01589         movf ADC_DATAPORT, W                            ;Sample
1751   0080           01590         movwf INDF
1752   1783           01591         bsf STATUS, IRP                                         ;goto bank 4
  00000001            01592         count = 1
                      01593         while count < D'26'
1753   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1754   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1755   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1756   0080           01597                 movwf INDF                                              ;Save to QUEUE
1757   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01599                 count = count + 1
1758   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1759   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175A   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
175B   0080           01597                 movwf INDF                                              ;Save to QUEUE
175C   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01599                 count = count + 1
175D   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
175E   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
175F   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1760   0080           01597                 movwf INDF                                              ;Save to QUEUE
1761   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01599                 count = count + 1
1762   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1763   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1764   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1765   0080           01597                 movwf INDF                                              ;Save to QUEUE
1766   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01599                 count = count + 1
1767   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1768   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1769   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
176A   0080           01597                 movwf INDF                                              ;Save to QUEUE
176B   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            01599                 count = count + 1
176C   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
176D   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
176E   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
176F   0080           01597                 movwf INDF                                              ;Save to QUEUE
1770   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01599                 count = count + 1
1771   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1772   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1773   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1774   0080           01597                 movwf INDF                                              ;Save to QUEUE
1775   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01599                 count = count + 1
1776   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1777   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1778   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1779   0080           01597                 movwf INDF                                              ;Save to QUEUE
177A   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01599                 count = count + 1
177B   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
177C   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
177D   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
177E   0080           01597                 movwf INDF                                              ;Save to QUEUE
177F   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01599                 count = count + 1
1780   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1781   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1782   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1783   0080           01597                 movwf INDF                                              ;Save to QUEUE
1784   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01599                 count = count + 1
1785   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1786   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1787   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1788   0080           01597                 movwf INDF                                              ;Save to QUEUE
1789   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01599                 count = count + 1
178A   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
178B   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
178C   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
178D   0080           01597                 movwf INDF                                              ;Save to QUEUE
178E   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01599                 count = count + 1
178F   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1790   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1791   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1792   0080           01597                 movwf INDF                                              ;Save to QUEUE
1793   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01599                 count = count + 1
1794   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1795   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1796   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
1797   0080           01597                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1798   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01599                 count = count + 1
1799   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179A   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
179B   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
179C   0080           01597                 movwf INDF                                              ;Save to QUEUE
179D   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01599                 count = count + 1
179E   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
179F   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A0   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17A1   0080           01597                 movwf INDF                                              ;Save to QUEUE
17A2   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01599                 count = count + 1
17A3   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A4   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17A5   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17A6   0080           01597                 movwf INDF                                              ;Save to QUEUE
17A7   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01599                 count = count + 1
17A8   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17A9   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AA   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17AB   0080           01597                 movwf INDF                                              ;Save to QUEUE
17AC   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01599                 count = count + 1
17AD   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17AE   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17AF   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17B0   0080           01597                 movwf INDF                                              ;Save to QUEUE
17B1   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01599                 count = count + 1
17B2   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B3   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B4   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17B5   0080           01597                 movwf INDF                                              ;Save to QUEUE
17B6   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000015            01599                 count = count + 1
17B7   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17B8   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17B9   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17BA   0080           01597                 movwf INDF                                              ;Save to QUEUE
17BB   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01599                 count = count + 1
17BC   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17BD   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17BE   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17BF   0080           01597                 movwf INDF                                              ;Save to QUEUE
17C0   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01599                 count = count + 1
17C1   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C2   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C3   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17C4   0080           01597                 movwf INDF                                              ;Save to QUEUE
17C5   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01599                 count = count + 1
17C6   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17C7   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17C8   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17C9   0080           01597                 movwf INDF                                              ;Save to QUEUE
17CA   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01599                 count = count + 1
17CB   1409           01594                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17CC   1009           01595                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17CD   0808           01596                 movf ADC_DATAPORT, W                    ;Sample
17CE   0080           01597                 movwf INDF                                              ;Save to QUEUE
17CF   0A84           01598                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01599                 count = count + 1
                      01600         endw
17D0   1409           01601         bsf ADC_CONTROLPORT, RDD
17D1   0808           01602         movf ADC_DATAPORT, W                    ;Sample
                      01603         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
17D2   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
17D3   118A               M                 bcf PCLATH, 3
                          M         endif
17D4   2DC4               M         goto SampleRep5MEndA
                      01604         
17D5                  01605 SampleRep5MStep4
17D5   2FD6           01606         goto $ + 1
17D6   0000           01607         nop
17D7   1009           01608         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
17D8   2FD9           01609         goto $ + 1
17D9   0000           01610         nop
  0000                01611         local count
  00000001            01612         count = 1
                      01613         while count < D'38'
17DA   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17DB   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17DC   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17DD   0080           01617                 movwf INDF                                              ;Save to QUEUE
17DE   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000002            01619                 count = count + 1
17DF   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17E0   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E1   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17E2   0080           01617                 movwf INDF                                              ;Save to QUEUE
17E3   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000003            01619                 count = count + 1
17E4   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

17E5   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17E6   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17E7   0080           01617                 movwf INDF                                              ;Save to QUEUE
17E8   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000004            01619                 count = count + 1
17E9   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EA   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17EB   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17EC   0080           01617                 movwf INDF                                              ;Save to QUEUE
17ED   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000005            01619                 count = count + 1
17EE   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17EF   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F0   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17F1   0080           01617                 movwf INDF                                              ;Save to QUEUE
17F2   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000006            01619                 count = count + 1
17F3   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F4   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17F5   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17F6   0080           01617                 movwf INDF                                              ;Save to QUEUE
17F7   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000007            01619                 count = count + 1
17F8   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17F9   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FA   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
17FB   0080           01617                 movwf INDF                                              ;Save to QUEUE
17FC   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000008            01619                 count = count + 1
17FD   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
17FE   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
17FF   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1800   0080           01617                 movwf INDF                                              ;Save to QUEUE
1801   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000009            01619                 count = count + 1
1802   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1803   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1804   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1805   0080           01617                 movwf INDF                                              ;Save to QUEUE
1806   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01619                 count = count + 1
1807   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1808   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1809   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
180A   0080           01617                 movwf INDF                                              ;Save to QUEUE
180B   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01619                 count = count + 1
180C   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
180D   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
180E   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
180F   0080           01617                 movwf INDF                                              ;Save to QUEUE
1810   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01619                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1811   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1812   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1813   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1814   0080           01617                 movwf INDF                                              ;Save to QUEUE
1815   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01619                 count = count + 1
1816   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1817   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1818   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1819   0080           01617                 movwf INDF                                              ;Save to QUEUE
181A   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000E            01619                 count = count + 1
181B   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
181C   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
181D   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
181E   0080           01617                 movwf INDF                                              ;Save to QUEUE
181F   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000000F            01619                 count = count + 1
1820   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1821   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1822   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1823   0080           01617                 movwf INDF                                              ;Save to QUEUE
1824   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000010            01619                 count = count + 1
1825   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1826   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1827   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1828   0080           01617                 movwf INDF                                              ;Save to QUEUE
1829   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000011            01619                 count = count + 1
182A   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
182B   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
182C   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
182D   0080           01617                 movwf INDF                                              ;Save to QUEUE
182E   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000012            01619                 count = count + 1
182F   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1830   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1831   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1832   0080           01617                 movwf INDF                                              ;Save to QUEUE
1833   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000013            01619                 count = count + 1
1834   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1835   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1836   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1837   0080           01617                 movwf INDF                                              ;Save to QUEUE
1838   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000014            01619                 count = count + 1
1839   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183A   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
183B   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
183C   0080           01617                 movwf INDF                                              ;Save to QUEUE
183D   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000015            01619                 count = count + 1
183E   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
183F   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1840   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1841   0080           01617                 movwf INDF                                              ;Save to QUEUE
1842   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000016            01619                 count = count + 1
1843   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1844   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1845   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1846   0080           01617                 movwf INDF                                              ;Save to QUEUE
1847   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000017            01619                 count = count + 1
1848   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1849   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184A   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
184B   0080           01617                 movwf INDF                                              ;Save to QUEUE
184C   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000018            01619                 count = count + 1
184D   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
184E   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
184F   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1850   0080           01617                 movwf INDF                                              ;Save to QUEUE
1851   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000019            01619                 count = count + 1
1852   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1853   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1854   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1855   0080           01617                 movwf INDF                                              ;Save to QUEUE
1856   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001A            01619                 count = count + 1
1857   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1858   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1859   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
185A   0080           01617                 movwf INDF                                              ;Save to QUEUE
185B   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001B            01619                 count = count + 1
185C   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
185D   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
185E   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
185F   0080           01617                 movwf INDF                                              ;Save to QUEUE
1860   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001C            01619                 count = count + 1
1861   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1862   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1863   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1864   0080           01617                 movwf INDF                                              ;Save to QUEUE
1865   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001D            01619                 count = count + 1
1866   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1867   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1868   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1869   0080           01617                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

186A   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001E            01619                 count = count + 1
186B   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
186C   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
186D   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
186E   0080           01617                 movwf INDF                                              ;Save to QUEUE
186F   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  0000001F            01619                 count = count + 1
1870   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1871   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1872   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1873   0080           01617                 movwf INDF                                              ;Save to QUEUE
1874   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000020            01619                 count = count + 1
1875   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1876   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1877   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1878   0080           01617                 movwf INDF                                              ;Save to QUEUE
1879   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000021            01619                 count = count + 1
187A   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
187B   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
187C   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
187D   0080           01617                 movwf INDF                                              ;Save to QUEUE
187E   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000022            01619                 count = count + 1
187F   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1880   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1881   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1882   0080           01617                 movwf INDF                                              ;Save to QUEUE
1883   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000023            01619                 count = count + 1
1884   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1885   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1886   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1887   0080           01617                 movwf INDF                                              ;Save to QUEUE
1888   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000024            01619                 count = count + 1
1889   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188A   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
188B   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
188C   0080           01617                 movwf INDF                                              ;Save to QUEUE
188D   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000025            01619                 count = count + 1
188E   1409           01614                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
188F   1009           01615                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1890   0808           01616                 movf ADC_DATAPORT, W                    ;Sample
1891   0080           01617                 movwf INDF                                              ;Save to QUEUE
1892   0A84           01618                 incf FSR, F                                             ;Increment QUEUE pointer
  00000026            01619                 count = count + 1
                      01620         endw
1893   1409           01621         bsf ADC_CONTROLPORT, RDD
1894   1009           01622         bcf ADC_CONTROLPORT, RDD
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1895   0808           01623         movf ADC_DATAPORT, W                    ;Sample
1896   0080           01624         movwf INDF
1897   1384           01625         bcf FSR, 7                                                      ;goto bank 3
  00000001            01626         count = 1
                      01627         while count < D'13'
1898   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1899   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189A   0808           01630                 movf ADC_DATAPORT, W
189B   0080           01631                 movwf INDF                                              ;Save to QUEUE
189C   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000002            01633                 count = count + 1
189D   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
189E   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
189F   0808           01630                 movf ADC_DATAPORT, W
18A0   0080           01631                 movwf INDF                                              ;Save to QUEUE
18A1   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000003            01633                 count = count + 1
18A2   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A3   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A4   0808           01630                 movf ADC_DATAPORT, W
18A5   0080           01631                 movwf INDF                                              ;Save to QUEUE
18A6   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000004            01633                 count = count + 1
18A7   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18A8   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18A9   0808           01630                 movf ADC_DATAPORT, W
18AA   0080           01631                 movwf INDF                                              ;Save to QUEUE
18AB   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000005            01633                 count = count + 1
18AC   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18AD   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18AE   0808           01630                 movf ADC_DATAPORT, W
18AF   0080           01631                 movwf INDF                                              ;Save to QUEUE
18B0   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000006            01633                 count = count + 1
18B1   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B2   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B3   0808           01630                 movf ADC_DATAPORT, W
18B4   0080           01631                 movwf INDF                                              ;Save to QUEUE
18B5   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000007            01633                 count = count + 1
18B6   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18B7   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18B8   0808           01630                 movf ADC_DATAPORT, W
18B9   0080           01631                 movwf INDF                                              ;Save to QUEUE
18BA   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000008            01633                 count = count + 1
18BB   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18BC   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18BD   0808           01630                 movf ADC_DATAPORT, W
18BE   0080           01631                 movwf INDF                                              ;Save to QUEUE
18BF   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  00000009            01633                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18C0   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C1   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C2   0808           01630                 movf ADC_DATAPORT, W
18C3   0080           01631                 movwf INDF                                              ;Save to QUEUE
18C4   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000A            01633                 count = count + 1
18C5   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18C6   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18C7   0808           01630                 movf ADC_DATAPORT, W
18C8   0080           01631                 movwf INDF                                              ;Save to QUEUE
18C9   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000B            01633                 count = count + 1
18CA   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18CB   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18CC   0808           01630                 movf ADC_DATAPORT, W
18CD   0080           01631                 movwf INDF                                              ;Save to QUEUE
18CE   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000C            01633                 count = count + 1
18CF   1409           01628                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
18D0   1009           01629                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
18D1   0808           01630                 movf ADC_DATAPORT, W
18D2   0080           01631                 movwf INDF                                              ;Save to QUEUE
18D3   0384           01632                 decf FSR, F                                             ;Increment QUEUE pointer
  0000000D            01633                 count = count + 1
                      01634         endw
18D4   1409           01635         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
18D5   0808           01636         movf ADC_DATAPORT, W                            ;Sample
                      01637         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
18D6   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
18D7   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
18D8   2DC7               M         goto SampleRep5MEndC
                      01638 
18D9                  01639 SampleRep5MStep5
18D9   28DA           01640         goto $ + 1
                      01641         if (Sample1MhzEnd & (0x1000))
                      01642                 bsf PCLATH, 4
                      01643         else
18DA   120A           01644                 bcf PCLATH, 4
                      01645         endif
                      01646         if (Sample1MhzEnd & (0x800))
                      01647                 bsf PCLATH, 3
                      01648         else
18DB   118A           01649                 bcf PCLATH, 3
                      01650         endif
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18DC   1009           01651         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
18DD   0000           01652         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
18DE   2FA7           01653         goto Sample1MhzEnd
                      01654         
                      01655 ;Repetitive sample
                      01656 ;Equivalent sampling rate = 2.5 MHz with 20 MHz clock
                      01657 ;-----------------------------------------------------------------------------
18DF                  01658 SampleRep2M
18DF   3018           01659         movlw high SampleRep2MPickSt
18E0   008A           01660         movwf PCLATH
18E1   087A           01661         movf modetempb, w
18E2   0782           01662         addwf PCL, f
18E3                  01663 SampleRep2MPickSt
                      01664         MGOTO SampleRep2MStep1
                          M         if (SampleRep2MStep1 & (0x1000))
18E3   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep1 & (0x800))
18E4   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
18E5   28EC               M         goto SampleRep2MStep1
                      01665         MGOTO SampleRep2MStep2
                          M         if (SampleRep2MStep2 & (0x1000))
18E6   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep2 & (0x800))
18E7   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
18E8   2AF3               M         goto SampleRep2MStep2
                      01666         MGOTO SampleRep2MStep3
                          M         if (SampleRep2MStep3 & (0x1000))
18E9   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep2MStep3 & (0x800))
18EA   158A               M                 bsf PCLATH, 3
                          M         else
                          M                 bcf PCLATH, 3
                          M         endif
18EB   2CF4               M         goto SampleRep2MStep3
18EC                  01667 SampleRep2MPickEn
18EC                  01668 SampleRep2MStep1
18EC   1009           01669         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01670         MOVLF BUFFERMIN, FSR                            ;Initialize pointer
18ED   3020               M     movlw BUFFERMIN
18EE   0084               M     movwf FSR
18EF   0000           01671         nop
  0000                01672         local count
  00000001            01673         count = 1
                      01674         while count < BUFFERSIZE
18F0   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
18F1   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
18F2   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
18F3   0080           01678                 movwf INDF                                              ;Save to QUEUE
18F4   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
18F5   0000           01680                 nop
  00000002            01681                 count = count + 1
18F6   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
18F7   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
18F8   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
18F9   0080           01678                 movwf INDF                                              ;Save to QUEUE
18FA   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
18FB   0000           01680                 nop
  00000003            01681                 count = count + 1
18FC   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
18FD   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
18FE   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
18FF   0080           01678                 movwf INDF                                              ;Save to QUEUE
1900   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1901   0000           01680                 nop
  00000004            01681                 count = count + 1
1902   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1903   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1904   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1905   0080           01678                 movwf INDF                                              ;Save to QUEUE
1906   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1907   0000           01680                 nop
  00000005            01681                 count = count + 1
1908   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1909   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
190A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
190B   0080           01678                 movwf INDF                                              ;Save to QUEUE
190C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
190D   0000           01680                 nop
  00000006            01681                 count = count + 1
190E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
190F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1910   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1911   0080           01678                 movwf INDF                                              ;Save to QUEUE
1912   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1913   0000           01680                 nop
  00000007            01681                 count = count + 1
1914   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1915   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1916   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1917   0080           01678                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1918   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1919   0000           01680                 nop
  00000008            01681                 count = count + 1
191A   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
191B   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
191C   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
191D   0080           01678                 movwf INDF                                              ;Save to QUEUE
191E   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
191F   0000           01680                 nop
  00000009            01681                 count = count + 1
1920   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1921   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1922   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1923   0080           01678                 movwf INDF                                              ;Save to QUEUE
1924   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1925   0000           01680                 nop
  0000000A            01681                 count = count + 1
1926   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1927   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1928   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1929   0080           01678                 movwf INDF                                              ;Save to QUEUE
192A   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
192B   0000           01680                 nop
  0000000B            01681                 count = count + 1
192C   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
192D   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
192E   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
192F   0080           01678                 movwf INDF                                              ;Save to QUEUE
1930   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1931   0000           01680                 nop
  0000000C            01681                 count = count + 1
1932   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1933   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1934   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1935   0080           01678                 movwf INDF                                              ;Save to QUEUE
1936   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1937   0000           01680                 nop
  0000000D            01681                 count = count + 1
1938   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1939   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
193A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
193B   0080           01678                 movwf INDF                                              ;Save to QUEUE
193C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
193D   0000           01680                 nop
  0000000E            01681                 count = count + 1
193E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
193F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1940   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1941   0080           01678                 movwf INDF                                              ;Save to QUEUE
1942   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1943   0000           01680                 nop
  0000000F            01681                 count = count + 1
1944   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1945   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1946   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1947   0080           01678                 movwf INDF                                              ;Save to QUEUE
1948   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1949   0000           01680                 nop
  00000010            01681                 count = count + 1
194A   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
194B   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
194C   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
194D   0080           01678                 movwf INDF                                              ;Save to QUEUE
194E   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
194F   0000           01680                 nop
  00000011            01681                 count = count + 1
1950   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1951   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1952   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1953   0080           01678                 movwf INDF                                              ;Save to QUEUE
1954   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1955   0000           01680                 nop
  00000012            01681                 count = count + 1
1956   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1957   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1958   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1959   0080           01678                 movwf INDF                                              ;Save to QUEUE
195A   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
195B   0000           01680                 nop
  00000013            01681                 count = count + 1
195C   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
195D   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
195E   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
195F   0080           01678                 movwf INDF                                              ;Save to QUEUE
1960   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1961   0000           01680                 nop
  00000014            01681                 count = count + 1
1962   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1963   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1964   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1965   0080           01678                 movwf INDF                                              ;Save to QUEUE
1966   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1967   0000           01680                 nop
  00000015            01681                 count = count + 1
1968   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1969   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
196A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
196B   0080           01678                 movwf INDF                                              ;Save to QUEUE
196C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
196D   0000           01680                 nop
  00000016            01681                 count = count + 1
196E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
196F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1970   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1971   0080           01678                 movwf INDF                                              ;Save to QUEUE
1972   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1973   0000           01680                 nop
  00000017            01681                 count = count + 1
1974   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1975   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1976   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1977   0080           01678                 movwf INDF                                              ;Save to QUEUE
1978   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1979   0000           01680                 nop
  00000018            01681                 count = count + 1
197A   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
197B   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
197C   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
197D   0080           01678                 movwf INDF                                              ;Save to QUEUE
197E   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
197F   0000           01680                 nop
  00000019            01681                 count = count + 1
1980   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1981   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1982   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1983   0080           01678                 movwf INDF                                              ;Save to QUEUE
1984   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1985   0000           01680                 nop
  0000001A            01681                 count = count + 1
1986   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1987   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1988   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1989   0080           01678                 movwf INDF                                              ;Save to QUEUE
198A   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
198B   0000           01680                 nop
  0000001B            01681                 count = count + 1
198C   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
198D   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
198E   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
198F   0080           01678                 movwf INDF                                              ;Save to QUEUE
1990   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1991   0000           01680                 nop
  0000001C            01681                 count = count + 1
1992   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1993   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1994   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1995   0080           01678                 movwf INDF                                              ;Save to QUEUE
1996   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1997   0000           01680                 nop
  0000001D            01681                 count = count + 1
1998   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1999   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
199A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
199B   0080           01678                 movwf INDF                                              ;Save to QUEUE
199C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
199D   0000           01680                 nop
  0000001E            01681                 count = count + 1
199E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
199F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19A0   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19A1   0080           01678                 movwf INDF                                              ;Save to QUEUE
19A2   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19A3   0000           01680                 nop
  0000001F            01681                 count = count + 1
19A4   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19A5   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19A6   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19A7   0080           01678                 movwf INDF                                              ;Save to QUEUE
19A8   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19A9   0000           01680                 nop
  00000020            01681                 count = count + 1
19AA   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19AB   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19AC   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19AD   0080           01678                 movwf INDF                                              ;Save to QUEUE
19AE   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19AF   0000           01680                 nop
  00000021            01681                 count = count + 1
19B0   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19B1   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19B2   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19B3   0080           01678                 movwf INDF                                              ;Save to QUEUE
19B4   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19B5   0000           01680                 nop
  00000022            01681                 count = count + 1
19B6   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19B7   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19B8   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19B9   0080           01678                 movwf INDF                                              ;Save to QUEUE
19BA   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19BB   0000           01680                 nop
  00000023            01681                 count = count + 1
19BC   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19BD   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19BE   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19BF   0080           01678                 movwf INDF                                              ;Save to QUEUE
19C0   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19C1   0000           01680                 nop
  00000024            01681                 count = count + 1
19C2   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19C3   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19C4   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19C5   0080           01678                 movwf INDF                                              ;Save to QUEUE
19C6   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19C7   0000           01680                 nop
  00000025            01681                 count = count + 1
19C8   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19C9   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19CA   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19CB   0080           01678                 movwf INDF                                              ;Save to QUEUE
19CC   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19CD   0000           01680                 nop
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            01681                 count = count + 1
19CE   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19CF   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19D0   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19D1   0080           01678                 movwf INDF                                              ;Save to QUEUE
19D2   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19D3   0000           01680                 nop
  00000027            01681                 count = count + 1
19D4   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19D5   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19D6   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19D7   0080           01678                 movwf INDF                                              ;Save to QUEUE
19D8   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19D9   0000           01680                 nop
  00000028            01681                 count = count + 1
19DA   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19DB   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19DC   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19DD   0080           01678                 movwf INDF                                              ;Save to QUEUE
19DE   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19DF   0000           01680                 nop
  00000029            01681                 count = count + 1
19E0   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19E1   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19E2   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19E3   0080           01678                 movwf INDF                                              ;Save to QUEUE
19E4   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19E5   0000           01680                 nop
  0000002A            01681                 count = count + 1
19E6   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19E7   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19E8   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19E9   0080           01678                 movwf INDF                                              ;Save to QUEUE
19EA   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19EB   0000           01680                 nop
  0000002B            01681                 count = count + 1
19EC   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19ED   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19EE   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19EF   0080           01678                 movwf INDF                                              ;Save to QUEUE
19F0   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19F1   0000           01680                 nop
  0000002C            01681                 count = count + 1
19F2   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19F3   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19F4   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
19F5   0080           01678                 movwf INDF                                              ;Save to QUEUE
19F6   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19F7   0000           01680                 nop
  0000002D            01681                 count = count + 1
19F8   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19F9   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
19FA   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19FB   0080           01678                 movwf INDF                                              ;Save to QUEUE
19FC   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
19FD   0000           01680                 nop
  0000002E            01681                 count = count + 1
19FE   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
19FF   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A00   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A01   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A02   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A03   0000           01680                 nop
  0000002F            01681                 count = count + 1
1A04   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A05   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A06   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A07   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A08   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A09   0000           01680                 nop
  00000030            01681                 count = count + 1
1A0A   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A0B   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A0C   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A0D   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A0E   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A0F   0000           01680                 nop
  00000031            01681                 count = count + 1
1A10   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A11   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A12   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A13   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A14   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A15   0000           01680                 nop
  00000032            01681                 count = count + 1
1A16   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A17   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A18   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A19   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A1A   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A1B   0000           01680                 nop
  00000033            01681                 count = count + 1
1A1C   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A1D   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A1E   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A1F   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A20   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A21   0000           01680                 nop
  00000034            01681                 count = count + 1
1A22   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A23   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A24   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A25   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A26   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A27   0000           01680                 nop
  00000035            01681                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A28   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A29   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A2A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A2B   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A2C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A2D   0000           01680                 nop
  00000036            01681                 count = count + 1
1A2E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A2F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A30   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A31   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A32   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A33   0000           01680                 nop
  00000037            01681                 count = count + 1
1A34   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A35   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A36   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A37   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A38   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A39   0000           01680                 nop
  00000038            01681                 count = count + 1
1A3A   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A3B   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A3C   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A3D   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A3E   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A3F   0000           01680                 nop
  00000039            01681                 count = count + 1
1A40   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A41   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A42   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A43   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A44   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A45   0000           01680                 nop
  0000003A            01681                 count = count + 1
1A46   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A47   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A48   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A49   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A4A   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A4B   0000           01680                 nop
  0000003B            01681                 count = count + 1
1A4C   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A4D   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A4E   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A4F   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A50   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A51   0000           01680                 nop
  0000003C            01681                 count = count + 1
1A52   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A53   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A54   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A55   0080           01678                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A56   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A57   0000           01680                 nop
  0000003D            01681                 count = count + 1
1A58   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A59   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A5A   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A5B   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A5C   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A5D   0000           01680                 nop
  0000003E            01681                 count = count + 1
1A5E   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A5F   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A60   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A61   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A62   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A63   0000           01680                 nop
  0000003F            01681                 count = count + 1
1A64   0808           01675                 movf ADC_DATAPORT, W                    ;Save Sample
1A65   1409           01676                 bsf ADC_CONTROLPORT, RDD                ;Latch Conversion into SPP
1A66   1009           01677                 bcf ADC_CONTROLPORT, RDD                ;Start next conversion
1A67   0080           01678                 movwf INDF                                              ;Save to QUEUE
1A68   0A84           01679                 incf FSR, F                                             ;Increment QUEUE pointer
1A69   0000           01680                 nop
  00000040            01681                 count = count + 1
                      01682         endw
1A6A   0808           01683         movf ADC_DATAPORT, W
1A6B   1409           01684         bsf ADC_CONTROLPORT, RDD                        ;Latch Conversion into SPP
1A6C   1009           01685         bcf ADC_CONTROLPORT, RDD                        ;Start next conversion
1A6D   0080           01686         movwf INDF
1A6E   1784           01687         bsf FSR, 7                                                      ;goto bank 2
1A6F   0000           01688         nop
  00000001            01689         count = 1
                      01690         while count < D'22'
1A70   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A71   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A72   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A73   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A74   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A75   0000           01696                 nop
  00000002            01697                 count = count + 1
1A76   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A77   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A78   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A79   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A7A   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A7B   0000           01696                 nop
  00000003            01697                 count = count + 1
1A7C   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A7D   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A7E   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A7F   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A80   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A81   0000           01696                 nop
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000004            01697                 count = count + 1
1A82   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A83   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A84   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A85   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A86   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A87   0000           01696                 nop
  00000005            01697                 count = count + 1
1A88   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A89   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A8A   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A8B   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A8C   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A8D   0000           01696                 nop
  00000006            01697                 count = count + 1
1A8E   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A8F   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A90   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A91   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A92   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A93   0000           01696                 nop
  00000007            01697                 count = count + 1
1A94   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A95   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A96   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A97   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A98   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A99   0000           01696                 nop
  00000008            01697                 count = count + 1
1A9A   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1A9B   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1A9C   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1A9D   0080           01694                 movwf INDF                                              ;Save to QUEUE
1A9E   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1A9F   0000           01696                 nop
  00000009            01697                 count = count + 1
1AA0   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AA1   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA2   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA3   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AA4   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AA5   0000           01696                 nop
  0000000A            01697                 count = count + 1
1AA6   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AA7   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AA8   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AA9   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AAA   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AAB   0000           01696                 nop
  0000000B            01697                 count = count + 1
1AAC   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AAD   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AAE   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AAF   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AB0   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AB1   0000           01696                 nop
  0000000C            01697                 count = count + 1
1AB2   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AB3   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AB4   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AB5   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AB6   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AB7   0000           01696                 nop
  0000000D            01697                 count = count + 1
1AB8   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AB9   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ABA   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ABB   0080           01694                 movwf INDF                                              ;Save to QUEUE
1ABC   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1ABD   0000           01696                 nop
  0000000E            01697                 count = count + 1
1ABE   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1ABF   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC0   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC1   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AC2   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AC3   0000           01696                 nop
  0000000F            01697                 count = count + 1
1AC4   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AC5   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AC6   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AC7   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AC8   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AC9   0000           01696                 nop
  00000010            01697                 count = count + 1
1ACA   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1ACB   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ACC   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ACD   0080           01694                 movwf INDF                                              ;Save to QUEUE
1ACE   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1ACF   0000           01696                 nop
  00000011            01697                 count = count + 1
1AD0   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AD1   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AD2   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AD3   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AD4   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AD5   0000           01696                 nop
  00000012            01697                 count = count + 1
1AD6   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AD7   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AD8   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AD9   0080           01694                 movwf INDF                                              ;Save to QUEUE
1ADA   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1ADB   0000           01696                 nop
  00000013            01697                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1ADC   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1ADD   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1ADE   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1ADF   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AE0   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AE1   0000           01696                 nop
  00000014            01697                 count = count + 1
1AE2   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AE3   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AE4   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AE5   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AE6   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AE7   0000           01696                 nop
  00000015            01697                 count = count + 1
1AE8   0808           01691                 movf ADC_DATAPORT, W                    ;Sample
1AE9   1409           01692                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AEA   1009           01693                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AEB   0080           01694                 movwf INDF                                              ;Save to QUEUE
1AEC   0384           01695                 decf FSR, F                                             ;Increment QUEUE pointer
1AED   0000           01696                 nop
  00000016            01697                 count = count + 1
                      01698         endw
1AEE   0808           01699         movf ADC_DATAPORT, W                            ;Sample
1AEF   1409           01700         bsf ADC_CONTROLPORT, RDD                        ;Stop conversion
                      01701         MGOTO SampleRep5MEndC
                          M         if (SampleRep5MEndC & (0x1000))
1AF0   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndC & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1AF1   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1AF2   2DC7               M         goto SampleRep5MEndC
                      01702 
1AF3                  01703 SampleRep2MStep2
1AF3   2AF4           01704         goto $ + 1                                                      ;Delay 2
1AF4   1009           01705         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1AF5   2AF6           01706         goto $ + 1                                                      ;Wait three cycles
1AF6   0000           01707         nop
  0000                01708         local count
  00000001            01709         count = 1
                      01710         while count < D'42'
1AF7   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1AF8   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AF9   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1AFA   0080           01714                 movwf INDF                                              ;Save to QUEUE
1AFB   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1AFC   0000           01716                 nop
  00000002            01717                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AFD   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1AFE   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1AFF   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B00   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B01   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B02   0000           01716                 nop
  00000003            01717                 count = count + 1
1B03   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B04   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B05   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B06   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B07   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B08   0000           01716                 nop
  00000004            01717                 count = count + 1
1B09   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B0A   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B0B   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B0C   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B0D   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B0E   0000           01716                 nop
  00000005            01717                 count = count + 1
1B0F   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B10   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B11   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B12   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B13   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B14   0000           01716                 nop
  00000006            01717                 count = count + 1
1B15   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B16   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B17   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B18   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B19   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B1A   0000           01716                 nop
  00000007            01717                 count = count + 1
1B1B   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B1C   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B1D   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B1E   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B1F   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B20   0000           01716                 nop
  00000008            01717                 count = count + 1
1B21   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B22   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B23   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B24   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B25   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B26   0000           01716                 nop
  00000009            01717                 count = count + 1
1B27   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B28   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B29   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B2A   0080           01714                 movwf INDF                                              ;Save to QUEUE
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B2B   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B2C   0000           01716                 nop
  0000000A            01717                 count = count + 1
1B2D   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B2E   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B2F   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B30   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B31   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B32   0000           01716                 nop
  0000000B            01717                 count = count + 1
1B33   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B34   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B35   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B36   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B37   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B38   0000           01716                 nop
  0000000C            01717                 count = count + 1
1B39   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B3A   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B3B   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B3C   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B3D   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B3E   0000           01716                 nop
  0000000D            01717                 count = count + 1
1B3F   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B40   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B41   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B42   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B43   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B44   0000           01716                 nop
  0000000E            01717                 count = count + 1
1B45   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B46   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B47   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B48   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B49   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B4A   0000           01716                 nop
  0000000F            01717                 count = count + 1
1B4B   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B4C   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B4D   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B4E   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B4F   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B50   0000           01716                 nop
  00000010            01717                 count = count + 1
1B51   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B52   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B53   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B54   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B55   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B56   0000           01716                 nop
  00000011            01717                 count = count + 1
1B57   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B58   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B59   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B5A   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B5B   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B5C   0000           01716                 nop
  00000012            01717                 count = count + 1
1B5D   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B5E   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B5F   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B60   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B61   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B62   0000           01716                 nop
  00000013            01717                 count = count + 1
1B63   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B64   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B65   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B66   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B67   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B68   0000           01716                 nop
  00000014            01717                 count = count + 1
1B69   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B6A   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B6B   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B6C   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B6D   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B6E   0000           01716                 nop
  00000015            01717                 count = count + 1
1B6F   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B70   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B71   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B72   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B73   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B74   0000           01716                 nop
  00000016            01717                 count = count + 1
1B75   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B76   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B77   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B78   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B79   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B7A   0000           01716                 nop
  00000017            01717                 count = count + 1
1B7B   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B7C   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B7D   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B7E   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B7F   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B80   0000           01716                 nop
  00000018            01717                 count = count + 1
1B81   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B82   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B83   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B84   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B85   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B86   0000           01716                 nop
  00000019            01717                 count = count + 1
1B87   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B88   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B89   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B8A   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B8B   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B8C   0000           01716                 nop
  0000001A            01717                 count = count + 1
1B8D   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B8E   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B8F   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B90   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B91   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B92   0000           01716                 nop
  0000001B            01717                 count = count + 1
1B93   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B94   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B95   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B96   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B97   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B98   0000           01716                 nop
  0000001C            01717                 count = count + 1
1B99   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1B9A   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1B9B   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1B9C   0080           01714                 movwf INDF                                              ;Save to QUEUE
1B9D   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1B9E   0000           01716                 nop
  0000001D            01717                 count = count + 1
1B9F   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BA0   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA1   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA2   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BA3   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BA4   0000           01716                 nop
  0000001E            01717                 count = count + 1
1BA5   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BA6   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BA7   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BA8   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BA9   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BAA   0000           01716                 nop
  0000001F            01717                 count = count + 1
1BAB   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BAC   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BAD   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BAE   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BAF   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BB0   0000           01716                 nop
  00000020            01717                 count = count + 1
1BB1   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BB2   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BB3   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BB4   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BB5   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BB6   0000           01716                 nop
  00000021            01717                 count = count + 1
1BB7   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BB8   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BB9   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BBA   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BBB   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BBC   0000           01716                 nop
  00000022            01717                 count = count + 1
1BBD   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BBE   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BBF   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC0   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BC1   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BC2   0000           01716                 nop
  00000023            01717                 count = count + 1
1BC3   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BC4   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BC5   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BC6   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BC7   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BC8   0000           01716                 nop
  00000024            01717                 count = count + 1
1BC9   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BCA   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BCB   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BCC   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BCD   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BCE   0000           01716                 nop
  00000025            01717                 count = count + 1
1BCF   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BD0   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD1   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD2   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BD3   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BD4   0000           01716                 nop
  00000026            01717                 count = count + 1
1BD5   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BD6   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BD7   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BD8   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BD9   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BDA   0000           01716                 nop
  00000027            01717                 count = count + 1
1BDB   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BDC   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BDD   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BDE   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BDF   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BE0   0000           01716                 nop
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000028            01717                 count = count + 1
1BE1   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BE2   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE3   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BE4   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BE5   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BE6   0000           01716                 nop
  00000029            01717                 count = count + 1
1BE7   0808           01711                 movf ADC_DATAPORT, W                    ;Sample
1BE8   1409           01712                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BE9   1009           01713                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BEA   0080           01714                 movwf INDF                                              ;Save to QUEUE
1BEB   0384           01715                 decf FSR, F                                             ;Increment QUEUE pointer
1BEC   0000           01716                 nop
  0000002A            01717                 count = count + 1
                      01718         endw
1BED   0808           01719         movf ADC_DATAPORT, W
1BEE   1409           01720         bsf ADC_CONTROLPORT, RDD
1BEF   1009           01721         bcf ADC_CONTROLPORT, RDD
1BF0   0080           01722         movwf INDF
1BF1   1783           01723         bsf STATUS, IRP                                         ;goto bank 4
1BF2   0000           01724         nop
  00000001            01725         count = 1
                      01726         while count < D'43'
1BF3   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1BF4   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BF5   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BF6   0080           01730                 movwf INDF                                              ;Save to QUEUE
1BF7   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1BF8   0000           01732                 nop
  00000002            01733                 count = count + 1
1BF9   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1BFA   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1BFB   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1BFC   0080           01730                 movwf INDF                                              ;Save to QUEUE
1BFD   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1BFE   0000           01732                 nop
  00000003            01733                 count = count + 1
1BFF   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C00   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C01   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C02   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C03   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C04   0000           01732                 nop
  00000004            01733                 count = count + 1
1C05   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C06   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C07   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C08   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C09   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C0A   0000           01732                 nop
  00000005            01733                 count = count + 1
1C0B   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C0C   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C0D   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C0E   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C0F   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C10   0000           01732                 nop
  00000006            01733                 count = count + 1
1C11   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C12   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C13   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C14   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C15   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C16   0000           01732                 nop
  00000007            01733                 count = count + 1
1C17   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C18   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C19   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C1A   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C1B   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C1C   0000           01732                 nop
  00000008            01733                 count = count + 1
1C1D   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C1E   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C1F   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C20   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C21   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C22   0000           01732                 nop
  00000009            01733                 count = count + 1
1C23   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C24   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C25   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C26   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C27   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C28   0000           01732                 nop
  0000000A            01733                 count = count + 1
1C29   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C2A   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C2B   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C2C   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C2D   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C2E   0000           01732                 nop
  0000000B            01733                 count = count + 1
1C2F   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C30   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C31   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C32   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C33   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C34   0000           01732                 nop
  0000000C            01733                 count = count + 1
1C35   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C36   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C37   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C38   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C39   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C3A   0000           01732                 nop
  0000000D            01733                 count = count + 1
1C3B   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C3C   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C3D   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C3E   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C3F   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C40   0000           01732                 nop
  0000000E            01733                 count = count + 1
1C41   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C42   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C43   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C44   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C45   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C46   0000           01732                 nop
  0000000F            01733                 count = count + 1
1C47   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C48   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C49   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C4A   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C4B   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C4C   0000           01732                 nop
  00000010            01733                 count = count + 1
1C4D   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C4E   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C4F   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C50   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C51   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C52   0000           01732                 nop
  00000011            01733                 count = count + 1
1C53   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C54   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C55   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C56   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C57   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C58   0000           01732                 nop
  00000012            01733                 count = count + 1
1C59   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C5A   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C5B   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C5C   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C5D   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C5E   0000           01732                 nop
  00000013            01733                 count = count + 1
1C5F   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C60   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C61   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C62   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C63   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C64   0000           01732                 nop
  00000014            01733                 count = count + 1
1C65   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C66   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C67   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C68   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C69   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C6A   0000           01732                 nop
  00000015            01733                 count = count + 1
1C6B   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C6C   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C6D   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C6E   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C6F   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C70   0000           01732                 nop
  00000016            01733                 count = count + 1
1C71   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C72   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C73   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C74   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C75   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C76   0000           01732                 nop
  00000017            01733                 count = count + 1
1C77   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C78   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C79   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C7A   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C7B   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C7C   0000           01732                 nop
  00000018            01733                 count = count + 1
1C7D   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C7E   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C7F   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C80   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C81   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C82   0000           01732                 nop
  00000019            01733                 count = count + 1
1C83   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C84   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C85   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C86   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C87   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C88   0000           01732                 nop
  0000001A            01733                 count = count + 1
1C89   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C8A   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C8B   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C8C   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C8D   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C8E   0000           01732                 nop
  0000001B            01733                 count = count + 1
1C8F   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C90   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C91   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C92   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C93   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C94   0000           01732                 nop
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001C            01733                 count = count + 1
1C95   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C96   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C97   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C98   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C99   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1C9A   0000           01732                 nop
  0000001D            01733                 count = count + 1
1C9B   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1C9C   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1C9D   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1C9E   0080           01730                 movwf INDF                                              ;Save to QUEUE
1C9F   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CA0   0000           01732                 nop
  0000001E            01733                 count = count + 1
1CA1   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CA2   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA3   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CA4   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CA5   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CA6   0000           01732                 nop
  0000001F            01733                 count = count + 1
1CA7   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CA8   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CA9   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CAA   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CAB   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CAC   0000           01732                 nop
  00000020            01733                 count = count + 1
1CAD   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CAE   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CAF   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB0   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CB1   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CB2   0000           01732                 nop
  00000021            01733                 count = count + 1
1CB3   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CB4   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CB5   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CB6   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CB7   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CB8   0000           01732                 nop
  00000022            01733                 count = count + 1
1CB9   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CBA   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CBB   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CBC   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CBD   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CBE   0000           01732                 nop
  00000023            01733                 count = count + 1
1CBF   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CC0   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC1   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CC2   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CC3   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CC4   0000           01732                 nop
  00000024            01733                 count = count + 1
1CC5   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CC6   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CC7   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CC8   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CC9   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CCA   0000           01732                 nop
  00000025            01733                 count = count + 1
1CCB   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CCC   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CCD   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CCE   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CCF   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CD0   0000           01732                 nop
  00000026            01733                 count = count + 1
1CD1   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CD2   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD3   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CD4   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CD5   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CD6   0000           01732                 nop
  00000027            01733                 count = count + 1
1CD7   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CD8   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CD9   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CDA   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CDB   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CDC   0000           01732                 nop
  00000028            01733                 count = count + 1
1CDD   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CDE   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CDF   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE0   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CE1   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CE2   0000           01732                 nop
  00000029            01733                 count = count + 1
1CE3   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CE4   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CE5   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CE6   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CE7   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CE8   0000           01732                 nop
  0000002A            01733                 count = count + 1
1CE9   0808           01727                 movf ADC_DATAPORT, W                    ;Sample
1CEA   1409           01728                 bsf ADC_CONTROLPORT, RDD                ;Stop conversion
1CEB   1009           01729                 bcf ADC_CONTROLPORT, RDD                ;Begin next conversion
1CEC   0080           01730                 movwf INDF                                              ;Save to QUEUE
1CED   0A84           01731                 incf FSR, F                                             ;Increment QUEUE pointer
1CEE   0000           01732                 nop
  0000002B            01733                 count = count + 1
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01734         endw
1CEF   0808           01735         movf ADC_DATAPORT, W                    ;Sample
1CF0   1409           01736         bsf ADC_CONTROLPORT, RDD
                      01737         MGOTO SampleRep5MEndA
                          M         if (SampleRep5MEndA & (0x1000))
1CF1   160A               M                 bsf PCLATH, 4
                          M         else
                          M                 bcf PCLATH, 4
                          M         endif
                          M         if (SampleRep5MEndA & (0x800))
                          M                 bsf PCLATH, 3
                          M         else
1CF2   118A               M                 bcf PCLATH, 3
                          M         endif
Message[306]: Crossing page boundary -- ensure page bits are set.
1CF3   2DC4               M         goto SampleRep5MEndA
                      01738 
1CF4                  01739 SampleRep2MStep3
1CF4   2CF5           01740         goto $ + 1                                                      ;Delay 4
                      01741         if (Sample833kEnd & (0x1000))
1CF5   160A           01742                 bsf PCLATH, 4
                      01743         else
                      01744                 bcf PCLATH, 4
                      01745         endif
                      01746         if (Sample833kEnd & (0x800))
                      01747                 bsf PCLATH, 3
                      01748         else
1CF6   118A           01749                 bcf PCLATH, 3
                      01750         endif
1CF7   1009           01751         bcf ADC_CONTROLPORT, RDD                        ;Begin Conversion
1CF8   0000           01752         nop
Message[306]: Crossing page boundary -- ensure page bits are set.
1CF9   2AAF           01753         goto Sample833kEnd
                      01754         
                      01755 ;=============================================================================
                      01756 end             ;end of program
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 199


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACDCMODE                          00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCShutdown                       00000121
ADC_CONTROLPORT                   00000009
ADC_DATAPORT                      00000008
ADC_PORT                          00000006
ADDEN                             00000003
ADDFF                             
ADDFF_TW                          
ADDLF                             
ADDLF_TW                          
ADDR0                             00000001
ADDR1                             00000002
ADDR2                             00000003
ADDWPC                            
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANALOG_ACDC                       00000007
ANALOG_GAIN                       00000005
ANALOG_SEL                        00000007
ANDFF                             
ANDFF_TW                          
ANDLF                             
ANDLF_TW                          
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BAUDCTL                           00000187
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 200


SYMBOL TABLE
  LABEL                             VALUE 

BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BNKSEL                            
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BUFFERMAX                         0000005F
BUFFERMIN                         00000020
BUFFERSIZE                        00000040
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 201


SYMBOL TABLE
  LABEL                             VALUE 

CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CH1SEL                            00000001
CH1SELG                           00000004
CH2SEL                            00000002
CH2SELG                           00000005
CHANNELBIT                        00000004
CHANNELCONFSEND                   
CHANNELCONFSTORE                  
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CLOCKFREQBIT                      00000005
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CONFRECEIVE                       
CONFSEND                          
CREN                              00000004
CS                                00000001
CSRC                              00000007
CURRENTBANK                       00000000
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             00000116
DelayFive                         0000030C
DelayFour                         0000030D
DelayLoop                         00000117
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 202


SYMBOL TABLE
  LABEL                             VALUE 

DelaySeven                        0000030A
DelaySix                          0000030B
DelayTwo                          0000030E
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREQMODEBIT0                      00000000
FREQMODEBIT1                      00000001
FREQMODEBIT2                      00000002
FREQMODEBIT3                      00000003
FREQSAMPLE1M                      00000000
FREQSAMPLE250K                    00000004
FREQSAMPLE417K                    00000003
FREQSAMPLE625K                    00000002
FREQSAMPLE833K                    00000001
FREQSAMPLEDELAYED                 00000005
FREQSAMPLEREP2M                   00000007
FREQSAMPLEREP5M                   00000006
FREQSAMPLEXY192K                  0000000A
FREQSAMPLEXY250K                  00000009
FREQSAMPLEXY417K                  00000008
FREQSAMPLEXYDELAYED               0000000B
FSR                               00000004
FVREN                             00000000
GAIN1                             00000000
GAIN5                             00000001
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GetByte                           00000100
GetByteSerial                     00000100
GetByteSerialB                    00000102
GetByteSerialC                    00000106
GetByteSerialD                    0000010A
GetByteSerialE                    0000010E
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 203


SYMBOL TABLE
  LABEL                             VALUE 

I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IORFF                             
IORFF_TW                          
IORLF                             
IORLF_TW                          
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Initial                           00000032
IntHandler                        00000004
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MGOTO                             
MOVFF                             
MOVFF_TW                          
MOVLF                             
MOVLF_TW                          
MSK                               00000093
Main                              00000054
MainB                             00000056
MainSelect                        0000000D
MainWTrigB                        00000073
MainWaitTrig                      00000063
NEGATEF                           
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 204


SYMBOL TABLE
  LABEL                             VALUE 

NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PutByte                           00000111
PutByteSerial                     00000111
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 205


SYMBOL TABLE
  LABEL                             VALUE 

RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RDD                               00000000
READ_WRITE                        00000002
ROTL                              
ROTR                              
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SERIALPORT                        00000007
SHIFTL                            
SHIFTR                            
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUBFF                             
SUBFF_TW                          
SUBLF                             
SUBLF_TW                          
SWAPFF                            
SWAPFF_TW                         
SWAPWF                            
SWDTEN                            00000000
SYNC                              00000004
Sample1M                          000003A2
Sample1MhzEnd                     000007A7
Sample250kA                       000002BB
Sample250kB                       000002D2
Sample250kC                       000002E9
Sample250kD                       00000300
Sample417k250k                    000002AB
Sample417kA                       000002BC
Sample417kB                       000002D3
Sample417kC                       000002EA
Sample417kD                       00000301
Sample417kLoopA                   000002B4
Sample417kLoopB                   000002CB
Sample417kLoopC                   000002E2
Sample417kLoopD                   000002F9
Sample625k                        00000268
Sample625kLoopA                   0000026E
Sample625kLoopB                   0000027E
Sample625kLoopC                   0000028E
Sample625kLoopD                   0000029E
Sample833k                        00000EA9
Sample833kEnd                     000012AF
SampleDelayed                     0000015A
SampleDelayedLoopA                00000165
SampleDelayedLoopB                0000017F
SampleDelayedLoopC                00000199
SampleDelayedLoopD                000001B3
SampleRep2M                       000018DF
SampleRep2MPickEn                 000018EC
SampleRep2MPickSt                 000018E3
SampleRep2MStep1                  000018EC
SampleRep2MStep2                  00001AF3
SampleRep2MStep3                  00001CF4
SampleRep5M                       000014AC
SampleRep5MEndA                   000015C4
SampleRep5MEndB                   000015C9
SampleRep5MEndC                   000015C7
SampleRep5MPickEn                 000014BF
SampleRep5MPickSt                 000014B0
SampleRep5MStep1                  000014BF
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

SampleRep5MStep2                  000015CF
SampleRep5MStep3                  000016D2
SampleRep5MStep4                  000017D5
SampleRep5MStep5                  000018D9
SampleXY250k192k                  0000030F
SampleXY250kLA                    0000031E
SampleXY250kLB                    00000342
SampleXY250kLC                    00000366
SampleXY250kLD                    0000038A
SampleXY417k                      000008A6
SampleXYDelayed                   000001C5
SampleXYDelayedLA                 000001D7
SampleXYDelayedLB                 000001FF
SampleXYDelayedLC                 00000227
SampleXYDelayedLD                 0000024F
StSample417kLoopB                 000002D0
StSample417kLoopC                 000002E7
StSample417kLoopD                 000002FE
StSampleDelayedLoopA              0000016A
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTALBUFFERSIZE                   00000100
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

TRIGGER                           00000000
TRIGGERENBIT                      00000006
TRIGGERPORT                       00000006
TRIGGERPOSBIT                     00000007
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VROTL                             
VROTR                             
VRR                               00000005
VRSS                              00000004
VSHIFTL                           
VSHIFTR                           
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitByte                          00000100
WaitComm                          0000007C
WaitComm_Conf                     000000C4
WaitComm_Data                     00000081
WaitComm_Rec                      000000E4
WaitComm_SendDataA                00000088
WaitComm_SendDataB                00000095
WaitComm_SendDataC                000000A2
WaitComm_SendDataD                000000AF
WaitComm_SendDataExit             000000B8
WaitComm_Test                     0000007D
XORFF                             
XORFF_TW                          
XORLF                             
XORLF_TW                          
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
clockFreq                         00000020
cntr                              0000007B
cntra                             00000076
cntrb                             00000077
cntrc                             00000078
configLoc1                        00000070
dataConfig                        0000007D
f                                 00000001
modetemp                          00000079
modetempb                         0000007A
sampleRate1                       00000074
sampleRate2                       00000075
skipEqFF                          
skipEqLF                          
skipGrEqFF                        
skipGrEqFL                        
skipGrEqLF                        
skipGrFF                          
skipGrFL                          
skipGrLF                          
skipLessEqZero                    
skipLessZero                      
skipMoreEqZero                    
skipMoreZero                      
skipNotZero                       
skipZero                          
spdata                            0000007C
triggerDelay1                     00000071
triggerDelay2                     00000072
triggerDelay3                     00000073
triggerLevel                      0000007E
w                                 00000000
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 211


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 212


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.45                   DSOSCOPEA01.ASM   6-14-2012  14:20:59         PAGE 213


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXX------
2000 : XXXX---XX------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  7418
Program Memory Words Free:   774


Errors   :     0
Warnings :     0 reported,  1129 suppressed
Messages :    14 reported,    22 suppressed

